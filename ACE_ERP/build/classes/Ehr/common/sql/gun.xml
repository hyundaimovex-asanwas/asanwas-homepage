

<sqls>

<!-- 일일근태관리 -->
<!--
***********************************************************************
* @UseCase     : GUNA010
* @description : 일일근태 현황등록
***********************************************************************
* 2007/02/09     채갑병        최초작성.
***********************************************************************
-->
    <!-- 해당년월의 기본 데이타 존재여부를 조회 한다. -->
    <sql name="GUNA010_SHR">
        <description>기본데이타 존재여부 조회</description>
        <query>
            <![CDATA[
             SELECT  ENO_NO
             FROM    T_DI_DILIGENCE
             WHERE   PIS_YY = ?
             AND     PIS_MM = ?
             AND     ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 같은부서의 근태대상자를  조회 한다. -->
    <sql name="GUNA010_SHR_02">
        <description>근태대상자 조회</description>
        <query>
            <![CDATA[
		SELECT ?                                   AS GUN_YMD										-- 근태일
		      ,A.PIS_YY
		      ,A.PIS_MM
		      ,A.JOB_NM
		      ,A.JOB_SEQ
		      ,A.ENO_NO
		      ,A.ENO_NM
		      ,C.REMARK AS REMARK
		      ,NVL2(A.GUN_CD, '', DECODE(C.REMARK, NULL, '', 'INS')) AS DTL_STS
		      ,A.MF_TAG
			  ,(
			  	CASE WHEN D.APP_CD = 'LD1' THEN 'O'		 -- 파견
					 WHEN D.APP_CD = 'LN1' THEN 'K'		 -- 휴직
					 WHEN D.APP_CD = 'LN3' THEN 'X'		 -- 산전후휴가
					 WHEN A.GUN_CD IS NOT NULL THEN A.GUN_CD		-- 일일근태
					 WHEN E.GUN_CD IS NOT NULL THEN E.GUN_CD		-- 그룹웨어
					 ELSE C.GUN_CD									-- 장기근태
					 END
			  )  GUN_GBN
			  ,''  GUN_GBN_CP
		      ,B.DPT_CNT
		      ,H.YRP_CNT
		      ,F.YRP_USE
		      ,TO_CHAR(A.HIR_YMD,'YYYYMMDD')   AS HIR_YMD
		FROM  (SELECT AA.ENO_NO
		           ,NVL(BB.PIS_YY,?) AS PIS_YY														-- 년도
		           ,NVL(BB.PIS_MM,?) AS PIS_MM														-- 월도
		           ,[1]													-- 대체할 일도
		           ,AA.JOB_NM
		           ,AA.ENO_NM
		           ,AA.JOB_SEQ
		           ,AA.HOB_SEQ
		           ,AA.MF_TAG
		           ,AA.HIR_YMD
		           ,AA.DUTY_CD
		     FROM   ASNHR.VI_T_CM_PERSON2 AA,
		            (SELECT *
		             FROM   ASNHR.T_DI_DILIGENCE
		             WHERE  PIS_YY = ?																-- 년도
		             AND    PIS_MM = ?																-- 월도
		             ) BB
		     WHERE  AA.ENO_NO = BB.ENO_NO(+)
		     AND    TO_CHAR(AA.HIR_YMD,'YYYYMMDD') <= ?												-- 근태일
		     AND    (AA.RET_YMD IS NULL OR TO_CHAR(AA.RET_YMD,'YYYYMMDD') >= ?)						-- 근태일
		     AND    NVL2(AA.GUN_DPT, AA.GUN_DPT, AA.DPT_CD) = ?										-- 부서코드
		     AND    NVL(AA.DUTY_CD, ' ') <> 'B5'
		       ) A
		     ,(SELECT COUNT(ENO_NO) AS DPT_CNT
		       FROM   ASNHR.VI_T_CM_PERSON2
		       WHERE   TO_CHAR(HIR_YMD,'YYYYMMDD') <= ?												-- 근태일
		       AND    (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') >= ?)							-- 근태일
		       AND    NVL2(GUN_DPT, GUN_DPT, DPT_CD) = ?											-- 부서코드
		       ) B
		     ,(SELECT ENO_NO, GUN_CD, REMARK
		       FROM   ASNHR.T_DI_LONGTERM
		       WHERE  STR_YMD <= ?																	-- 근태일
		       AND   (END_YMD IS NULL OR END_YMD >= ? )												-- 근태일
		       ) C
			 , (
				SELECT *
				FROM ASNHR.T_CM_AHISTORY
				WHERE APP_CD IN ('LD1', 'LN1', 'LN3') -- 파견, 휴직, 산전후휴가
				AND   STR_YMD <= ?
				AND   NVL(END_YMD, ?) >= ?
			  )D
			  ,(SELECT * FROM ASNHR.T_DI_GROUPWARE WHERE PIS_YYMMDD = ? )E								-- 근태일
		     ,(SELECT  ENO_NO, (SUM(ATT_H) + SUM(ATT_P)*0.5 + SUM(ATT_R)*0.5 + SUM(ATT_V)*0.5) AS YRP_USE
		       FROM   ASNHR.T_DI_DILIGENCE A
		       WHERE  PIS_YY = ?																	-- 년도
		       GROUP  BY ENO_NO
		       ) F
		     ,(SELECT ENO_NO, REMARK
		       FROM   ASNHR.T_DI_DILIGENCE_DTL
		       WHERE  PIS_YY = ?																	-- 년도
		       AND    PIS_MM = ?																	-- 월도
		       AND    PIS_DD = ?																	-- 일자
		       ) G
		     ,(SELECT A.ENO_NO, (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT
		       FROM  (SELECT ENO_NO, NVL(YRP_CNT,0) AS YRP_CNT, NVL(AYRP_CNT,0) AS AYRP_CNT FROM ASNHR.T_DI_YEARLY WHERE PIS_YY = ?) A	-- 년도
		       ) H
		WHERE  A.ENO_NO = C.ENO_NO(+)
		AND    A.ENO_NO = D.ENO_NO(+)
		AND    A.ENO_NO = E.ENO_NO(+)
		AND    A.ENO_NO = F.ENO_NO(+)
		AND    A.ENO_NO = G.ENO_NO(+)
		AND    A.ENO_NO = H.ENO_NO(+)
		ORDER  BY A.JOB_SEQ, A.DUTY_CD, A.ENO_NO

            ]]>
        </query>
    </sql>


    <!-- 현 접속자의 권한 및 부서정보를 조회 한다. -->
    <sql name="GUNA010_SHR_01">
        <description>부서정보 조회</description>
        <query>
            <![CDATA[
            SELECT DECODE( HOL_GBN
                         , 0, '평일'
                         , 1, '토요일'
                         , 2, '휴일'
                         , 3, '특별휴일'
                           ) AS HOL_GBN
                 , REMARK
              FROM ASNHR.T_DI_HOLIDAY
             WHERE REG_YMD = ?
            ]]>
        </query>
    </sql>

    <!-- 부서의 근태집계를 조회 한다. -->
    <sql name="GUNA010_SHR_03">
        <description>부서정보 조회</description>
        <query>
           <![CDATA[
			SELECT MAX(DECODE(MOD(ROWNUM,2), 1, GUN_GBN)) AS GUN_GBN1
			      ,MAX(DECODE(MOD(ROWNUM,2), 1, GUN_CNT)) AS GUN_CNT1
			      ,MAX(DECODE(MOD(ROWNUM,2), 0, GUN_GBN)) AS GUN_GBN2
			      ,MAX(DECODE(MOD(ROWNUM,2), 0, GUN_CNT)) AS GUN_CNT2
			FROM(  SELECT  B.COMM_CD||':'||B.COMM_NM AS GUN_GBN, COUNT(A.[1]) AS GUN_CNT, B.EXT_01 SORT
			       FROM  ( SELECT G.[2]
			                 FROM ASNHR.T_DI_DILIGENCE G
			                    , ASNHR.VI_T_CM_PERSON2 H
			                WHERE G.ENO_NO = H.ENO_NO
			                  AND G.PIS_YY = ?
			                  AND G.PIS_MM = ?
			                  AND NVL(H.GUN_DPT, H.DPT_CD) = ?
			                  AND TO_CHAR(H.HIR_YMD,'YYYYMMDD') <= ?
			                  AND (H.RET_YMD IS NULL OR TO_CHAR(H.RET_YMD,'YYYYMMDD') >= ?)
			                  AND G.[3] IS NOT NULL
			                  AND NVL(H.DUTY_CD, ' ') <> 'B5'
			               ) A
			             ,(SELECT EXT_01, COMM_CD, COMM_NM
			               FROM ASNHR.T_CM_COMMON
			               WHERE CD_GBN = 'H4'
			               AND      (END_YMD IS NULL OR END_YMD >= SYSDATE)
			               AND      EXT_01 IS NOT NULL
			               ) B
			       WHERE   A.[4](+) = B.COMM_CD
			       GROUP   BY B.COMM_CD, B.COMM_NM, B.EXT_01
			       ORDER   BY B.EXT_01
			     )
			GROUP BY DECODE(MOD(ROWNUM,2),1,ROWNUM+1,ROWNUM)
			ORDER BY MIN(SORT)

            ]]>
        </query>
    </sql>

    <!-- 해당일의 근태등록여부를 조회 한다. -->
    <sql name="GUNA010_SHR_04">
        <description>해당일 근태 등록여부 조회</description>
        <query>
            <![CDATA[
             SELECT ENO_NO
             FROM   ASNHR.T_DI_DILIGENCE
             WHERE  PIS_YY = ?
             AND    PIS_MM = ?
             AND    [1]
            ]]>
        </query>
    </sql>


    <!-- 현재 월의 이전 휴일을 조회 한다. -->
    <sql name="GUNA010_SHR_05">
        <description>현재월의 휴일 조회</description>
        <query>
            <![CDATA[
             SELECT REG_YMD
                   ,(CASE WHEN SUBSTR(SUBSTR(REG_YMD,7),0,1) = '0'
                          THEN SUBSTR(REG_YMD,8)
                     ELSE SUBSTR(REG_YMD,7)
                     END) AS COL
             FROM ASNHR.T_DI_HOLIDAY
             WHERE  SUBSTR(REG_YMD, 0,6) in (?, to_char(ADD_MONTHS(to_date(?,'yyyymm'), -1),'yyyymm') )
             AND    HOL_YN = 'Y'
             AND    REG_YMD <= ?
             ORDER BY REG_YMD
            ]]>
        </query>
    </sql>

    <!-- 총 카운트 -->
    <sql name="GUNA010_SHR_06">
        <description>총 카운트</description>
        <query>
            <![CDATA[
             SELECT G.ENO_NO
                  , AT1_CD , AT2_CD , AT3_CD , AT4_CD , AT5_CD , AT6_CD , AT7_CD , AT8_CD , AT9_CD , AT10_CD
                  , AT11_CD, AT12_CD, AT13_CD, AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD, AT20_CD
                  , AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD, AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD
               FROM ASNHR.T_DI_DILIGENCE G
                  , ASNHR.T_CM_PERSON H
              WHERE G.ENO_NO = H.ENO_NO
                AND G.PIS_YY = ?
                AND G.PIS_MM = ?
                AND NVL(H.GUN_DPT, H.DPT_CD) = ?
            ]]>
        </query>
    </sql>


    <!-- 해당년월의 기본 데이타 저장 한다. -->
    <sql name="GUNA010_INS">
        <description>기본데이타 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_DILIGENCE
                    (PIS_YY , PIS_MM , ENO_NO , OCC_CD , DPT_CD
                    ,MD_DSP
                    ,ATT_A  , ATT_B  , ATT_C  , ATT_D  , ATT_E  , ATT_F  , ATT_G  , ATT_H
                    ,ATT_I  , ATT_J  , ATT_K  , ATT_L  , ATT_M  , ATT_N  , ATT_O  , ATT_P
                    ,ATT_Q  , ATT_R  , ATT_S  , ATT_U  , ATT_V  , ATT_X  , ATT_Z  , ATW_CNT, HOL_CNT, HOW_CNT
                    ,IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
             SELECT        ?,       ?, ENO_NO , OCC_CD , DPT_CD
                    ,SUBSTR(TO_CHAR(LAST_DAY(TO_DATE(?)),'YYYYMMDD'),7)
                    ,      0,       0,       0,       0,       0,       0,       0,     0
                    ,      0,       0,       0,       0,       0,       0,       0,     0
                    ,      0,       0,       0,       0,       0,       0,       0,       0,       0,       0
                    ,      ?, sysdate,       ?, sysdate
             FROM   ASNHR.VI_T_CM_EMPLIST2
             WHERE  (RET_YMD IS NULL OR RET_YMD >= SYSDATE)
             AND    ENO_NO = ?
            ]]>
        </query>
    </sql>


    <!-- 인쇄 -->
    <sql name="GUNA010_01_PRINT">
        <description>인쇄</description>
        <query>
            <![CDATA[
             SELECT ? AS GUN_YMD, A.ENO_NO, A.PIS_YY, A.PIS_MM, G.REMARK, '' AS DTL_STS, A.JOB_NM
				      ,A.ENO_NM, A.JOB_SEQ, A.MF_TAG
				      ,NVL(A.GUN_CD, DECODE(C.GUN_CD, NULL, '', C.GUN_CD)) AS GUN_GBN
				      ,NVL(A.GUN_CD, DECODE(C.GUN_CD, NULL, '', C.GUN_CD)) AS GUN_GBN_CP
				      ,B.DPT_CNT, E.ATT_Z, F.ATT_Z_USE, E.ATT_S, F.ATT_S_USE, E.ATT_Q, F.ATT_Q_USE, ATT_Q_USE_DTL
				      ,H.YRP_CNT, F.YRP_USE, I.HOL_YMD , N.HOL_YMD AS HALF_YMD
				      ,DECODE(D.ENO_NO, NULL, 'N', 'Y') AS PLAN_YN
				      ,DECODE(J.ENO_NO, NULL, 'N', 'Y') AS BUT_YN
				      ,DECODE(K.ENO_NO, NULL, 'N', 'Y') AS OBUT_YN
				      ,DECODE(L.GUN_CD, NULL, 'N', 'Y') AS ACC_YN
				      ,TO_CHAR(HIRG_YMD,'YYYYMMDD') AS HIRG_YMD
				FROM  (SELECT AA.ENO_NO
				           ,NVL(BB.PIS_YY,?) AS PIS_YY
				           ,NVL(BB.PIS_MM,?) AS PIS_MM
				           ,NVL(BB.[1],'') AS GUN_CD
				           ,AA.JOB_NM
				           ,AA.ENO_NM
				           ,AA.JOB_SEQ
				           ,AA.HOB_SEQ
				           ,AA.MF_TAG
				     FROM   ASNHR.VI_T_CM_PERSON2  AA, 
				            (SELECT *
				             FROM   ASNHR.T_DI_DILIGENCE
				             WHERE  PIS_YY = ?
				             AND    PIS_MM = ?
				             ) BB
				     WHERE  AA.ENO_NO = BB.ENO_NO(+)
				     AND    TO_CHAR(AA.HIR_YMD,'YYYYMMDD') <= ?
				     AND    (AA.RET_YMD IS NULL OR TO_CHAR(AA.RET_YMD,'YYYYMMDD') >= ?)
				     AND    NVL2(AA.GUN_DPT, AA.GUN_DPT, AA.DPT_CD) = ?
				   AND    AA.OCC_CD LIKE '%'||?||'%'
				       ) A
				     ,(SELECT COUNT(ENO_NO) AS DPT_CNT
				       FROM   ASNHR.VI_T_CM_EMPLIST
				       WHERE  RET_YMD IS NULL
				       AND    NVL2(GUN_DPT, GUN_DPT, DPT_CD) = ?
				       AND    OCC_CD LIKE '%'||?||'%'
				       ) B
				     ,(SELECT ENO_NO, GUN_CD
				       FROM   ASNHR.T_DI_LONGTERM
				       WHERE  STR_YMD <= ?
				       AND   (END_YMD IS NULL OR END_YMD >= ? )
				       ) C
				     ,(SELECT ENO_NO, PIS_YY, PIS_MM, [2] AS GUN_CD
				       FROM   ASNHR.T_DI_PLAN
				       WHERE  PIS_YY = ?
				       AND    PIS_MM = ?
				       AND    END_TAG = 'Y'
				       ) D
				     ,(SELECT AA.ENO_NO, AA.LSE_YY, BB.ATT_Z, BB.ATT_S, AA.ATT_Q
				       FROM   (SELECT ENO_NO,
			                      TRUNC(MONTHS_BETWEEN(TO_DATE(?||'1231' ,'YYYYMMDD'),
		                                           NVL(HIRG_YMD,HIR_YMD))/12) AS LSE_YY,
		                      DECODE(WED_YMD, NULL, '1', '2') AS ATT_Q
		               FROM   ASNHR.VI_T_CM_EMPLIST
		               WHERE  RET_YMD IS NULL
		               AND    NVL2(GUN_DPT, GUN_DPT, DPT_CD) = ?
		               ) AA
		             ,(SELECT LSE_YY, ATT_Z, ATT_S
		               FROM  (SELECT BASIC_YMD, LSE_YY, ATT_Z, ATT_S, ROW_NUMBER() OVER(PARTITION BY LSE_YY ORDER BY BASIC_YMD DESC, LSE_YY) AS RN
		                      FROM   ASNHR.T_DI_REFRESH )
		                      WHERE  RN = 1
		               ) BB
		       WHERE   AA.LSE_YY = BB.LSE_YY(+)
		       ) E
		     ,(SELECT ENO_NO, SUM(ATT_Z) AS ATT_Z_USE, SUM(ATT_S) AS ATT_S_USE, SUM(ATT_Q) AS ATT_Q_USE
		            ,(SELECT REMARK FROM T_DI_DILIGENCE_DTL WHERE  PIS_YY = ? AND ENO_NO=A.ENO_NO AND REMARK IN('결혼기념','본인생일') AND ROWNUM=1) AS ATT_Q_USE_DTL
		            ,(SUM(ATT_H) + SUM(ATT_P)*0.5 + SUM(ATT_R)*0.5 + SUM(ATT_Q) + SUM(ATT_Z) + SUM(ATT_V)*0.5) AS YRP_USE
		       FROM   T_DI_DILIGENCE A
		       WHERE  PIS_YY = ?
		       GROUP  BY ENO_NO
		       ) F
		     ,(SELECT ENO_NO, REMARK
		       FROM   T_DI_DILIGENCE_DTL
		       WHERE  PIS_YY = ?
		       AND    PIS_MM = ?
		       AND    PIS_DD = ?
		       ) G
		     ,(SELECT A.ENO_NO, (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT
		       FROM  (SELECT ENO_NO, NVL(YRP_CNT,0) AS YRP_CNT, NVL(AYRP_CNT,0) AS AYRP_CNT FROM T_DI_YEARLY WHERE PIS_YY = ?) A
		       ) H
		     ,(SELECT ENO_NO, TO_CHAR(TO_DATE(HOL_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS HOL_YMD
		       FROM   (SELECT ENO_NO, HOL_YMD, ROW_NUMBER() OVER(PARTITION BY ENO_NO ORDER BY HOL_YMD ASC) AS RN
		               FROM   T_DI_HOLIDAYWORK
		               WHERE  REP_APP = '1'
		               AND    REP_YMD IS NULL)
		       WHERE   RN = 1
		       ) I
		     ,(SELECT ENO_NO, TO_CHAR(TO_DATE(HOL_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS HOL_YMD
		       FROM   (SELECT ENO_NO, HOL_YMD, ROW_NUMBER() OVER(PARTITION BY ENO_NO ORDER BY HOL_YMD ASC) AS RN
		               FROM   T_DI_HOLIDAYWORK
		               WHERE  REP_APP = '2'
		               AND    REP_YMD IS NULL)
		       WHERE   RN = 1
		       ) N
		     ,(SELECT  DISTINCT DECODE (MOD (ROWNUM - 1, 6) + 1, 1, ENO_NO, 2, COM_NO1, 3, COM_NO2, 4, COM_NO3, 5, COM_NO4, 6, COM_NO5) AS ENO_NO
		       FROM   (SELECT  1 FROM DUAL  CONNECT BY LEVEL <= 6)
		             ,(SELECT  ENO_NO, COM_NO1, COM_NO2, COM_NO3, COM_NO4, COM_NO5,  ROW_NUMBER() OVER(PARTITION BY ENO_NO ORDER BY ORD_NO, ENO_NO ASC) AS RN
		               FROM    T_DI_BUSINESSTRIP
		               WHERE  BUT_FR_YMD <= ?
		               AND   (BUT_TO_YMD >= ? OR BUT_TO_YMD IS NULL))
		       WHERE   RN = 1
		       ) J
		     ,(SELECT  B.ENO_NO
		       FROM   (SELECT ORD_NO, BUT_FR_YMD, BUT_TO_YMD, ROW_NUMBER() OVER(PARTITION BY ORD_NO ORDER BY ORD_NO ASC) AS RN
		               FROM T_DI_OVERSEASBT
		               WHERE   BUT_FR_YMD <= ?
		               AND    (BUT_TO_YMD >= ? OR BUT_TO_YMD IS NULL) ) A
		             ,(SELECT  ORD_NO, ENO_NO, ROW_NUMBER() OVER(PARTITION BY ENO_NO ORDER BY ORD_NO, ENO_NO ASC) AS RN
		               FROM    T_DI_OVERSEASBT_DTL) B
		       WHERE A.ORD_NO = B.ORD_NO(+)
		       AND   A.RN = 1       AND   B.RN = 1       ) K
		     ,(SELECT  ENO_NO, [3] AS GUN_CD
		       FROM    T_DI_ACCELERATE
		       WHERE   PIS_YY = ?
		       AND     PIS_MM = ?
		       AND     END_TAG = 'Y'
		       ) L
		     , VI_T_CM_EMPLIST M
		WHERE  A.ENO_NO = C.ENO_NO(+)
			AND    A.ENO_NO = D.ENO_NO(+)
			AND    A.ENO_NO = E.ENO_NO(+)
			AND    A.ENO_NO = F.ENO_NO(+)
			AND    A.ENO_NO = G.ENO_NO(+)
			AND    A.ENO_NO = H.ENO_NO(+)
			AND    A.ENO_NO = I.ENO_NO(+)
			AND    A.ENO_NO = N.ENO_NO(+)
			AND    A.ENO_NO = J.ENO_NO(+)
			AND    A.ENO_NO = K.ENO_NO(+)
			AND    A.ENO_NO = L.ENO_NO(+)
			AND    A.ENO_NO = M.ENO_NO(+)
		ORDER  BY A.JOB_SEQ, A.HOB_SEQ DESC, HIRG_YMD, A.ENO_NO

 	           ]]>
 	       </query>
 	   </sql>

 	    <!-- 근태종류인쇄 -->
 	   <sql name="GUNA010_02_PRINT">
 	       <description>근태종류인쇄</description>
        <query>
            <![CDATA[
            SELECT MAIN.*
            FROM
            (
             SELECT MAX(DECODE(MOD(ROWNUM,3), 1, GUN_GBN)) AS GUN_GBN1
				      ,MAX(DECODE(MOD(ROWNUM,3), 1, GUN_CNT)) AS GUN_CNT1
				      ,MAX(DECODE(MOD(ROWNUM,3), 2, GUN_GBN)) AS GUN_GBN2
				      ,MAX(DECODE(MOD(ROWNUM,3), 2, GUN_CNT)) AS GUN_CNT2
				      ,MAX(DECODE(MOD(ROWNUM,3), 0, GUN_GBN)) AS GUN_GBN3
				      ,MAX(DECODE(MOD(ROWNUM,3), 0, GUN_CNT)) AS GUN_CNT3
				FROM(  SELECT  B.COMM_NM||':'||B.COMM_CD AS GUN_GBN, COUNT([1]) AS GUN_CNT
				       FROM  ( SELECT [2]
				                 FROM T_DI_DILIGENCE G
				                    , VI_T_CM_PERSON2 H --VI_T_CM_EMPLIST2 파견사원 않나오게 임시수정(20071101)
				                WHERE G.ENO_NO = H.ENO_NO
				                  AND G.PIS_YY = ?
				                  AND G.PIS_MM = ?
				                  AND NVL(H.GUN_DPT, H.DPT_CD) = ?
				                  AND TO_CHAR(H.HIR_YMD,'YYYYMMDD') <= ?
				                  AND (H.RET_YMD IS NULL OR TO_CHAR(H.RET_YMD,'YYYYMMDD') >= ?)
				                  AND [3] IS NOT NULL
				               ) A
				             ,(SELECT EXT_01, COMM_CD, COMM_NM
				               FROM T_CM_COMMON
				               WHERE CD_GBN = 'H4'
				               AND      (END_YMD IS NULL OR END_YMD >= SYSDATE)
				               AND      EXT_01 IS NOT NULL
				               ) B
				       WHERE   [4](+) = B.COMM_CD
				       GROUP   BY B.COMM_CD, B.COMM_NM, B.EXT_01
				       ORDER   BY B.EXT_01
				     )
				GROUP BY DECODE(MOD(ROWNUM,3),1,ROWNUM+2,2,ROWNUM+1,ROWNUM)
			) MAIN
            ]]>
        </query>
    	</sql>

    <!-- 기념일 휴가 일 경우 정보 저장 한다. -->
    <sql name="GUNA010_INS_02">
        <description>기념일 휴가 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO T_DI_DILIGENCE_DTL
                    (PIS_YY , PIS_MM , PIS_DD , ENO_NO , REMARK
                    ,IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
             VALUES (      ?,       ?,       ?,       ?,      ?
                    ,      ?, sysdate,       ?, sysdate)
            ]]>
        </query>
    </sql>

    <!-- 일일 근태정보 수정 한다. -->
    <sql name="GUNA010_UPT">
        <description>일일근태 정보 수정</description>
        <query>
            <![CDATA[
             UPDATE  T_DI_DILIGENCE
             SET     [1]
                     UPT_MAN = ?,
                     UPT_YMD = sysdate
             WHERE   PIS_YY  = ?
             AND     PIS_MM  = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 근태총계 수정 한다.(일일근태등록, 근태변경신청현황 같이 사용) -->
    <sql name="GUNA010_UPT_02">
        <description>근태총계 수정</description>
        <query>
            <![CDATA[
             UPDATE  T_DI_DILIGENCE
             SET     ATT_A     = ?
                    ,ATT_B     = ?
                    ,ATT_C     = ?
                    ,ATT_D     = ?
                    ,ATT_E     = ?
                    ,ATT_F     = ?
                    ,ATT_G     = ?
                    ,ATT_H     = ?
                    ,ATT_I     = ?
                    ,ATT_J     = ?
                    ,ATT_K     = ?
                    ,ATT_L     = ?
                    ,ATT_M     = ?
                    ,ATT_N     = ?
                    ,ATT_O     = ?
                    ,ATT_P     = ?
                    ,ATT_Q     = ?
                    ,ATT_R     = ?
                    ,ATT_S     = ?
                    ,ATT_U     = ?
                    ,ATT_V     = ?
                    ,ATT_X     = ?
                    ,ATT_Z     = ?
                    ,ATW_CNT   = ?
                    ,HOL_CNT   = ?
                    ,HOW_CNT   = ?
                    ,UPT_MAN   = ?
                    ,UPT_YMD   = sysdate
             WHERE   PIS_YY    = ?
             AND     PIS_MM    = ?
             AND     ENO_NO    = ?
            ]]>
        </query>
    </sql>

    <!-- 기념일 정보를 수정 한다. -->
    <sql name="GUNA010_UPT_03">
        <description>기념일 정보 수정</description>
        <query>
            <![CDATA[
             UPDATE  T_DI_DILIGENCE_DTL
             SET     REMARK  = ?
                    ,UPT_MAN = ?
                    ,UPT_YMD = sysdate
             WHERE   PIS_YY  = ?
             AND     PIS_MM  = ?
             AND     PIS_DD  = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 대체휴가일자를 수정 한다. -->
    <sql name="GUNA010_UPT_04">
        <description>대체휴가일자 수정</description>
        <query>
            <![CDATA[
             UPDATE  T_DI_HOLIDAYWORK
             SET     REP_YMD = ?
                    ,UPT_MAN = ?
                    ,UPT_YMD = sysdate
             WHERE   HOL_YMD = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 기념일 정보를 삭제 한다. -->
    <sql name="GUNA010_DEL">
        <description>기념일 정보 삭제</description>
        <query>
            <![CDATA[
             DELETE
             FROM    T_DI_DILIGENCE_DTL
             WHERE   PIS_YY  = ?
             AND     PIS_MM  = ?
             AND     PIS_DD  = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : guna012
* @description : 개인별근태신청등록
***********************************************************************
* 2009/10/19      임종태        최초작성.
***********************************************************************
-->


    <!-- 개인근태 정보를 목록조회 한다. -->
    <sql name="GUNA012_SHR_LST">
        <description>개인근태 정보 조회</description>
        <query>
            <![CDATA[
				SELECT A.REQ_NO,
                   (CASE WHEN APP_YN_N_CNT > 0 THEN '부결'
				   		 WHEN APP_YN_N_CNT = 0 AND APP_YN_A_CNT = 0 AND APP_YN_Y_CNT > 0 THEN '결재완료'
						 WHEN APP_YN_N_CNT = 0 AND APP_YN_A_CNT > 0 AND APP_YN_Y_CNT = 0 THEN '상신'
						 ELSE '결재진행중'
				    END) AS APP_YN_NM,
					   APP_YN_A_CNT,
					   APP_YN_Y_CNT,
					   APP_YN_N_CNT,
					   A.GUN_GBN,
					   B.DPT_CD,
					   B.DPT_NM,
					   B.JOB_NM,
					   B.ENO_NO,
					   B.ENO_NM,
					   B.CNT
				FROM
					(
					SELECT REQ_NO,
					       COUNT(DECODE(app_yn, '', 'A'))  APP_YN_A_CNT,
	   					   COUNT(DECODE(app_yn, 'Y', 'Y')) APP_YN_Y_CNT,
	   					   COUNT(DECODE(app_yn, 'N', 'N')) APP_YN_N_CNT,
						   MAX(GUN_GBN) GUN_GBN,
						   MIN(PENO_NO) PENO_NO
					FROM ASNHR.T_DI_APPROVAL
					WHERE PENO_NO = ?									-- 사원번호
					GROUP BY REQ_NO
					) A,
					(
					SELECT  MAX(A.DPT_CD) AS DPT_CD
					   ,A.REQ_NO
					   ,MAX(B.DPT_NM) AS DPT_NM
					   ,MAX(B.JOB_NM) AS JOB_NM
				       ,MAX(A.ENO_NO) AS ENO_NO
					   ,MAX(B.ENO_NM) AS ENO_NM
					   ,COUNT(A.REQ_NO)    AS CNT
					FROM ASNHR.T_DI_DILIGENCE_IND A, ASNHR.VI_T_CM_PERSON B
					WHERE A.ENO_NO = B.ENO_NO
					AND   A.PIS_YYMMDD >= ?								-- 시작일자
					AND   A.PIS_YYMMDD <= ?								-- 종료일자
					AND   A.ENO_NO     =  ?								-- 사원번호
					AND   A.GUN_CD     LIKE ? || '%'                    -- 근태종류
					GROUP BY A.REQ_NO
					) B
				WHERE A.REQ_NO = B.REQ_NO
			            ]]>
			        </query>
		    </sql>

		    <!-- 개인근태 정보를 조회 한다. -->
	    <sql name="GUNA012_SHR">
	        <description>개인근태 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  A.ENO_NO
                 , A.GUN_CD
                 , A.REMARK
                 , B.DPT_CD
                 , TO_CHAR(TO_DATE(A.PIS_YYMMDD, 'YYYYMMDD'), 'YYYY-MM-DD') AS PIS_YYMMDD
                 , ASNHR.SF_GET_DPTNAME('01', 'A4', NVL(B.GUN_DPT, B.DPT_CD)) AS  DPT_NM
                 , B.ENO_NM
                 , B.JOB_NM
                 , CASE
                   WHEN A.PIS_YYMMDD >  TO_CHAR(SYSDATE,'YYYYMMDD')
                   THEN '1'     										-- 미진행
                   WHEN A.PIS_YYMMDD = TO_CHAR(SYSDATE,'YYYYMMDD')
                   THEN '2'												-- 진행중
                   WHEN A.PIS_YYMMDD <= TO_CHAR(SYSDATE,'YYYYMMDD')
                   THEN '3'												-- 완료
                    END AS GUN_STS
                  ,REQ_NO
              FROM ASNHR.T_DI_DILIGENCE_IND A
                 , ASNHR.VI_T_CM_EMPLIST B
             WHERE A.ENO_NO = B.ENO_NO
               AND A.REQ_NO = ?
          ORDER BY PIS_YYMMDD
            ]]>
        </query>
    </sql>

    <!-- 개인근태 정보를 저장 한다. -->
    <sql name="GUNA012_INS">
        <description>개인근태 정보 저장</description>
        <query>
            <![CDATA[
				INSERT INTO ASNHR.T_DI_DILIGENCE_IND (
				   REQ_NO,
				   PIS_YYMMDD, ENO_NO,
				   DPT_CD, GUN_CD, IPT_MAN,
				   IPT_YMD, UPT_MAN, UPT_YMD, REMARK)
				VALUES (
					?,
					?, ?,
				    ?, ?, ?,
				    sysdate, ?, sysdate, ?)
            ]]>
        </query>
    </sql>
    <sql name="GUNA012_UPT">
        <description>개인근태 정보 수정저장</description>
        <query>
            <![CDATA[
				UPDATE ASNHR.T_DI_DILIGENCE_IND
				SET
				       GUN_CD     = ?,
				       UPT_MAN    = ?,
				       UPT_YMD    = sysdate,
				       REMARK     = ?
				WHERE  1 = 1
				AND	   REQ_NO = ?
				AND    ENO_NO = ?
				AND    PIS_YYMMDD = ?
            ]]>
        </query>
    </sql>
    <sql name="GUNA012_DEL">
        <description>개인근태 정보 삭제저장</description>
        <query>
            <![CDATA[
				DELETE FROM ASNHR.T_DI_DILIGENCE_IND
				WHERE  1 = 1
				AND	   REQ_NO = ?
				AND	   PIS_YYMMDD = ?
				AND    ENO_NO     = ?
            ]]>
        </query>
    </sql>

	<!-- 개인근태 정보를 조회 한다. -->
    <sql name="GUNA012_SHR_01">
        <description>개인근태 정보 조회</description>
        <query>
            <![CDATA[
             SELECT  REQ_NO, PIS_YYMMDD
             FROM    ASNHR.T_DI_DILIGENCE_IND
             WHERE   ENO_NO = ?
             AND END_TAG != 'N'
            ]]>
        </query>
    </sql>


    <sql name="GUNA012_REG_MAX">
        <description>등록번호 최대값 조회</description>
        <query>
            <![CDATA[
			SELECT  TO_CHAR(SYSDATE,'YYYYMMDD')|| TRIM(TO_CHAR( DECODE( MAX(SUBSTR(REQ_NO, 9, 3)), NULL, '001', MAX(SUBSTR(REQ_NO, 9,3))+1 ), '000')) REQ_NO
			FROM    ASNHR.T_DI_APPROVAL
			WHERE   SUBSTR(REQ_NO,0,8) = TO_CHAR(SYSDATE,'YYYYMMDD')
			AND     SUBSTR(REQ_NO, 9, 1) NOT IN ('H','R','Z') AND GUN_GBN = 'C'
            ]]>
        </query>
    </sql>

    <!-- 결재선 삭제 -->
    <sql name="GUNA012_DEL_01">
        <description>결재선 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_DI_APPROVAL
            WHERE 1 = 1
            AND REQ_NO=?
            AND GUN_GBN='C'
            ]]>
        </query>
    </sql>

    <!-- 결재선 정보를 저장 한다. -->
    <sql name="GUNA012_INS_01">
        <description>결재선 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_APPROVAL
                    (GUN_YMD, GUN_GBN, GUN_DPT, SEQ_NO, ENO_NO, JOB_CD, PENO_NO, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD, REQ_NO)
             VALUES (      ?,       ?,       ?,      ?,      ?,      ?,       ?,       ?, sysdate,       ?, sysdate, ?)
            ]]>
        </query>
    </sql>

    <sql name="GUNA012_SHR_02">
        <description>결재선 정보 조회</description>
        <query>
            <![CDATA[

       SELECT GUN_YMD, GUN_GBN, GUN_DPT AS DPT_CD, SEQ_NO, ENO_NO, JOB_CD, APP_TIME, PENO_NO
             ,APP_YN
             ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결') AS APP_YN_NM
             ,ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM
             ,ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM
			 ,ASNHR.SF_GET_DPTNAME('01', 'A4', GUN_DPT) AS DPT_NM
			 ,REQ_NO
       FROM   ASNHR.T_DI_APPROVAL
       WHERE  REQ_NO = ?
       AND    GUN_GBN = 'C'
            ]]>
        </query>
    </sql>

  <!-- 결재한개수 세기 -->
    <sql name="GUNA012_CNT">
        <description>결재정보개수세기</description>
        <query>
            <![CDATA[
			SELECT APP_YN
			FROM ASNHR.T_DI_APPROVAL
			WHERE  REQ_NO  = ?
			AND    GUN_GBN = ?
            ]]>
        </query>
    </sql>

  <!-- 연차조회 -->
    <sql name="GUNA012_YRP">
        <description>연차정보조회</description>
        <query>
            <![CDATA[
		SELECT A.ENO_NO   											-- 사번
			   ,A.YRP_CNT AS YRP_CNT  								-- 연차발생일수
			   ,A.AYRP_CNT AS AYRP_CNT								-- 선연차수
			   ,(A.YRP_CNT - A.AYRP_CNT) AS NET_YRP_CNT 			-- 사용가능연차수
			   ,B.YRP_USE AS YRP_USE  								-- 사용연차수
			   ,(A.YRP_CNT - A.AYRP_CNT) - B.YRP_USE AS NOT_YRP_CNT -- 잔여연차수
	           ,NVL(C.MPH_CNT,0) MPH_CNT							--발생된 월차수
	           ,NVL(C.UMPH_CNT,0) UMPH_CNT							--사용 월차수
	           ,NVL(C.LMPH_CNT,0) LMPH_CNT							--잔여 월차수
			   ,D.MF_TAG											-- 성별
		FROM
			(SELECT ENO_NO,YRP_CNT, AYRP_CNT
			FROM ASNHR.T_DI_YEARLY
			WHERE PIS_YY = ? -- 년도
			AND   ENO_NO = ? -- 사번
			) A,
			(SELECT ENO_NO ,(SUM(ATT_H) + SUM(ATT_P)*0.5 + SUM(ATT_R)*0.5) AS YRP_USE
						FROM   ASNHR.T_DI_DILIGENCE A
						WHERE  PIS_YY = ? -- 년도
						AND    ENO_NO = ? -- 사번
						GROUP BY ENO_NO ) B,
			(SELECT ENO_NO , 
		             NVL(MAX(TO_NUMBER(GET_CNT)),0) MPH_CNT, 
		             NVL(MAX(TO_NUMBER(USE_CNT)),0) UMPH_CNT, 
		            (NVL(MAX(TO_NUMBER(GET_CNT)),0) - NVL(MAX(TO_NUMBER(USE_CNT)),0)) LMPH_CNT 
              FROM   ASNHR.T_DI_MONTHLY_HISTORY A
              WHERE  ENO_NO = ? -- 사번
              GROUP BY ENO_NO ) C,  
			ASNHR.T_CM_PERSON D
		WHERE D.ENO_NO = C.ENO_NO(+)
		AND   D.ENO_NO = B.ENO_NO(+)		
		AND   D.ENO_NO = A.ENO_NO(+)
		AND   D.ENO_NO = ?		-- 사번
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : guna015
* @description : GROUPWARE 근태신청등록
***********************************************************************
* 2009/11/12      임종태        최초작성.
***********************************************************************
-->

    <!-- GROUPWARE 근태 정보를 저장 한다. -->
    <sql name="GUNA015_INS">
        <description>개인근태 정보 저장</description>
        <query>
            <![CDATA[
				INSERT INTO T_DI_GROUPWARE (
				   PIS_YYMMDD,
				   ENO_NO,
				   GUN_CD,
				   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
				VALUES (
					TO_CHAR(sysdate, 'YYYYMMDD'),
					?,
				    'W',
				    'admin', sysdate, 'admin', sysdate)
            ]]>
        </query>
    </sql>


  <!-- 개인별근태신청에 반영 -->
    <sql name="GUNA015_INS_01">
        <description>근태변경신청 정보 수정</description>
        <query>
            <![CDATA[
		INSERT INTO T_DI_DILIGENCE (
			PIS_YY, PIS_MM, ENO_NO, OCC_CD, DPT_CD, MD_DSP,
			ATT_A, ATT_B, ATT_C, ATT_D, ATT_E, ATT_F, ATT_G, ATT_H, ATT_I, ATT_J, ATT_K, ATT_L, ATT_M, ATT_N, ATT_O, ATT_P, ATT_Q, ATT_R, ATT_S, ATT_U, ATT_V, ATT_X, ATT_Z, ATW_CNT, HOL_CNT, HOW_CNT,
			IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
		SELECT  ?, LV, ?, 'A', ? , SUBSTR(TO_CHAR(LAST_DAY(TO_DATE(?||LV||'01')),'YYYYMMDD'),7),
			0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0,
			?, SYSDATE, ?, SYSDATE
		FROM
			(SELECT PIS_YY, PIS_MM, A.ENO_NO, B.DPT_CD
			FROM T_DI_DILIGENCE A, T_CM_PERSON B
			WHERE  1 = 1
			AND   A.ENO_NO = B.ENO_NO
			AND   A.PIS_YY = ?
			AND   A.ENO_NO = ?) A,
			(SELECT DECODE(LENGTH(LEVEL), 1, '0'||LEVEL, LEVEL) LV FROM DUAL CONNECT BY LEVEL <= 12) B
		WHERE B.LV = A.PIS_MM (+)
		AND   PIS_MM IS NULL
            ]]>
        </query>
    </sql>


      <!-- 개인별 근태현황 조회 -->
    <sql name="GUNA015_SHR_01">
        <description>개인별 근태현황 조회</description>
        <query>
            <![CDATA[
             SELECT G.ENO_NO
                  , AT1_CD , AT2_CD , AT3_CD , AT4_CD , AT5_CD , AT6_CD , AT7_CD , AT8_CD , AT9_CD , AT10_CD
                  , AT11_CD, AT12_CD, AT13_CD, AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD, AT20_CD
                  , AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD, AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD
               FROM T_DI_DILIGENCE G
                  , T_CM_PERSON H
              WHERE G.ENO_NO = H.ENO_NO
                AND G.PIS_YY = ?		-- 년도
                AND G.PIS_MM = ?		-- 월
                AND G.ENO_NO = ?		-- 사번

            ]]>
        </query>
    </sql>
     <!-- UNI직원여부  조회 -->
    <sql name="GUNA015_SHR_02">
        <description>UNI직원여부 조회</description>
        <query>
            <![CDATA[
             SELECT *
			FROM T_CM_PERSON
			WHERE ENO_NO = ?
			AND   RET_YMD IS NULL

            ]]>
        </query>
    </sql>

     <!-- UNI근태시간   조회 -->
    <sql name="GUNA015_SHR_03">
        <description>UNI직원여부 조회</description>
        <query>
            <![CDATA[
		SELECT DPT_CD,										-- 부서코드
			   TO_CHAR(SYSDATE, 'YYYYMMDD') AS GUN_YMD,	    -- 근태일
			   EXT_03,						   				-- 근태시간
			   A AS CUR_YMDHM,								-- 현재시간
			   B AS C_YMDHM,								-- 지각근태시간
			   TO_CHAR(C) AS S_YMDHM,   					-- 미확인근태시간
			   (CASE WHEN 	A > C THEN 'S'  				-- 미확인
			   		 WHEN 	A > B THEN 'C'  				-- 지각
			   		 ELSE   'W'
				END) GUN_CD,   	  	   						-- 근태코드
			    TO_CHAR(SYSDATE, 'YYYY-MM-DD HH24:MI:SS') AS CUR_DATE
		FROM
			(
			SELECT DPT_CD,
				   EXT_03,
				   TO_CHAR(SYSDATE, 'YYYYMMDDHH24MI') A,
				   TO_CHAR(SYSDATE, 'YYYYMMDD') || REPLACE(EXT_03, ':', '') AS B,
				   TO_CHAR(SYSDATE, 'YYYYMMDD') || REPLACE(EXT_03, ':', '') + '000000000200' AS C
			FROM T_CM_COMMON A, T_CM_PERSON B
			WHERE CD_GBN = 'AD'    -- 회계부서코드
			AND   COMM_CD = TAX_DPT
			AND   RET_YMD IS NULL
			AND   ENO_NO = ?
			)
            ]]>
        </query>
    </sql>

    <!-- UNI직원 조회 -->
    <sql name="GUNA015_SHR_00">
        <description>근태대상자 조회</description>
        <query>
            <![CDATA[
			SELECT *
			FROM T_CM_PERSON
			WHERE RET_YMD IS NULL
			AND   JOB_CD NOT IN('A0', 'A1', 'A2', 'A3', 'A4', 'A5', 'A6')

            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNA013
* @description : 근태변경신청서
***********************************************************************
* 2009/10/22     임종태        최초작성.
***********************************************************************
-->

    <!-- 결재선을 조회 한다. -->
    <sql name="GUNA013_SHR_LST">
        <description>근태변경신청서 목록</description>
        <query>
            <![CDATA[
                        SELECT A.REQ_NO,
           					   (CASE WHEN APP_YN_N_CNT > 0 THEN '부결'
                                         WHEN APP_YN_N_CNT = 0 AND APP_YN_A_CNT = 0 AND APP_YN_Y_CNT > 0 THEN '결재완료'
                                         WHEN APP_YN_N_CNT = 0 AND APP_YN_A_CNT > 0 AND APP_YN_Y_CNT = 0 THEN '상신'
                                         ELSE '결재진행중'
                            			 END) AS APP_YN_NM,
                                   APP_YN_A_CNT,
                                   APP_YN_Y_CNT,
                                   APP_YN_N_CNT,
                                   A.GUN_GBN,
                                   B.DPT_CD,
                                   B.DPT_NM,
                                   B.JOB_NM,
                                   B.ENO_NO,
                                   B.ENO_NM,
                                   B.CNT
                        FROM
                                (
                                SELECT REQ_NO,
                                       COUNT(DECODE(app_yn, '', 'A'))  APP_YN_A_CNT,
                                       COUNT(DECODE(app_yn, 'Y', 'Y')) APP_YN_Y_CNT,
                                       COUNT(DECODE(app_yn, 'N', 'N')) APP_YN_N_CNT,
                                       MAX(GUN_GBN) GUN_GBN,
                                       MIN(PENO_NO) PENO_NO
                                FROM ASNHR.T_DI_APPROVAL
                                WHERE PENO_NO = ?
								AND   GUN_GBN = 'U'                                                            -- 사원번호
                                GROUP BY REQ_NO
                                ) A,
                                (
                                SELECT  MAX(B.DPT_CD) AS DPT_CD
                                   ,A.REQ_NO
                                   ,MAX(B.DPT_NM) AS DPT_NM
                                   ,MAX(B.JOB_NM) AS JOB_NM
                                   ,MAX(A.ENO_NO) AS ENO_NO
                                   ,MAX(B.ENO_NM) AS ENO_NM
                                   ,COUNT(A.REQ_NO)    AS CNT
                                FROM ASNHR.T_DI_CHANGE A, ASNHR.VI_T_CM_PERSON B
                                WHERE A.ENO_NO = B.ENO_NO
                                AND   A.REQ_YMD >= ?                                                        -- 시작일자
                                AND   A.REQ_YMD <= ?                                                        -- 종료일자
                                AND   A.ENO_NO   = ?                                                        -- 사원번호
                                GROUP BY A.REQ_NO
                                ) B
                        WHERE A.REQ_NO = B.REQ_NO

            ]]>
        </query>
    </sql>


    <!-- 결재선을 조회 한다. -->
    <sql name="GUNA013_SHR_01">
        <description>결재선 조회</description>
        <query>
            <![CDATA[
       SELECT GUN_YMD, GUN_GBN, GUN_DPT AS DPT_CD, SEQ_NO, ENO_NO, JOB_CD, APP_TIME, PENO_NO
             ,APP_YN
             ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결') AS APP_YN_NM
             ,ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM
             ,ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM
			 ,ASNHR.SF_GET_DPTNAME('01', 'A4', GUN_DPT) AS DPT_NM
			 ,REQ_NO
       FROM   ASNHR.T_DI_APPROVAL
       WHERE  REQ_NO = ?
       AND GUN_GBN = 'U'
            ]]>
        </query>
    </sql>

    <!-- 등록된 변경데이터 조회 한다. -->
    <sql name="GUNA013_SHR_00">
        <description>일일근태변경 조회</description>
        <query>
            <![CDATA[
		SELECT A.REQ_YMD AS BF_YMD,
			   A.BF_GUN_CD,
			   ASNHR.SF_GET_COMMNAME('01', 'H4', A.BF_GUN_CD) BF_GUN_NM,
			   A.BF_REMARK,
			   CHN_YMD,
			   A.GUN_CD AS AF_GUN_CD,
			   ASNHR.SF_GET_COMMNAME('01', 'H4', A.GUN_CD) AF_GUN_NM,
			   A.REASON AS AF_REMARK,
			   A.REQ_NO,
			   DECODE(A.REQ_NO, '', 'INS', 'UPD') AS FLAG,
			   A.END_TAG,
			   A.ENO_NO,
			   B.ENO_NM,
			   B.DPT_CD,
			   B.DPT_NM,
			   B.JOB_CD,
			   B.JOB_NM
		FROM ASNHR.T_DI_CHANGE A, ASNHR.VI_T_CM_PERSON B
		WHERE REQ_NO = ?
		AND   A.ENO_NO = B.ENO_NO
		ORDER BY A.REQ_YMD
            ]]>
        </query>
    </sql>

  <!-- 날짜를 입력했을때  조회 한다. -->
    <sql name="GUNA013_SHR_CD">
        <description>근태변경신청 조회</description>
        <query>
            <![CDATA[
			SELECT
			        [1]
			        ,B.REMARK
			FROM ASNHR.T_DI_DILIGENCE A,
			     ASNHR.T_DI_DILIGENCE_DTL B
			WHERE A.PIS_YY = ?
			AND   A.PIS_MM = ?
			AND   A.ENO_NO = ?
			AND   A.PIS_YY = B.PIS_YY(+)
			AND   A.PIS_MM = B.PIS_MM(+)
			AND   B.PIS_DD(+) = ?
			AND   A.ENO_NO = B.ENO_NO(+)
		            ]]>
		        </query>
		    </sql>


   <!-- 결재선을 조회 한다. -->
    <sql name="GUNA013_SHR_10">
        <description>근태변경신청 조회</description>
        <query>
            <![CDATA[
						SELECT A.ENO_NO,
						       SUBSTR(A.BF_YMD, 1, 4) || '-' ||  SUBSTR(A.BF_YMD, 5, 2) || '-' || SUBSTR(A.BF_YMD, 7, 2) AS BF_YMD,
							   A.BF_GUN_CD,
							   ASNHR.SF_GET_COMMNAME('01', 'H4', A.BF_GUN_CD) BF_GUN_NM,
							   DECODE(C.BF_REMARK, '', B.REMARK, C.BF_REMARK)  BF_REMARK,
							   DECODE(length(c.chn_ymd), 8, SUBSTR(C.CHN_YMD, 1, 4) || '-' ||  SUBSTR(C.CHN_YMD, 5, 2) || '-' || SUBSTR(C.CHN_YMD, 7, 2), '') AS CHN_YMD,
							   C.GUN_CD AS AF_GUN_CD,
							   ASNHR.SF_GET_COMMNAME('01', 'H4', C.GUN_CD) AF_GUN_NM,
							   C.REASON AS AF_REMARK,
							   C.REQ_NO,
							   DECODE(C.REQ_NO, '', 'INS', 'UPD') AS FLAG,
							   C.END_TAG,
							   D.ENO_NM,
							   D.DPT_CD,
							   D.DPT_NM,
							   D.JOB_CD,
							   D.JOB_NM
						FROM
						(
							SELECT ENO_NO,
							       PIS_YY,
								   PIS_MM,
								   DECODE(LENGTH(LV), 1, '0'|| LV, LV)  AS PIS_DD,
							       PIS_YY || PIS_MM || DECODE(LENGTH(LV), 1, '0'|| LV, LV) AS BF_YMD,
								   COL_NEW  AS BF_GUN_CD
							FROM
							(
								 SELECT ENO_NO,
								        PIS_YY,
										PIS_MM,
								        LV,
								        DECODE(lv,1,AT1_CD,
								                  2,AT2_CD,
								                  3,AT3_CD,
								                  4,AT4_CD,
								                  5,AT5_CD,
								                  6,AT6_CD,
								                  7 , AT7_CD,
								                  8 , AT8_CD,
								                  9 , AT9_CD,
								                  10, AT10_CD,
								                  11, AT11_CD,
								                  12, AT12_CD,
								                  13, AT13_CD,
								                  14, AT14_CD,
								                  15, AT15_CD,
								                  16, AT16_CD,
								                  17, AT17_CD,
								                  18, AT18_CD,
								                  19, AT19_CD,
								                  20, AT20_CD,
								                  21, AT21_CD,
								                  22, AT22_CD,
								                  23, AT23_CD,
								                  24, AT24_CD,
								                  25, AT25_CD,
								                  26, AT26_CD,
								                  27, AT27_CD,
								                  28, AT28_CD,
								                  29, AT29_CD,
							                  30, AT30_CD,
							                  31, AT31_CD
							        ) col_new
							FROM ASNHR.T_DI_DILIGENCE
							, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
							WHERE  1 = 1
							AND    PIS_YY || PIS_MM >= ? -- 근태시작일
								AND    PIS_YY || PIS_MM <= ? -- 근태종료일
					AND    ENO_NO = ?			 -- 사번
						)
						)A,
						ASNHR.T_DI_DILIGENCE_DTL B,
					(
					SELECT B.*
					FROM
						(
						SELECT MAX(REQ_NO) REQ_NO,
						       MAX(ENO_NO) ENO_NO,
							   CHN_YMD
						FROM ASNHR.T_DI_CHANGE
						WHERE ENO_NO  = ?             -- 사원번호
						AND   CHN_YMD >= ?            -- 근태시작일
						AND   CHN_YMD <= ?            -- 근태종료일
						GROUP BY CHN_YMD
						) A,
						ASNHR.T_DI_CHANGE B
					WHERE A.REQ_NO = B.REQ_NO
					AND   A.CHN_YMD = B.CHN_YMD
					) C,
					, ASNHR.VI_T_CM_PERSON D
					WHERE A.ENO_NO = B.ENO_NO(+)
					AND   A.PIS_YY = B.PIS_YY(+)
					AND   A.PIS_MM = B.PIS_MM(+)
					AND   A.PIS_DD = B.PIS_DD(+)
					AND   A.ENO_NO = C.ENO_NO(+)
					AND   A.ENO_NO = C.ENO_NO(+)
					AND   A.BF_YMD = C.REQ_YMD(+)
					AND   A.BF_YMD >= ?                  -- 근태시작일
				  	AND   A.BF_YMD <= ?                  -- 근태종료일
				  	AND   A.ENO_NO = D.ENO_NO(+)
					ORDER BY BF_YMD
		            ]]>
		        </query>
		    </sql>



		    <!-- 근태변경신청서 정보를 저장 한다. -->
	    <sql name="GUNA013_INS">
	        <description>근태변경신청서 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_CHANGE
                     ( REQ_NO ,
                       ENO_NO , REQ_YMD, CHN_YMD, BF_GUN_CD, BF_REMARK, GUN_CD, REMARK, REASON, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
             VALUES
                     ( ?,
                       ?,       ?,       ?,       ?,         ?,         ?,      ?,      ?,      ?,        sysdate,?,       sysdate )
            ]]>
        </query>
    </sql>


    <!-- 결재선 정보를 저장 한다. -->
    <sql name="GUNA013_INS_01">
        <description>결재선 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_APPROVAL
                    (GUN_YMD, GUN_GBN, GUN_DPT, SEQ_NO , ENO_NO , JOB_CD
                    ,PENO_NO, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD, REQ_NO)
             VALUES (      ?,       ?,       ?,       ?,       ?,      ?
                    ,      ?,       ?, sysdate,       ?, sysdate      ,?)
            ]]>
        </query>
    </sql>

    <!-- 근태변경신청서 정보를 수정한다. -->
    <sql name="GUNA013_UPT">
        <description>근태변경신청서 정보를 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_DI_CHANGE
            SET     CHN_YMD         = ?,             -- 변경일
            		GUN_CD          = ?,             -- 변경후근태코드
                    REASON          = ?,             -- 변경후사유
                    UPT_MAN         = ?,             -- 최종 수정자
                    UPT_YMD         = sysdate        -- 최종 수정일
            WHERE   REQ_NO          = ?              -- 신청번호
            AND     ENO_NO          = ?              -- 사번
            AND     REQ_YMD         = ?              -- 변경전요청일
            ]]>
        </query>
    </sql>

    <!-- 근태변경신청서 정보를 삭제 한다. -->
    <sql name="GUNA013_DEL">
        <description>근태변경신청서 정보 삭제</description>
        <query>
            <![CDATA[
             DELETE  ASNHR.T_DI_CHANGE
             WHERE   REQ_NO  = ?
               AND   ENO_NO  = ?
               AND   REQ_YMD =  ?
               AND   CHN_YMD =  ?
            ]]>
        </query>
    </sql>

    <!-- 근태변경신청서 정보를 삭제 한다. -->
    <sql name="GUNA013_DEL_02">
        <description>근태변경신청서 정보 삭제</description>
        <query>
            <![CDATA[
             DELETE  ASNHR.T_DI_APPROVAL
             WHERE   REQ_NO   = ?
               AND   GUN_GBN = 'U'
             ]]>
        </query>
    </sql>

    <!-- 결재선 정보를 저장 한다. -->
    <sql name="GUNA013_UPT_01">
        <description>결재선 정보 저장</description>
        <query>
            <![CDATA[
                    UPDATE ASNHR.T_DI_APPROVAL
                    SET    REQ_NO = ?
                          ,ENO_NO = ?
                          ,JOB_CD = ?
                          ,APP_YN = ''
                          ,APP_TIME = ''
                          ,UPT_MAN = ?
                          ,UPT_YMD = SYSDATE
                    WHERE  GUN_YMD = ?
                    AND    GUN_GBN = ?
                    AND    GUN_DPT = ?
                    AND    SEQ_NO  = ?
                    AND    PENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 부결여부 조회 -->
    <sql name="GUNA013_SHR_02">
        <description>부결여부 조회</description>
        <query>
            <![CDATA[
                    SELECT GUN_YMD,
                           GUN_GBN,
                           GUN_DPT,
                           PENO_NO,
                           SEQ_NO,
                           REQ_NO,
                           ENO_NO,
                           JOB_CD,
                           APP_YN
                    FROM ASNHR.T_DI_APPROVAL
                    WHERE  GUN_YMD = ?
                    AND    GUN_GBN = ?
                    AND    GUN_DPT = ?
                    AND    SEQ_NO  = ?
                    AND    PENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 신청번호 생성 -->
    <sql name="GUNA013_SHR_03">
        <description>신청번호 조회</description>
        <query>
            <![CDATA[
			SELECT REQ_NO
			FROM ASNHR.T_DI_CHANGE
			WHERE ENO_NO  = ?        -- 사번
			AND   CHN_YMD >= ?       -- 근태시작일
			AND   CHN_YMD <= ?       -- 근태종료일
			ORDER BY REQ_NO DESC
            ]]>
        </query>
    </sql>



    <!-- 조회시 결재선이 지정되어 있지 않으면 최근 결재선 가져오고 없으면 부서장 자동지정 -->
    <sql name="GUNA013_SHR_04">
        <description>결재선이 없으면 결재선 자동지정</description>
        <query>
            <![CDATA[
       SELECT GUN_YMD, GUN_GBN, GUN_DPT AS DPT_CD, SEQ_NO, ENO_NO, JOB_CD, APP_TIME, PENO_NO
             ,APP_YN
             ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결') AS APP_YN_NM
             ,ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM
             ,ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM
			 ,ASNHR.SF_GET_DPTNAME('01', 'A4', GUN_DPT) AS DPT_NM
			 ,REQ_NO
       FROM  ASNHR.T_DI_APPROVAL
       WHERE  REQ_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 결재선 삭제 -->
    <sql name="GUNA013_DEL_01">
        <description>결재선 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_DI_APPROVAL
            WHERE 1 = 1
            AND REQ_NO=?
            AND GUN_GBN='U'
            ]]>
        </query>
    </sql>

    <!-- 신청번호 조회 -->
    <sql name="GUNA013_SHR_05">
        <description>신청번호 조회</description>
        <query>
            <![CDATA[
			SELECT REQ_NO
			FROM ASNHR.T_DI_CHANGE
			WHERE ENO_NO  = ?        -- 사번
			AND   CHN_YMD >= ?       -- 근태시작일
			AND   CHN_YMD <= ?       -- 근태종료일
			GROUP BY REQ_NO
			ORDER BY REQ_NO DESC
            ]]>
        </query>
    </sql>


    <sql name="GUNA013_REG_MAX">
        <description>등록번호 최대값 조회</description>
        <query>
            <![CDATA[
			SELECT  TO_CHAR(SYSDATE,'YYYYMMDD')|| TRIM(TO_CHAR( DECODE( MAX(SUBSTR(REQ_NO, 9, 3)), NULL, '001', MAX(SUBSTR(REQ_NO, 9,3))+1 ), '000')) REQ_NO
			FROM    ASNHR.T_DI_APPROVAL
			WHERE   SUBSTR(REQ_NO,0,8) = TO_CHAR(SYSDATE,'YYYYMMDD')
			AND     SUBSTR(REQ_NO, 9, 1) NOT IN ('H','R','Z')
            ]]>
        </query>
    </sql>


    <!-- 기존근태사항  조회 -->
    <sql name="GUNA013_SHR_06">
        <description>신청번호 조회</description>
        <query>
            <![CDATA[
							SELECT A.ENO_NO,
							       A.PIS_YY || A.PIS_MM || DECODE(LENGTH(LV), 1, '0'|| LV, LV) PIS_YMD,
								   COL_NEW  AS GUN_CD,
								   B.REMARK
							FROM
							(
								 SELECT ENO_NO,
								        PIS_YY,
										PIS_MM,
								        LV,
								        DECODE(lv,1,AT1_CD,
								                  2,AT2_CD,
								                  3,AT3_CD,
								                  4,AT4_CD,
								                  5,AT5_CD,
								                  6,AT6_CD,
								                  7 , AT7_CD,
								                  8 , AT8_CD,
								                  9 , AT9_CD,
								                  10, AT10_CD,
								                  11, AT11_CD,
								                  12, AT12_CD,
								                  13, AT13_CD,
								                  14, AT14_CD,
								                  15, AT15_CD,
								                  16, AT16_CD,
								                  17, AT17_CD,
								                  18, AT18_CD,
								                  19, AT19_CD,
								                  20, AT20_CD,
								                  21, AT21_CD,
								                  22, AT22_CD,
								                  23, AT23_CD,
								                  24, AT24_CD,
								                  25, AT25_CD,
								                  26, AT26_CD,
								                  27, AT27_CD,
								                  28, AT28_CD,
								                  29, AT29_CD,
							                  30, AT30_CD,
							                  31, AT31_CD
							        ) col_new
							FROM ASNHR.T_DI_DILIGENCE
							, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
							WHERE  1 = 1
							AND    PIS_YY = (select substr(to_char(sysdate, 'YYYYMMDD'), 1, 4) from dual)
							AND    ENO_NO = ?			     -- 사번
						) A,
						ASNHR.T_DI_DILIGENCE_DTL B
						WHERE 1 = 1
						AND   A.ENO_NO = B.ENO_NO(+)
						AND   A.PIS_YY || A.PIS_MM || A.LV = (B.PIS_YY(+) || B.PIS_MM(+) || B.PIS_DD(+))
						AND   COL_NEW IN ('H','P','R', 'M', 'G', 'F', 'I', 'T','U','Z') -- 연차,훈련,교육,특별휴가,대체휴가
						AND   A.PIS_YY || A.PIS_MM || DECODE(LENGTH(LV), 1, '0'|| LV, LV) >= to_char(sysdate, 'YYYYMMDD') -- 오늘이후것만 나오게
						ORDER BY PIS_YMD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : guna016
* @description : 근태결재현황
***********************************************************************
* 2009/12/30      임종태        최초작성.
***********************************************************************
-->
    <!-- 근태결재 현황 조회 -->
    <sql name="GUNA016_SHR">
        <description>근태결재현황</description>
        <query>
            <![CDATA[
			SELECT  A.REQ_NO
				   ,'C' AS GUN_GBN
				   ,A.ENO_NO
				   ,B.ENO_NM
	   			   ,ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD) DPT_NM
	               ,ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD) JOB_NM
				   ,TO_CHAR(A.IPT_YMD, 'YYYYMMDD') REQ_YMD
				   ,'' OLD_YMD
				   ,'' OLD_GUN_NM
				   ,PIS_YYMMDD AS NEW_YMD
				   ,ASNHR.SF_GET_COMMNAME('01', 'H4', A.GUN_CD) AS NEW_GUN_NM
			 	   ,(CASE WHEN APP_YN_N_CNT > 0 THEN '부결'
			              WHEN APP_YN_N_CNT = 0 AND APP_YN_A_CNT = 0 AND APP_YN_Y_CNT > 0 THEN '결재완료'
			              WHEN APP_YN_N_CNT = 0 AND APP_YN_A_CNT > 0 AND APP_YN_Y_CNT = 0 THEN '상신'
			              ELSE '결재진행중'
			              END) AS APP_YN_NM
			FROM ASNHR.T_DI_DILIGENCE_IND A,
			     ASNHR.T_CM_PERSON B,
				 (
				   SELECT REQ_NO
				          ,COUNT(DECODE(app_yn, '', 'A'))  APP_YN_A_CNT -- 상신중
				          ,COUNT(DECODE(app_yn, 'Y', 'Y')) APP_YN_Y_CNT -- 결재
				          ,COUNT(DECODE(app_yn, 'N', 'N')) APP_YN_N_CNT -- 부결
				   FROM ASNHR.T_DI_APPROVAL
				   WHERE PENO_NO LIKE ? ||'%'
				   AND   GUN_GBN = 'C'
				   GROUP BY REQ_NO
				 ) C
			WHERE A.ENO_NO = B.ENO_NO
			AND   A.REQ_NO = C.REQ_NO
			AND   A.ENO_NO LIKE ? ||'%'
			AND   A.PIS_YYMMDD >= ?
			AND   A.PIS_YYMMDD <= ?
			UNION ALL
			SELECT  A.REQ_NO
				   ,'U' AS GUN_GBN
			       ,A.ENO_NO
				   ,B.ENO_NM
	   			   ,ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD) DPT_NM
	               ,ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD) JOB_NM
				   ,TO_CHAR(A.IPT_YMD, 'YYYYMMDD') REQ_YMD
				   ,REQ_YMD AS OLD_YMD
				   ,ASNHR.SF_GET_COMMNAME('01', 'H4', A.BF_GUN_CD) AS OLD_GUN_NM
				   ,CHN_YMD AS NEW_YMD
				   ,ASNHR.SF_GET_COMMNAME('01', 'H4', A.GUN_CD) AS NEW_GUN_NM
			 	   ,(CASE WHEN APP_YN_N_CNT > 0 THEN '부결'
			              WHEN APP_YN_N_CNT = 0 AND APP_YN_A_CNT = 0 AND APP_YN_Y_CNT > 0 THEN '결재완료'
			              WHEN APP_YN_N_CNT = 0 AND APP_YN_A_CNT > 0 AND APP_YN_Y_CNT = 0 THEN '상신'
			              ELSE '결재진행중'
			              END) AS APP_YN_NM
			FROM ASNHR.T_DI_CHANGE A,
				 ASNHR.T_CM_PERSON B,
				 (
				   SELECT REQ_NO
				          ,COUNT(DECODE(app_yn, '', 'A'))  APP_YN_A_CNT -- 상신중
				          ,COUNT(DECODE(app_yn, 'Y', 'Y')) APP_YN_Y_CNT -- 결재
				          ,COUNT(DECODE(app_yn, 'N', 'N')) APP_YN_N_CNT -- 부결
				   FROM ASNHR.T_DI_APPROVAL
				   WHERE PENO_NO LIKE ? ||'%'
				   AND   GUN_GBN = 'U'
				   GROUP BY REQ_NO
				 ) C
			WHERE A.ENO_NO = B.ENO_NO
			AND   A.REQ_NO = C.REQ_NO
			AND   A.ENO_NO LIKE ? ||'%'
			AND   A.CHN_YMD >= ?
			AND   A.CHN_YMD <= ?
			ORDER BY NEW_YMD desc,DPT_NM, JOB_NM, ENO_NM
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : guna018
* @description : 개인별근태집계현황
***********************************************************************
* 2007/02/21      오대성        최초작성.
***********************************************************************
-->
    <!-- 개인별 근태 집계 현황 조회 -->
    <sql name="GUNA018_SHR">
        <description>개인별근태집계현황</description>
        <query>
            <![CDATA[
            SELECT A.PIS_YY||'-'||A.PIS_MM AS PIS_YYMM,
            	   (A.ATT_H+(A.ATT_P*0.5)+(A.ATT_R*0.5)) AS YRP_CNT,
            	   A.ATT_M AS MPH_CNT,
                   A.AT1_CD, A.AT2_CD, A.AT3_CD, 
                   A.AT4_CD, A.AT5_CD, A.AT6_CD,
                   A.AT7_CD, A.AT8_CD, A.AT9_CD, 
                   A.AT10_CD, A.AT11_CD, A.AT12_CD,
                   A.AT13_CD, A.AT14_CD, A.AT15_CD, 
                   A.AT16_CD, A.AT17_CD, A.AT18_CD,
                   A.AT19_CD, A.AT20_CD, A.AT21_CD, 
                   A.AT22_CD, A.AT23_CD, A.AT24_CD,
                   A.AT25_CD, A.AT26_CD, A.AT27_CD, 
                   A.AT28_CD, A.AT29_CD, A.AT30_CD,
                   A.AT31_CD, 
                   B.ATT_A, 
                   B.ATT_B,
                   B.ATT_C,                    
                   B.ATT_E, 
                   B.ATT_F,
                   B.ATT_G, 
                   B.ATT_H,                   
                   B.ATT_I, 
                   B.ATT_K, 
                   B.ATT_M, 
                   B.ATT_P, 
                   B.ATT_R, 
                   B.ATT_T,                    
                   B.ATT_V,                     
                   B.ATT_W, 
                   B.ATT_X,  
                   B.ATT_Y, 
                   C.OCC_CD, C.OCC_NM, C.DPT_NM, 
                   C.JOB_NM, TO_CHAR(C.HIRG_YMD,'YYYY-MM-DD') AS HIRG_YMD,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'01') AS HOL_YN1,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'02') AS HOL_YN2,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'03') AS HOL_YN3,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'04') AS HOL_YN4,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'05') AS HOL_YN5,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'06') AS HOL_YN6,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'07') AS HOL_YN7,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'08') AS HOL_YN8,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'09') AS HOL_YN9,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'10') AS HOL_YN10,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'11') AS HOL_YN11,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'12') AS HOL_YN12,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'13') AS HOL_YN13,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'14') AS HOL_YN14,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'15') AS HOL_YN15,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'16') AS HOL_YN16,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'17') AS HOL_YN17,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'18') AS HOL_YN18,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'19') AS HOL_YN19,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'20') AS HOL_YN20,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'21') AS HOL_YN21,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'22') AS HOL_YN22,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'23') AS HOL_YN23,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'24') AS HOL_YN24,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'25') AS HOL_YN25,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'26') AS HOL_YN26,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'27') AS HOL_YN27,
                  NVL(( SELECT HOL_YN
                    FROM   ASNHR.T_DI_HOLIDAY
                    WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'28'), 'X') AS HOL_YN28,
                  NVL(( SELECT HOL_YN
                    FROM   ASNHR.T_DI_HOLIDAY
                    WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'29'), 'X') AS HOL_YN29,
                  NVL(( SELECT HOL_YN
                    FROM   ASNHR.T_DI_HOLIDAY
                    WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'30'), 'X') AS HOL_YN30,
                  NVL(( SELECT HOL_YN
                    FROM   ASNHR.T_DI_HOLIDAY
                    WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'31'), 'X') AS HOL_YN31
            FROM   ASNHR.T_DI_DILIGENCE A,
                   ( SELECT 
                            SUM(ATT_A) AS ATT_A,    -- 난임치료휴가
                            SUM(ATT_B) AS ATT_B,    -- 가족돌봄휴가
                            SUM(ATT_C) AS ATT_C,    -- 보건휴가                  
                            SUM(ATT_E) AS ATT_E,    -- 출장
                            SUM(ATT_F) AS ATT_F,    -- 교육
                            SUM(ATT_G) AS ATT_G,    -- 훈련
                            SUM(ATT_H) AS ATT_H,    -- 년차
                            SUM(ATT_I) AS ATT_I,    -- 경조휴가
                            SUM(ATT_K) AS ATT_K,    -- 휴직
                            SUM(ATT_V) AS ATT_V,    -- 배우자 출산휴가
                            SUM(ATT_X) AS ATT_X,    -- 산전후휴가
                            SUM(ATT_M) AS ATT_M,    -- 월차
                            SUM(ATT_P) AS ATT_P,    -- 오전연반차
                            SUM(ATT_R) AS ATT_R,    -- 오후연반차
                            SUM(ATW_CNT) AS ATT_W,  -- 정상근무                            
                            SUM(HOW_CNT) AS ATT_T,  -- 대체휴가                            
                            SUM(HOL_CNT) AS ATT_Y   -- 휴일
                     FROM   ASNHR.T_DI_DILIGENCE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM >= ?
                     AND    PIS_MM <= ?
                     AND    ENO_NO = ? ) B,
                   ASNHR.VI_T_CM_EMPLIST2 C
            WHERE  A.PIS_YY = ?
            AND    A.PIS_MM >= ?
            AND    A.PIS_MM <= ?
            AND    A.ENO_NO = ?
            AND    C.ENO_NO = A.ENO_NO
            order by pis_yymm
            ]]>
        </query>
    </sql>

    <!-- 개인별 휴가 사용 현황 조회 -->
    <sql name="GUNA018_SHR_01">
        <description>개인별휴가사용현황</description>
        <query>
            <![CDATA[
            SELECT B.OCC_NM,
            	   B.ENO_NO,
                   B.JOB_NM,
                   B.DPT_NM,
                   TO_CHAR(B.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                   (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT,
                   (A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12) AS YRP_ATT_H,
                   (A.YRP_CNT-A.AYRP_CNT-(A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12)) AS REM_YRP,
                   M.MPH_CNT,
                   M.UMPH_CNT,
                   M.LMPH_CNT
            FROM   ( SELECT AA.ENO_NO, 
				            AA.YRP_CNT, 
				            AA.AYRP_CNT,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '01'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H1,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '02'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H2,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '03'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H3,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '04'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H4,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '05'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H5,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '06'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H6,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '07'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H7,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '08'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H8,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '09'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H9,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '10'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H10,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '11'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H11,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '12'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H12
                   FROM   ASNHR.T_DI_YEARLY AA
                   WHERE  AA.PIS_YY = ?
                   AND    AA.ENO_NO = ?) A,
                   ASNHR.VI_T_CM_PERSON2 B,
                   (SELECT  ENO_NO, 
		                   NVL(MAX(TO_NUMBER(GET_CNT)),0) MPH_CNT, 
		                   NVL(MAX(TO_NUMBER(USE_CNT)),0) UMPH_CNT, 
                           (NVL(MAX(TO_NUMBER(GET_CNT)),0) - NVL(MAX(TO_NUMBER(USE_CNT)),0)) LMPH_CNT 
                   FROM   ASNHR.T_DI_MONTHLY_HISTORY GROUP BY ENO_NO) M                     
            WHERE  A.ENO_NO = B.ENO_NO
               AND A.ENO_NO = M.ENO_NO(+)
            ]]>
        </query>
    </sql>

    <!-- 개인별 연차갯수 입력 -->
    <sql name="GUNA018_INS">
        <description>개인별 연차갯수 저장</description>
        <query>
            <![CDATA[

             INSERT  INTO T_DI_YEARLY
                     ( PIS_YY, ENO_NO, YRP_CNT, AYRP_CNT, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
             VALUES
                     (
                         ?,       ?,       ?,       '0',   'ADMIN',  sysdate,'ADMIN', sysdate
                      )

            ]]>
        </query>
    </sql>

    <!-- 개인별 연차갯수 수정 -->
    <sql name="GUNA018_UPT">
        <description>개인별 연차갯수 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_YEARLY
            SET    YRP_CNT = ?
            WHERE  PIS_YY = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNA020
* @description : 일일근태마감
***********************************************************************
* 2007/02/23     한학현        최초작성
***********************************************************************
-->
    <!-- 일일근태마감 조회 -->
    <sql name="GUNA020_SHR">
        <description>일일근태마감 조회</description>
        <query>
            <![CDATA[
            SELECT B.SORT_NO                            AS SORT_NO
                 , NVL(C.GUN_DPT, C.DPT_CD)             AS DPT_CD
                 , B.DPT_NM                             AS DPT_NM
                 , SUBSTR(TO_CHAR(COUNT(*),'999'),2,3)  AS DPT_CNT
              FROM (SELECT AA.ENO_NO AS ENO_NO,
                           BB.ENO_NO AS GUN_ENO_NO,
                           ? AS PIS_YY,
                           ? AS PIS_MM,
                           [1]
                    FROM  (SELECT ENO_NO
                           FROM   VI_T_CM_PERSON2 --VI_T_CM_EMPLIST2 파견사원 않나오게 임시수정(20071101)
                           WHERE  TO_CHAR(HIR_YMD,'YYYYMMDD') <= ?
                           AND   (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') >= ?)) AA,
                          (SELECT ENO_NO, PIS_YY, PIS_MM, [2]
                           FROM   T_DI_DILIGENCE
                           WHERE  PIS_YY = ?
                           AND    PIS_MM = ?) BB
                    WHERE  AA.ENO_NO = BB.ENO_NO(+)) A
                 , T_CM_DEPT B
                 , VI_T_CM_EMPLIST2 C
             WHERE A.PIS_YY = ?
               AND A.PIS_MM = ?
               AND [3] IS NULL --동적 컬럼
               AND B.CD_GBN   = 'A4'
               AND B.DPT_CD   = NVL(C.GUN_DPT, C.DPT_CD)
               AND C.ENO_NO   = A.ENO_NO
               AND TO_CHAR(C.HIR_YMD,'YYYYMMDD') <= ?
               AND (C.RET_YMD IS NULL OR TO_CHAR(C.RET_YMD,'YYYYMMDD') >= ?)
          GROUP BY B.SORT_NO
                 , C.GUN_DPT
                 , C.DPT_CD
                 , B.DPT_NM
          ORDER BY B.SORT_NO
            ]]>
        </query>
    </sql>

    <!-- 해당달에 T_DI_DILIGENCE 데이터가 없으면 빈값을 넣어주기위한 사원조회 -->
    <sql name="GUNA020_SHR_01">
        <description>해당달에 T_DI_DILIGENCE 데이터가 없으면 빈값을 넣어주기위한 사원조회</description>
        <query>
            <![CDATA[
			SELECT A.ENO_NO AS PSN_ENO_NO, A.DPT_CD,  B.ENO_NO AS GUN_ENO_NO
			FROM  (SELECT *
			       FROM   VI_T_CM_PERSON2 --VI_T_CM_EMPLIST2 파견사원 않나오게 임시수정(20071101)
			       WHERE  TO_CHAR(HIR_YMD,'YYYYMMDD') <= ?
			       AND   (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') >= ?)) A,
			      (SELECT ENO_NO
			       FROM   T_DI_DILIGENCE
			       WHERE  PIS_YY = ?
			       AND    PIS_MM = ?) B
			WHERE  A.ENO_NO = B.ENO_NO(+)
            ]]>
        </query>
    </sql>


    <!-- 일일근태마감 수정 -->
    <sql name="GUNA020_UPT">
        <description>일일근태마감 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_DILIGENCE A
            SET    [1] = DECODE(DPT_CD,'A8','W','A1','W',?)   -- 중역실,이사실 정상처리
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    [2] IS NULL
            AND    (SELECT TO_CHAR(HIR_YMD,'YYYYMMDD') FROM VI_T_CM_EMPLIST2 WHERE ENO_NO = A.ENO_NO) <= ?
            AND   ((SELECT TO_CHAR(RET_YMD,'YYYYMMDD') FROM VI_T_CM_EMPLIST2 WHERE ENO_NO = A.ENO_NO) IS NULL
                OR (SELECT TO_CHAR(RET_YMD,'YYYYMMDD') FROM VI_T_CM_EMPLIST2 WHERE ENO_NO = A.ENO_NO) >= ? )
            ]]>
        </query>
    </sql>


    <!-- 지각처리 합계반영 -->
    <sql name="GUNA020_UPT_01">
        <description>지각처리 합계반영</description>
        <query>
            <![CDATA[
            UPDATE T_DI_DILIGENCE A
            SET    ATT_C = (SELECT DECODE(AT1_CD, 'C',1,0)+DECODE(AT2_CD, 'C',1,0)+DECODE(AT3_CD, 'C',1,0)+DECODE(AT4_CD, 'C',1,0)+DECODE(AT5_CD, 'C',1,0)+
                                   DECODE(AT6_CD, 'C',1,0)+DECODE(AT7_CD, 'C',1,0)+DECODE(AT8_CD, 'C',1,0)+DECODE(AT9_CD, 'C',1,0)+DECODE(AT10_CD,'C',1,0)+
                                   DECODE(AT11_CD,'C',1,0)+DECODE(AT12_CD,'C',1,0)+DECODE(AT13_CD,'C',1,0)+DECODE(AT14_CD,'C',1,0)+DECODE(AT15_CD,'C',1,0)+
                                   DECODE(AT16_CD,'C',1,0)+DECODE(AT17_CD,'C',1,0)+DECODE(AT18_CD,'C',1,0)+DECODE(AT19_CD,'C',1,0)+DECODE(AT20_CD,'C',1,0)+
                                   DECODE(AT21_CD,'C',1,0)+DECODE(AT22_CD,'C',1,0)+DECODE(AT23_CD,'C',1,0)+DECODE(AT24_CD,'C',1,0)+DECODE(AT25_CD,'C',1,0)+
                                   DECODE(AT26_CD,'C',1,0)+DECODE(AT27_CD,'C',1,0)+DECODE(AT28_CD,'C',1,0)+DECODE(AT29_CD,'C',1,0)+DECODE(AT30_CD,'C',1,0)+
                                   DECODE(AT31_CD,'C',1,0) AS ATT_C
                            FROM   T_DI_DILIGENCE
                            WHERE  ENO_NO = A.ENO_NO
                            AND    PIS_YY = A.PIS_YY
                            AND    PIS_MM = A.PIS_MM),
                 ATW_CNT = (SELECT DECODE(AT1_CD, 'W',1,0)+DECODE(AT2_CD, 'W',1,0)+DECODE(AT3_CD, 'W',1,0)+DECODE(AT4_CD, 'W',1,0)+DECODE(AT5_CD, 'W',1,0)+
                                   DECODE(AT6_CD, 'W',1,0)+DECODE(AT7_CD, 'W',1,0)+DECODE(AT8_CD, 'W',1,0)+DECODE(AT9_CD, 'W',1,0)+DECODE(AT10_CD,'W',1,0)+
                                   DECODE(AT11_CD,'W',1,0)+DECODE(AT12_CD,'W',1,0)+DECODE(AT13_CD,'W',1,0)+DECODE(AT14_CD,'W',1,0)+DECODE(AT15_CD,'W',1,0)+
                                   DECODE(AT16_CD,'W',1,0)+DECODE(AT17_CD,'W',1,0)+DECODE(AT18_CD,'W',1,0)+DECODE(AT19_CD,'W',1,0)+DECODE(AT20_CD,'W',1,0)+
                                   DECODE(AT21_CD,'W',1,0)+DECODE(AT22_CD,'W',1,0)+DECODE(AT23_CD,'W',1,0)+DECODE(AT24_CD,'W',1,0)+DECODE(AT25_CD,'W',1,0)+
                                   DECODE(AT26_CD,'W',1,0)+DECODE(AT27_CD,'W',1,0)+DECODE(AT28_CD,'W',1,0)+DECODE(AT29_CD,'W',1,0)+DECODE(AT30_CD,'W',1,0)+
                                   DECODE(AT31_CD,'W',1,0) AS ATT_C
                            FROM   T_DI_DILIGENCE
                            WHERE  ENO_NO = A.ENO_NO
                            AND    PIS_YY = A.PIS_YY
                            AND    PIS_MM = A.PIS_MM)
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            ]]>
        </query>
    </sql>

    <!-- 휴일처리 합계반영 -->
    <sql name="GUNA020_UPT_02">
        <description>지각처리 합계반영</description>
        <query>
            <![CDATA[
            UPDATE T_DI_DILIGENCE A
            SET    HOL_CNT = (SELECT DECODE(AT1_CD, 'Y',1,0)+DECODE(AT2_CD, 'Y',1,0)+DECODE(AT3_CD, 'Y',1,0)+DECODE(AT4_CD, 'Y',1,0)+DECODE(AT5_CD, 'Y',1,0)+
                                     DECODE(AT6_CD, 'Y',1,0)+DECODE(AT7_CD, 'Y',1,0)+DECODE(AT8_CD, 'Y',1,0)+DECODE(AT9_CD, 'Y',1,0)+DECODE(AT10_CD,'Y',1,0)+
                                     DECODE(AT11_CD,'Y',1,0)+DECODE(AT12_CD,'Y',1,0)+DECODE(AT13_CD,'Y',1,0)+DECODE(AT14_CD,'Y',1,0)+DECODE(AT15_CD,'Y',1,0)+
                                     DECODE(AT16_CD,'Y',1,0)+DECODE(AT17_CD,'Y',1,0)+DECODE(AT18_CD,'Y',1,0)+DECODE(AT19_CD,'Y',1,0)+DECODE(AT20_CD,'Y',1,0)+
                                     DECODE(AT21_CD,'Y',1,0)+DECODE(AT22_CD,'Y',1,0)+DECODE(AT23_CD,'Y',1,0)+DECODE(AT24_CD,'Y',1,0)+DECODE(AT25_CD,'Y',1,0)+
                                     DECODE(AT26_CD,'Y',1,0)+DECODE(AT27_CD,'Y',1,0)+DECODE(AT28_CD,'Y',1,0)+DECODE(AT29_CD,'Y',1,0)+DECODE(AT30_CD,'Y',1,0)+
                                     DECODE(AT31_CD,'Y',1,0) AS HOL_CNT
                            FROM   T_DI_DILIGENCE
                            WHERE  ENO_NO = A.ENO_NO
                            AND    PIS_YY = A.PIS_YY
                            AND    PIS_MM = A.PIS_MM)
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : GUNA030
* @description : 근태휴일날짜 등록
***********************************************************************
* 2007/02/02     김학수        최초작성.
***********************************************************************
-->
    <!-- 근태휴일날짜 조회 -->
    <sql name="GUNA030_SHR">
        <description>근태휴일날짜 조회</description>
        <query>
            <![CDATA[
            SELECT A.DD                                                         DAY_VAL   --ROWNUM    >> GUNA030_SHR
                  ,DECODE(B.HOL_GBN,0,'평일',1,'토요일',2,'휴일',3,'특별휴일')  HOL_GUB
                  ,B."REMARK"                                                   REMARK_VAL
                  ,B.REG_YMD                                                    REG_YMD
                  ,A.WK                                                         WK
                  ,C.CNT                                                        CNT
                  ,DECODE(B.HOL_GBN,0,'BLACK',1,'BLUE',2,'RED',3,'RED','BLACK') COLOR_VAL
             FROM (SELECT TO_CHAR(TO_DATE( ? ||TO_CHAR(ROWNUM),'YYYYMMDD'), 'D') WK
                         ,TO_CHAR(TO_DATE( ? ||TO_CHAR(ROWNUM),'YYYYMMDD'),'YYYYMMDD') DT
                         ,TO_NUMBER(TO_CHAR(ROWNUM,'00')) DD
                   FROM   DICT
                   WHERE  ROWNUM BETWEEN 1 AND TO_CHAR(LAST_DAY(TO_DATE( ?  ,'YYYYMM')),'DD')
                  ) A,
                   ASNHR.T_DI_HOLIDAY B ,
                  (SELECT COUNT(*) CNT
                   FROM  (SELECT SUM(DECODE(DAY,'1',ROWNUM)) SUN,
                                 SUM(DECODE(DAY,'2',ROWNUM)) MON,
                                 SUM(DECODE(DAY,'3',ROWNUM)) TUE,
                                 SUM(DECODE(DAY,'4',ROWNUM)) WEN,
                                 SUM(DECODE(DAY,'5',ROWNUM)) THR,
                                 SUM(DECODE(DAY,'6',ROWNUM)) FRI,
                                 SUM(DECODE(DAY,'7',ROWNUM)) SAT
                          FROM  (SELECT ROWNUM-TO_CHAR(TO_DATE(?||TO_CHAR(ROWNUM),'YYYYMMDD'),'D') WEEK,
                                        TO_CHAR(TO_DATE(?||TO_CHAR(ROWNUM),'YYYYMMDD'),'D') DAY,
                                       (TO_CHAR(ROWNUM,'00'))
                                 FROM   DICT
                                 WHERE  ROWNUM BETWEEN 1 AND TO_CHAR(LAST_DAY(TO_DATE(?||'02','YYYYMMDD')),'DD')
                                )
                                 GROUP BY WEEK
                         )
                  ) C
             WHERE  A.DT = B.REG_YMD(+)
              ORDER  BY REG_YMD
            ]]>
        </query>
    </sql>

    <!-- 일괄처리된 년도 조회 -->
    <sql name="GUNA030_SHR_01">
        <description>일괄처리된 년도 조회</description>
        <query>
            <![CDATA[
            SELECT SUBSTR(REG_YMD,'1','4') REG_YMD
			  FROM ASNHR.T_DI_HOLIDAY
            GROUP BY SUBSTR(REG_YMD,'1','4')
			ORDER BY REG_YMD DESC
            ]]>
        </query>
    </sql>

       <!-- 근태휴일날짜 수정 -->
    <sql name="GUNA030_UPT">
        <description>근태휴일날짜 수정</description>
        <query>
            <![CDATA[
               UPDATE  ASNHR.T_DI_HOLIDAY
                  SET  [1]
                   , [2]
                   , "REMARK" = ?
                   , UPT_MAN = ?
                   , UPT_YMD = sysdate
                WHERE  REG_YMD = ?
            ]]>
        </query>
    </sql>

    <!-- 근태휴일날짜 1년치의 기본정보 등록 -->
    <sql name="GUNA030_INS">
        <description>근태휴일날짜 1년치의 기본정보 등록</description>
        <query>
            <![CDATA[
              INSERT INTO ASNHR.T_DI_HOLIDAY("REG_YMD", "HOL_GBN", "HOL_YN","IPT_MAN","IPT_YMD","UPT_MAN","UPT_YMD")
              SELECT TO_CHAR(TO_DATE(?, 'YYYYMMDD') + NUM-1, 'YYYYMMDD')                            AS REG_YMD,
                     DECODE(TO_CHAR(TO_DATE(?, 'YYYYMMDD') + NUM-1, 'D'),7,'1',1,'2','0')                   AS HOL_GBN,
                     DECODE(DECODE(TO_CHAR(TO_DATE(?, 'YYYYMMDD') + NUM-1, 'D'),7,'1',1,'2','0'),0,'N','Y') AS HOL_YN,
                     ?         AS IPT_MAN,
                     SYSDATE   AS IPT_YMD,
                     ?         AS UPT_MAN,
                     SYSDATE   AS UPT_YMD
              FROM  (SELECT ROWNUM NUM
                     FROM DICT
                     WHERE ROWNUM <= TO_DATE(?, 'YYYYMMDD') - TO_DATE(?, 'YYYYMMDD')  + 1)
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNA040
* @description : 장기근태등록
***********************************************************************
* 2007/02/07     채갑병        최초작성.
***********************************************************************
-->
    <!-- 장기근태 정보를 조회 한다. -->
    <sql name="GUNA040_SHR">
        <description>장기근태 정보 조회</description>
        <query>
            <![CDATA[
            SELECT A.REG_NO
                 , A.ENO_NO
                 , A.GUN_CD
                 , A.REMARK
                 , TO_CHAR(TO_DATE(A.STR_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS STR_YMD
                 , TO_CHAR(TO_DATE(A.END_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS END_YMD
                 , SF_GET_DPTNAME('01', 'A4', NVL(B.GUN_DPT, B.DPT_CD)) AS  DPT_NM
                 , B.ENO_NM
                 , B.JOB_NM
                 , CASE
                   WHEN A.STR_YMD >  TO_CHAR(SYSDATE,'YYYYMMDD')
                   THEN '1'
                   WHEN A.STR_YMD <= TO_CHAR(SYSDATE,'YYYYMMDD')
                    AND (A.END_YMD > TO_CHAR(SYSDATE,'YYYYMMDD')
                     OR  A.END_YMD IS NULL)
                   THEN '2'
                   WHEN A.END_YMD <= TO_CHAR(SYSDATE,'YYYYMMDD')
                   THEN '3'
                    END AS GUN_STS
              FROM T_DI_LONGTERM A
                 , VI_T_CM_EMPLIST B
             WHERE A.ENO_NO = B.ENO_NO
               [1]
               AND NVL(B.GUN_DPT, B.DPT_CD) = NVL(?, NVL(B.GUN_DPT, B.DPT_CD))
          ORDER BY REG_NO
            ]]>
        </query>
    </sql>

	<!-- 장기근태 정보를 조회 한다. -->
    <sql name="GUNA040_SHR_01">
        <description>장기근태 정보 조회</description>
        <query>
            <![CDATA[
             SELECT  REG_NO, STR_YMD ,END_YMD
             FROM    T_DI_LONGTERM
             WHERE   ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 장기근태 정보를 저장 한다. -->
    <sql name="GUNA040_INS">
        <description>장기근태 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO T_DI_LONGTERM
                     ( REG_NO,
                       ENO_NO, GUN_CD, REMARK, STR_YMD, END_YMD, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
             VALUES
                     ((SELECT  TO_CHAR(SYSDATE,'YYYYMMDD')|| TRIM(TO_CHAR( DECODE( MAX(SUBSTR(REG_NO, 9, 3)), NULL, '001', MAX(SUBSTR(REG_NO, 9,3))+1 ), '000'))
                       FROM    T_DI_LONGTERM
                       WHERE   SUBSTR(REG_NO,0,8) = TO_CHAR(SYSDATE,'YYYYMMDD')
                       ),
                             ?,       ?,       ?,       ?,       ?,       ?,  sysdate,      ?, sysdate
                      )
            ]]>
        </query>
    </sql>

    <!-- 장기근태 정보를 수정한다. -->
    <sql name="GUNA040_UPT">
        <description>장기근태 정보를 수정</description>
        <query>
            <![CDATA[
            UPDATE  T_DI_LONGTERM
            SET     ENO_NO          = ?,             -- 사번
                    GUN_CD          = ?,             -- 근태항목
                    REMARK          = ?,             -- 근태항목
                    STR_YMD         = ?,             -- 시작일자
                    END_YMD         = ?,             -- 종료일자
                    UPT_MAN         = ?,             -- 최종 수정자
                    UPT_YMD         = sysdate        -- 최종 수정일
            WHERE   REG_NO          = ?              -- 등록번호
            ]]>
        </query>
    </sql>

    <!-- 장기근태 정보를 삭제 한다. -->
    <sql name="GUNA040_DEL">
        <description>방문증 관리 정보 삭제</description>
        <query>
            <![CDATA[
             DELETE  T_DI_LONGTERM
             WHERE   REG_NO   = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : GUNA050
* @description : 근태변경신청서
***********************************************************************
* 2007/02/23     채갑병        최초작성.
***********************************************************************
-->

    <!-- 결재선을 조회 한다. -->
    <sql name="GUNA050_SHR_01">
        <description>결재선 조회</description>
        <query>
            <![CDATA[
             SELECT GUN_YMD, GUN_GBN, GUN_DPT, SEQ_NO, ENO_NO, JOB_CD, APP_TIME, PENO_NO
                   ,'' AS DPT_CD, '' AS REQ_YMD
                   ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결') AS APP_YN
                   ,SF_GET_ENONAME('01', ENO_NO) AS ENO_NM
                   ,SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM
                   ,DECODE(APP_YN,NULL,'',TO_CHAR(UPT_YMD,'YYYY-MM-DD')) AS UPT_YMD
                   ,REQ_NO
             FROM   T_DI_APPROVAL
             WHERE  GUN_YMD = ?
             AND    GUN_GBN = 'U'  -- 근태변경신청서
             AND    GUN_DPT = ?
             AND    REQ_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 근태변경신청서 정보를 저장 한다. -->
    <sql name="GUNA050_INS">
        <description>근태변경신청서 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO T_DI_CHANGE
                     ( REQ_NO ,
                       ENO_NO , REQ_YMD, CHN_YMD, BF_GUN_CD, BF_REMARK, GUN_CD, REMARK, REASON, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
             VALUES
                     ( ?,
                       ?,       ?,       ?,       ?,         ?,         ?,      ?,      ?,      ?,        sysdate,?,       sysdate )
            ]]>
        </query>
    </sql>

    <!-- 근태변경신청서 정보를 저장 한GUNA050_INS다. -->
    <sql name="GUNA050_INS_02">
        <description>근태변경신청서 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO T_DI_CHANGE
                     ( REQ_NO ,
                       ENO_NO , REQ_YMD, CHN_YMD, BF_GUN_CD, BF_REMARK, GUN_CD, REMARK, REASON, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
             VALUES
                     ((SELECT  ?|| TRIM(TO_CHAR( DECODE( MAX(SUBSTR(REQ_NO, 9, 3)), NULL, '001', MAX(SUBSTR(REQ_NO, 9,3))+1 ), '000'))  AS REQ_NO
                       FROM    T_DI_CHANGE
                       WHERE   SUBSTR(REQ_NO,0,8) = ?),
                       ?,       ?,       ?,       ?,         ?,         ?,      ?,      ?,      ?,        sysdate,?,       sysdate )
            ]]>
        </query>
    </sql>

    <!-- 결재선 정보를 저장 한다. -->
    <sql name="GUNA050_INS_01">
        <description>결재선 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO T_DI_APPROVAL
                    (GUN_YMD, GUN_GBN, GUN_DPT, SEQ_NO , ENO_NO , JOB_CD
                    ,PENO_NO, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD, REQ_NO)
             VALUES (      ?,       ?,       ?,       ?,       ?,      ?
                    ,      ?,       ?, sysdate,       ?, sysdate      ,?)
            ]]>
        </query>
    </sql>

    <!-- 근태변경신청서 정보를 수정한다. -->
    <sql name="GUNA050_UPT">
        <description>근태변경신청서 정보를 수정</description>
        <query>
            <![CDATA[
            UPDATE  T_DI_CHANGE
            SET     BF_GUN_CD       = ?,             -- 변경전 근태
                    BF_REMARK       = ?,             -- 변경전 비고
                    GUN_CD          = ?,             -- 근태코드
                    REMARK          = ?,             -- 비고
                    REASON          = ?,             -- 사유
                    UPT_MAN         = ?,             -- 최종 수정자
                    UPT_YMD         = sysdate        -- 최종 수정일
            WHERE   REQ_NO          = ?              -- 신청번호
            AND     ENO_NO          = ?              -- 사번
            ]]>
        </query>
    </sql>

    <!-- 근태변경신청서 정보를 삭제 한다. -->
    <sql name="GUNA050_DEL">
        <description>근태변경신청서 정보 삭제</description>
        <query>
            <![CDATA[
             DELETE  T_DI_CHANGE
             WHERE   REQ_NO   = ?
               AND   REQ_YMD =  ?
               AND   CHN_YMD =  ?
            ]]>
        </query>
    </sql>

    <!-- 근태변경신청서 정보를 삭제 한다. -->
    <sql name="GUNA050_DEL_02">
        <description>근태변경신청서 정보 삭제</description>
        <query>
            <![CDATA[
             DELETE  T_DI_APPROVAL
             WHERE   REQ_NO   = ?
               AND   GUN_YMD  = ?
             ]]>
        </query>
    </sql>

    <!-- 결재선 정보를 저장 한다. -->
    <sql name="GUNA050_UPT_01">
        <description>결재선 정보 저장</description>
        <query>
            <![CDATA[
                    UPDATE T_DI_APPROVAL
                    SET    REQ_NO = ?
                          ,ENO_NO = ?
                          ,JOB_CD = ?
                          ,APP_YN = ''
                          ,APP_TIME = ''
                          ,UPT_MAN = ?
                          ,UPT_YMD = SYSDATE
                    WHERE  GUN_YMD = ?
                    AND    GUN_GBN = ?
                    AND    GUN_DPT = ?
                    AND    SEQ_NO  = ?
                    AND    PENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 부결여부 조회 -->
    <sql name="GUNA050_SHR_02">
        <description>부결여부 조회</description>
        <query>
            <![CDATA[
                    SELECT GUN_YMD,
                           GUN_GBN,
                           GUN_DPT,
                           PENO_NO,
                           SEQ_NO,
                           REQ_NO,
                           ENO_NO,
                           JOB_CD,
                           APP_YN
                    FROM T_DI_APPROVAL
                    WHERE  GUN_YMD = ?
                    AND    GUN_GBN = ?
                    AND    GUN_DPT = ?
                    AND    SEQ_NO  = ?
                    AND    PENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 신청번호 생성 -->
    <sql name="GUNA050_SHR_03">
        <description>신청번호 조회</description>
        <query>
            <![CDATA[
            SELECT  REQ_NO
            FROM    T_DI_CHANGE
            WHERE   ENO_NO  = ?
            AND     REQ_YMD = ?
            AND     CHN_YMD = ?
            ORDER BY REQ_NO DESC
            ]]>
        </query>
    </sql>



    <!-- 조회시 결재선이 지정되어 있지 않으면 최근 결재선 가져오고 없으면 부서장 자동지정 -->
    <sql name="GUNA050_SHR_04">
        <description>결재선이 없으면 결재선 자동지정</description>
        <query>
            <![CDATA[
             SELECT ?          AS GUN_YMD
                   ,'U'        AS GUN_GBN
                   ,AA.DPT_CD  AS GUN_DPT
                   ,'1'        AS SEQ_NO
                   ,NVL(BB.ENO_NO,CC.ENO_NO) AS ENO_NO
                   ,NVL(BB.JOB_CD,CC.JOB_CD) AS JOB_CD
                   ,''         AS APP_TIME
                   ,?          AS PENO_NO
                   ,'' AS DPT_CD
                   ,'' AS REQ_YMD
                   ,'' AS APP_YN
                   ,SF_GET_ENONAME('01', NVL(BB.ENO_NO,CC.ENO_NO)) AS ENO_NM
                   ,SF_GET_COMMNAME('01', 'A2', NVL(BB.JOB_CD,CC.JOB_CD)) AS JOB_NM
                   ,'' AS UPT_YMD
             FROM   T_CM_DEPT AA,
                   (SELECT GUN_YMD
                          ,GUN_GBN
                          ,GUN_DPT
                          ,ENO_NO
                          ,JOB_CD
                    FROM  (SELECT GUN_YMD ,GUN_GBN ,GUN_DPT ,ENO_NO ,JOB_CD
                           FROM   T_DI_APPROVAL A
                           WHERE GUN_DPT = ?
                           ORDER BY GUN_YMD DESC)
                    WHERE  ROWNUM = 1
                   ) BB,
                   VI_T_CM_PERSON CC
             WHERE BB.GUN_DPT = AA.DPT_CD
             AND   BB.ENO_NO = CC.ENO_NO
             AND   AA.CD_GBN = 'A4'   --소속
             AND   AA.DPT_CD = ?
             --AND   CC.DUTY_CD IN ('L4', 'JS', 'SM', 'OF')   --부서장(2개 이상이면 잘못된 데이터),없는 소속이 있어서 임시로 막아둠
             ORDER BY CC.JOB_SEQ, CC.HOB_SEQ DESC, CC.HIR_YMD, CC.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 결재선 삭제 -->
    <sql name="GUNA050_DEL_01">
        <description>결재선 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM T_DI_APPROVAL
            WHERE GUN_YMD=?
            AND GUN_GBN=?
            AND GUN_DPT=?
            AND SEQ_NO=?
            AND REQ_NO=?
            ]]>
        </query>
    </sql>

    <!-- 신청번호 조회 -->
    <sql name="GUNA050_SHR_05">
        <description>신청번호 조회</description>
        <query>
            <![CDATA[
            SELECT  REQ_NO
            FROM   (SELECT A.ENO_NO, A.CHN_YMD, A.REQ_NO, B.DPT_CD, B.GUN_DPT
                    FROM   T_DI_CHANGE A,
                           VI_T_CM_EMPLIST B
                    WHERE  A.ENO_NO  = B.ENO_NO
                    AND    A.CHN_YMD = ?)
            WHERE   NVL(GUN_DPT, DPT_CD) = ?
            GROUP BY REQ_NO
            ORDER BY REQ_NO DESC
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNA060
* @description : 근태 변경 신청 현황
***********************************************************************
* 2007/02/26     오대성        최초작성.
***********************************************************************
-->
    <!-- 근태 변경 신청 현황 조회 -->
    <sql name="GUNA060_SHR">
        <description>근태 변경 신청 현황 조회</description>
        <query>
            <![CDATA[
			SELECT A.REQ_NO
			      ,B.CNT
			      ,B.END_TAG
			      ,A.GUN_DPT AS DPT_CD
			      ,SF_GET_DPTNAME('01','A4',A.GUN_DPT) AS DPT_NM
			      ,A.APP_YN
			      ,TO_CHAR(TO_DATE(B.CHN_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS CHN_YMD
			      ,NVL2(A.APP_TIME,TO_CHAR(UPT_YMD,'YYYY-MM-DD')||' '||A.APP_TIME,'') AS APP_TIME
			      ,TO_CHAR(TO_DATE(B.REQ_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS REQ_YMD
			      ,TO_CHAR(TO_DATE(A.GUN_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS GUN_YMD
			      ,DECODE(APP_YN,'Y','승인','N','부결','미결') AS APP_NM
			      ,0 AS CHECKED
			FROM   T_DI_APPROVAL A,
			      (SELECT REQ_NO
			             ,COUNT(ENO_NO) AS CNT
			             ,END_TAG
			             ,CHN_YMD
			             ,REQ_YMD
			       FROM   T_DI_CHANGE
			       GROUP BY REQ_NO, END_TAG, CHN_YMD, REQ_YMD) B
			WHERE  A.GUN_YMD = B.CHN_YMD(+)
			AND    A.REQ_NO  = B.REQ_NO(+)
			AND    A.GUN_GBN = 'U'
			AND    A.SEQ_NO = '1'
			AND    A.GUN_DPT LIKE '%'||?||'%'
			[1]
			[2]
			ORDER BY A.REQ_NO
            ]]>
        </query>
    </sql>

  <!-- 근태 변경 신청 내역 조회 -->
    <sql name="GUNA060_SHR_01">
        <description>근태 변경 신청 내역 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO, CHN_YMD, GUN_CD, REMARK
            FROM   T_DI_CHANGE
            WHERE  REQ_NO = ?
            ]]>
        </query>
    </sql>

  <!-- 근태 변경 신청 내역 조회 -->
    <sql name="GUNA060_SHR_02">
        <description>근태 변경 신청 내역 조회</description>
        <query>
            <![CDATA[
            SELECT COUNT(*) AS CNT
            FROM   T_DI_DILIGENCE_DTL
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    PIS_DD = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

  <!-- 근태변경신청 처리내용을 근태사항 비고 상세내역에 반영 -->
    <sql name="GUNA060_INS">
        <description>근태변경신청 정보 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_DI_DILIGENCE_DTL
            ( PIS_YY, PIS_MM, PIS_DD, ENO_NO, REMARK,
              IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
            ( ?     , ?     , ?     , ?     , ?     ,
              ?      , sysdate, ?      , sysdate )
            ]]>
        </query>
    </sql>

  <!-- 근태변경신청 처리작업을 근태사항에 반영 -->
    <sql name="GUNA060_UPT_01">
        <description>근태사항 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_DILIGENCE
            SET    [1],
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

  <!-- 근태변경신청 처리내용을 근태사항 비고 상세내역에 반영 -->
    <sql name="GUNA060_UPT_02">
        <description>근태변경신청 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_DILIGENCE_DTL
            SET    REMARK = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    PIS_DD = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

  <!-- 근태변경신청 처리내용을 근태변경신청에 반영 -->
    <sql name="GUNA060_UPT_03">
        <description>근태변경신청 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_CHANGE
            SET    END_TAG = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  REQ_NO = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

  <!-- 상세내역 삭제 -->
    <sql name="GUNA060_DEL">
        <description>상세내역 삭제</description>
        <query>
            <![CDATA[
            DELETE T_DI_DILIGENCE_DTL
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    PIS_DD = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

  <!-- 총 카운트 -->
    <sql name="GUNA060_UPT_04">
        <description>총 카운트</description>
        <query>
            <![CDATA[
             SELECT G.ENO_NO
                  , AT1_CD , AT2_CD , AT3_CD , AT4_CD , AT5_CD , AT6_CD , AT7_CD , AT8_CD , AT9_CD , AT10_CD
                  , AT11_CD, AT12_CD, AT13_CD, AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD, AT20_CD
                  , AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD, AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD
               FROM T_DI_DILIGENCE G
                  , VI_T_CM_EMPLIST H
              WHERE G.ENO_NO = H.ENO_NO
                AND G.PIS_YY = ?
                AND G.PIS_MM = ?
                AND G.ENO_NO = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNA061
* @description : 근태 변경 신청 현황 상세
***********************************************************************
* 2007/02/26     오대성        최초작성.
***********************************************************************
-->
    <!-- 근태 변경 신청 현황 조회 -->
    <sql name="GUNA061_SHR">
        <description>근태 변경 신청 현황 상세 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO, A.BF_GUN_CD, A.BF_REMARK, A.GUN_CD, A.REMARK,
                   A.REASON, A.DPT_NM, A.JOB_NM, A.ENO_NM, B.ENO_NO AS PENO_NO,
                   TO_CHAR(B.UPT_YMD,'YYYY-MM-DD') AS APP_YMD,
                   C.ENO_NM AS PENO_NM, C.JOB_NM AS PJOB_NM,
                   SF_GET_COMMNAME('01','H4',A.BF_GUN_CD) AS BF_GUN_NM,
                   SF_GET_COMMNAME('01','H4',A.GUN_CD) AS GUN_NM,
                   DECODE(C.ENO_NO,NULL,'',DECODE(B.APP_YN,'Y','승인','N','부결','미결')) AS APP_NM
            FROM   ( SELECT AA.ENO_NO, AA.BF_GUN_CD, AA.BF_REMARK, AA.GUN_CD, AA.REMARK,
                            AA.REASON, AA.CHN_YMD, BB.DPT_NM, BB.JOB_NM, BB.ENO_NM, BB.JOB_SEQ,
                            BB.HOB_SEQ, BB.HIR_YMD, NVL(BB.GUN_DPT, BB.DPT_CD) AS DPT_CD,AA.REQ_NO
                     FROM   T_DI_CHANGE AA, VI_T_CM_EMPLIST2 BB
                     WHERE  AA.REQ_NO = ?
                     AND    AA.ENO_NO = BB.ENO_NO ) A,
                   T_DI_APPROVAL B, VI_T_CM_EMPLIST2 C
            WHERE  B.GUN_YMD(+) = A.CHN_YMD
            AND    B.GUN_GBN(+) = 'U'
            AND    B.GUN_DPT(+) = A.DPT_CD
            AND    B.SEQ_NO(+)  =  '1'
            AND    B.REQ_NO(+)  =  A.REQ_NO
            AND    B.ENO_NO = C.ENO_NO(+)
            ORDER BY A.JOB_SEQ, A.HOB_SEQ DESC, A.HIR_YMD, A.ENO_NO
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : GUNA070
* @description : 근태현황 결재처리목록
***********************************************************************
* 2009/10/20     임종태        최초작성.
***********************************************************************
-->
    <!-- 근태현황 결재처리 조회 -->
    <sql name="GUNA070_SHR">
        <description>근태현황 결재처리 조회</description>
        <query>
            <![CDATA[
			SELECT  A.GUN_YMD -- 근태일
			       ,A.GUN_DPT -- 근태부서
				   ,ASNHR.SF_GET_DPTNAME('01','A4',A.GUN_DPT)    AS DPT_NM -- 근태부서
				   ,A.PENO_NO -- 상신자
				   
				   ,ASNHR.SF_GET_JOBNAME('01',A.PENO_NO)
				   
				   ||' '|| ASNHR.SF_GET_ENONAME('01',A.PENO_NO)   AS PENO_NM
				   
				   ,A.ENO_NO -- 결재자
				   ,ASNHR.SF_GET_JOBNAME('01',A.ENO_NO)||' '|| ASNHR.SF_GET_ENONAME('01',A.ENO_NO)   AS ENO_NM
				   ,GUN_GBN  -- 결재구분
				   ,DECODE(GUN_GBN, 'C', '일일근태', 'U', '변경신청', 'P', '익월근태', 'A', '연차촉진제', 'R', '대체근무', '일일근태') GUN_GBN_NM -- 결재구분명
				   ,APP_YN
				   ,DECODE(APP_YN,'Y','승인','N','부결','미결') APP_YN_NM -- 결재여부
				   ,APP_TIME
				   ,TO_CHAR(A.IPT_YMD,'YYYY-MM-DD HH24:MI') ORD_DATE -- 상신일
				   ,decode(A.APP_YN, null, '', TO_CHAR(A.UPT_YMD,'YYYY-MM-DD HH24:MI')) APP_DATE -- 결재일시간
				   ,REQ_NO	-- 등록번호
				   ,SEQ_NO  -- 결재선
				   ,A.REMARK
			FROM ASNHR.T_DI_APPROVAL A
			WHERE A.GUN_GBN  IN ('C','U', 'P', 'A')
			[1]
			[2]
			AND A.PENO_NO LIKE  '%' || ? || '%' -- 상신자
			AND A.ENO_NO  LIKE '%' || ? || '%' -- 결재자
			AND   A.GUN_GBN LIKE '%' || ? || '%'
			AND   A.REQ_NO IN
				    (
				  	SELECT REQ_NO
					FROM ASNHR.T_DI_DILIGENCE_IND
					WHERE 1 = 1
					AND  PIS_YYMMDD >= ?
					AND  PIS_YYMMDD <= ?
					GROUP BY REQ_NO
				UNION ALL
					 SELECT REQ_NO
					 FROM ASNHR.T_DI_CHANGE
					 WHERE CHN_YMD >= ?
					 AND   CHN_YMD <= ?
					 GROUP BY REQ_NO
				UNION ALL
					SELECT REQ_NO
					FROM   ASNHR.T_DI_APPROVAL
					WHERE  SUBSTR(REQ_NO, 0, 6) >= TO_CHAR(TO_DATE(?, 'YYYYMM')-1, 'YYYYMM')
					AND    SUBSTR(REQ_NO, 0, 6) <= TO_CHAR(TO_DATE(?, 'YYYYMM')-1, 'YYYYMM')
					AND    GUN_GBN = 'P'
				UNION ALL
                      SELECT REQ_NO
                      FROM   ASNHR.T_DI_APPROVAL
                      WHERE  1 = 1
                      AND    TO_CHAR(A.IPT_YMD,'YYYYMMDD') >= ?
                      AND    TO_CHAR(A.IPT_YMD,'YYYYMMDD') <= ?
                      AND    GUN_GBN = 'A'
					)
			 ORDER BY REQ_NO DESC,SEQ_NO desc
            ]]>
        </query>
    </sql>

    <sql name="GUNA070_SHR_1">
        <description>근태현황 결재처리 조회</description>
        <query>
            <![CDATA[
			SELECT  A.GUN_YMD -- 근태일
			       ,A.GUN_DPT -- 근태부서
				   ,ASNHR.SF_GET_DPTNAME('01','A4',A.GUN_DPT)    AS DPT_NM -- 근태부서
				   ,A.PENO_NO -- 상신자
				   ,ASNHR.SF_GET_JOBNAME('01',A.PENO_NO)||' '|| ASNHR.SF_GET_ENONAME('01',A.PENO_NO)   AS PENO_NM
				   ,A.ENO_NO -- 결재자
				   ,ASNHR.SF_GET_JOBNAME('01',A.ENO_NO)||' '|| ASNHR.SF_GET_ENONAME('01',A.ENO_NO)   AS ENO_NM
				   ,GUN_GBN  -- 결재구분
				   ,DECODE(GUN_GBN, 'C', '일일근태', 'U', '변경신청', 'P', '익월근태', 'A', '연차촉진제', 'R', '대체근무', '일일근태') GUN_GBN_NM -- 결재구분명
				   ,APP_YN
				   ,DECODE(APP_YN,'Y','승인','N','부결','미결') APP_YN_NM -- 결재여부
				   ,APP_TIME
				   ,TO_CHAR(A.IPT_YMD,'YYYY-MM-DD HH24:MI') ORD_DATE -- 상신일
				   ,decode(A.APP_YN, null, '', TO_CHAR(A.UPT_YMD,'YYYY-MM-DD HH24:MI')) APP_DATE -- 결재일시간
				   ,REQ_NO	-- 등록번호
				   ,SEQ_NO  -- 결재선
				   ,A.REMARK
			FROM ASNHR.T_DI_APPROVAL A
			WHERE A.GUN_GBN  IN ('C','U', 'P', 'A')
			[1]
			[2]
			AND A.PENO_NO LIKE  '%' || ? || '%' -- 상신자
			AND A.ENO_NO  LIKE '%' || ? || '%' -- 결재자
			AND   A.GUN_GBN LIKE '%' || ? || '%'
			 ORDER BY REQ_NO DESC,SEQ_NO desc
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNA071
* @description : 근태현황 결재처리 - 결재세부사항
***********************************************************************
* 2009/10/20     임종태        최초작성.
***********************************************************************
-->
    <!-- 결재세부사항 조회(변경신청) -->
    <sql name="GUNA071_SHR_01">
        <description>결재세부사항 조회(변경신청)</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO,
                   ASNHR.SF_GET_COMMNAME('01', 'H4',A.BF_GUN_CD)||'('||A.BF_GUN_CD||')' as BF_GUN_CD,
                   A.BF_REMARK,
                   ASNHR.SF_GET_COMMNAME('01', 'H4',A.GUN_CD)||'('||A.GUN_CD||')' as GUN_CD,
                   A.REMARK,
                   A.REASON,
                   A.REQ_YMD,
                   A.CHN_YMD,
                   B.DPT_NM,
				   CASE WHEN JOB_CD = '700' THEN '사원' 
					WHEN JOB_CD = '890' THEN '사원'    
					ELSE ASNHR.SF_GET_COMMNAME('01','A2', B.JOB_CD) END AS JOB_NM,	
                   B.DPT_CD,
                   B.ENO_NM
            FROM   ASNHR.T_DI_CHANGE A, ASNHR.VI_T_CM_EMPLIST B
            WHERE  A.REQ_NO = ?
            AND    A.ENO_NO = B.ENO_NO
            ORDER BY A.REQ_YMD
            ]]>
        </query>
    </sql>

    <!-- 결재세부사항 조회(일일근태) -->
    <sql name="GUNA071_SHR_02">
        <description>결재세부사항 조회(일일근태)</description>
        <query>
        
            <![CDATA[
			SELECT
			        B.ENO_NM
				   ,B.DPT_NM
				   ,CASE WHEN JOB_CD = '700' THEN '사원' 
					WHEN JOB_CD = '890' THEN '사원'    
					ELSE ASNHR.SF_GET_COMMNAME('01','A2', B.JOB_CD) END AS JOB_NM	
				   ,A.ENO_NO
				   ,ASNHR.SF_GET_COMMNAME('01', 'H4', A.GUN_CD) || '(' || A.GUN_CD || ')' AS GUN_CD
				   ,A.PIS_YYMMDD
				   ,A.REMARK
				   ,B.DPT_CD
			FROM ASNHR.T_DI_DILIGENCE_IND A, ASNHR.VI_T_CM_PERSON2 B
			WHERE 1 = 1
			AND A.ENO_NO = B.ENO_NO
			AND A.REQ_NO = ?	-- 등록번호
			ORDER BY A.PIS_YYMMDD
            ]]>
        </query>
    </sql>


  <!-- 결재처리 -->
    <sql name="GUNA071_UPT">
        <description>결재정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_APPROVAL
            SET    APP_YN = ?,
                   APP_TIME = TO_CHAR(sysdate,'HH24:MI'),
                   REMARK   = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  1=1
            AND    SEQ_NO  = ?
            AND    REQ_NO  = ?
            AND    GUN_GBN = ?
            ]]>
        </query>
    </sql>



  <!-- 결재한개수 세기 -->
    <sql name="GUNA071_CNT_DEL">
        <description>결재정보개수세기</description>
        <query>
            <![CDATA[
			SELECT APP_YN
			FROM ASNHR.T_DI_APPROVAL
			WHERE  REQ_NO  = ?
			AND    GUN_GBN = ?
            ]]>
        </query>
    </sql>

  <!-- 결재한개수 세기 -->
    <sql name="GUNA071_CNT">
        <description>결재정보개수세기</description>
        <query>
            <![CDATA[
            SELECT TOTAL,APP,REJ,CNT,
              case
                 when REJ > 0 then 'N'
                 when APP = TOTAL then 'Y'
                 else '-'
            end APP_YN
            FROM
                (SELECT COUNT(*) APP
	                FROM ASNHR.T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN = 'Y') Y,
	            (SELECT COUNT(*) REJ
	                FROM ASNHR.T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN = 'N') N,
                (SELECT COUNT(*) CNT
	                FROM ASNHR.T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN IS NOT NULL) I,
                (SELECT COUNT(*) TOTAL
	                FROM ASNHR.T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?) T
            ]]>
        </query>
    </sql>

    <!-- 일일 근태정보 수정 한다. -->
    <sql name="GUNA071_UPT_01">
        <description>일일근태 정보 수정</description>
        <query>
            <![CDATA[
             UPDATE  ASNHR.T_DI_DILIGENCE
             SET     [1]
                     UPT_MAN = ?,
                     UPT_YMD = sysdate
             WHERE   PIS_YY  = ?
             AND     PIS_MM  = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 일일 근태정보 수정 한다. -->
    <sql name="GUNA071_UPT_02">
        <description>일일근태 정보 수정</description>
        <query>
            <![CDATA[
             UPDATE  ASNHR.T_DI_DILIGENCE
             SET     [1]
                     UPT_MAN = ?,
                     UPT_YMD = sysdate
             WHERE   PIS_YY  = ?
             AND     PIS_MM  = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>




    <!-- T_DI_MONTHLY 월차정보 수정 한다. -->
    <sql name="GUNA071_UPT_05">
        <description>월차정보 수정</description>
        <query>
            <![CDATA[
             UPDATE  ASNHR.T_DI_MONTHLY
             SET     
                     UMPH_CNT = UMPH_CNT + 1,
                     LMPH_CNT = LMPH_CNT - 1
             WHERE   PIS_YY  = TO_CHAR(SYSDATE, 'YYYY')
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>


    <!-- T_DI_MONTHLY_HISTORY 월차정보 수정 한다. -->
    <sql name="GUNA071_UPT_06">
        <description>월차정보 입력</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_DI_MONTHLY_HISTORY
            ( ENO_NO, GET_DT, GET_CNT, USE_DT, USE_CNT, GUBUN )
            VALUES
            (   ?   , ''    , ''     , ?     ,(SELECT NVL(MAX(USE_CNT)+1,1) FROM ASNHR.T_DI_MONTHLY_HISTORY WHERE ENO_NO = ? GROUP BY ENO_NO),'U' )                          
            ]]>
        </query>
    </sql>




    <!-- 일일 근태정보 수정 임시데이터 조회. -->
    <sql name="GUNA071_SHR_03">
        <description>일일근태 정보 임시데이터 조회</description>
        <query>
            <![CDATA[
			SELECT REQ_NO, PIS_YYMMDD, ENO_NO, 
       			CASE WHEN GUN_CD = 'H' AND 0 <  NVL(LMPH_CNT,0) THEN 'M' 
                     WHEN GUN_CD = 'H' AND 0 >= NVL(LMPH_CNT,0) THEN 'H' 
                     WHEN GUN_CD = 'P' AND 0 <= NVL(LMPH_CNT,0) THEN 'P'
                     WHEN GUN_CD = 'R' AND 0 <= NVL(LMPH_CNT,0) THEN 'R'
                     WHEN GUN_CD = 'T' AND 0 <= NVL(LMPH_CNT,0) THEN 'T'
                     WHEN GUN_CD = 'I' AND 0 <= NVL(LMPH_CNT,0) THEN 'I'  
                     WHEN GUN_CD = 'E' AND 0 <= NVL(LMPH_CNT,0) THEN 'E'
                     WHEN GUN_CD = 'F' AND 0 <= NVL(LMPH_CNT,0) THEN 'F'
                     WHEN GUN_CD = 'G' AND 0 <= NVL(LMPH_CNT,0) THEN 'G'
                     WHEN GUN_CD = 'W' AND 0 <= NVL(LMPH_CNT,0) THEN 'W'     
                     WHEN GUN_CD = 'X' AND 0 <= NVL(LMPH_CNT,0) THEN 'X'
                     WHEN GUN_CD = 'Z' AND 0 <= NVL(LMPH_CNT,0) THEN 'Z'                 
                ELSE 'M' END GUN_CD, REMARK
      			FROM (SELECT A.REQ_NO,
				   			A.PIS_YYMMDD,
				   			A.ENO_NO,
		       			A.GUN_CD,
				   			A.REMARK, M.LMPH_CNT
						FROM ASNHR.T_DI_DILIGENCE_IND A,
      			(SELECT  ENO_NO, COUNT(*) CNT,
         				NVL(MAX(TO_NUMBER(GET_CNT)),0) MPH_CNT, 
         				NVL(MAX(TO_NUMBER(USE_CNT)),0) UMPH_CNT, 
        				(NVL(MAX(TO_NUMBER(GET_CNT)),0) - NVL(MAX(TO_NUMBER(USE_CNT)),0)) LMPH_CNT 
       				FROM   ASNHR.T_DI_MONTHLY_HISTORY GROUP BY ENO_NO) M  
					WHERE A.ENO_NO = M.ENO_NO(+)
				 			AND A.REQ_NO = ?
        				ORDER BY A.PIS_YYMMDD)	  		   
            ]]>
        </query>
    </sql>



    <!-- 일일 근태정보 수정 임시데이터 조회. -->
    <sql name="GUNA071_SHR_032">
        <description>일일근태 정보 임시데이터 조회</description>
        <query>
            <![CDATA[
			SELECT REQ_NO, PIS_YYMMDD, ENO_NO, 
       			CASE WHEN GUN_CD = 'H' AND ROWNUM > LMPH_CNT THEN 'H' ELSE 'M' END GUN_CD, REMARK
      			FROM (SELECT A.REQ_NO,
				   			A.PIS_YYMMDD,
				   			A.ENO_NO,
		       			A.GUN_CD,
				   			A.REMARK, M.LMPH_CNT
						FROM ASNHR.T_DI_DILIGENCE_IND A,
      			(SELECT  ENO_NO, COUNT(*) CNT,
         				NVL(MAX(TO_NUMBER(GET_CNT)),0) MPH_CNT, 
         				NVL(MAX(TO_NUMBER(USE_CNT)),0) UMPH_CNT, 
        				(NVL(MAX(TO_NUMBER(GET_CNT)),0) - NVL(MAX(TO_NUMBER(USE_CNT)),0)) LMPH_CNT 
       				FROM   ASNHR.T_DI_MONTHLY_HISTORY GROUP BY ENO_NO) M  
					WHERE A.ENO_NO = M.ENO_NO(+)
				 			AND A.REQ_NO = ?
        				ORDER BY A.PIS_YYMMDD)	  
            ]]>
        </query>
    </sql>


    <!-- 결재현황 조회. -->
    <sql name="GUNA071_SHR_04">
        <description>결재현황 조회</description>
        <query>
            <![CDATA[
			SELECT GUN_DPT
				   ,ASNHR.SF_GET_DPTNAME ('01', 'A4', GUN_DPT)   AS DPT_NM
				   ,JOB_CD
				   ,ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)   AS JOB_NM
				   ,ENO_NO
				   ,ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM
				   ,APP_YN
				   ,(CASE WHEN APP_YN = '' THEN  '상신'
				   		  WHEN APP_YN = 'Y' THEN '승인'
				   		  WHEN APP_YN = 'N' THEN '부결'
						  ELSE ''
					END) APP_YN_NM
				   ,TO_CHAR(UPT_YMD, 'YYYY-MM-DD') || ' ' || APP_TIME AS APP_DATE
				   ,APP_TIME
				   ,UPT_YMD
			FROM ASNHR.T_DI_APPROVAL
			WHERE GUN_GBN = ?
			AND   REQ_NO = ?
            ]]>
        </query>
    </sql>


    <!-- 일일 근태정보 수정 임시데이터 조회(변경). -->
    <sql name="GUNA071_SHR_05">
        <description>일일근태 정보 임시데이터 조회(변경)</description>
        <query>
            <![CDATA[
			SELECT  REQ_NO,
					ENO_NO,
					REQ_YMD,
					CHN_YMD,
					GUN_CD,
					REMARK,
					REASON,
					END_TAG,
					BF_GUN_CD
			FROM ASNHR.T_DI_CHANGE
			WHERE REQ_NO = ?
			AND   ENO_NO = ?
            ]]>
        </query>
    </sql>

  <!-- 일일근태  처리내용을 근태변경신청에 반영 -->
    <sql name="GUNA071_UPT_0400">
        <description>근태변경신청 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_DILIGENCE_IND
            SET    END_TAG = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  REQ_NO = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>
	
	
  <!-- 근태변경신청 처리내용을 근태변경신청에 반영 -->
    <sql name="GUNA071_UPT_0401">
        <description>근태변경신청 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_CHANGE
            SET    END_TAG = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  REQ_NO = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>
  <!-- 익월근태신청 처리내용을 근태변경신청에 반영 -->
    <sql name="GUNA071_UPT_0402">
        <description>근태변경신청 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_PLAN
            SET    END_TAG = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  REQ_NO = ?

            ]]>
        </query>
    </sql>
  <!-- 연차촉진신청 처리내용을 근태변경신청에 반영 -->
    <sql name="GUNA071_UPT_0403">
        <description>근태변경신청 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_ACCELERATE
            SET    END_TAG = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  REQ_NO = ?
            ]]>
        </query>
    </sql>

  <!-- 개인별근태신청에 반영 -->
    <sql name="GUNA071_INS_01">
        <description>근태변경신청 정보 수정</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_DI_DILIGENCE (
				PIS_YY, PIS_MM, ENO_NO, OCC_CD, DPT_CD, MD_DSP,
				ATT_A, ATT_B, ATT_C, ATT_D, ATT_E, ATT_F, ATT_G, ATT_H, ATT_I, ATT_J, ATT_K, ATT_L, ATT_M, ATT_N, ATT_O, ATT_P, ATT_Q, ATT_R, ATT_S, ATT_U, ATT_V, ATT_X, ATT_Z, ATW_CNT, HOL_CNT, HOW_CNT,
				IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
			SELECT  ?, LV, ?, 'A', ?, SUBSTR(TO_CHAR(LAST_DAY(TO_DATE(?||LV||'01')),'YYYYMMDD'),7),
				0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
				?, SYSDATE, ?, SYSDATE
			FROM
				(SELECT PIS_YY, PIS_MM, ENO_NO
				FROM ASNHR.T_DI_DILIGENCE
				WHERE PIS_YY = ?
				AND   ENO_NO = ?) A,
				(SELECT DECODE(LENGTH(LEVEL), 1, '0'||LEVEL, LEVEL) LV FROM DUAL CONNECT BY LEVEL <= 12) B
			WHERE B.LV = A.PIS_MM (+)
			AND   PIS_MM IS NULL
            ]]>
        </query>
    </sql>

  <!-- 개인별근태신청상세에 반영 -->
    <sql name="GUNA071_INS_02">
        <description>근태변경신청 정보 상세에 반영</description>
        <query>
            <![CDATA[
			MERGE INTO ASNHR.T_DI_DILIGENCE_DTL A
			USING
			(SELECT ? AS PIS_YY, ? AS PIS_MM, ? AS PIS_DD, ? AS ENO_NO
			 FROM DUAL) B
			   ON (   A.PIS_YY = B.PIS_YY
			      AND A.PIS_MM = B.PIS_MM
				  AND A.PIS_DD = B.PIS_DD
				  AND A.ENO_NO = B.ENO_NO)
			WHEN MATCHED THEN
			UPDATE SET A.REMARK  = ?,
			           A.UPT_YMD = SYSDATE,
					   A.UPT_MAN = ?
			 WHEN NOT MATCHED THEN
			INSERT ( PIS_YY, PIS_MM, PIS_DD, ENO_NO, REMARK, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
			VALUES ( ?, ?, ?, ?, ?, ?, SYSDATE, ?, SYSDATE)
			]]>
        </query>
    </sql>



    <!-- 결재세부사항 조회(익월근태) -->
    <sql name="GUNA071_SHR_PLAN_01">
        <description>부서별 휴가 계획서 조회</description>
        <query>
            <![CDATA[
          --필드순서 및 필드갯수 주의(그리드에서 참고한다.)
           SELECT B.JOB_NM                         JOB_NM
                , A.ENO_NO                         ENO_NO
               -- , A.DPT_CD                         DPT_CD
                , B.ENO_NM                         ENO_NM
                , nvl(C.YRP_CNT,0)                        YRP_CNT  --발생연차
                , nvl(C.YRP_CNT,0)-nvl(D.UYRP_CNT,0)             NYRP_CNT --미사용연차
                , nvl(C.YRP_CNT,0)-nvl(D.UYRP_CNT,0)-nvl(D.PUYRP_CNT,0) REM_CNT  --잔여
                [1]
                , MAX(D.END_TAG)                   END_TAG
             FROM ASNHR.T_DI_PLAN A,
                  ASNHR.VI_T_CM_EMPLIST B,
                 (SELECT ENO_NO,
                        nvl((YRP_CNT-AYRP_CNT),0) YRP_CNT
                  FROM   ASNHR.T_DI_YEARLY
                  WHERE  PIS_YY=SUBSTR(?,1,4)
                 ) C,
                 (SELECT ENO_NO            ENO_NO
                       , AA.PUYRP_CNT      PUYRP_CNT
                       , AA.UYRP_CNT       UYRP_CNT
                       , AA.END_TAG
                  FROM ----------- 해당부서 사원 리스트 , 미사용연차, 외 정보를 가져옴--------
                       (SELECT AA.ENO_NO           ENO_NO
                             , SUM(nvl(AA.ATT_H,0))+SUM(nvl(AA.ATT_P,0)*0.5)+SUM(nvl(AA.ATT_R,0)*0.5) as PUYRP_CNT
                             , NVL(CC.UYRP_CNT,0) as UYRP_CNT
                             , BB.WED_YMD
                             , MAX(AA.END_TAG)            END_TAG
                          FROM ASNHR.T_DI_PLAN AA,
                               ASNHR.T_CM_PERSON BB,
                              (SELECT ENO_NO,
                                      SUM(nvl(ATT_H,0))+SUM(nvl(ATT_P,0)*0.5)+SUM(nvl(ATT_R,0)*0.5) AS UYRP_CNT
                                 FROM ASNHR.T_DI_DILIGENCE
                                WHERE SUBSTR(PIS_YY,1,4) = SUBSTR(?,1,4)
                             GROUP BY ENO_NO
                              ) CC
                         WHERE AA.PIS_YY = SUBSTR(?,1,4)
                           AND AA.PIS_MM = SUBSTR(?,6,2)
                           AND AA.ENO_NO = BB.ENO_NO(+)
                           AND AA.ENO_NO = CC.ENO_NO(+)
                           AND AA.ENO_NO LIKE ? || '%'     -- 사번
                           AND NVL(BB.DUTY_CD, ' ') <> 'B5'
                      GROUP BY AA.ENO_NO, NVL(BB.HIRG_YMD,BB.HIR_YMD), CC.UYRP_CNT, BB.WED_YMD
                       ) AA
                 ) D
            WHERE A.PIS_YY = SUBSTR(?,1,4)
              AND A.PIS_MM = SUBSTR(?,6,2)
              AND A.REQ_NO = ?
              AND A.ENO_NO = B.ENO_NO
              AND A.ENO_NO = C.ENO_NO(+)
              AND A.ENO_NO = D.ENO_NO(+)
              AND NVL(B.DUTY_CD, ' ') <> 'B5'
              and   (ATT_H > 0 or ATT_P > 0 or ATT_R > 0)
         GROUP BY B.JOB_NM, A.ENO_NO, B.ENO_NM, C.YRP_CNT, D.PUYRP_CNT ,D.UYRP_CNT,
                  B.HEAD_SEQ, B.DPT_SEQ, B.JOB_SEQ, B.HOB_SEQ, B.HIRG_YMD
         ORDER BY B.HEAD_SEQ, B.DPT_SEQ, B.JOB_SEQ, B.HOB_SEQ DESC, B.HIRG_YMD, A.ENO_NO


            ]]>
        </query>
    </sql>




    <!-- 결재세부사항 조회(익월근태) -->
    <sql name="GUNA071_SHR_PLAN_02">
        <description>결재세부사항 조회(익월근태) T_DI_DILIGENCE에 Update 할 내역 조회</description>
        <query>
            <![CDATA[
			SELECT PIS_YY,
				   PIS_MM,
				   ENO_NO,	-- 사번
				   ENO_NM,  -- 성명
				   LV,      -- 날짜
				   COL_NEW  -- 근태코드
			FROM
			   (
				SELECT PIS_YY,
					   PIS_MM,
					   ENO_NO,
					   ENO_NM,
					   LV,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
			FROM
			(
			SELECT B.ENO_NM, A.*
			FROM ASNHR.T_DI_PLAN A,,ASNHR.T_CM_PERSON B
			WHERE  A.DPT_CD = B.DPT_CD
			AND    PIS_YY = ?	-- 년도
			AND    PIS_MM = ?	-- 월
			AND    A.REQ_NO = ? -- 부서
			AND    A.ENO_NO = B.ENO_NO
			)
			, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
		)
		WHERE COL_NEW IS NOT NULL
            ]]>
        </query>
    </sql>

    <!-- 결재세부사항 조회(익월근태) -->
    <sql name="GUNA071_SHR_PLAN_03">
        <description>결재세부사항 조회(익월근태) T_DI_DILIGENCE에 INSERT 할 내역 조회</description>
        <query>
            <![CDATA[
				SELECT *
				FROM  ASNHR.T_DI_PLAN
				WHERE PIS_YY = ?
				AND   PIS_MM = ?
				AND   REQ_NO = ?
            ]]>
        </query>
    </sql>
	
	
	
    <sql name="GUNA072_SHR_APP">
        <description> 결재선 정보 조회</description>
        <query>
            <![CDATA[

     SELECT GUN_YMD, GUN_GBN, AA.GUN_DPT AS GUN_DPT, SEQ_NO, AA.ENO_NO, AA.JOB_CD, APP_TIME, PENO_NO  ,APP_YN ,AA.IPT_MAN
          ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결','R','상신') AS APP_YN_NM
          ,ASNHR.SF_GET_ENONAME('01', AA.ENO_NO)  AS ENO_NM
          ,ASNHR.SF_GET_ENONAME('01', PENO_NO) AS PENO_NM
          ,ASNHR.SF_GET_COMMNAME('01', 'A2',AA.JOB_CD) AS JOB_NM
          ,ASNHR.SF_GET_DPTNAME('01', 'A4', AA.GUN_DPT) AS DPT_NM
          ,REQ_NO
          ,AA.REMARK
          ,NVL2(AA.REMARK,'Click','') AS REMARK1
          ,decode(app_yn,null,'',to_char(AA.upt_ymd,'YYYY/MM/DD HH24:MI')) app_ymd
          ,BB.ENO_NM AS IENO_NM
          ,BB.JOB_CD  AS IJOB_CD
          ,BB.JOB_NM AS IJOB_NM
          ,BB.DPT_CD AS IDPT_CD, BB.DPT_CD AS DPT_CD
          ,BB.DPT_NM AS IDPT_NM
     FROM   ASNHR.T_DI_APPROVAL AA, ASNHR.VI_T_CM_PERSON2 BB
     WHERE  AA.REQ_NO  = ?
       AND    AA.GUN_GBN = ?
       AND    AA.IPT_MAN  = BB.ENO_NO
     ORDER BY   SEQ_NO DESC
            ]]>
        </query>
    </sql>	
	
    <!-- 근태휴일날짜 조회 -->
    <sql name="GUNA072_SHR_01_DH">
        <description>근태휴일날짜 조회</description>
        <query>
            <![CDATA[
            SELECT SUBSTR(REG_YMD,5,4) H_DAY, HOL_YN,
                   'AT'||LTRIM(SUBSTR(REG_YMD,7,2),'0')||
                     DECODE(SUBSTR(REG_YMD,5,2),'07','_JUL','08','_AUG','09','_SEP','10','_OCT','11','_NOV','12','_DEC') AS COL_NM
            FROM   ASNHR.T_DI_HOLIDAY
            WHERE  REG_YMD >= ?
            AND    REG_YMD <= ?
            AND    (HOL_GBN = '1' OR HOL_GBN = '2')
            ]]>
        </query>
    </sql>	
	
	
    <!-- 연차휴가사용촉진제 조회 -->
    <sql name="GUNA072_SHR_02_DH">
        <description>연차휴가사용촉진제 조회</description>
        <query>
            <![CDATA[

        SELECT ENO_NO,ENO_NM,DPT_CD,JOB_CD,DPT_NM,JOB_NM,YRP_REM,(YRP_REM-(ATT_OCT+ATT_NOV+ATT_DEC)) AS REM_CNT,

               AT1_JUL,AT2_JUL,AT3_JUL,AT4_JUL,AT5_JUL,AT6_JUL,AT7_JUL,AT8_JUL,AT9_JUL,AT10_JUL,
               AT11_JUL,AT12_JUL,AT13_JUL,AT14_JUL,AT15_JUL,AT16_JUL,AT17_JUL,AT18_JUL,AT19_JUL,AT20_JUL,
               AT21_JUL,AT22_JUL,AT23_JUL,AT24_JUL,AT25_JUL,AT26_JUL,AT27_JUL,AT28_JUL,AT29_JUL,AT30_JUL,AT31_JUL,

               AT1_AUG,AT2_AUG,AT3_AUG,AT4_AUG,AT5_AUG,AT6_AUG,AT7_AUG,AT8_AUG,AT9_AUG,AT10_AUG,
               AT11_AUG,AT12_AUG,AT13_AUG,AT14_AUG,AT15_AUG,AT16_AUG,AT17_AUG,AT18_AUG,AT19_AUG,AT20_AUG,
               AT21_AUG,AT22_AUG,AT23_AUG,AT24_AUG,AT25_AUG,AT26_AUG,AT27_AUG,AT28_AUG,AT29_AUG,AT30_AUG,AT31_AUG,

               AT1_SEP,AT2_SEP,AT3_SEP,AT4_SEP,AT5_SEP,AT6_SEP,AT7_SEP,AT8_SEP,AT9_SEP,AT10_SEP,
               AT11_SEP,AT12_SEP,AT13_SEP,AT14_SEP,AT15_SEP,AT16_SEP,AT17_SEP,AT18_SEP,AT19_SEP,AT20_SEP,
               AT21_SEP,AT22_SEP,AT23_SEP,AT24_SEP,AT25_SEP,AT26_SEP,AT27_SEP,AT28_SEP,AT29_SEP,AT30_SEP,AT31_SEP,

               AT1_OCT,AT2_OCT,AT3_OCT,AT4_OCT,AT5_OCT,AT6_OCT,AT7_OCT,AT8_OCT,AT9_OCT,AT10_OCT,
               AT11_OCT,AT12_OCT,AT13_OCT,AT14_OCT,AT15_OCT,AT16_OCT,AT17_OCT,AT18_OCT,AT19_OCT,AT20_OCT,
               AT21_OCT,AT22_OCT,AT23_OCT,AT24_OCT,AT25_OCT,AT26_OCT,AT27_OCT,AT28_OCT,AT29_OCT,AT30_OCT,
               AT31_OCT,

               AT1_NOV,AT2_NOV,AT3_NOV,AT4_NOV,AT5_NOV,AT6_NOV,AT7_NOV,AT8_NOV,AT9_NOV,AT10_NOV,
               AT11_NOV,AT12_NOV,AT13_NOV,AT14_NOV,AT15_NOV,AT16_NOV,AT17_NOV,AT18_NOV,AT19_NOV,AT20_NOV,
               AT21_NOV,AT22_NOV,AT23_NOV,AT24_NOV,AT25_NOV,AT26_NOV,AT27_NOV,AT28_NOV,AT29_NOV,AT30_NOV,AT31_NOV,

               AT1_DEC,AT2_DEC,AT3_DEC,AT4_DEC,AT5_DEC,AT6_DEC,AT7_DEC,AT8_DEC,AT9_DEC,AT10_DEC,AT11_DEC,
               AT12_DEC,AT13_DEC,AT14_DEC,AT15_DEC,AT16_DEC,AT17_DEC,AT18_DEC,AT19_DEC,AT20_DEC,
               AT21_DEC,AT22_DEC,AT23_DEC,AT24_DEC,AT25_DEC,AT26_DEC,AT27_DEC,AT28_DEC,AT29_DEC,AT30_DEC,
               AT31_DEC,

               PIS_YY,ATT_OCT,ATT_NOV,ATT_DEC,
               DPT_SEQ, JOB_SEQ, HOB_SEQ, YRP_CNT
        FROM (

        SELECT A.ENO_NO, A.ENO_NM, A.DPT_CD, A.JOB_CD,
               ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM,
               ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,
               B.YRP_CNT-B.AYRP_CNT
               -( SELECT SUM(ATT_H)+SUM(ATT_P*0.5)+SUM(ATT_R*0.5)
                  FROM   ASNHR.T_DI_DILIGENCE
                  WHERE  PIS_YY = B.PIS_YY
                  AND    ENO_NO = A.ENO_NO) AS YRP_REM,

               D.AT1_CD AS AT1_JUL, D.AT2_CD AS AT2_JUL, D.AT3_CD AS AT3_JUL,
               D.AT4_CD AS AT4_JUL, D.AT5_CD AS AT5_JUL, D.AT6_CD AS AT6_JUL,
               D.AT7_CD AS AT7_JUL, D.AT8_CD AS AT8_JUL, D.AT9_CD AS AT9_JUL,
               D.AT10_CD AS AT10_JUL, D.AT11_CD AS AT11_JUL, D.AT12_CD AS AT12_JUL,
               D.AT13_CD AS AT13_JUL, D.AT14_CD AS AT14_JUL, D.AT15_CD AS AT15_JUL,
               D.AT16_CD AS AT16_JUL, D.AT17_CD AS AT17_JUL, D.AT18_CD AS AT18_JUL,
               D.AT19_CD AS AT19_JUL, D.AT20_CD AS AT20_JUL, D.AT21_CD AS AT21_JUL,
               D.AT22_CD AS AT22_JUL, D.AT23_CD AS AT23_JUL, D.AT24_CD AS AT24_JUL,
               D.AT25_CD AS AT25_JUL, D.AT26_CD AS AT26_JUL, D.AT27_CD AS AT27_JUL,
               D.AT28_CD AS AT28_JUL, D.AT29_CD AS AT29_JUL, D.AT30_CD AS AT30_JUL,
               D.AT31_CD AS AT31_JUL,

               E.AT1_CD AS AT1_AUG, E.AT2_CD AS AT2_AUG,
               E.AT3_CD AS AT3_AUG, E.AT4_CD AS AT4_AUG, E.AT5_CD AS AT5_AUG,
               E.AT6_CD AS AT6_AUG, E.AT7_CD AS AT7_AUG, E.AT8_CD AS AT8_AUG,
               E.AT9_CD AS AT9_AUG, E.AT10_CD AS AT10_AUG, E.AT11_CD AS AT11_AUG,
               E.AT12_CD AS AT12_AUG, E.AT13_CD AS AT13_AUG, E.AT14_CD AS AT14_AUG,
               E.AT15_CD AS AT15_AUG, E.AT16_CD AS AT16_AUG, E.AT17_CD AS AT17_AUG,
               E.AT18_CD AS AT18_AUG, E.AT19_CD AS AT19_AUG, E.AT20_CD AS AT20_AUG,
               E.AT21_CD AS AT21_AUG, E.AT22_CD AS AT22_AUG, E.AT23_CD AS AT23_AUG,
               E.AT24_CD AS AT24_AUG, E.AT25_CD AS AT25_AUG, E.AT26_CD AS AT26_AUG,
               E.AT27_CD AS AT27_AUG, E.AT28_CD AS AT28_AUG, E.AT29_CD AS AT29_AUG,
               E.AT30_CD AS AT30_AUG, E.AT31_CD AS AT31_AUG,

               F.AT1_CD AS AT1_SEP, F.AT2_CD AS AT2_SEP,
               F.AT3_CD AS AT3_SEP, F.AT4_CD AS AT4_SEP, F.AT5_CD AS AT5_SEP,
               F.AT6_CD AS AT6_SEP, F.AT7_CD AS AT7_SEP, F.AT8_CD AS AT8_SEP,
               F.AT9_CD AS AT9_SEP, F.AT10_CD AS AT10_SEP, F.AT11_CD AS AT11_SEP,
               F.AT12_CD AS AT12_SEP, F.AT13_CD AS AT13_SEP, F.AT14_CD AS AT14_SEP,
               F.AT15_CD AS AT15_SEP, F.AT16_CD AS AT16_SEP, F.AT17_CD AS AT17_SEP,
               F.AT18_CD AS AT18_SEP, F.AT19_CD AS AT19_SEP, F.AT20_CD AS AT20_SEP,
               F.AT21_CD AS AT21_SEP, F.AT22_CD AS AT22_SEP, F.AT23_CD AS AT23_SEP,
               F.AT24_CD AS AT24_SEP, F.AT25_CD AS AT25_SEP, F.AT26_CD AS AT26_SEP,
               F.AT27_CD AS AT27_SEP, F.AT28_CD AS AT28_SEP, F.AT29_CD AS AT29_SEP,
               F.AT30_CD AS AT30_SEP, F.AT31_CD AS AT31_SEP,

               G.AT1_CD AS AT1_OCT, G.AT2_CD AS AT2_OCT, G.AT3_CD AS AT3_OCT,
               G.AT4_CD AS AT4_OCT, G.AT5_CD AS AT5_OCT, G.AT6_CD AS AT6_OCT,
               G.AT7_CD AS AT7_OCT, G.AT8_CD AS AT8_OCT, G.AT9_CD AS AT9_OCT,
               G.AT10_CD AS AT10_OCT, G.AT11_CD AS AT11_OCT, G.AT12_CD AS AT12_OCT,
               G.AT13_CD AS AT13_OCT, G.AT14_CD AS AT14_OCT, G.AT15_CD AS AT15_OCT,
               G.AT16_CD AS AT16_OCT, G.AT17_CD AS AT17_OCT, G.AT18_CD AS AT18_OCT,
               G.AT19_CD AS AT19_OCT, G.AT20_CD AS AT20_OCT, G.AT21_CD AS AT21_OCT,
               G.AT22_CD AS AT22_OCT, G.AT23_CD AS AT23_OCT, G.AT24_CD AS AT24_OCT,
               G.AT25_CD AS AT25_OCT, G.AT26_CD AS AT26_OCT, G.AT27_CD AS AT27_OCT,
               G.AT28_CD AS AT28_OCT, G.AT29_CD AS AT29_OCT, G.AT30_CD AS AT30_OCT,
               G.AT31_CD AS AT31_OCT,

               H.AT1_CD AS AT1_NOV, H.AT2_CD AS AT2_NOV,
               H.AT3_CD AS AT3_NOV, H.AT4_CD AS AT4_NOV, H.AT5_CD AS AT5_NOV,
               H.AT6_CD AS AT6_NOV, H.AT7_CD AS AT7_NOV, H.AT8_CD AS AT8_NOV,
               H.AT9_CD AS AT9_NOV, H.AT10_CD AS AT10_NOV, H.AT11_CD AS AT11_NOV,
               H.AT12_CD AS AT12_NOV, H.AT13_CD AS AT13_NOV, H.AT14_CD AS AT14_NOV,
               H.AT15_CD AS AT15_NOV, H.AT16_CD AS AT16_NOV, H.AT17_CD AS AT17_NOV,
               H.AT18_CD AS AT18_NOV, H.AT19_CD AS AT19_NOV, H.AT20_CD AS AT20_NOV,
               H.AT21_CD AS AT21_NOV, H.AT22_CD AS AT22_NOV, H.AT23_CD AS AT23_NOV,
               H.AT24_CD AS AT24_NOV, H.AT25_CD AS AT25_NOV, H.AT26_CD AS AT26_NOV,
               H.AT27_CD AS AT27_NOV, H.AT28_CD AS AT28_NOV, H.AT29_CD AS AT29_NOV,
               H.AT30_CD AS AT30_NOV, H.AT31_CD AS AT31_NOV,

               I.AT1_CD AS AT1_DEC, I.AT2_CD AS AT2_DEC,
               I.AT3_CD AS AT3_DEC, I.AT4_CD AS AT4_DEC, I.AT5_CD AS AT5_DEC,
               I.AT6_CD AS AT6_DEC, I.AT7_CD AS AT7_DEC, I.AT8_CD AS AT8_DEC,
               I.AT9_CD AS AT9_DEC, I.AT10_CD AS AT10_DEC, I.AT11_CD AS AT11_DEC,
               I.AT12_CD AS AT12_DEC, I.AT13_CD AS AT13_DEC, I.AT14_CD AS AT14_DEC,
               I.AT15_CD AS AT15_DEC, I.AT16_CD AS AT16_DEC, I.AT17_CD AS AT17_DEC,
               I.AT18_CD AS AT18_DEC, I.AT19_CD AS AT19_DEC, I.AT20_CD AS AT20_DEC,
               I.AT21_CD AS AT21_DEC, I.AT22_CD AS AT22_DEC, I.AT23_CD AS AT23_DEC,
               I.AT24_CD AS AT24_DEC, I.AT25_CD AS AT25_DEC, I.AT26_CD AS AT26_DEC,
               I.AT27_CD AS AT27_DEC, I.AT28_CD AS AT28_DEC, I.AT29_CD AS AT29_DEC,
               I.AT30_CD AS AT30_DEC, I.AT31_CD AS AT31_DEC,

               ? AS PIS_YY,
               D.ATT_H AS ATT_JUL, E.ATT_H AS ATT_AUG, F.ATT_H AS ATT_SEP,
               G.ATT_H AS ATT_OCT, H.ATT_H AS ATT_NOV, I.ATT_H AS ATT_DEC,

               A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ,  B.YRP_CNT

        FROM   ( SELECT ENO_NO, ENO_NM, DPT_CD, JOB_CD,
                        ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD) AS HEAD_SEQ,
                        ASNHR.SF_GET_DPTSEQ('01', 'A4', DPT_CD) AS DPT_SEQ,
                        ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD) AS JOB_SEQ,
                        ASNHR.SF_GET_COMMSEQ('01', 'A3', HOB_CD) AS HOB_SEQ
                 FROM   ASNHR.T_CM_PERSON
                 WHERE (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYY') > ?)
                 AND    NVL(DUTY_CD, ' ') <> 'B5'
                 ) A,
               ( SELECT PIS_YY, ENO_NO, YRP_CNT, AYRP_CNT
                 FROM   ASNHR.T_DI_YEARLY
                 WHERE  PIS_YY = ?) B,

               ( SELECT ENO_NO, PIS_YY, REQ_GBN, END_TAG, AT1_CD, AT2_CD, AT3_CD, AT4_CD,
                        AT5_CD, AT6_CD, AT7_CD, AT8_CD, AT9_CD, AT10_CD, AT11_CD,
                        AT12_CD, AT13_CD, AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD,
                        AT19_CD, AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                        AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H
                 FROM   ASNHR.T_DI_ACCELERATE
                 WHERE  PIS_YY = ?
                 AND    PIS_MM = ?
                 AND    REQ_NO = ?) D,

               ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                        AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                        AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                        AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                        AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD,ATT_H
                 FROM   ASNHR.T_DI_ACCELERATE
                 WHERE  PIS_YY = ?
                 AND    PIS_MM = ?
                 AND    REQ_NO = ?) E,

               ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                        AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                        AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                        AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                        AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H, END_TAG
                 FROM   ASNHR.T_DI_ACCELERATE
                 WHERE  PIS_YY = ?
                 AND    PIS_MM = ?
                 AND    REQ_NO = ?) F,

               ( SELECT ENO_NO, PIS_YY, REQ_GBN, END_TAG, AT1_CD, AT2_CD, AT3_CD, AT4_CD,
                        AT5_CD, AT6_CD, AT7_CD, AT8_CD, AT9_CD, AT10_CD, AT11_CD,
                        AT12_CD, AT13_CD, AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD,
                        AT19_CD, AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                        AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H
                 FROM   ASNHR.T_DI_ACCELERATE
                 WHERE  PIS_YY = ?
                 AND    PIS_MM = ?
                 AND    REQ_NO = ?) G,
               ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                        AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                        AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                        AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                        AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD,ATT_H
                 FROM   ASNHR.T_DI_ACCELERATE
                 WHERE  PIS_YY = ?
                 AND    PIS_MM = ?
                 AND    REQ_NO = ?) H,
               ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                        AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                        AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                        AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                        AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H, END_TAG
                 FROM   ASNHR.T_DI_ACCELERATE
                 WHERE  PIS_YY = ?
                 AND    PIS_MM = ?
                 AND    REQ_NO = ?) I
               WHERE  A.ENO_NO = B.ENO_NO
               AND    A.ENO_NO = D.ENO_NO
               AND    A.ENO_NO = E.ENO_NO     
               AND    A.ENO_NO = F.ENO_NO                            
               AND    A.ENO_NO = G.ENO_NO
               AND    A.ENO_NO = H.ENO_NO
               AND    A.ENO_NO = I.ENO_NO
        )
        ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, ENO_NO

            ]]>
        </query>
    </sql>

	
    <sql name="GUNA072_SHR_ACC_03">
        <description>결재세부사항 조회(휴가촉진제) T_DI_DILIGENCE에 INSERT 할 내역 조회</description>
        <query>
            <![CDATA[
				SELECT *
				FROM  ASNHR.T_DI_ACCELERATE
				WHERE PIS_YY = ?
				AND   REQ_NO = ?
            ]]>
        </query>
    </sql>	
	
	
    <!-- 결재세부사항 조회(휴가촉진제) -->
    <sql name="GUNA072_SHR_ACC_04">
        <description>결재세부사항 조회(휴가촉진제) T_DI_DILIGENCE에 Update 할 내역 조회</description>
        <query>
            <![CDATA[
			SELECT PIS_YY,
				   PIS_MM,
				   ENO_NO,	-- 사번
				   ENO_NM,  -- 성명
				   LV,      -- 날짜
				   COL_NEW  -- 근태코드
			FROM
			   (
				SELECT PIS_YY,
					   PIS_MM,
					   ENO_NO,
					   ENO_NM,
					   LV,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
			FROM
			(
			SELECT B.ENO_NM, A.*
			FROM ASNHR.T_DI_ACCELERATE A, ASNHR.T_CM_PERSON B
			WHERE  A.DPT_CD = B.DPT_CD
			AND    PIS_YY = ?	-- 년도
			AND    A.REQ_NO = ? -- 부서
			AND    A.ENO_NO = B.ENO_NO
			)
			, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
		)
		WHERE COL_NEW IS NOT NULL
            ]]>
        </query>
    </sql>	
	
	
  <!-- 결재 상태 -->
    <sql name="GUNA072_CNT">
        <description>결재정보개수세기</description>
        <query>
            <![CDATA[
			SELECT APP_YN
			FROM ASNHR.T_DI_APPROVAL
			WHERE  REQ_NO  = ?
			AND    GUN_GBN = ?
            ]]>
        </query>
    </sql>
	

	
  <!-- 결재처리 -->
    <sql name="GUNA072_UPT">
        <description>결재정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_APPROVAL
            SET    APP_YN = ?,
                   APP_TIME = TO_CHAR(sysdate,'HH24:MI'),
                   REMARK   = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  1=1
            AND    SEQ_NO  = ?
            AND    REQ_NO  = ?
            AND    GUN_GBN = ?
            ]]>
        </query>
    </sql>
	
    <!-- 일일 근태정보 수정 한다. -->
    <sql name="GUNA072_UPT_01">
        <description>일일근태 정보 수정</description>
        <query>
            <![CDATA[
             UPDATE  ASNHR.T_DI_DILIGENCE
             SET     [1]
                     UPT_MAN = ?,
                     UPT_YMD = sysdate
             WHERE   PIS_YY  = ?
             AND     PIS_MM  = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 일일 근태정보 수정 한다. -->
    <sql name="GUNA072_UPT_02">
        <description>일일근태 정보 수정</description>
        <query>
            <![CDATA[
             UPDATE  ASNHR.T_DI_DILIGENCE
             SET     [1]
                     UPT_MAN = ?,
                     UPT_YMD = sysdate
             WHERE   PIS_YY  = ?
             AND     PIS_MM  = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>	
	
	
  <!-- 연차촉진신청 처리내용을 근태변경신청에 반영 -->
    <sql name="GUNA072_UPT_0403">
        <description>근태변경신청 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_ACCELERATE
            SET    END_TAG = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  REQ_NO = ?
            ]]>
        </query>
    </sql>	
	
	
	
	
	
	
	
        <!-- 휴가계획 관리 테이블을 이용해 기간내의 달력(일자)을 구해온다 -->
    <sql name="GUNB020_SHR_PLAN_04">
        <description>부서별 휴가계획서 일자 조회</description>
        <query>
            <![CDATA[
            SELECT  SUBSTR(REG_YMD,5,4) H_DAY
                        ,  HOL_YN
               FROM  ASNHR.T_DI_HOLIDAY
			   WHERE  REG_YMD >= TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD'), 1),'YYYYMMDD' )
			   AND REG_YMD <= TO_CHAR(LAST_DAY(ADD_MONTHS(TO_DATE(?,'YYYYMMDD'), 1)),'YYYYMMDD')
            ]]>
        </query>
    </sql>

    <sql name="GUNA071_SHR_ACC_03">
        <description>결재세부사항 조회(휴가촉진제) T_DI_DILIGENCE에 INSERT 할 내역 조회</description>
        <query>
            <![CDATA[
				SELECT *
				FROM  ASNHR.T_DI_ACCELERATE
				WHERE PIS_YY = ?
				AND   REQ_NO = ?
            ]]>
        </query>
    </sql>
	
	
    <!-- 결재세부사항 조회(휴가촉진제) -->
    <sql name="GUNA071_SHR_ACC_04">
        <description>결재세부사항 조회(휴가촉진제) T_DI_DILIGENCE에 Update 할 내역 조회</description>
        <query>
            <![CDATA[
			SELECT PIS_YY,
				   PIS_MM,
				   ENO_NO,	-- 사번
				   ENO_NM,  -- 성명
				   LV,      -- 날짜
				   COL_NEW  -- 근태코드
			FROM
			   (
				SELECT PIS_YY,
					   PIS_MM,
					   ENO_NO,
					   ENO_NM,
					   LV,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
			FROM
			(
			SELECT B.ENO_NM, A.*
			FROM ASNHR.T_DI_ACCELERATE A, ASNHR.T_CM_PERSON B
			WHERE  A.DPT_CD = B.DPT_CD
			AND    PIS_YY = ?	-- 년도
			AND    A.REQ_NO = ? -- 부서
			AND    A.ENO_NO = B.ENO_NO
			)
			, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
		)
		WHERE COL_NEW IS NOT NULL
            ]]>
        </query>
    </sql>

    <sql name="GUNA071_SHR_APP">
        <description> 결재선 정보 조회</description>
        <query>
            <![CDATA[

     SELECT GUN_YMD, GUN_GBN, AA.GUN_DPT AS GUN_DPT, SEQ_NO, AA.ENO_NO, AA.JOB_CD, APP_TIME, PENO_NO  ,APP_YN ,AA.IPT_MAN
          ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결','R','상신') AS APP_YN_NM
          ,ASNHR.SF_GET_ENONAME('01', AA.ENO_NO)  AS ENO_NM
          ,ASNHR.SF_GET_ENONAME('01', PENO_NO) AS PENO_NM
          
		  , CASE WHEN AA.JOB_CD = '700' THEN '사원' 
			WHEN AA.JOB_CD = '890' THEN '사원'    
			ELSE ASNHR.SF_GET_COMMNAME('01','A2', AA.JOB_CD) END AS JOB_NM	

          ,ASNHR.SF_GET_DPTNAME('01', 'A4', AA.GUN_DPT) AS DPT_NM
          ,REQ_NO
          ,AA.REMARK
          ,NVL2(AA.REMARK,'Click','') AS REMARK1
          ,decode(app_yn,null,'',to_char(AA.upt_ymd,'YYYY/MM/DD HH24:MI')) app_ymd
          ,BB.ENO_NM AS IENO_NM
          ,BB.JOB_CD  AS IJOB_CD

		  , CASE WHEN BB.JOB_CD = '700' THEN '사원' 
			WHEN BB.JOB_CD = '890' THEN '사원'    
			ELSE ASNHR.SF_GET_COMMNAME('01','A2', BB.JOB_CD) END AS IJOB_NM
			
          ,BB.DPT_CD AS IDPT_CD, BB.DPT_CD AS DPT_CD
          ,BB.DPT_NM AS IDPT_NM
     FROM   ASNHR.T_DI_APPROVAL AA, ASNHR.VI_T_CM_PERSON2 BB
     WHERE  AA.REQ_NO  = ?
       AND    AA.GUN_GBN = ?
       AND    AA.IPT_MAN  = BB.ENO_NO
     ORDER BY   SEQ_NO DESC
            ]]>
        </query>
    </sql>


 <!--
***********************************************************************
* @UseCase     : GUNA080
* @description : 미결재 현황
***********************************************************************
* 2007/02/21     오대성        최초작성.
***********************************************************************
-->
    <!-- 미결재 현황 조회 -->
    <sql name="GUNA080_SHR">
        <description>미결재 현황 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO, MAX(B.ENO_NM) AS ENO_NM, MAX(B.DPT_NM) AS DPT_NM,
                   MAX(B.JOB_NM) AS JOB_NM, ? AS STR_YMD, ? AS END_YMD,
                   SUM(( SELECT COUNT(ENO_NO)
                         FROM   T_DI_APPROVAL
                         WHERE  GUN_YMD = A.GUN_YMD
                         AND    GUN_GBN = A.GUN_GBN
                         AND    GUN_DPT = A.GUN_DPT
                         AND    PENO_NO = A.PENO_NO
                         AND    ENO_NO = A.ENO_NO
                         AND    APP_YN = 'Y' )) AS Y_CNT,
                   SUM(( SELECT COUNT(ENO_NO)
                         FROM   T_DI_APPROVAL
                         WHERE  GUN_YMD = A.GUN_YMD
                         AND    GUN_GBN = A.GUN_GBN
                         AND    GUN_DPT = A.GUN_DPT
                         AND    PENO_NO = A.PENO_NO
                         AND    ENO_NO = A.ENO_NO
                         AND    APP_YN = 'N' )) AS N_CNT,
                   SUM(( SELECT COUNT(ENO_NO)
                         FROM   T_DI_APPROVAL
                         WHERE  GUN_YMD = A.GUN_YMD
                         AND    GUN_GBN = A.GUN_GBN
                         AND    GUN_DPT = A.GUN_DPT
                         AND    PENO_NO = A.PENO_NO
                         AND    ENO_NO = A.ENO_NO
                         AND    APP_YN IS NULL )) AS NO_CNT
            FROM   ( SELECT AA.ENO_NO, AA.GUN_DPT, AA.APP_YN, AA.GUN_GBN, AA.PENO_NO, AA.GUN_YMD
                     FROM   T_DI_APPROVAL AA
                     WHERE  1 = 1
                     [1]
                     AND    'Y' = DECODE(SEQ_NO,'1','Y', ( SELECT APP_YN
                                                           FROM   T_DI_APPROVAL
                                                           WHERE  GUN_YMD = AA.GUN_YMD
                                                           AND    GUN_GBN = AA.GUN_GBN
                                                           AND    GUN_DPT = AA.GUN_DPT
                                                           AND    PENO_NO = AA.PENO_NO
                                                           AND    SEQ_NO = AA.SEQ_NO-1 ) ) ) A,
                   VI_T_CM_PERSON2 B
            WHERE A.ENO_NO = B.ENO_NO(+)
            GROUP BY A.ENO_NO
            ORDER BY MAX(B.HEAD_SEQ), MAX(B.DPT_SEQ), MAX(B.JOB_SEQ), MAX(B.HOB_SEQ) DESC, MAX(B.HIRG_YMD), A.ENO_NO
            ]]>
        </query>
    </sql>



 <!--
***********************************************************************
* @UseCase     : GUNA081
* @description : 미결재 현황 - 미결재세부내역
***********************************************************************
* 2007/02/21     오대성        최초작성.
***********************************************************************
-->
    <!-- 미결재 현황(세부내역) 조회 -->
    <sql name="GUNA081_SHR">
        <description>미결재 현황(세부내역) 조회</description>
        <query>
            <![CDATA[
            SELECT A.GUN_YMD
                 , A.GUN_DPT
                 , A.GUN_GBN
                 , B.NAME
                 , B.ENO_NO
                 , SF_GET_DPTNAME('01','A4',A.GUN_DPT) AS DPT_NM
              FROM T_DI_APPROVAL A
                 , T_CM_EMPLIST B
             WHERE A.ENO_NO = ?
               [1]
               AND A.APP_YN IS NULL
               AND 'Y' = DECODE(SEQ_NO,'1','Y', ( SELECT APP_YN
                                                    FROM T_DI_APPROVAL
                                                   WHERE GUN_YMD = A.GUN_YMD
                                                     AND GUN_GBN = A.GUN_GBN
                                                     AND GUN_DPT = A.GUN_DPT
                                                     AND PENO_NO = A.PENO_NO
                                                     AND SEQ_NO = A.SEQ_NO-1 ) )
               AND A.GUN_DPT = B.DPT_CD(+)
               AND 'A'       = B.DIL_AUTHO(+)
            ]]>
        </query>
    </sql>



 <!--
***********************************************************************
* @UseCase     : GUNA100
* @description : 개인별 근태 집계 현황
***********************************************************************
* 2007/02/21     오대성        최초작성.
***********************************************************************
-->
    <!-- 개인별 근태 집계 현황 조회 -->
    <sql name="GUNA100_SHR">
        <description>개인별 근태 집계 현황 조회</description>
        <query>
            <![CDATA[
            SELECT A.PIS_YY||'-'||A.PIS_MM AS PIS_YYMM, A.ENO_NO,
            
                   (A.ATT_H+(A.ATT_P*0.5)+(A.ATT_R*0.5)) AS YRP_CNT2,
            	   A.ATT_M AS MPH_CNT2,
            
                   A.AT1_CD, A.AT2_CD, A.AT3_CD, 
                   A.AT4_CD, A.AT5_CD, A.AT6_CD,
                   A.AT7_CD, A.AT8_CD, A.AT9_CD, 
                   A.AT10_CD, A.AT11_CD, A.AT12_CD,
                   A.AT13_CD, A.AT14_CD, A.AT15_CD, 
                   A.AT16_CD, A.AT17_CD, A.AT18_CD,
                   A.AT19_CD, A.AT20_CD, A.AT21_CD, 
                   A.AT22_CD, A.AT23_CD, A.AT24_CD,
                   A.AT25_CD, A.AT26_CD, A.AT27_CD, 
                   A.AT28_CD, A.AT29_CD, A.AT30_CD, A.AT31_CD, 
                   B.ATT_A, 
                   B.ATT_B,
                   B.ATT_C,                    
                   B.ATT_E, 
                   B.ATT_F,
                   B.ATT_G, 
                   B.ATT_T, 
                   B.ATT_H,                   
                   B.ATT_I, 
                   B.ATT_K, 
                   B.ATT_M, 
                   B.ATT_P, 
                   B.ATT_R, 
                   B.ATT_Y, 
                   B.ATT_V,                    
                   B.ATT_W, 
                   B.ATT_X,                    
                   C.OCC_CD, 
                   C.OCC_NM, 
                   C.DPT_NM, 
                   C.JOB_NM, 
                   TO_CHAR(C.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                   TO_CHAR(C.RET_YMD,'YYYY-MM-DD') AS RET_YMD,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'01') AS HOL_YN1,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'02') AS HOL_YN2,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'03') AS HOL_YN3,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'04') AS HOL_YN4,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'05') AS HOL_YN5,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'06') AS HOL_YN6,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'07') AS HOL_YN7,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'08') AS HOL_YN8,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'09') AS HOL_YN9,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'10') AS HOL_YN10,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'11') AS HOL_YN11,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'12') AS HOL_YN12,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'13') AS HOL_YN13,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'14') AS HOL_YN14,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'15') AS HOL_YN15,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'16') AS HOL_YN16,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'17') AS HOL_YN17,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'18') AS HOL_YN18,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'19') AS HOL_YN19,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'20') AS HOL_YN20,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'21') AS HOL_YN21,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'22') AS HOL_YN22,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'23') AS HOL_YN23,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'24') AS HOL_YN24,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'25') AS HOL_YN25,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'26') AS HOL_YN26,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'27') AS HOL_YN27,
                   NVL(( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'28'),'X') AS HOL_YN28,
                   NVL(( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'29'),'X') AS HOL_YN29,
                   NVL(( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'30'),'X') AS HOL_YN30,
                   NVL(( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'31'),'X') AS HOL_YN31,
                     F.YRP_CNT,
                     E.YRP_USE
            FROM   ASNHR.T_DI_DILIGENCE A,
                   ( SELECT
                            SUM(ATT_A) AS ATT_A,    -- 난임치료휴가
                            SUM(ATT_B) AS ATT_B,    -- 가족돌봄휴가
                            SUM(ATT_C) AS ATT_C,    -- 보건휴가                   
                            SUM(ATT_E) AS ATT_E,    -- 출장
                            SUM(ATT_F) AS ATT_F,    -- 교육
                            SUM(ATT_G) AS ATT_G,    -- 훈련
                            SUM(HOW_CNT) AS ATT_T,  -- 대체휴가
                            SUM(ATT_I) AS ATT_I,    -- 특별휴가
                            SUM(ATT_K) AS ATT_K,    -- 휴직
                            SUM(ATT_V) AS ATT_V,    -- 배우자 출산휴가
                            SUM(ATT_X) AS ATT_X,    -- 산전후휴가                           
                            SUM(ATT_H) AS ATT_H,    -- 년차
                            SUM(ATT_P) AS ATT_P,    -- 오전연반차
                            SUM(ATT_R) AS ATT_R,    -- 오후연반차
                            SUM(HOL_CNT) AS ATT_Y,  -- 휴일
                            SUM(ATW_CNT) AS ATT_W,  -- 정상근무
                            SUM(ATT_M) AS ATT_M     -- 월차
                     FROM   ASNHR.T_DI_DILIGENCE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM >= ?
                     AND    PIS_MM <= ?
                     AND    ENO_NO = ? ) B,
                   ASNHR.VI_T_CM_EMPLIST2 C,
                  (SELECT ENO_NO,(SUM(NVL(ATT_H,0)) + SUM(NVL(ATT_P,0))*0.5 + SUM(NVL(ATT_R,0))*0.5) AS YRP_USE
                   FROM   ASNHR.T_DI_DILIGENCE A
                   WHERE  PIS_YY = ?
                   GROUP  BY ENO_NO) E,
                  (SELECT A.ENO_NO, (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT
                   FROM  (SELECT ENO_NO, NVL(YRP_CNT,0) AS YRP_CNT, NVL(AYRP_CNT,0) AS AYRP_CNT FROM ASNHR.T_DI_YEARLY WHERE PIS_YY = ?) A ) F
            WHERE  A.PIS_YY = ?
            AND    A.PIS_MM >= ?
            AND    A.PIS_MM <= ?
            AND    A.ENO_NO = ?
            AND    C.ENO_NO = A.ENO_NO
            AND    C.ENO_NO = E.ENO_NO(+)
            AND    C.ENO_NO = F.ENO_NO(+)
         ORDER BY  A.PIS_MM
            ]]>
        </query>
    </sql>


    <!-- 개인별 휴가 사용 현황 조회 -->
    <sql name="GUNA100_SHR_02">
        <description>개인별휴가사용현황</description>
        <query>
            <![CDATA[
            SELECT B.OCC_NM,
                   B.JOB_NM,
                   B.DPT_NM,
                   TO_CHAR(B.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                   (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT,
                   (A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12) AS YRP_ATT_H,
                   (A.YRP_CNT-A.AYRP_CNT-(A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12)) AS REM_YRP,
                   M.MPH_CNT,
                   M.UMPH_CNT,
                   M.LMPH_CNT
            FROM   ( SELECT AA.ENO_NO, AA.YRP_CNT, AA.AYRP_CNT,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '01'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H1,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '02'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H2,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '03'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H3,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '04'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H4,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '05'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H5,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '06'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H6,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '07'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H7,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '08'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H8,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '09'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H9,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '10'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H10,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '11'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H11,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '12'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H12
                   FROM   ASNHR.T_DI_YEARLY AA
                   WHERE  AA.PIS_YY = ?
                   AND    AA.ENO_NO = ?) A,
                   ASNHR.VI_T_CM_PERSON2 B,
                  (SELECT  ENO_NO, 
		                   NVL(MAX(TO_NUMBER(GET_CNT)),0) MPH_CNT, 
		                   NVL(MAX(TO_NUMBER(USE_CNT)),0) UMPH_CNT, 
                           (NVL(MAX(TO_NUMBER(GET_CNT)),0) - NVL(MAX(TO_NUMBER(USE_CNT)),0)) LMPH_CNT 
                   FROM   ASNHR.T_DI_MONTHLY_HISTORY GROUP BY ENO_NO) M                        
            WHERE  A.ENO_NO = B.ENO_NO
                   AND A.ENO_NO = M.ENO_NO(+)
            ]]>
        </query>
    </sql>



	<!-- 개인별 근태 집계 현황 수정 -->
    <sql name="GUNA100_UPT">
        <description>개인별근태집계현황수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_DILIGENCE
            SET    AT1_CD = ?,
                   AT2_CD = ?,
                   AT3_CD = ?,
                   AT4_CD = ?,
                   AT5_CD = ?,
                   AT6_CD = ?,
                   AT7_CD = ?,
                   AT8_CD = ?,
                   AT9_CD = ?,
                   AT10_CD = ?,
                   AT11_CD = ?,
                   AT12_CD = ?,
                   AT13_CD = ?,
                   AT14_CD = ?,
                   AT15_CD = ?,
                   AT16_CD = ?,
                   AT17_CD = ?,
                   AT18_CD = ?,
                   AT19_CD = ?,
                   AT20_CD = ?,
                   AT21_CD = ?,
                   AT22_CD = ?,
                   AT23_CD = ?,
                   AT24_CD = ?,
                   AT25_CD = ?,
                   AT26_CD = ?,
                   AT27_CD = ?,
                   AT28_CD = ?,
                   AT29_CD = ?,
                   AT30_CD = ?,
                   AT31_CD = ?,
                   ATT_E = ?,
                   ATT_F = ?,
                   ATT_H = ?,                   
                   ATT_I = ?,
                   ATT_P = ?,
                   ATT_R = ?,
                   HOW_CNT = ?,
                   ATT_Z = ?,                   
                   ATW_CNT = ?,
                   HOL_CNT = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>


 <!--
***********************************************************************
* @UseCase     : GUNA101
* @description : 근태미확인여부 조회
***********************************************************************
* 2010/01/28     임종태        최초작성.
***********************************************************************
-->
   <!-- 근태현황 조회 -->
    <sql name="GUNA101_SHR">
        <description>부서별담당자 조회</description>
        <query>
            <![CDATA[
 			SELECT
				  A.ENO_NO,
				  B.ENO_NM,
				  ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,      -- 소속 명칭
				  ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,      -- 직위 명칭
				  ASNHR.SF_GET_COMMNAME('01', 'H4', GUN_CD) 	   AS GUN_NM 	  -- 근태코드
			FROM
				(
				SELECT ENO_NO,
				       PIS_YY,
					   PIS_MM,
					   DECODE(LENGTH(LV), 1, '0'|| LV, LV)  AS PIS_DD,
				       PIS_YY || PIS_MM || DECODE(LENGTH(LV), 1, '0'|| LV, LV) AS PIS_YYMMDD,
					   COL_NEW  AS GUN_CD
				FROM
				(
					 SELECT ENO_NO,
					        PIS_YY,
							PIS_MM,
					        LV,
					        DECODE(lv,1,AT1_CD,
					                  2,AT2_CD,
					                  3,AT3_CD,
					                  4,AT4_CD,
					                  5,AT5_CD,
					                  6,AT6_CD,
					                  7 , AT7_CD,
					                  8 , AT8_CD,
					                  9 , AT9_CD,
					                  10, AT10_CD,
					                  11, AT11_CD,
					                  12, AT12_CD,
					                  13, AT13_CD,
					                  14, AT14_CD,
					                  15, AT15_CD,
					                  16, AT16_CD,
					                  17, AT17_CD,
					                  18, AT18_CD,
					                  19, AT19_CD,
					                  20, AT20_CD,
					                  21, AT21_CD,
					                  22, AT22_CD,
					                  23, AT23_CD,
					                  24, AT24_CD,
					                  25, AT25_CD,
					                  26, AT26_CD,
					                  27, AT27_CD,
					                  28, AT28_CD,
					                  29, AT29_CD,
				                  30, AT30_CD,
				                  31, AT31_CD
				        ) col_new
				FROM ASNHR.T_DI_DILIGENCE
				, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
				WHERE  1 = 1
				AND    PIS_YY || PIS_MM = ? -- 근태시작일
			)
			) A, ASNHR.T_CM_PERSON B
			WHERE A.ENO_NO = B.ENO_NO
			AND   RET_YMD IS NULL
			AND   GUN_CD LIKE ? || '%'
			AND   PIS_YYMMDD = ?
			ORDER BY ASNHR.SF_GET_DPTSEQ('01', 'A4', B.DPT_CD) , ASNHR.SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)
            ]]>
        </query>
    </sql>
 <!--
***********************************************************************
* @UseCase     : GUNA120
* @description : 부서별담당자등록
***********************************************************************
* 2007/01/30     김학수        최초작성.
***********************************************************************
-->
    <!-- 부서별담당자 조회 -->
    <sql name="GUNA120_SHR">
        <description>부서별담당자 조회</description>
        <query>
            <![CDATA[
            SELECT E.GUN_DPT_CD
                 , E.GUN_DPT_NM
                 , E.DPT_CD
                 , E.DPT_NM
                 , E.JOB_CD
                 , E.JOB_NM
                 , E.ENO_NO
                 , E.ENO_NM
                 , E.HIR_YMD
                 , E.ROLE_CD
                 , E.DIL_AUTHO
                 , E.DIL_AUTHO                                      AS DIL_AUTHO_ORI
                 , E.CHK_CM                                         -- 'C' 정직, 'M' 파견
                 , F.GBN2_TAG                                       -- 지역구분 1 본사 9 지방
              FROM (SELECT L.DPT_CD                                AS GUN_DPT_CD
                         , SF_GET_DPTNAME('01','A4',L.DPT_CD)      AS GUN_DPT_NM
                         , L.DPT_CD
                         , L.DPT_NM
                         , L.JOB_CD
                         , L.JOB_NM
                         , L.ENO_NO
                         , L.ENO_NM
                         , TO_CHAR(L.HIR_YMD,'YYYY-MM-DD')          AS HIR_YMD
                         , M.ROLE_CD
                         , CASE
                           WHEN M.DIL_AUTHO = 'M'
                           THEN 'M'
                           WHEN M.ROLE_CD = '1020' --본사근태
                             OR M.ROLE_CD = '1030' --지방근태
                             OR M.ROLE_CD = '1050' --본사근태(파견)
                             OR M.ROLE_CD = '1051' --지방근태(파견)
                           THEN 'A'
                           WHEN L.GUN_DPT IS NOT NULL
                           THEN 'S'
                            END                                     AS DIL_AUTHO

                         , L.DPT_SEQ
                         , L.JOB_SEQ
                         , L.HOB_SEQ

                         , NVL2(N.ENO_NO, 'C', 'M')                 AS CHK_CM       -- 'C' 정직, 'M' 파견
                         , L.DUTY_CD
                      FROM VI_T_CM_EMPLIST L
                         , T_CM_EMPLIST M
                         , T_CM_PERSON N
                     WHERE L.ENO_NO = M.ENO_NO
                       AND L.ENO_NO = N.ENO_NO(+)
                    ) E
                 , (SELECT *
                      FROM (SELECT ROW_NUMBER() OVER(PARTITION BY DPT_CD ORDER BY STR_YMD DESC) AS NUM
                                 , DPT_CD
                                 , '1' as GBN2_TAG
                              FROM T_CM_DEPT
                             WHERE CD_GBN = 'A4'
                            )
                     WHERE NUM = 1
                    ) F
             WHERE E.DPT_CD         = NVL(?, E.DPT_CD)
               AND E.DPT_CD         = F.DPT_CD
               AND NVL(E.DIL_AUTHO, ' ') LIKE '%'||?||'%'
          ORDER BY E.DPT_SEQ
                 , E.CHK_CM
                 , E.JOB_SEQ
                 , E.DUTY_CD
                 , E.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 부서별담당자 등록 -->
    <sql name="GUNA120_UPT">
        <description>부서별담당자 등록</description>
        <query>
            <![CDATA[
            DECLARE
                l_cnt       NUMBER;
                l_eno_no    VARCHAR2(10);
                l_role_cd   VARCHAR2(5);
                l_gun_dpt   VARCHAR2(6);
                l_upt_man   VARCHAR2(10);
                l_dil_autho VARCHAR2(1);
            BEGIN
                l_eno_no    := ?;
                l_role_cd   := ?;
                l_gun_dpt   := ?;
                l_upt_man   := ?;
                l_dil_autho := ?;

                SELECT COUNT(*)
                  INTO l_cnt
                  FROM T_CM_PERSON
                 WHERE ENO_NO = l_eno_no;

                -- 파견인지 아닌지 구분한다.
                IF (l_cnt = 1) THEN
                    UPDATE T_CM_PERSON
                       SET GUN_DPT  = l_gun_dpt
                         , UPT_MAN  = l_upt_man
                         , UPT_YMD  = SYSDATE
                     WHERE ENO_NO   = l_eno_no;
                ELSE
                    UPDATE T_ME_PERSON
                       SET GUN_DPT  = l_gun_dpt
                         , UPT_MAN  = l_upt_man
                         , UPT_YMD  = SYSDATE
                     WHERE ENO_NO   = l_eno_no;
                END IF;

                -- 근태권한을 변경시킨다.
                UPDATE T_CM_EMPLIST
                   SET ROLE_CD      = l_role_cd
                   	 , DIL_AUTHO    = l_dil_autho
                     , UPT_MAN      = l_upt_man
                     , UPT_YMD      = SYSDATE
                 WHERE ENO_NO       = l_eno_no;
            END;
            ]]>
        </query>
    </sql>

    <!-- 업무별 권한 수정 -->
    <sql name="GUNA120_UPT_ROLE">
        <description>업무별 권한 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CM_EMPLIST
               SET ROLE_CD      = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE ENO_NO       = ?
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : GUNA200
* @description : 근태휴일날짜 등록
***********************************************************************
* 2009/10/15     임종태        최초작성.
***********************************************************************
-->
    <!-- 근태휴일날짜 조회 -->
    <sql name="GUNA200_SHR">
        <description>근태휴일날짜 조회</description>
        <query>
            <![CDATA[
            SELECT A.DD                                                         DAY_VAL   --ROWNUM     >>  GUNA200_SHR
                  ,DECODE(B.HOL_GBN,0,'평일',1,'토요일',2,'휴일',3,'특별휴일')  HOL_GUB
                  ,B."REMARK"                                                   REMARK_VAL
                  ,B.REG_YMD                                                    REG_YMD
                  ,A.WK                                                         WK
                  ,C.CNT                                                        CNT
                  ,DECODE(B.HOL_GBN,0,'BLACK',1,'BLUE',2,'RED',3,'RED','BLACK') COLOR_VAL
             FROM (SELECT TO_CHAR(TO_DATE( ? ||TO_CHAR(ROWNUM),'YYYYMMDD'), 'D') WK
                         ,TO_CHAR(TO_DATE( ? ||TO_CHAR(ROWNUM),'YYYYMMDD'),'YYYYMMDD') DT
                         ,TO_NUMBER(TO_CHAR(ROWNUM,'00')) DD
                   FROM   DICT
                   WHERE  ROWNUM BETWEEN 1 AND TO_CHAR(LAST_DAY(TO_DATE( ?  ,'YYYYMM')),'DD')
                  ) A,
                   ASNHR.T_DI_HOLIDAY B ,
                  (SELECT COUNT(*) CNT
                   FROM  (SELECT SUM(DECODE(DAY,'1',ROWNUM)) SUN,
                                 SUM(DECODE(DAY,'2',ROWNUM)) MON,
                                 SUM(DECODE(DAY,'3',ROWNUM)) TUE,
                                 SUM(DECODE(DAY,'4',ROWNUM)) WEN,
                                 SUM(DECODE(DAY,'5',ROWNUM)) THR,
                                 SUM(DECODE(DAY,'6',ROWNUM)) FRI,
                                 SUM(DECODE(DAY,'7',ROWNUM)) SAT
                          FROM  (SELECT ROWNUM-TO_CHAR(TO_DATE(?||TO_CHAR(ROWNUM),'YYYYMMDD'),'D') WEEK,
                                        TO_CHAR(TO_DATE(?||TO_CHAR(ROWNUM),'YYYYMMDD'),'D') DAY,
                                       (TO_CHAR(ROWNUM,'00'))
                                 FROM   DICT
                                 WHERE  ROWNUM BETWEEN 1 AND TO_CHAR(LAST_DAY(TO_DATE(?||'02','YYYYMMDD')),'DD')
                                )
                                 GROUP BY WEEK
                         )
                  ) C
             WHERE  A.DT = B.REG_YMD(+)
             ORDER  BY REG_YMD
            ]]>
        </query>
    </sql>

    <!-- 일괄처리된 년도 조회 -->
    <sql name="GUNA200_SHR_01">
        <description>일괄처리된 년도 조회</description>
        <query>
            <![CDATA[
            select substr(REG_YMD,'1','4') REG_YMD
			  from ASNHR.T_DI_HOLIDAY
            group by substr(REG_YMD,'1','4')
			order by REG_YMD desc
            ]]>
        </query>
    </sql>


    <!-- 월별근태내역  조회 -->
    <sql name="GUNA200_SHR_02">
        <description>월별근태내역</description>
        <query>
            <![CDATA[
			SELECT A.ENO_NO,	-- 사번
				   A.ENO_NM,  -- 성명
				   A.LV,      -- 날짜
				   CASE WHEN B.BUT_GBN = 1 THEN 'E2' ELSE A.COL_NEW END COL_NEW,  -- 근태코드
				   B.BUT_GBN
			FROM
			   (
				SELECT ENO_NO,
					   ENO_NM,
					   PIS_YY, PIS_MM,
					   LV,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
			FROM
			(
			SELECT B.ENO_NM, A.*
			FROM ASNHR.T_DI_DILIGENCE A,ASNHR.T_CM_PERSON B
			WHERE    A.PIS_YY = ?
			AND    A.PIS_MM = ?
			AND    B.DPT_CD LIKE '%'||?||'%'
			[1]
			AND    A.ENO_NO = B.ENO_NO
			AND    NVL(B.DUTY_CD, ' ') <> 'B5'
			)
			, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
		) A
	    LEFT JOIN ASNHR.T_DI_BUSINESSTRIP B ON A.ENO_NO = B.ENO_NO
	    AND A.COL_NEW = 'E'
	    AND B.BUT_GBN = '1'
	    AND (A.PIS_YY = SUBSTR(BUT_FR_YMD,1,4) OR A.PIS_YY = SUBSTR(BUT_TO_YMD,1,4))
	    AND (A.PIS_MM = SUBSTR(BUT_FR_YMD,5,2) OR A.PIS_MM = SUBSTR(BUT_TO_YMD,5,2))
	    AND A.lv BETWEEN  SUBSTR(BUT_FR_YMD,7,2) AND SUBSTR(BUT_TO_YMD,7,2)
		WHERE COL_NEW IN('H', 'P', 'S', 'J', 'E', 'F', 'G', 'I', 'T', 'U', 'X', 'O','R')
		ORDER BY LV, COL_NEW
            ]]>
        </query>
    </sql>



    <!-- 접속자 부서 조회 -->
    <sql name="GUNA200_SHR_DPT">
        <description>접속자 부서 조회</description>
        <query>
            <![CDATA[
            SELECT 
            	ENO_NO, 
            	DPT_CD,
            	ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD) AS DPT_NM
			  FROM ASNHR.T_CM_PERSON
            WHERE ENO_NO = ?
            ]]>
        </query>
    </sql>


    <!-- 월간근태내역통계  조회 -->
    <sql name="GUNA220_SHR_01">
        <description>월별근태내역</description>
        <query>
            <![CDATA[
		SELECT
			 DECODE(GROUPING(D.DPT_NM), 1, '총계', D.DPT_NM) AS UPDPT_NM
			,DECODE(GROUPING(C.DPT_NM), 1, '소계', C.DPT_NM) AS DPT_NM
			,COUNT(B.DPT_CD) CNT
			,SUM(ATT_A)   	 		   			AS ATT_A --합계(유결)
			,SUM(ATT_B)   			   			AS ATT_B --합계(무결)
			,(SUM(ATT_A) + SUM(ATT_B)) 			AS ATT_AB-- 결근
			,SUM(ATT_C)   			   			AS ATT_C --합계(지각)
			,SUM(ATT_D)   							AS ATT_D	--합계(조퇴)
			,SUM(ATT_E)   							AS ATT_E	--합계(출장)
			,SUM(ATT_F)   							AS ATT_F	--합계(교육)
			,SUM(ATT_G)   							AS ATT_G	--합계(훈련)
			,SUM(ATT_H)   							AS ATT_H	--합계(연차)
			,SUM(ATT_I)   							AS ATT_I	--합계(특휴)
			,SUM(ATT_J)   							AS ATT_J	--합계(여휴)
			,SUM(ATT_K)   							AS ATT_K	--합계(휴직)
			,SUM(ATT_L)   							AS ATT_L	--합계(기타)
			,SUM(ATT_N)   							AS ATT_N	--합계(산재휴직)
			,SUM(ATT_O)   							AS ATT_O	--합계(파견근무)
			,SUM(ATT_P)   							AS ATT_P	--합계(오전연반차)
			,SUM(ATT_R)   							AS ATT_R	--합계(오후연반차)
			,SUM(ATT_S)   							AS ATT_S	--합계(유급)
			,SUM(ATT_U)   							AS ATT_U	--합계(대체반차)
			,SUM(ATT_X)   							AS ATT_X	--합계(산전후휴가)
			,SUM(ATW_CNT) 							AS ATW_CNT --정상근무
			,SUM(HOL_CNT) 							AS HOL_CNT --휴일
			,SUM(HOW_CNT) 							AS HOW_CNT --휴일근무(대체휴가)
	 FROM ASNHR.T_DI_DILIGENCE  A,
	 	  ASNHR.T_CM_PERSON B,
		  ASNHR.T_CM_DEPT C, -- 부서
		  ASNHR.T_CM_DEPT D  -- 지역본부
	 WHERE B.ENO_NO = A.ENO_NO
	 AND   B.DPT_CD = C.DPT_CD
	 AND   D.DPT_CD = C.UPDPT_CD
	 AND   A.PIS_YY = ?
	 AND   A.PIS_MM = ?
	 AND   C.END_YMD IS NULL
	 AND   C.CD_GBN = 'A4'
	 AND   D.CD_GBN = 'B2'
	 AND (D.END_YMD IS NULL OR D.END_YMD >= TO_CHAR(sysdate, 'YYYYMMDD'))
	 GROUP BY ROLLUP(D.DPT_NM, C.DPT_NM)
	 ORDER BY D.DPT_NM DESC,C.DPT_NM DESC
            ]]>
        </query>
    </sql>

    <!-- 주간근태내역통계  조회 -->
    <sql name="GUNA220_SHR_02">
        <description>주간근태내역</description>
        <query>
            <![CDATA[
			SELECT	 ENO_NM
			,C.DPT_NM
			,D.DPT_NM AS UPDPT_NM
			,D.DPT_CD AS UPDPT_CD
			,LEAD(D.DPT_CD, 1) OVER (ORDER BY D.DPT_NM, C.DPT_NM, LV, ENO_NM) AS NEXT_UPDPT_CD
			,(SELECT COUNT(ENO_NO) FROM ASNHR.T_CM_PERSON WHERE DPT_CD = C.DPT_CD AND (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') >= ?)) CNT
   			,DECODE(COL_NEW, 'A', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   	 		   			AS ATT_A  --유결
   			,DECODE(COL_NEW, 'B', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   			   			AS ATT_B  --무결
   			,DECODE(COL_NEW, 'C', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   			   			AS ATT_C  --지각
   			,DECODE(COL_NEW, 'D', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_D	--조퇴
   			,DECODE(COL_NEW, 'E', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_E	--출장
   			,DECODE(COL_NEW, 'F', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_F	--교육
   			,DECODE(COL_NEW, 'G', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_G	--훈련
   			,DECODE(COL_NEW, 'H', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_H	--연차
   			,DECODE(COL_NEW, 'I', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_I	--특휴
   			,DECODE(COL_NEW, 'J', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_J	--여휴
   			,DECODE(COL_NEW, 'K', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_K	--휴직
   			,DECODE(COL_NEW, 'L', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_L	--기타
   			,DECODE(COL_NEW, 'M', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_M	--산재휴직
   			,DECODE(COL_NEW, 'N', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_N	--산재휴직
   			,DECODE(COL_NEW, 'O', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_O	--파견근무
   			,DECODE(COL_NEW, 'P', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_P	--오전연반차
   			,DECODE(COL_NEW, 'Q', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_Q	--기념일휴가
   			,DECODE(COL_NEW, 'R', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_R	--오후연반차
   			,DECODE(COL_NEW, 'S', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_S	--유급
   			,DECODE(COL_NEW, 'T', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_T	--대체휴가
   			,DECODE(COL_NEW, 'U', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_U	--대체반차
   			,DECODE(COL_NEW, 'V', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_V	--대체+연반
   			,DECODE(COL_NEW, 'W', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_W	--정상
   			,DECODE(COL_NEW, 'X', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_X	--산전후휴가
   			,DECODE(COL_NEW, 'Y', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_Y	--휴일
   			,DECODE(COL_NEW, 'Z', ENO_NM || JOB_NM_ALIAS || '(' || LV || ')' )   						AS ATT_Z	--Refresh휴가

		FROM
			(
				SELECT ENO_NO,
					   ENO_NM,
					   DPT_CD,
						(
						CASE WHEN JOB_CD = '140' THEN 'BJ'
							 WHEN JOB_CD = '150' THEN 'BJ'
							 WHEN JOB_CD = '160' THEN 'BD'
							 WHEN JOB_CD = '170' THEN 'BD'
							 WHEN JOB_CD = '180' THEN 'CJ'
							 WHEN JOB_CD = '190' THEN 'CJ'
							 WHEN JOB_CD = '200' THEN 'GJ'
							 WHEN JOB_CD = '210' THEN 'GJ'
							 WHEN JOB_CD = '220' THEN 'DR'
							 WHEN JOB_CD = '230' THEN 'DR'
							 WHEN JOB_CD = '240' THEN 'SW'
							 WHEN JOB_CD = '250' THEN 'SW'
							 WHEN JOB_CD = '260' THEN 'SW'
							 WHEN JOB_CD = '270' THEN 'SW'
						ELSE 'SW'
						END
						) JOB_NM_ALIAS,
					   LV,
					   PIS_YY || PIS_MM || lpad(lv, 2, '0') AS PIS_YMD,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
			FROM
			(
			SELECT B.ENO_NM, JOB_CD, A.*
			FROM ASNHR.T_DI_DILIGENCE A,ASNHR.T_CM_PERSON B
			WHERE  A.DPT_CD = B.DPT_CD
            AND    PIS_YY || PIS_MM >= substr(TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD'), 1, 6)
			AND    PIS_YY || PIS_MM <= substr(TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD'),1,6)
			AND    A.ENO_NO = B.ENO_NO
			)
			, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
		) A,
		T_CM_DEPT C, -- 부서
		T_CM_DEPT D  -- 지역본부
		WHERE 	1 = 1
		AND     A.DPT_CD = C.DPT_CD
		AND     C.UPDPT_CD = D.DPT_CD
		AND     COL_NEW IS NOT NULL
		AND     COL_NEW NOT IN('W', 'Y')
		AND     PIS_YMD >= TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD')
		AND     PIS_YMD <= TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD')
            ]]>
        </query>
    </sql>


       <!-- 주간근태내역통계  조회(총계) -->
    <sql name="GUNA220_SHR_03">
        <description>주간근태내역</description>
        <query>
            <![CDATA[
		SELECT	 max('') ENO_NM
				,max('') DPT_NM
				,max('합계') AS UPDPT_NM
				,max(E.CNT) CNT
       			,count(DECODE(COL_NEW, 'A', ENO_NM || '(' || LV || ')' ) )  	 		   			AS ATT_A  --유결
       			,count(DECODE(COL_NEW, 'B', ENO_NM || '(' || LV || ')' ) )  			   			AS ATT_B  --무결
       			,count(DECODE(COL_NEW, 'C', ENO_NM || '(' || LV || ')' ) )  			   			AS ATT_C  --지각
       			,count(DECODE(COL_NEW, 'D', ENO_NM || '(' || LV || ')' ) )  							AS ATT_D	--조퇴
       			,count(DECODE(COL_NEW, 'E', ENO_NM || '(' || LV || ')' ) )  							AS ATT_E	--출장
       			,count(DECODE(COL_NEW, 'F', ENO_NM || '(' || LV || ')' ) )  							AS ATT_F	--교육
       			,count(DECODE(COL_NEW, 'G', ENO_NM || '(' || LV || ')' ) )  							AS ATT_G	--훈련
       			,count(DECODE(COL_NEW, 'H', ENO_NM || '(' || LV || ')' ) )  							AS ATT_H	--연차
       			,count(DECODE(COL_NEW, 'I', ENO_NM || '(' || LV || ')' ) )  							AS ATT_I	--특휴
       			,count(DECODE(COL_NEW, 'J', ENO_NM || '(' || LV || ')' ) )  							AS ATT_J	--여휴
       			,count(DECODE(COL_NEW, 'K', ENO_NM || '(' || LV || ')' ) )  							AS ATT_K	--휴직
       			,count(DECODE(COL_NEW, 'L', ENO_NM || '(' || LV || ')' ) )  							AS ATT_L	--기타
       			,count(DECODE(COL_NEW, 'M', ENO_NM || '(' || LV || ')' ) )  							AS ATT_M	--산재휴직
       			,count(DECODE(COL_NEW, 'N', ENO_NM || '(' || LV || ')' ) )  							AS ATT_N	--산재휴직
       			,count(DECODE(COL_NEW, 'O', ENO_NM || '(' || LV || ')' ) )  							AS ATT_O	--파견근무
       			,count(DECODE(COL_NEW, 'P', ENO_NM || '(' || LV || ')' ) )  							AS ATT_P	--오전연반차
       			,count(DECODE(COL_NEW, 'Q', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Q	--기념일휴가
       			,count(DECODE(COL_NEW, 'R', ENO_NM || '(' || LV || ')' ) )  							AS ATT_R	--오후연반차
       			,count(DECODE(COL_NEW, 'S', ENO_NM || '(' || LV || ')' ) )  							AS ATT_S	--유급
       			,count(DECODE(COL_NEW, 'T', ENO_NM || '(' || LV || ')' ) )  							AS ATT_T	--대체휴가
       			,count(DECODE(COL_NEW, 'U', ENO_NM || '(' || LV || ')' ) )  							AS ATT_U	--대체반차
       			,count(DECODE(COL_NEW, 'V', ENO_NM || '(' || LV || ')' ) )  							AS ATT_V	--대체+연반
       			,count(DECODE(COL_NEW, 'W', ENO_NM || '(' || LV || ')' ) )  							AS ATT_W	--정상
       			,count(DECODE(COL_NEW, 'X', ENO_NM || '(' || LV || ')' ) )  							AS ATT_X	--산전후휴가
       			,count(DECODE(COL_NEW, 'Y', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Y	--휴일
       			,count(DECODE(COL_NEW, 'Z', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Z	--Refresh휴가

		FROM
			(
				SELECT ENO_NO,
					   ENO_NM,
					   DPT_CD,
					   LV,
					   PIS_YY || PIS_MM || lpad(lv, 2, '0') AS PIS_YMD,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
			FROM
			(
			SELECT B.ENO_NM, A.*
			FROM T_DI_DILIGENCE A,T_CM_PERSON B
			WHERE  A.DPT_CD = B.DPT_CD
            AND    PIS_YY || PIS_MM >= substr(TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD'), 1, 6)
			AND    PIS_YY || PIS_MM <= substr(TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD'),1,6)
			AND    A.ENO_NO = B.ENO_NO
			)
			, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
		) A,
		T_CM_DEPT C, -- 부서
		T_CM_DEPT D,  -- 지역본부
		(SELECT COUNT(ENO_NO) CNT FROM T_CM_PERSON WHERE  (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') >= ?) AND TO_CHAR(HIR_YMD,'YYYYMMDD') <= ?) E
		WHERE 	1 = 1
		AND     A.DPT_CD = C.DPT_CD
		AND     C.UPDPT_CD = D.DPT_CD
		AND     COL_NEW IS NOT NULL
		AND     PIS_YMD >= TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD')
		AND     PIS_YMD <= TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD')

            ]]>
        </query>
    </sql>

       <!-- 주간근태내역통계  조회(소계-IT서비스) -->
    <sql name="GUNA220_SHR_04">
        <description>주간근태내역</description>
        <query>
            <![CDATA[
		SELECT	 max('') ENO_NM
				,max('') DPT_NM
				,max('소계') AS UPDPT_NM
				,min(E.cnt) CNT
       			,count(DECODE(COL_NEW, 'A', ENO_NM || '(' || LV || ')' ) )  	 		   			AS ATT_A  --유결
       			,count(DECODE(COL_NEW, 'B', ENO_NM || '(' || LV || ')' ) )  			   			AS ATT_B  --무결
       			,count(DECODE(COL_NEW, 'C', ENO_NM || '(' || LV || ')' ) )  			   			AS ATT_C  --지각
       			,count(DECODE(COL_NEW, 'D', ENO_NM || '(' || LV || ')' ) )  							AS ATT_D	--조퇴
       			,count(DECODE(COL_NEW, 'E', ENO_NM || '(' || LV || ')' ) )  							AS ATT_E	--출장
       			,count(DECODE(COL_NEW, 'F', ENO_NM || '(' || LV || ')' ) )  							AS ATT_F	--교육
       			,count(DECODE(COL_NEW, 'G', ENO_NM || '(' || LV || ')' ) )  							AS ATT_G	--훈련
       			,count(DECODE(COL_NEW, 'H', ENO_NM || '(' || LV || ')' ) )  							AS ATT_H	--연차
       			,count(DECODE(COL_NEW, 'I', ENO_NM || '(' || LV || ')' ) )  							AS ATT_I	--특휴
       			,count(DECODE(COL_NEW, 'J', ENO_NM || '(' || LV || ')' ) )  							AS ATT_J	--여휴
       			,count(DECODE(COL_NEW, 'K', ENO_NM || '(' || LV || ')' ) )  							AS ATT_K	--휴직
       			,count(DECODE(COL_NEW, 'L', ENO_NM || '(' || LV || ')' ) )  							AS ATT_L	--기타
       			,count(DECODE(COL_NEW, 'M', ENO_NM || '(' || LV || ')' ) )  							AS ATT_M	--산재휴직
       			,count(DECODE(COL_NEW, 'N', ENO_NM || '(' || LV || ')' ) )  							AS ATT_N	--산재휴직
       			,count(DECODE(COL_NEW, 'O', ENO_NM || '(' || LV || ')' ) )  							AS ATT_O	--파견근무
       			,count(DECODE(COL_NEW, 'P', ENO_NM || '(' || LV || ')' ) )  							AS ATT_P	--오전연반차
       			,count(DECODE(COL_NEW, 'Q', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Q	--기념일휴가
       			,count(DECODE(COL_NEW, 'R', ENO_NM || '(' || LV || ')' ) )  							AS ATT_R	--오후연반차
       			,count(DECODE(COL_NEW, 'S', ENO_NM || '(' || LV || ')' ) )  							AS ATT_S	--유급
       			,count(DECODE(COL_NEW, 'T', ENO_NM || '(' || LV || ')' ) )  							AS ATT_T	--대체휴가
       			,count(DECODE(COL_NEW, 'U', ENO_NM || '(' || LV || ')' ) )  							AS ATT_U	--대체반차
       			,count(DECODE(COL_NEW, 'V', ENO_NM || '(' || LV || ')' ) )  							AS ATT_V	--대체+연반
       			,count(DECODE(COL_NEW, 'W', ENO_NM || '(' || LV || ')' ) )  							AS ATT_W	--정상
       			,count(DECODE(COL_NEW, 'X', ENO_NM || '(' || LV || ')' ) )  							AS ATT_X	--산전후휴가
       			,count(DECODE(COL_NEW, 'Y', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Y	--휴일
       			,count(DECODE(COL_NEW, 'Z', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Z	--Refresh휴가

		FROM
			(
				SELECT ENO_NO,
					   ENO_NM,
					   DPT_CD,
					   LV,
					   PIS_YY || PIS_MM || lpad(lv, 2, '0') AS PIS_YMD,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
			FROM
			(
			SELECT B.ENO_NM, A.*
			FROM T_DI_DILIGENCE A,T_CM_PERSON B
			WHERE  A.DPT_CD = B.DPT_CD
            AND    PIS_YY || PIS_MM >= substr(TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD'), 1, 6)
			AND    PIS_YY || PIS_MM <= substr(TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD'),1,6)
			AND    A.ENO_NO = B.ENO_NO
			)
			, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
		) A,
		T_CM_DEPT C, -- 부서
		T_CM_DEPT D,  -- 지역본부
		(SELECT count(eno_no) cnt
		FROM T_CM_PERSON A,
	 		 T_CM_DEPT   B
	    WHERE  (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') >= ?)
		AND  B.UPDPT_CD = ?
		AND  A.DPT_CD = B.DPT_CD) E
		WHERE 	1 = 1
		AND     A.DPT_CD = C.DPT_CD
		AND     C.UPDPT_CD = D.DPT_CD
		AND     COL_NEW IS NOT NULL
		AND     C.UPDPT_CD = ? -- IT 서비스본부
		AND     PIS_YMD >= TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD')
		AND     PIS_YMD <= TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD')

            ]]>
        </query>
    </sql>


       <!-- 주간근태내역통계  조회(소계-SI사업부) -->
    <sql name="GUNA220_SHR_05">
        <description>주간근태내역</description>
        <query>
            <![CDATA[
		SELECT	 max('') ENO_NM
				,max('') DPT_NM
				,max('소계') AS UPDPT_NM
				,min(E.cnt) CNT
       			,count(DECODE(COL_NEW, 'A', ENO_NM || '(' || LV || ')' ) )  	 		   			AS ATT_A  --유결
       			,count(DECODE(COL_NEW, 'B', ENO_NM || '(' || LV || ')' ) )  			   			AS ATT_B  --무결
       			,count(DECODE(COL_NEW, 'C', ENO_NM || '(' || LV || ')' ) )  			   			AS ATT_C  --지각
       			,count(DECODE(COL_NEW, 'D', ENO_NM || '(' || LV || ')' ) )  							AS ATT_D	--조퇴
       			,count(DECODE(COL_NEW, 'E', ENO_NM || '(' || LV || ')' ) )  							AS ATT_E	--출장
       			,count(DECODE(COL_NEW, 'F', ENO_NM || '(' || LV || ')' ) )  							AS ATT_F	--교육
       			,count(DECODE(COL_NEW, 'G', ENO_NM || '(' || LV || ')' ) )  							AS ATT_G	--훈련
       			,count(DECODE(COL_NEW, 'H', ENO_NM || '(' || LV || ')' ) )  							AS ATT_H	--연차
       			,count(DECODE(COL_NEW, 'I', ENO_NM || '(' || LV || ')' ) )  							AS ATT_I	--특휴
       			,count(DECODE(COL_NEW, 'J', ENO_NM || '(' || LV || ')' ) )  							AS ATT_J	--여휴
       			,count(DECODE(COL_NEW, 'K', ENO_NM || '(' || LV || ')' ) )  							AS ATT_K	--휴직
       			,count(DECODE(COL_NEW, 'L', ENO_NM || '(' || LV || ')' ) )  							AS ATT_L	--기타
       			,count(DECODE(COL_NEW, 'M', ENO_NM || '(' || LV || ')' ) )  							AS ATT_M	--산재휴직
       			,count(DECODE(COL_NEW, 'N', ENO_NM || '(' || LV || ')' ) )  							AS ATT_N	--산재휴직
       			,count(DECODE(COL_NEW, 'O', ENO_NM || '(' || LV || ')' ) )  							AS ATT_O	--파견근무
       			,count(DECODE(COL_NEW, 'P', ENO_NM || '(' || LV || ')' ) )  							AS ATT_P	--오전연반차
       			,count(DECODE(COL_NEW, 'Q', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Q	--기념일휴가
       			,count(DECODE(COL_NEW, 'R', ENO_NM || '(' || LV || ')' ) )  							AS ATT_R	--오후연반차
       			,count(DECODE(COL_NEW, 'S', ENO_NM || '(' || LV || ')' ) )  							AS ATT_S	--유급
       			,count(DECODE(COL_NEW, 'T', ENO_NM || '(' || LV || ')' ) )  							AS ATT_T	--대체휴가
       			,count(DECODE(COL_NEW, 'U', ENO_NM || '(' || LV || ')' ) )  							AS ATT_U	--대체반차
       			,count(DECODE(COL_NEW, 'V', ENO_NM || '(' || LV || ')' ) )  							AS ATT_V	--대체+연반
       			,count(DECODE(COL_NEW, 'W', ENO_NM || '(' || LV || ')' ) )  							AS ATT_W	--정상
       			,count(DECODE(COL_NEW, 'X', ENO_NM || '(' || LV || ')' ) )  							AS ATT_X	--산전후휴가
       			,count(DECODE(COL_NEW, 'Y', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Y	--휴일
       			,count(DECODE(COL_NEW, 'Z', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Z	--Refresh휴가

		FROM
			(
				SELECT ENO_NO,
					   ENO_NM,
					   DPT_CD,
					   LV,
					   PIS_YY || PIS_MM || lpad(lv, 2, '0') AS PIS_YMD,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
			FROM
			(
			SELECT B.ENO_NM, A.*
			FROM T_DI_DILIGENCE A,T_CM_PERSON B
			WHERE  A.DPT_CD = B.DPT_CD
            AND    PIS_YY || PIS_MM >= substr(TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD'), 1, 6)
			AND    PIS_YY || PIS_MM <= substr(TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD'),1,6)
			AND    A.ENO_NO = B.ENO_NO
			)
			, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
		) A,
		T_CM_DEPT C, -- 부서
		T_CM_DEPT D,  -- 지역본부
		(SELECT count(eno_no) cnt
		FROM T_CM_PERSON A,
	 		 T_CM_DEPT   B
	    WHERE  (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') >= ?)
		AND  B.UPDPT_CD = 'D"
		AND  A.DPT_CD = B.DPT_CD) E
		WHERE 	1 = 1
		AND     A.DPT_CD = C.DPT_CD
		AND     C.UPDPT_CD = D.DPT_CD
		AND     COL_NEW IS NOT NULL
		AND     C.UPDPT_CD = 'D' -- IT 서비스본부
		AND     PIS_YMD >= TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD')
		AND     PIS_YMD <= TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD')

            ]]>
        </query>
    </sql>


       <!-- 주간근태내역통계  조회(소계-경영지원) -->
    <sql name="GUNA220_SHR_06">
        <description>주간근태내역</description>
        <query>
            <![CDATA[
		SELECT	 max('') ENO_NM
				,max('') DPT_NM
				,max('소계') AS UPDPT_NM
				,min(E.cnt) CNT
       			,count(DECODE(COL_NEW, 'A', ENO_NM || '(' || LV || ')' ) )  	 		   			AS ATT_A  --유결
       			,count(DECODE(COL_NEW, 'B', ENO_NM || '(' || LV || ')' ) )  			   			AS ATT_B  --무결
       			,count(DECODE(COL_NEW, 'C', ENO_NM || '(' || LV || ')' ) )  			   			AS ATT_C  --지각
       			,count(DECODE(COL_NEW, 'D', ENO_NM || '(' || LV || ')' ) )  							AS ATT_D	--조퇴
       			,count(DECODE(COL_NEW, 'E', ENO_NM || '(' || LV || ')' ) )  							AS ATT_E	--출장
       			,count(DECODE(COL_NEW, 'F', ENO_NM || '(' || LV || ')' ) )  							AS ATT_F	--교육
       			,count(DECODE(COL_NEW, 'G', ENO_NM || '(' || LV || ')' ) )  							AS ATT_G	--훈련
       			,count(DECODE(COL_NEW, 'H', ENO_NM || '(' || LV || ')' ) )  							AS ATT_H	--연차
       			,count(DECODE(COL_NEW, 'I', ENO_NM || '(' || LV || ')' ) )  							AS ATT_I	--특휴
       			,count(DECODE(COL_NEW, 'J', ENO_NM || '(' || LV || ')' ) )  							AS ATT_J	--여휴
       			,count(DECODE(COL_NEW, 'K', ENO_NM || '(' || LV || ')' ) )  							AS ATT_K	--휴직
       			,count(DECODE(COL_NEW, 'L', ENO_NM || '(' || LV || ')' ) )  							AS ATT_L	--기타
       			,count(DECODE(COL_NEW, 'M', ENO_NM || '(' || LV || ')' ) )  							AS ATT_M	--산재휴직
       			,count(DECODE(COL_NEW, 'N', ENO_NM || '(' || LV || ')' ) )  							AS ATT_N	--산재휴직
       			,count(DECODE(COL_NEW, 'O', ENO_NM || '(' || LV || ')' ) )  							AS ATT_O	--파견근무
       			,count(DECODE(COL_NEW, 'P', ENO_NM || '(' || LV || ')' ) )  							AS ATT_P	--오전연반차
       			,count(DECODE(COL_NEW, 'Q', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Q	--기념일휴가
       			,count(DECODE(COL_NEW, 'R', ENO_NM || '(' || LV || ')' ) )  							AS ATT_R	--오후연반차
       			,count(DECODE(COL_NEW, 'S', ENO_NM || '(' || LV || ')' ) )  							AS ATT_S	--유급
       			,count(DECODE(COL_NEW, 'T', ENO_NM || '(' || LV || ')' ) )  							AS ATT_T	--대체휴가
       			,count(DECODE(COL_NEW, 'U', ENO_NM || '(' || LV || ')' ) )  							AS ATT_U	--대체반차
       			,count(DECODE(COL_NEW, 'V', ENO_NM || '(' || LV || ')' ) )  							AS ATT_V	--대체+연반
       			,count(DECODE(COL_NEW, 'W', ENO_NM || '(' || LV || ')' ) )  							AS ATT_W	--정상
       			,count(DECODE(COL_NEW, 'X', ENO_NM || '(' || LV || ')' ) )  							AS ATT_X	--산전후휴가
       			,count(DECODE(COL_NEW, 'Y', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Y	--휴일
       			,count(DECODE(COL_NEW, 'Z', ENO_NM || '(' || LV || ')' ) )  							AS ATT_Z	--Refresh휴가

		FROM
			(
				SELECT ENO_NO,
					   ENO_NM,
					   DPT_CD,
					   LV,
					   PIS_YY || PIS_MM || lpad(lv, 2, '0') AS PIS_YMD,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
			FROM
			(
			SELECT B.ENO_NM, A.*
			FROM T_DI_DILIGENCE A,T_CM_PERSON B
			WHERE  A.DPT_CD = B.DPT_CD
            AND    PIS_YY || PIS_MM >= substr(TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD'), 1, 6)
			AND    PIS_YY || PIS_MM <= substr(TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD'),1,6)
			AND    A.ENO_NO = B.ENO_NO
			)
			, (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31)
		) A,
		T_CM_DEPT C, -- 부서
		T_CM_DEPT D,  -- 지역본부
		(SELECT count(eno_no) cnt
		FROM T_CM_PERSON A,
	 		 T_CM_DEPT   B
	    WHERE  (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') >= ?)
		AND  B.UPDPT_CD = 'C'
		AND  A.DPT_CD = B.DPT_CD) E
		WHERE 	1 = 1
		AND     A.DPT_CD = C.DPT_CD
		AND     C.UPDPT_CD = D.DPT_CD
		AND     COL_NEW IS NOT NULL
		AND     C.UPDPT_CD = 'C' -- IT 서비스본부
		AND     PIS_YMD >= TO_CHAR(NEXT_DAY(TO_DATE(?),'일')-7,'YYYYMMDD')
		AND     PIS_YMD <= TO_CHAR((NEXT_DAY(TO_DATE(?),'일')-7+6), 'YYYYMMDD')



            ]]>
        </query>
    </sql>


 <!--
***********************************************************************
* @UseCase     : GUNB010
* @description : 기념일 리프레시 휴가현황
***********************************************************************
* 2007/02/21     오대성        최초작성.
***********************************************************************
-->
    <!-- 기념일 휴가현황 조회 -->
    <sql name="GUNB010_SHR_01">
        <description>기념일 휴가현황 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO,
                   A.ENO_NM,
                   A.JOB_NM,
                   A.DPT_NM,
                   A.BIR_TAG,
                   TO_CHAR(A.BIR_YMD,'YYYY-MM-DD') AS BIR_YMD,
                   '' AS TBIR_YMD,
                   TO_CHAR(A.WED_YMD,'YYYY-MM-DD') AS WED_YMD,
                   ( SELECT PIS_YY||'-'||PIS_MM||'-'||PIS_DD
                     FROM   T_DI_DILIGENCE_DTL
                     WHERE  PIS_YY = ?
                     AND    ENO_NO = A.ENO_NO AND ROWNUM = 1 --생일이 2명인사람때문에 임시처리
                     AND    REMARK = '본인생일') AS UBIR_YMD,
                   ( SELECT PIS_YY||'-'||PIS_MM||'-'||PIS_DD
                     FROM   T_DI_DILIGENCE_DTL
                     WHERE  PIS_YY = ?
                     AND    ENO_NO = A.ENO_NO AND ROWNUM = 1 --결혼이 2명인 사람대문에 임시처리
                     AND    REMARK = '결혼기념') AS UWED_YMD
            FROM   VI_T_CM_EMPLIST A
            WHERE  NVL(A.GUN_DPT, NVL(A.DPT_CD, ' ')) LIKE '%'||?||'%'
            AND    ((RET_YMD IS NULL) OR  (RET_YMD > SYSDATE))
            ORDER BY A.HEAD_SEQ, A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ DESC, A.HIRG_YMD, A.ENO_NO
            ]]>
        </query>
    </sql>

    <sql name="GUNB010_SHR_02">
        <description>리프레쉬 휴가현황 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO, A.ENO_NM, A.JOB_NM, A.DPT_NM, A.HIRG_YMD, A.LSE_YY, A.PERIOD, A.ATT_Z, B.UATT_Z, A.ATT_S, UATT_S
            FROM   (
            SELECT A.ENO_NO, A.ENO_NM, A.JOB_NM, A.DPT_NM, A.HIRG_YMD, A.LSE_YY,
                   '' AS PERIOD,
                   ( SELECT ATT_S
                     FROM   T_DI_REFRESH
                     WHERE  BASIC_YMD = ( SELECT MAX(BASIC_YMD)
                                          FROM   T_DI_REFRESH
                                          WHERE  BASIC_YMD <= ?||'0101'
                                          AND    LSE_YY = A.LSE_YY )
                     AND    LSE_YY = A.LSE_YY ) AS ATT_S,
                   ( SELECT ATT_Z
                     FROM   T_DI_REFRESH
                     WHERE  BASIC_YMD = ( SELECT MAX(BASIC_YMD)
                                          FROM   T_DI_REFRESH
                                          WHERE  BASIC_YMD <= ?||'0101'
                                          AND    LSE_YY = A.LSE_YY )
                     AND    LSE_YY = A.LSE_YY ) AS ATT_Z
            FROM   ( SELECT AA.ENO_NO, AA.ENO_NM, AA.JOB_NM, AA.DPT_NM,
                            TO_CHAR(HIRG_YMD,'YYYY-MM-DD') AS HIRG_YMD,
                            CASE WHEN ?-TO_CHAR(AA.HIRG_YMD,'YYYY') < 0 THEN 0
                            ELSE      ?-TO_CHAR(AA.HIRG_YMD,'YYYY') END LSE_YY
                     FROM   VI_T_CM_EMPLIST AA
                     WHERE  NVL(AA.GUN_DPT, NVL(AA.DPT_CD,' ')) LIKE '%'||?||'%'
                     ORDER BY AA.DPT_SEQ, AA.JOB_SEQ, AA.HOB_SEQ DESC, AA.HIRG_YMD, AA.ENO_NO ) A
            ) A,
            (SELECT ENO_NO, SUM(ATT_Z) AS UATT_Z, SUM(ATT_S) AS UATT_S
             FROM   T_DI_DILIGENCE
             WHERE  PIS_YY = ?
             GROUP BY ENO_NO, PIS_YY
             ) B
            WHERE A.ENO_NO=B.ENO_NO
            AND   A.ATT_S IS NOT NULL
            AND   A.ATT_Z IS NOT NULL
            ]]>
        </query>
    </sql>

    <sql name="GUNB010_SHR_03">
        <description>리프레쉬 날짜 조회</description>
        <query>
            <![CDATA[
            SELECT A.AT1_CD, A.AT2_CD, A.AT3_CD, A.AT4_CD, A.AT5_CD, A.AT6_CD, A.AT7_CD,
                   A.AT8_CD, A.AT9_CD, A.AT10_CD, A.AT11_CD, A.AT12_CD, A.AT13_CD, A.AT14_CD,
                   A.AT15_CD, A.AT16_CD, A.AT17_CD, A.AT18_CD, A.AT19_CD, A.AT20_CD, A.AT21_CD,
                   A.AT22_CD, A.AT23_CD, A.AT24_CD, A.AT25_CD, A.AT26_CD, A.AT27_CD, A.AT28_CD,
                   NVL(A.AT29_CD,'-') AS AT29_CD, NVL(A.AT30_CD,'-') AS AT30_CD,
                   NVL(A.AT31_CD,'-') AS AT31_CD, B.PIS_MM
            FROM   T_DI_DILIGENCE A,
                   ( SELECT MIN(PIS_MM) AS PIS_MM
                     FROM   T_DI_DILIGENCE
                     WHERE  PIS_YY = ?
                     AND    ENO_NO = ?
                     AND    ATT_Z > 0 ) B
            WHERE  A.PIS_YY = ?
            AND    A.ENO_NO = ?
            AND    A.PIS_MM = B.PIS_MM
            UNION ALL
            SELECT A.AT1_CD, A.AT2_CD, A.AT3_CD, A.AT4_CD, A.AT5_CD, A.AT6_CD, A.AT7_CD,
                   A.AT8_CD, A.AT9_CD, A.AT10_CD, A.AT11_CD, A.AT12_CD, A.AT13_CD, A.AT14_CD,
                   A.AT15_CD, A.AT16_CD, A.AT17_CD, A.AT18_CD, A.AT19_CD, A.AT20_CD, A.AT21_CD,
                   A.AT22_CD, A.AT23_CD, A.AT24_CD, A.AT25_CD, A.AT26_CD, A.AT27_CD, A.AT28_CD,
                   NVL(A.AT29_CD,'-') AS AT29_CD, NVL(A.AT30_CD,'-') AS AT30_CD,
                   NVL(A.AT31_CD,'-') AS AT31_CD, B.PIS_MM
            FROM   T_DI_DILIGENCE A,
                   ( SELECT MAX(PIS_MM) AS PIS_MM
                     FROM   T_DI_DILIGENCE
                     WHERE  PIS_YY = ?
                     AND    ENO_NO = ?
                     AND    ATT_S > 0 ) B
            WHERE  A.PIS_YY = ?
            AND    A.ENO_NO = ?
            AND    A.PIS_MM = B.PIS_MM
            ]]>
        </query>
    </sql>



<!-- 휴가계획관리 -->
<!--
***********************************************************************
* @UseCase     : GUNB020
* @description : 부서별 휴가 계획서
***********************************************************************
* 2002/02/09     김학수        최초작성.
***********************************************************************
-->
    <!-- 부서별 휴가 계획서 조회 -->
    <sql name="GUNB020_SHR">
        <description>부서별 휴가 계획서 조회</description>
        <query>
            <![CDATA[
          --필드순서 및 필드갯수 주의(그리드에서 참고한다.)
           SELECT B.JOB_NM                         JOB_NM
                , A.ENO_NO                         ENO_NO
               -- , A.DPT_CD                         DPT_CD
                , B.ENO_NM                         ENO_NM
                , nvl(C.YRP_CNT,0)                        YRP_CNT  --발생연차
                , nvl(C.YRP_CNT,0)-nvl(D.UYRP_CNT,0)             NYRP_CNT --미사용연차
                , nvl(C.YRP_CNT,0)-nvl(D.UYRP_CNT,0)-nvl(D.PUYRP_CNT,0) REM_CNT  --잔여
                [1]
                , MAX(D.END_TAG)                   END_TAG
             FROM T_DI_PLAN A,
                  VI_T_CM_EMPLIST B,
                 (SELECT ENO_NO,
                        nvl((YRP_CNT-AYRP_CNT),0) YRP_CNT
                  FROM   T_DI_YEARLY
                  WHERE  PIS_YY=SUBSTR(?,1,4)
                  AND    ENO_NO LIKE ? || '%' -- 사번
                 ) C,
                 (SELECT ENO_NO            ENO_NO
                       , AA.PUYRP_CNT      PUYRP_CNT
                       , AA.UYRP_CNT       UYRP_CNT
                       , AA.END_TAG
                  FROM ----------- 해당부서 사원 리스트 , 미사용연차, 외 정보를 가져옴--------
                       (SELECT AA.ENO_NO           ENO_NO
                             , SUM(nvl(AA.ATT_H,0))+SUM(nvl(AA.ATT_P,0)*0.5)+SUM(nvl(AA.ATT_R,0)*0.5) as PUYRP_CNT
                             , NVL(CC.UYRP_CNT,0) as UYRP_CNT
                             , BB.WED_YMD
                             , MAX(AA.END_TAG)            END_TAG
                          FROM T_DI_PLAN AA,
                               T_CM_PERSON BB,
                              (SELECT ENO_NO,
                                      SUM(nvl(ATT_H,0))+SUM(nvl(ATT_P,0)*0.5)+SUM(nvl(ATT_R,0)*0.5) AS UYRP_CNT
                                 FROM T_DI_DILIGENCE
                                WHERE SUBSTR(PIS_YY,1,4) = SUBSTR(?,1,4)
								 AND    ENO_NO LIKE ? || '%' -- 사번
                             GROUP BY ENO_NO
                              ) CC
                         WHERE AA.PIS_YY = SUBSTR(?,1,4)
                           AND AA.PIS_MM = SUBSTR(?,6,2)
                           [2]
                           AND AA.ENO_NO = BB.ENO_NO(+)
                           AND AA.ENO_NO = CC.ENO_NO(+)
                           AND AA.ENO_NO LIKE ? || '%'     -- 사번
                           AND NVL(BB.DUTY_CD, ' ') <> 'B5'
                      GROUP BY AA.ENO_NO, NVL(BB.HIRG_YMD,BB.HIR_YMD), CC.UYRP_CNT, BB.WED_YMD
                       ) AA
                 ) D
            WHERE A.PIS_YY = SUBSTR(?,1,4)
              AND A.PIS_MM = SUBSTR(?,6,2)
              [3]
              AND A.ENO_NO = B.ENO_NO
              AND A.ENO_NO = C.ENO_NO(+)
              AND A.ENO_NO = D.ENO_NO(+)
              AND A.ENO_NO LIKE ? || '%'     -- 사번
              AND NVL(B.DUTY_CD, ' ') <> 'B5'
         GROUP BY B.JOB_NM, A.ENO_NO, B.ENO_NM, C.YRP_CNT, D.PUYRP_CNT ,D.UYRP_CNT,
                  B.HEAD_SEQ, B.DPT_SEQ, B.JOB_SEQ, B.HOB_SEQ, B.HIRG_YMD
         ORDER BY B.HEAD_SEQ, B.DPT_SEQ, B.JOB_SEQ, B.HOB_SEQ DESC, B.HIRG_YMD, A.ENO_NO


            ]]>
        </query>
    </sql>

     <!-- 휴가계획 관리 테이블을 이용해 해당 달의 연차 및 휴가에 관한 합계를을 구해온다 -->
    <sql name="GUNB020_SHR_01">
        <description>부서별 휴가계획서 일자 조회</description>
        <query>
            <![CDATA[
              SELECT A.ENO_NO       AS ENO_NO
                   , NVL(H_1,0)     AS H_1
                   , NVL(P_1,0)     AS P_1
                   , NVL(R_1,0)     AS R_1
                   , NVL(Q_1,0)     AS Q_1
                   , NVL(Z_1,0)     AS Z_1
                   , NVL(I_1,0)     AS I_1
                   , NVL(V_1,0)     AS V_1
                   , NVL(H_2,0)     AS H_2
                   , NVL(P_2,0)     AS P_2
                   , NVL(R_2,0)     AS R_2
                   , NVL(Q_2,0)     AS Q_2
                   , NVL(Z_2,0)     AS Z_2
                   , NVL(I_2,0)     AS I_2
                   , NVL(V_2,0)     AS V_2
                FROM (SELECT ENO_NO
                           , SUM(ATT_H) H_1
                           , SUM(ATT_P) P_1
                           , SUM(ATT_R) R_1
                           , SUM(ATT_Q) Q_1
                           , SUM(ATT_Z) Z_1
                           , SUM(ATT_I) I_1
                           , SUM(ATT_V) V_1
                           , 1
                        FROM T_DI_PLAN
                       WHERE PIS_YY = SUBSTR(?, 1, 4)
                    GROUP BY ENO_NO) A
                   , (SELECT ENO_NO
                           , SUM(ATT_H) H_2
                           , SUM(ATT_P) P_2
                           , SUM(ATT_R) R_2
                           , SUM(ATT_Q) Q_2
                           , SUM(ATT_Z) Z_2
                           , SUM(ATT_I) I_2
                           , SUM(ATT_V) V_2
                           , 1
                        FROM T_DI_PLAN
                       WHERE PIS_YY = SUBSTR(?, 1, 4)
                         AND PIS_MM = SUBSTR(?, 6, 2)
                    GROUP BY ENO_NO) B
                   , VI_T_CM_EMPLIST C
               WHERE A.ENO_NO = B.ENO_NO
                 AND A.ENO_NO = C.ENO_NO
                 AND NVL(DUTY_CD, ' ') <> 'B5'
                 [1]
            ORDER BY C.HEAD_SEQ, C.DPT_SEQ, C.JOB_SEQ, C.HOB_SEQ DESC, C.HIRG_YMD, C.ENO_NO
            ]]>
        </query>
    </sql>

        <!-- 휴가계획 관리 테이블을 이용해 기간내의 달력(일자)을 구해온다 -->
    <sql name="GUNB020_SHR_02">
        <description>부서별 휴가계획서 일자 조회</description>
        <query>
            <![CDATA[
            SELECT  SUBSTR(REG_YMD,5,4) H_DAY
                        ,  HOL_YN
               FROM  T_DI_HOLIDAY
             WHERE  REG_YMD >= ? AND REG_YMD <= TO_CHAR(LAST_DAY(?),'YYYYMMDD')
            ]]>
        </query>
    </sql>

       <!-- 일괄처리년도 생성시 중복을 막기위해 생성되어있는 년월을 구해온다. -->
    <sql name="GUNB020_SHR_03">
        <description>휴가계획 관리 테이블에서 생성되어있는 년월을 조회</description>
        <query>
            <![CDATA[
            SELECT PIS_YY, PIS_MM
            FROM T_DI_PLAN
            WHERE PIS_YY=?
            AND   PIS_MM=?
            AND   DPT_CD=?
            AND   ENO_NO LIKE ? || '%'
            GROUP BY PIS_YY, PIS_MM
            ]]>
        </query>
    </sql>

        <!-- 휴가계획 관리 테이블 수정 -->
    <sql name="GUNB020_UPT">
        <description>휴가계획 관리 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_PLAN
               SET ATT_H = ?
                  ,ATT_Q = ?
                  ,ATT_Z = ?
                  ,ATT_S = S?
             WHERE ENO_NO = ?
               AND PIS_YY = ?
               AND PIS_MM = ?
            ]]>
        </query>
    </sql>

        <!-- 해당달의 휴가계획 관리정보 등록 -->
    <sql name="GUNB020_INS">
        <description>1년치의 휴가계획 관리정보 등록</description>
        <query>
            <![CDATA[
            INSERT INTO T_DI_PLAN("PIS_YY","PIS_MM","ENO_NO","OCC_CD","DPT_CD","MD_DSP","IPT_MAN","IPT_YMD","UPT_MAN","UPT_YMD")
            SELECT ?
                  ,B.REG_M
                  ,A.ENO_NO
                  ,A.OCC_CD
                  ,A.DPT_CD
                  ,B.REG_D_CNT
                  ,?
                  ,SYSDATE
                  ,?
                  ,SYSDATE
             FROM
                 (
                 SELECT ENO_NO
                      , OCC_CD
                      , DPT_CD
                   FROM VI_T_CM_PERSON
                   WHERE  DPT_CD=?
                   AND   ENO_NO LIKE ? || '%'
                 ) A,
                 (
                 SELECT SUBSTR(REG_YMD,5,2)          REG_M
                         ,COUNT(SUBSTR(REG_YMD,5,2))   REG_D_CNT
                  FROM T_DI_HOLIDAY
                 WHERE SUBSTR(REG_YMD,'1','6') = ?
                  GROUP BY SUBSTR(REG_YMD,5,2)
                 ) B
            ]]>
        </query>
    </sql>

        <!-- 최종입력 flag값을 확정(UPDATE) -->
    <sql name="GUNB020_UPT_02">
        <description>최종입력 flag값을 확정(UPDATE)</description>
        <query>
            <![CDATA[
            UPDATE T_DI_PLAN
                   SET END_TAG = 'Y'
              WHERE PIS_YY = ?
                AND PIS_MM = ?
                AND DPT_CD = ?
            ]]>
        </query>
    </sql>

    <sql name="GUNB020_REG_MAX">
        <description>등록번호 최대값 조회</description>
        <query>
            <![CDATA[
			SELECT  TO_CHAR(SYSDATE,'YYYYMMDD')|| TRIM(TO_CHAR( DECODE( MAX(SUBSTR(REQ_NO, 9, 3)), NULL, '001', MAX(SUBSTR(REQ_NO, 9,3))+1 ), '000')) REQ_NO
			FROM    T_DI_APPROVAL
			WHERE   SUBSTR(REQ_NO,0,8) = TO_CHAR(SYSDATE,'YYYYMMDD')
			AND     SUBSTR(REQ_NO, 9, 1) NOT IN ('H','R','Z')
            ]]>
        </query>
    </sql>

    <!-- 결재선 삭제 -->
    <sql name="GUNB020_DEL_01">
        <description>결재선 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM T_DI_APPROVAL
            WHERE 1 = 1
            AND REQ_NO=?
            AND GUN_GBN='P'
            ]]>
        </query>
    </sql>
    <!-- 결재선 정보를 저장 한다. -->
    <sql name="GUNB020_INS_01">
        <description>결재선 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO T_DI_APPROVAL
                    (GUN_YMD, GUN_GBN, GUN_DPT, SEQ_NO, ENO_NO, JOB_CD, PENO_NO, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD, REQ_NO)
             VALUES (      ?,       ?,       ?,      ?,      ?,      ?,       ?,       ?, sysdate,       ?, sysdate, ?)
            ]]>
        </query>
    </sql>

    <!-- 결재선 정보를 조회 한다. -->
    <sql name="GUNB020_SHR_05">
        <description>결재선 정보 조회</description>
        <query>
            <![CDATA[
     SELECT GUN_YMD, GUN_GBN, GUN_DPT AS DPT_CD, SEQ_NO, ENO_NO, JOB_CD, APP_TIME, PENO_NO
           ,APP_YN
           ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결') AS APP_YN_NM
           ,SF_GET_ENONAME('01', ENO_NO) AS ENO_NM
           ,SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM
           ,SF_GET_DPTNAME('01', 'A4', GUN_DPT) AS DPT_NM
           ,REQ_NO
     FROM   T_DI_APPROVAL
     WHERE  REQ_NO LIKE  TO_CHAR(TO_DATE(?, 'YYYYMM')-1, 'YYYYMM') || '%'
     AND    GUN_GBN = 'P'
	  AND    PENO_NO IN (SELECT ENO_NO
   		  		  	 FROM T_CM_PERSON
					 WHERE NVL(GUN_DPT, DPT_CD) = ?)
            ]]>
        </query>
    </sql>

    <!-- 익월근태 정보를 조회 한다. -->
    <sql name="GUNB020_SHR_06">
        <description>수정할 정보 조회</description>
        <query>
            <![CDATA[
			SELECT B.PIS_YY, B.PIS_MM, B.ENO_NO, B.REQ_NO
			FROM T_CM_PERSON A, T_DI_PLAN B
			WHERE A.ENO_NO = B.ENO_NO
			AND NVL(A.GUN_DPT, A.DPT_CD) = ?
			AND  PIS_YY || PIS_MM = ?
            ]]>
        </query>
    </sql>

    <!-- 익월근태 등록번호 정보를 저장 한다. -->
    <sql name="GUNB020_INS_02">
        <description>등록번호 저장</description>
        <query>
            <![CDATA[
            UPDATE T_DI_PLAN    SET
            	REQ_NO = ?,
            	END_TAG = null
              WHERE PIS_YY = ?
                AND PIS_MM = ?
                AND ENO_NO = ?
            ]]>
        </query>
    </sql>

 <!--
***********************************************************************
* @UseCase     : GUNB040
* @description : 휴가계획사용자조회
***********************************************************************
* 2007/02/21     오대성        최초작성.
***********************************************************************
-->
    <!-- 휴가계획사용자 조회 (개인정보 및 연차)-->
    <sql name="GUNB040_SHR_01">
        <description>개인정보 및 연차 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO, A.ENO_NM, SF_GET_DPTNAME('01', 'A4', NVL(A.GUN_DPT, A.DPT_CD)) AS DPT_NM, A.JOB_NM,
                   B.YRP_CNT-B.AYRP_CNT YRP_CNT,
                   '' AS ATT_KIND, 0 AS PLAN_CNT, '' AS PLAN_YMD, '' AS USE_YN
            FROM   VI_T_CM_PERSON A,
                   ( SELECT PIS_YY, ENO_NO, YRP_CNT, AYRP_CNT
                     FROM   T_DI_YEARLY
                     WHERE  PIS_YY = ? ) B
            WHERE  A.GUBUN = ?
            AND    NVL(A.GUN_DPT, NVL(A.DPT_CD, ' ')) LIKE '%'||?||'%'
            AND    A.ENO_NO = B.ENO_NO(+)
            ORDER BY A.HEAD_SEQ, A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ DESC, A.HIRG_YMD, A.ENO_NO
            ]]>
        </query>
    </sql>

    <sql name="GUNB040_SHR_02">
        <description>휴가계획 조회</description>
        <query>
            <![CDATA[
            SELECT PIS_MM, NVL(AT1_CD,' ') AT1_CD, NVL(AT2_CD,' ') AT2_CD,
                   NVL(AT3_CD,' ') AT3_CD, NVL(AT4_CD,' ') AT4_CD,
                   NVL(AT5_CD,' ') AT5_CD, NVL(AT6_CD,' ') AT6_CD,
                   NVL(AT7_CD,' ') AT7_CD, NVL(AT8_CD,' ') AT8_CD,
                   NVL(AT9_CD,' ') AT9_CD, NVL(AT10_CD,' ') AT10_CD,
                   NVL(AT11_CD,' ') AT11_CD, NVL(AT12_CD,' ') AT12_CD,
                   NVL(AT13_CD,' ') AT13_CD, NVL(AT14_CD,' ') AT14_CD,
                   NVL(AT15_CD,' ') AT15_CD, NVL(AT16_CD,' ') AT16_CD,
                   NVL(AT17_CD,' ') AT17_CD, NVL(AT18_CD,' ') AT18_CD,
                   NVL(AT19_CD,' ') AT19_CD, NVL(AT20_CD,' ') AT20_CD,
                   NVL(AT21_CD,' ') AT21_CD, NVL(AT22_CD,' ') AT22_CD,
                   NVL(AT23_CD,' ') AT23_CD, NVL(AT24_CD,' ') AT24_CD,
                   NVL(AT25_CD,' ') AT25_CD, NVL(AT26_CD,' ') AT26_CD,
                   NVL(AT27_CD,' ') AT27_CD, NVL(AT28_CD,' ') AT28_CD,
                   NVL(AT29_CD,' ') AT29_CD, NVL(AT30_CD,' ') AT30_CD,
                   NVL(AT31_CD,' ') AT31_CD, [1]
            FROM   T_DI_PLAN
            WHERE  PIS_YY = ?
            AND    PIS_MM <= ?
            AND    PIS_MM >= ?
            AND    ENO_NO = ?
            AND    [2] > 0
            AND    END_TAG = 'Y'
            ORDER BY PIS_MM
            ]]>
        </query>
    </sql>

    <sql name="GUNB040_SHR_03">
        <description>근태사항 조회</description>
        <query>
            <![CDATA[
            SELECT [1]
            FROM   T_DI_DILIGENCE
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>


<!-- 휴일근무 -->
<!--
***********************************************************************
* @UseCase     : GUNC010
* @description : 대체근무휴가신청
***********************************************************************
* 2007/02/02     한학현        최초작성.
***********************************************************************
-->
    <!-- 대체근무휴가신청  조회 -->
    <sql name="GUNC010_SHR">
        <description>대체근무휴가신청 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(TO_DATE(A.HOL_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS HOL_YMD
                 , B.ENO_NO
                 , B.ENO_NM
                 , A.DPT_CD
                 , SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
                 , SF_GET_COMMNAME('01','A2',B.JOB_CD) AS JOB_NM
                 , A.STR_HOL_HOUR
                 , A.STR_HOL_MIN
                 , A.END_HOL_HOUR
                 , A.END_HOL_MIN
                 , A.STR_HOL_HOUR||':'||A.STR_HOL_MIN STR_TIME
                 , A.END_HOL_HOUR||':'||A.END_HOL_MIN END_TIME
                 , A.HOL_TIME||':'||A.HOL_MIN TOT_TIME
                 , NVL(A.STR_AFT_HOUR,'00') STR_AFT_HOUR
                 , NVL(A.STR_AFT_MIN,'00')  STR_AFT_MIN
                 , NVL(A.END_AFT_HOUR,'00') END_AFT_HOUR
                 , NVL(A.END_AFT_MIN,'00')  END_AFT_MIN
                 , A.STR_AFT_HOUR||':'||A.STR_AFT_MIN STR_AFT_TIME
                 , A.END_AFT_HOUR||':'||A.END_AFT_MIN END_AFT_TIME
                 , A.HOL_AFT_TIME||':'||A.HOL_AFT_MIN TOT_AFT_TIME
                 , A.REMARK
                 , A.REP_APP
                 , TO_CHAR(TO_DATE(A.REP_YMD, 'YYYYMMDD'),'YYYY-MM-DD') AS REP_YMD
                 , A.REP_TYP
                 , A.SIGN_TAG
              FROM T_DI_HOLIDAYWORK	A
                 , T_CM_PERSON B
             WHERE A.ENO_NO = B.ENO_NO
               AND A.HOL_YMD = ?
               AND A.DPT_CD = ?
               AND A.ENO_NO LIKE '%' || ? || '%'
               AND A.END_TAG = 'Y'
          ORDER BY SF_GET_DPTSEQ('01','A4',B.DPT_CD)
                 , SF_GET_COMMSEQ('01','A2',B.JOB_CD)
                 , B.HOB_CD DESC

            ]]>
        </query>
    </sql>

    <!-- 대체근무휴가신청 결재선 조회 -->
    <sql name="GUNC010_SHR_01">
        <description>대체근무휴가신청 결재선 조회</description>
        <query>
            <![CDATA[
            SELECT C.GUN_YMD
                 , C.GUN_GBN
                 , C.GUN_DPT
                 , C.SEQ_NO
                 , A.ENO_NO
                 , B.ENO_NM
                 , B.JOB_CD
                 , SF_GET_COMMNAME('01', 'A2', B.JOB_CD)         AS JOB_NM                 -- 직위명
                 , A.APP_YN
                 , DECODE( A.APP_YN
                         , 'Y', '승인'
                         , 'N', '부결'
                         , 'R', '상신'
                         , NVL2(A.ENO_NO, '미결', '')
                           ) AS APP_YN_NM
                 , DECODE( A.APP_YN
                         , 'Y', TO_CHAR(A.UPT_YMD, 'YY/MM/DD')||' '||A.APP_TIME
                         , 'N', TO_CHAR(A.UPT_YMD, 'YY/MM/DD')||' '||A.APP_TIME
                         , ' '
                           ) AS APP_TIME
              FROM (SELECT *
                      FROM T_DI_APPROVAL
                     WHERE GUN_YMD = ?
                       AND GUN_DPT = ?
                       AND GUN_GBN = ?
                    ) A
                 , T_CM_PERSON B
                 , (SELECT F.GUN_YMD
                         , F.GUN_DPT
                         , F.GUN_GBN
                         , E.SEQ_NO
                      FROM (SELECT '1' AS SEQ_NO
                              FROM DUAL
                             UNION
                            SELECT '2' AS SEQ_NO
                              FROM DUAL
                            ) E
                         , (SELECT ? AS GUN_YMD
                                 , ? AS GUN_DPT
                                 , ? AS GUN_GBN
                              FROM DUAL
                            ) F
                    ) C
             WHERE C.SEQ_NO  = A.SEQ_NO(+)
               AND A.ENO_NO  = B.ENO_NO(+)
          ORDER BY C.SEQ_NO
            ]]>
        </query>
    </sql>

    <!-- 신청가능여부 조회 -->
    <sql name="GUNC010_SHR_02">
        <description>신청가능여부 조회</description>
        <query>
            <![CDATA[
          SELECT CHK_YN
            FROM (SELECT CASE
                         WHEN TO_CHAR(SYSDATE,'D') IN ('1','7') THEN 'N'
                         WHEN CHK_YMD BETWEEN TO_CHAR(TRUNC(SYSDATE-7,'IW'),'YYYYMMDD') AND TO_CHAR(TRUNC(SYSDATE,'D'),'YYYYMMDD') THEN 'Y'
                         ELSE 'N'
                         END AS CHK_YN
                   FROM (SELECT ? AS CHK_YMD
                           FROM DUAL
                        ) A)
            ]]>
        </query>
    </sql>

    <!-- 5회초과 수당 신청 여부 조회 -->
    <sql name="GUNC010_SHR_05">
        <description>5회초과 수당 신청 여부 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(TO_DATE(HOL_YMD, 'YYYYMMDD'), 'MM/DD') AS HOL_YMD
                 , ENO_NO
                 , SIGN_TAG
              FROM T_DI_HOLIDAYWORK
             WHERE HOL_YMD  LIKE  ? || '%'
               AND HOL_YMD <> ?
               AND ENO_NO   = ?
               AND nvl(SIGN_TAG,'R')  <> 'N'  -- 부결제외
               AND REP_APP = '1'                  -- 수당신청
          ORDER BY HOL_YMD
            ]]>
        </query>
    </sql>
    <!-- 대체근무휴가신청 수정 -->
    <sql name="GUNC010_UPT">
        <description>대체근무휴가신청 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET HOL_AFT_TIME     = TO_CHAR(TRUNC(SF_GET_HOLHOUR(?,?,?,?)/60),'FM00')
                 , HOL_AFT_MIN      = TO_CHAR(SF_GET_HOLHOUR(?,?,?,?)- (TRUNC(SF_GET_HOLHOUR(?,?,?,?)/60)*60),'FM00')
                 , STR_AFT_HOUR = ?
                 , STR_AFT_MIN  = ?
                 , END_AFT_HOUR = ?
                 , END_AFT_MIN  = ?
                 , REMARK       = ?
                 , REP_APP      = ?
                 , REP_YMD      = ?
                 , REP_TYP      = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      = ?
               AND ENO_NO       = ?
            ]]>
        </query>
    </sql>

    <!-- 결재선정보 삭제 -->
    <sql name="GUNC010_DEL2">
         <description>결재선 삭제</description>
         <query>
              <![CDATA[
              DELETE FROM T_DI_APPROVAL
               WHERE GUN_YMD = ?
                 AND GUN_DPT = ?
                 AND GUN_GBN = ?
              ]]>
         </query>
    </sql>

    <!-- 대체근무휴가신청 결재정보 저장 -->
    <sql name="GUNC010_SAV_APP">
        <description>대체근무휴가신청 결재정보 저장</description>
        <query>
            <![CDATA[
            MERGE
             INTO T_DI_APPROVAL A
            USING (SELECT ?     AS GUN_YMD
                        , ?     AS GUN_GBN
                        , ?     AS GUN_DPT
                        , ?     AS PENO_NO
                        , ?     AS SEQ_NO
                        , ?     AS ENO_NO
                        , ?     AS JOB_CD
                        , ?     AS IPT_MAN
                     FROM DUAL
                   ) B
               ON (A.GUN_YMD    = B.GUN_YMD
              AND  A.GUN_GBN    = B.GUN_GBN
              AND  A.GUN_DPT    = B.GUN_DPT
              AND  A.SEQ_NO     = B.SEQ_NO)
             WHEN MATCHED THEN
           UPDATE
              SET A.ENO_NO      = B.ENO_NO
                , A.JOB_CD      = B.JOB_CD
                , A.APP_YN      = ''
                , A.UPT_MAN     = B.IPT_MAN
                , A.UPT_YMD     = SYSDATE
             WHEN NOT MATCHED THEN
           INSERT
                ( A.GUN_YMD
                , A.GUN_GBN
                , A.GUN_DPT
                , A.PENO_NO
                , A.SEQ_NO
                , A.ENO_NO
                , A.JOB_CD
                , A.APP_YN
                , A.IPT_MAN
                , A.IPT_YMD
                , A.UPT_MAN
                , A.UPT_YMD)
         VALUES ( B.GUN_YMD
                , B.GUN_GBN
                , B.GUN_DPT
                , B.PENO_NO
                , B.SEQ_NO
                , B.ENO_NO
                , B.JOB_CD
                , ''
                , B.IPT_MAN
                , SYSDATE
                , B.IPT_MAN
                , SYSDATE)
            ]]>
        </query>
    </sql>

    <!-- 대체근무휴가신청 수정 -->
    <sql name="GUNC010_UPT_APP">
        <description>대체근무휴가신청 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_APPROVAL
               SET APP_YN       = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
                 , APP_TIME     = TO_CHAR(SYSDATE, 'HH24:MI')
             WHERE GUN_YMD      = ?
               AND GUN_GBN      = ?
               AND GUN_DPT      = ?
               AND SEQ_NO       = ?
            ]]>
        </query>
    </sql>

    <sql name="GUNC010_UPT_APP2">
        <description>휴일근무계획 상신</description>
        <query>
            <![CDATA[
            UPDATE T_DI_APPROVAL
               SET REMARK		= ''
             WHERE GUN_YMD      = ?
               AND GUN_GBN		= ?
               AND GUN_DPT      = ?
            ]]>
        </query>
    </sql>

       <!-- 휴일근무 결재과정 저장 -->
    <sql name="GUNC010_UPT_HOL">
        <description>휴일근무 결재과정 저장</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET [1] = DECODE(?, '1', DECODE(?, 'Y', 'Y1', 'N', 'N1', 'R', 'R'), '2', ?)
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      = ?
               AND DPT_CD       = ?
            ]]>
        </query>
    </sql>

    <!-- 휴일근무 결재과정 저장 -->
    <sql name="GUNC010_UPT_REJ">
        <description>휴일근무 부결</description>
        <query>
            <![CDATA[
            UPDATE T_DI_APPROVAL
               SET APP_YN       = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
                 , APP_TIME     = TO_CHAR(SYSDATE, 'HH24:MI')
                 , REMARK		= ?
             WHERE GUN_YMD      = ?
               AND GUN_GBN      = ?
               AND GUN_DPT      = ?
               AND SEQ_NO       = ?
            ]]>
        </query>
    </sql>

    <!-- 휴일근무 결재과정 저장 -->
    <sql name="GUNC010_SAV">
        <description>휴일근무 결재자 수당, 대휴 변경</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET REP_APP      = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      = ?
               AND DPT_CD	    = ?
               AND ENO_NO	    = ?
            ]]>
        </query>
    </sql>

    <!-- 휴일근무 결재과정 저장 -->
    <sql name="GUNC010_SAV_02">
        <description>휴일근무 결재자(최종) 수당 지급</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET HOL_AMT      = DECODE(?,'1',DECODE(?,'R',DECODE(?,'과장',40000,30000),55),66)
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      = ?
               AND DPT_CD	    = ?
               AND ENO_NO	    = ?

            ]]>
        </query>
    </sql>

<!-- 대체근무결재처리 -->
<!--
***********************************************************************
* @UseCase     : GUNC020
* @description : 대체근무결재처리
***********************************************************************
* 2007/03/06     오대성        최초작성.
***********************************************************************
-->
    <!-- 대체근무결재처리  조회 -->
    <sql name="GUNC020_SHR">
        <description>대체근무결재처리 조회</description>
        <query>
            <![CDATA[

            SELECT DISTINCT APP_GBN, APP_GBN_NM, APP_TITLE, APP_YMD, PENO_NM, REQ_NO, GUN_YMD, GUN_DPT,  GUN_GBN --, APP_TIME, APP_STATUS, APP_CMT, PENO_NO
              FROM (
					SELECT  '7'     AS APP_GBN    -- 결재구분(6:휴일수당정산,7:휴일근무신청,8:휴일결과보고)
							,'휴일근무신청' AS APP_GBN_NM
							,SF_GET_ENONAME('01',PENO_NO) AS PENO_NM
							,TO_CHAR(TO_DATE(GUN_YMD,'YYYYMMDD'),'YYYY/MM/DD')||' '||SF_GET_DPTNAME('01','A4',SUBSTR(REQ_NO,10)) AS APP_TITLE
							,TO_CHAR(IPT_YMD,'YYYY-MM-DD') AS APP_YMD
							, REQ_NO, GUN_YMD,  SUBSTR(REQ_NO,10) as GUN_DPT
							, ENO_NO, GUN_GBN, APP_TIME
							,'' AS APP_STATUS
							,'' AS APP_CMT
							,'' AS PENO_NO
							,'' AS SEQ_NO
					FROM    T_DI_APPROVAL
					WHERE  GUN_GBN = 'R'
						AND   SUBSTR(REQ_NO,10) like ? || '%' -- 부서
            			AND   ENO_NO  LIKE ? || '%' -- 결재자
            			AND   DECODE(APP_YN, NULL, 'A', APP_YN) LIKE ? || '%'-- 결재상태
  	            	    AND   GUN_YMD >= ?
            	        AND   GUN_YMD <= ?
						[1]

					UNION ALL
					SELECT	'8'	AS APP_GBN    -- 결재구분(6:휴일수당정산,7:휴일근무신청,8:휴일결과보고)
							,'휴일결과보고' AS APP_GBN_NM
							,SF_GET_ENONAME('01',PENO_NO) AS PENO_NM
							,TO_CHAR(TO_DATE(GUN_YMD,'YYYYMMDD'),'YYYY/MM/DD')||' '||SF_GET_DPTNAME('01','A4',SUBSTR(REQ_NO,10)) AS APP_TITLE
							,TO_CHAR(IPT_YMD,'YYYY-MM-DD') AS APP_YMD
							, REQ_NO, GUN_YMD,  SUBSTR(REQ_NO,10) as GUN_DPT
							, ENO_NO, GUN_GBN, APP_TIME
						,'' AS APP_STATUS
						,'' AS APP_CMT
						,'' AS PENO_NO
						,'' AS SEQ_NO
					FROM	T_DI_APPROVAL
					WHERE  GUN_GBN = 'H'
						AND   SUBSTR(REQ_NO,10) like ? || '%' -- 부서
            			AND   ENO_NO  LIKE ? || '%' -- 결재자
            			AND   DECODE(APP_YN, NULL, 'A', APP_YN) LIKE ? || '%' -- 결재상태
  		                AND   GUN_YMD >= ?
	                    AND   GUN_YMD <= ?
					  	[2]

					 UNION ALL
					SELECT	'6'	AS APP_GBN    -- 결재구분(6:휴일수당정산,7:휴일근무신청,8:휴일결과보고)
							,'휴일수당정산' AS APP_GBN_NM
                            ,SF_GET_ENONAME('01',PENO_NO) AS PENO_NM
                            ,SUBSTR(GUN_YMD,1,4) ||'/' || SUBSTR(GUN_YMD,5,6) || ' 휴일근무수당 급여 반영'   AS APP_TITLE
							,TO_CHAR(IPT_YMD,'YYYY-MM-DD') AS APP_YMD
							, REQ_NO, GUN_YMD,  'ZZZ'  as GUN_DPT
							, ENO_NO, GUN_GBN, APP_TIME
							,'' AS APP_STATUS
							,'' AS APP_CMT
							,'' AS PENO_NO
							,'' AS SEQ_NO
					FROM	T_DI_APPROVAL
					WHERE  GUN_GBN = 'J'
						AND   SUBSTR(REQ_NO,10) like ? || '%' -- 부서
            			AND   ENO_NO  LIKE ? || '%' -- 결재자
            			AND   DECODE(APP_YN, NULL, 'A', APP_YN) LIKE ? || '%' -- 결재상태
  	            	    AND   GUN_YMD >= ?
            	        AND   GUN_YMD <= ?
		               	[3]
                  )
    ORDER BY APP_TITLE DESC,GUN_GBN DESC
            ]]>
        </query>
    </sql>

	<!-- 대체근무결재처리 -->
    <sql name="GUNC020_UPT_01">
        <description>결재정보 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET GRP_NO       = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE TAG_YM       = ?
               AND ENO_NO IN (SELECT A.ENO_NO
                                FROM T_DI_HOLIDAYWORK A
                                   , VI_T_CM_EMPLIST B
                               WHERE A.ENO_NO = B.ENO_NO
                                 AND NVL(B.GUN_DPT, B.DPT_CD) = ?
                              )
            ]]>
        </query>
    </sql>

    <!-- 그룹번호 조회 -->
    <sql name="GUNC020_SHR_01">
        <description>그룹번호 조회</description>
        <query>
            <![CDATA[
			SELECT NVL(MAX(GRP_NO), 0)+1 AS GRP_NO
			  FROM T_DI_HOLIDAYWORK
            ]]>
        </query>
    </sql>

<!-- 결재세부사항 -->
<!--
***********************************************************************
* @UseCase     : GUNC021
* @description : 결재세부사항
***********************************************************************
* 2007/08/02     한학현        최초작성.
***********************************************************************
-->
    <!-- 결재 대상자 리스트를 조회 -->
    <sql name="GUNC021_SHR">
        <description>결재 대상자 리스트를 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(TO_DATE(A.HOL_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS HOL_YMD
                 , B.ENO_NO
                 , B.ENO_NM
                 , NVL(B.GUN_DPT, B.DPT_CD) AS DPT_CD
                 , SF_GET_DPTNAME('01', 'A4', NVL(B.GUN_DPT, B.DPT_CD)) AS DPT_NM
                 , B.JOB_CD
                 , B.JOB_NM
                 , A.HOL_TIME
                 , A.REP_APP
                 , A.REP_YMD
                 , A.HOL_AMT
                 , A.STR_HOL_HOUR
                 , A.STR_HOL_MIN
                 , A.END_HOL_HOUR
                 , A.END_HOL_MIN
                 , A.END_TAG
                 , A.TAG_YM
                 , A.REMARK
              FROM T_DI_HOLIDAYWORK	A
                 , VI_T_CM_EMPLIST B
             WHERE A.ENO_NO = B.ENO_NO
               AND A.TAG_YM = ?
               [1]
          ORDER BY B.DPT_SEQ
                 , B.JOB_SEQ
                 , B.HOB_SEQ DESC
                 , B.ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 결재자를 조회 -->
    <sql name="GUNC021_SHR_APP">
        <description>결재자를 조회</description>
        <query>
            <![CDATA[
            SELECT SUBSTR(B.GUN_YMD, 1, 4)||'-'||SUBSTR(B.GUN_YMD, 5, 2) AS GUN_YMD
                 , B.GUN_GBN
                 , B.GUN_DPT
                 , B.PENO_NO
                 , B.SEQ_NO                                         AS PSEQ_NO
                 , B.APP_YN                                         AS PAPP_YN
                 , SF_GET_DPTNAME('01', 'A4', B.GUN_DPT) AS GUN_DPT_NM
                 , SF_GET_ENONAME('01', B.PENO_NO) AS PENO_NM
                 , MAX(DECODE(A.SEQ_NO, 1, A.ENO_NO))               AS ENO_NO1
                 , MAX(DECODE(A.SEQ_NO, 1, A.APP_YN))               AS APP_YN1
                 , MAX(DECODE(A.SEQ_NO, 2, A.ENO_NO))               AS ENO_NO2
                 , MAX(DECODE(A.SEQ_NO, 2, A.APP_YN))               AS APP_YN2
                 , MAX(DECODE(A.SEQ_NO, 3, A.ENO_NO))               AS ENO_NO3
                 , MAX(DECODE(A.SEQ_NO, 3, A.APP_YN))               AS APP_YN3
                 , MAX(DECODE(A.SEQ_NO, 4, A.ENO_NO))               AS ENO_NO4
                 , MAX(DECODE(A.SEQ_NO, 4, A.APP_YN))               AS APP_YN4
                 , ''   AS APP_TAG
              FROM T_DI_APPROVAL A
                 , (SELECT GUN_YMD
                         , GUN_GBN
                         , GUN_DPT
                         , PENO_NO
                         , SEQ_NO
                         , APP_YN
                      FROM T_DI_APPROVAL A
                     WHERE GUN_YMD = ?
                       AND GUN_GBN = ?
                       AND SEQ_NO  = ?
                       AND ENO_NO  = ?
                       AND APP_YN  = 'R'
                       [1]
                    ) B
             WHERE A.GUN_GBN = B.GUN_GBN
               AND A.GUN_YMD = B.GUN_YMD
               AND A.GUN_DPT = B.GUN_DPT
          GROUP BY B.GUN_YMD
                 , B.GUN_GBN
                 , B.GUN_DPT
                 , B.PENO_NO
                 , B.SEQ_NO
                 , B.APP_YN
            ]]>
        </query>
    </sql>

<!-- 개인별휴일근무현황 -->
<!--
***********************************************************************
* @UseCase     : GUNC030
* @description : 휴일근무현황
***********************************************************************
* 2007/03/07     오대성        최초작성.
***********************************************************************
-->
    <!-- 개인별휴일근무현황  조회 -->
    <sql name="GUNC030_SHR">
        <description>개인별휴일근무현황 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(TO_DATE( HOL_YMD,'YYYYMMDD'),'YYYY-MM-DD') HOL_YMD, REMARK,
                   STR_HOL_HOUR||':'||STR_HOL_MIN||'~'||END_HOL_HOUR||':'||END_HOL_MIN BEF_TIME,
                   HOL_TIME||':'||HOL_MIN BEF_HOL,
                   NVL2(STR_AFT_HOUR, STR_AFT_HOUR||':'||STR_AFT_MIN||'~'||END_AFT_HOUR||':'||END_AFT_MIN,'') AFT_TIME,
                   NVL2(HOL_AFT_TIME, HOL_AFT_TIME||':'||HOL_AFT_MIN,'') AFT_HOL,
                   DECODE(REP_APP,'1','수당신청','2','대체휴가') REP_NM,
                   NVL2(OK_TIME, TO_CHAR(TRUNC(OK_TIME/60),'FM00')||':'||TO_CHAR(OK_TIME-TRUNC(OK_TIME/60)*60,'FM00'),'') OK_TIME,
                   DECODE(REP_APP,'1',HOL_AMT,0) HOL_AMT,
                   DECODE(END_TAG,'','저장','R','상신','N','부결','Y','결재완료','결재진행') END_NM,
                   DECODE(REP_APP,'3','',DECODE(SIGN_TAG,'','','R','상신','N','부결','Y','결재완료','결재진행')) SIGN_NM
              FROM T_DI_HOLIDAYWORK
             WHERE ENO_NO = ?
               AND HOL_YMD >= TO_CHAR(ADD_MONTHS(SYSDATE, -365),'YYYYMMDD' )
          ORDER BY HOL_YMD DESC

            ]]>
        </query>
    </sql>



<!-- 대체근무본부장결재처리 -->
<!--
***********************************************************************
* @UseCase     : GUNC080
* @description : 대체근무본부장결재처리
***********************************************************************
* 2007/03/06     오대성        최초작성.
***********************************************************************
-->
    <!-- 대체근무본부장결재처리  조회 -->
    <sql name="GUNC080_SHR">
        <description>대체근무본부장결재처리 조회</description>
        <query>
            <![CDATA[
            SELECT SUBSTR(A.GUN_YMD,1,4)||'-'||SUBSTR(A.GUN_YMD,5,2) AS GUN_YMD,
                   C.ENO_NO AS ENO_NO,
                   SF_GET_COMMNAME('01','A2',C.JOB_CD)||' '||C.ENO_NM AS ENO_NM,
                   D.JOB_CD AS JOB_CD2,
                   D.ENO_NO AS ENO_NO2,
                   SF_GET_COMMNAME('01','A2',D.JOB_CD)||' '||D.ENO_NM AS ENO_NM2,
                   A.APP_YN2,
                   A.APP_TIME2,
                   SUM(A.ENO_CNT) AS ENO_CNT,
                   A.GUN_GBN,
                   0 AS CHECKED
            FROM   ( SELECT TO_CHAR(TO_DATE(AA.GUN_YMD,'YYYYMMDD'),'YYYYMMDD') AS GUN_YMD,
                            AA.GUN_GBN,
                            AA.ENO_NO,
                            BB.ENO_NO AS ENO_NO2,
                            BB.APP_YN AS APP_YN2,
                            NVL2(BB.APP_YN,TO_CHAR(BB.UPT_YMD,'YYYY-MM-DD')||' '||BB.APP_TIME,'') AS APP_TIME2,
                            (SELECT COUNT(H.ENO_NO)
                             FROM T_DI_HOLIDAYWORK H,
                                  VI_T_CM_PERSON P
                             WHERE H.ENO_NO=P.ENO_NO
                             AND SUBSTR(AA.GUN_YMD,1,6)=SUBSTR(H.HOL_YMD,1,6)
                             AND NVL(P.GUN_DPT, P.DPT_CD) = AA.GUN_DPT
                            ) ENO_CNT
                     FROM (SELECT * FROM T_DI_APPROVAL WHERE SEQ_NO='1') AA,
                          (SELECT * FROM T_DI_APPROVAL WHERE SEQ_NO='2') BB
                     WHERE AA.GUN_YMD = BB.GUN_YMD
                     AND   AA.GUN_GBN = BB.GUN_GBN
                     AND   AA.GUN_DPT = BB.GUN_DPT
                     AND   AA.PENO_NO = BB.PENO_NO
                     AND   SUBSTR(AA.GUN_YMD,1,6) = ?
                     AND   BB.ENO_NO = ?
                     AND   AA.GUN_GBN = 'R'
                     AND   AA.APP_YN = 'Y') A,
                   T_CM_PERSON C,
                   T_CM_PERSON D
            WHERE  A.ENO_NO = C.ENO_NO(+)
            AND    A.ENO_NO2 = D.ENO_NO(+)
            GROUP BY SUBSTR(A.GUN_YMD,1,4)||'-'||SUBSTR(A.GUN_YMD,5,2),
                     C.ENO_NO,
                     SF_GET_COMMNAME('01','A2',C.JOB_CD)||' '||C.ENO_NM,
                     D.JOB_CD,
                     D.ENO_NO,
                     SF_GET_COMMNAME('01','A2',D.JOB_CD)||' '||D.ENO_NM,
                     A.APP_YN2,
                     A.APP_TIME2,
                     A.GUN_GBN
            ]]>
        </query>
    </sql>

	<!-- 대체근무본부장결재처리 -->
    <sql name="GUNC080_UPT">
        <description>결재정보 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_APPROVAL
            SET    APP_YN = ?,
                   APP_TIME = TO_CHAR(SYSDATE,'HH24:MI'),
                   UPT_MAN = ?,
                   UPT_YMD = SYSDATE
            WHERE  SUBSTR(GUN_YMD,1,6) = ?
            AND    GUN_GBN = 'R'
            AND    SEQ_NO = '2'
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

<!-- 결재세부사항 -->
<!--
***********************************************************************
* @UseCase     : GUNC081
* @description : 결재세부사항
***********************************************************************
* 2007/08/02     한학현        최초작성.
***********************************************************************
-->
    <!-- 결재세부사항 조회 -->
    <sql name="GUNC081_SHR">
        <description>결재세부사항 조회</description>
        <query>
            <![CDATA[
            SELECT BB.DPT_CD,
                   BB.DPT_NM,
                   BB.JOB_CD,
                   BB.JOB_NM,
                   BB.ENO_NO,
                   BB.ENO_NM,
                   BB.HOL_YMD,
                   BB.HOL_TIME,
                   BB.HOL_AMT,
                   BB.REP_APP
            FROM  (SELECT GUN_YMD,GUN_DPT
                   FROM   T_DI_APPROVAL
                   WHERE  ENO_NO = ?
                   AND    NVL(GUN_YMD,' ') LIKE '%'||?||'%'
                   AND    GUN_GBN = 'R'
                   AND    SEQ_NO='2') AA,
                  (SELECT NVL(B.GUN_DPT, B.DPT_CD)                          AS DPT_CD,
                          SF_GET_DPTNAME('01', 'A4', NVL(B.GUN_DPT, B.DPT_CD))    AS DPT_NM,
                          B.JOB_CD AS JOB_CD,
                          B.JOB_NM AS JOB_NM,
                          A.ENO_NO AS ENO_NO,
                          B.ENO_NM AS ENO_NM,
                          DECODE(NVL(A.HOL_YMD,''),'','',SUBSTR(A.HOL_YMD,1,4)||'-'||SUBSTR(A.HOL_YMD,5,2)||'-'||SUBSTR(A.HOL_YMD,7,2))AS HOL_YMD,
                          A.HOL_TIME AS HOL_TIME,
                          A.HOL_AMT AS HOL_AMT,
                          A.REP_APP AS REP_APP,
                          B.HEAD_SEQ,
                          B.DPT_SEQ,
                          B.JOB_SEQ,
                          B.HOB_SEQ,
                          B.HIR_YMD
                   FROM   T_DI_HOLIDAYWORK A,
                          VI_T_CM_EMPLIST B
                   WHERE  A.ENO_NO = B.ENO_NO
                   AND    NVL(A.HOL_YMD,' ') LIKE '%'||?||'%') BB
            WHERE  AA.GUN_DPT = BB.DPT_CD(+)
            ORDER BY BB.HEAD_SEQ, BB.DPT_SEQ, BB.JOB_SEQ, BB.HOB_SEQ DESC, BB.HIR_YMD, BB.ENO_NO, BB.HOL_YMD
            ]]>
        </query>
    </sql>

<!-- 개인별휴일근무현황 -->
<!--
***********************************************************************
* @UseCase     : GUNC040
* @description : 휴일근무현황
***********************************************************************
* 2007/03/07     오대성        최초작성.
***********************************************************************
-->
    <!-- 개인별휴일근무현황  조회 -->
    <sql name="GUNC040_SHR">
        <description>개인별휴일근무현황 조회</description>
        <query>
            <![CDATA[
            SELECT SF_GET_DPTNAME('01','A4',B.DPT_CD) DPT_NM,
                   SF_GET_COMMNAME('01','A2',B.JOB_CD) JOB_NM,
                   B.ENO_NO, B.ENO_NM, A.HOL_YMD,
                   A.STR_HOL_HOUR||':'||A.STR_HOL_MIN||'~'||A.END_HOL_HOUR||':'||A.END_HOL_MIN BEF_TIME, A.HOL_TIME||':'||A.HOL_MIN BEF_HOL,
                   A.REMARK,
                   DECODE(END_TAG,'','저장','R','상신','N','부결','Y','결재완료','결재진행') END_NM,
                   NVL2(A.STR_AFT_HOUR,A.STR_AFT_HOUR||':'||A.STR_AFT_MIN||'~'||A.END_AFT_HOUR||':'||A.END_AFT_MIN,'') AFT_TIME,
                   NVL2(A.HOL_AFT_TIME,A.HOL_AFT_TIME||':'||A.HOL_AFT_MIN,'') AFT_HOL,
                   DECODE(A.REP_APP,'3','',DECODE(SIGN_TAG,'','미상신','R','상신','N','부결','Y','결재완료','결재진행')) SIGN_NM,
                   DECODE(A.REP_APP,'1','수당신청','2','대체휴가','3','미근무') REP_NM,
                   A.HOL_AMT,
                   A.REP_YMD,
                   DECODE(A.REP_TYP,'U','반차','T','전일') REP_TYP_NM
              FROM T_DI_HOLIDAYWORK A, T_CM_PERSON B
             WHERE A.HOL_YMD BETWEEN ? AND ?
               AND A.ENO_NO = B.ENO_NO
               AND A.DPT_CD LIKE '%'||?||'%'
          ORDER BY SF_GET_DPTSEQ('01','A4',B.DPT_CD), SF_GET_COMMSEQ('01','A2',B.JOB_CD), B.HOB_CD DESC, HOL_YMD DESC

           ]]>
        </query>
    </sql>



<!-- 개인별휴일근무현황 -->
<!--
***********************************************************************
* @UseCase     : GUNC041
* @description : 개인별휴일근무현황
***********************************************************************
* 2007/03/07     오대성        최초작성.
***********************************************************************
-->

	<!-- 휴일근무일 조회 -->
    <sql name="GUNC041_SHR_01">
        <description>휴일근무일 조회</description>
        <query>
            <![CDATA[
            SELECT REP_APP, HOL_YMD, HOL_TIME, HOL_AMT, '' AS HOW_YMD
            FROM T_DI_HOLIDAYWORK
            WHERE ENO_NO = ?
            AND   END_TAG = ?
            [1]
            ]]>
        </query>
    </sql>

    <!-- 개인별 근태현황 조회 -->
    <sql name="GUNC041_SHR_02">
        <description>개인별 근태현황 조회</description>
        <query>
            <![CDATA[
            SELECT PIS_YY, NVL(AT1_CD,' ') AS AT1_CD, NVL(AT2_CD,' ') AS AT2_CD,
                   NVL(AT3_CD,' ') AS AT3_CD, NVL(AT4_CD,'') AS AT4_CD,
                   NVL(AT5_CD,' ') AS AT5_CD, NVL(AT6_CD,' ') AS AT6_CD,
                   NVL(AT7_CD,' ') AS AT7_CD, NVL(AT8_CD,' ') AS AT8_CD,
                   NVL(AT9_CD,' ') AS AT9_CD, NVL(AT10_CD,' ') AS AT10_CD,
                   NVL(AT11_CD,' ') AS AT11_CD, NVL(AT12_CD,' ') AS AT12_CD,
                   NVL(AT13_CD,' ') AS AT13_CD, NVL(AT14_CD,' ') AS AT14_CD,
                   NVL(AT15_CD,' ') AS AT15_CD, NVL(AT16_CD,' ') AS AT16_CD,
                   NVL(AT17_CD,' ') AS AT17_CD, NVL(AT18_CD,' ') AS AT18_CD,
                   NVL(AT19_CD,' ') AS AT19_CD, NVL(AT20_CD,' ') AS AT20_CD,
                   NVL(AT21_CD,' ') AS AT21_CD, NVL(AT22_CD,' ') AS AT22_CD,
                   NVL(AT23_CD,' ') AS AT23_CD, NVL(AT24_CD,' ') AS AT24_CD,
                   NVL(AT25_CD,' ') AS AT25_CD, NVL(AT26_CD,' ') AS AT26_CD,
                   NVL(AT27_CD,' ') AS AT27_CD, NVL(AT28_CD,' ') AS AT28_CD,
                   NVL(AT29_CD,' ') AS AT29_CD, NVL(AT30_CD,' ') AS AT30_CD,
                   NVL(AT31_CD,' ') AS AT31_CD, PIS_MM
            FROM   T_DI_DILIGENCE
            WHERE  ENO_NO = ?
            [1]
            ]]>
        </query>
    </sql>




<!-- 휴일근무수당정산 -->
<!--
***********************************************************************
* @UseCase     : GUNC070
* @description : 휴일근무수당정산
***********************************************************************
* 2007/03/06     오대성        최초작성.
***********************************************************************
-->
    <!-- 휴일근무수당정산  조회 -->
    <sql name="GUNC070_SHR">
        <description>대체근무결재현황 조회</description>
        <query>
            <![CDATA[
            SELECT NVL(A.CONF_SEL, 'F') AS CONF_SEL,
            	   HOL_YMD,
                   SF_GET_DPTNAME('01','A4',B.DPT_CD) DPT_NM,
                   SF_GET_COMMNAME('01','A2',B.JOB_CD) JOB_NM,
                   B.ENO_NO, B.ENO_NM,
                   NVL2(A.STR_AFT_HOUR,A.STR_AFT_HOUR||':'||A.STR_AFT_MIN||'~'||A.END_AFT_HOUR||':'||A.END_AFT_MIN,'') AFT_TIME,
                   NVL2(A.HOL_AFT_TIME,A.HOL_AFT_TIME||':'||A.HOL_AFT_MIN,'') AFT_HOL, A.HOL_AMT,
                   TO_CHAR(TRUNC(A.OK_TIME/60),'FM00')||':'||TO_CHAR(A.OK_TIME-TRUNC(A.OK_TIME/60)*60,'FM00') OK_TIME
              FROM T_DI_HOLIDAYWORK A, T_CM_PERSON B
             WHERE SUBSTR(A.HOL_YMD,1,6) = ?
               AND B.DPT_CD LIKE '%'||?||'%'
               AND A.ENO_NO = B.ENO_NO
               AND A.SIGN_TAG = 'Y' AND A.REP_APP = '1'
               AND A.HOL_AMT > 0
          ORDER BY SF_GET_DPTSEQ('01','A4',B.DPT_CD), SF_GET_COMMSEQ('01','A2',B.JOB_CD), B.ENO_NO, HOL_YMD

            ]]>
        </query>
    </sql>

        <!-- 휴일근무수당 정산 -->
    <sql name="GUNC070_PROC">
        <description>휴일근무수당 계산</description>
        <query>
            <![CDATA[
         DECLARE
            HOL  T_DI_HOLIDAYWORK%rowtype;

            BAS_PIS_YM VARCHAR2(6);
            BAS_UPT_MAN VARCHAR2(8);

            HOL_MAPP_AMT NUMBER(9);
            HOL_HOL_AMT  NUMBER(9);
            HOL_OK_TIME  VARCHAR2(10);
            HOL_ENO_NO   VARCHAR2(8);
            HOL_TOT_AMT  NUMBER(9);
            HOL_JOBT_CD  VARCHAR2(8);
            HOL_OCC_CD   VARCHAR2(8);
            HOL_DPT_CD   VARCHAR2(8);
            HOL_JOB_CD   VARCHAR2(8);

            SAT_TIME     VARCHAR2(4);

            CURSOR HOL_SEL(BAS_PIS_YM CHAR) IS
                   SELECT *
                     FROM T_DI_HOLIDAYWORK
                    WHERE SUBSTR(HOL_YMD,1,6) = BAS_PIS_YM
                      AND SIGN_TAG = 'Y'
                      AND REP_APP = '1'
                 ORDER BY ENO_NO, HOL_YMD;

            CURSOR PAY_SEL IS
                   SELECT A.BAS_AMT+A.DUTY_AMT+A.WEL_AMT+A.OSE_AMT+DECODE(A.JOB_CD,'7B',0,'7C',0,A.RUN_AMT+A.MH_AMT)+
                          NVL(D.AMOUNT,0)+SF_GET_LSEV_AMT(HOL.ENO_NO,SUBSTR(HOL.HOL_YMD,1,4),SUBSTR(HOL.HOL_YMD,5,2)),
                          B.JOB_CD
                     FROM T_CP_PAYTABLE A, T_CM_PERSON B, T_CM_COMMON C,
                          (SELECT ENO_NO, AMOUNT
                             FROM T_CP_FIXED WHERE SAL_CD = '20' AND END_YMD IS NULL AND AD_TAG = 'A') D
                    WHERE A.APY_YMD = (SELECT MAX(APY_YMD) FROM T_CP_PAYTABLE)
                      AND B.JOB_CD = C.COMM_CD AND C.CD_GBN = 'A2'
                      AND A.OCC_CD = B.OCC_CD
                      AND A.JOB_CD = C.GBN2_TAG
                      AND A.HOB_CD = B.HOB_CD
                      AND B.ENO_NO = HOL.ENO_NO
                      AND B.ENO_NO = D.ENO_NO(+);

            CURSOR HOL_AMT(BAS_PIS_YM CHAR) IS
                   SELECT A.ENO_NO, B.AMT, C.OCC_CD, C.DPT_CD, C.JOB_CD
                     FROM (SELECT DISTINCT(ENO_NO) ENO_NO
                             FROM T_DI_HOLIDAYWORK
                            WHERE SIGN_TAG = 'Y' AND REP_APP = '1'
                              AND SUBSTR(HOL_YMD,1,6) = BAS_PIS_YM) A,
                          (SELECT ENO_NO, SUM(HOL_AMT) AMT
                             FROM T_DI_HOLIDAYWORK
                            WHERE SIGN_TAG = 'Y' AND REP_APP = '1'
                              AND SUBSTR(HOL_YMD,1,6) = BAS_PIS_YM
                         GROUP BY ENO_NO) B,
                          (SELECT ENO_NO, OCC_CD, DPT_CD, JOB_CD
                             FROM T_CM_PERSON) C
                            WHERE A.ENO_NO = B.ENO_NO
                              AND A.ENO_NO = C.ENO_NO
                         ORDER BY A.ENO_NO;

            CURSOR SAT_AMT IS
                  SELECT OK_TIME
                    FROM T_DI_HOLIDAYWORK
                   WHERE SIGN_TAG = 'Y'
                     AND REP_APP = '1'
                     AND HOL_YMD = TO_CHAR(TO_DATE(HOL.HOL_YMD,'YYYYMMDD') - 1, 'YYYYMMDD');

        BEGIN

           BAS_PIS_YM  := ?;
           BAS_UPT_MAN := ?;

           OPEN HOL_SEL(BAS_PIS_YM);
           LOOP
           FETCH HOL_SEL INTO HOL;
             IF (HOL_SEL%NOTFOUND) THEN EXIT;
             END IF;

            OPEN PAY_SEL;
            FETCH PAY_SEL INTO HOL_MAPP_AMT, HOL_JOBT_CD;
              IF (HOL_SEL%NOTFOUND) THEN EXIT;
              END IF;
            CLOSE PAY_SEL;

            HOL_OK_TIME := LEAST(NVL(HOL.HOL_AFT_TIME,0)*60+NVL(HOL.HOL_AFT_MIN,0), NVL(HOL.HOL_TIME,0)*60+NVL(HOL.HOL_MIN,0));

            IF HOL_JOBT_CD NOT IN ('7B','7C') THEN
               IF TO_CHAR(TO_DATE(HOL.HOL_YMD,'YYYYMMDD'),'D') = '7' THEN       --토요일
                  HOL_OK_TIME := LEAST(HOL_OK_TIME,720);
                ELSIF TO_CHAR(TO_DATE(HOL.HOL_YMD,'YYYYMMDD'),'D') = '1' THEN    --일요일
                      OPEN SAT_AMT;
                      FETCH SAT_AMT INTO SAT_TIME;
                      IF (SAT_AMT%NOTFOUND) THEN SAT_TIME := '0' ;
                      END IF;
                      CLOSE SAT_AMT;

                      IF TO_NUMBER(HOL_OK_TIME)+TO_NUMBER(SAT_TIME) >= 720 THEN
                         HOL_OK_TIME := GREATEST(720 - TO_NUMBER(SAT_TIME),0);
                      END IF;
                END IF;
            END IF;

            HOL_MAPP_AMT := GREATEST(ROUND(HOL_MAPP_AMT/226), 4000);

            IF HOL_OK_TIME > 480 THEN
               HOL_HOL_AMT := ROUND((HOL_MAPP_AMT * ((HOL_OK_TIME-480)/60) * 2) + (HOL_MAPP_AMT * 8 * 1.5),2);
            ELSE HOL_HOL_AMT := ROUND(HOL_MAPP_AMT * HOL_OK_TIME/60 * 1.5, 2);
            END IF;

           UPDATE T_DI_HOLIDAYWORK SET
                  HOL_AMT  = HOL_HOL_AMT,
                  OK_TIME  = HOL_OK_TIME,
                  MAPP_AMT = HOL_MAPP_AMT,
                  UPT_MAN  = BAS_UPT_MAN,
                  UPT_YMD  = SYSDATE
            WHERE HOL_YMD = HOL.HOL_YMD
              AND ENO_NO  = HOL.ENO_NO;

         END LOOP;
         CLOSE HOL_SEL;

        DELETE FROM T_CP_CHANGE
              WHERE PIS_YY = SUBSTR(BAS_PIS_YM,1,4)
                AND PIS_MM = SUBSTR(BAS_PIS_YM,5,2)
                AND SAL_GBN = '0' AND BON_NUM = '1'
                AND WRK_SEQ = '99'
                AND AD_TAG = 'A' AND SAL_CD = 'BD';

        OPEN HOL_AMT(BAS_PIS_YM);
        LOOP
        FETCH HOL_AMT INTO HOL_ENO_NO, HOL_TOT_AMT, HOL_OCC_CD, HOL_DPT_CD, HOL_JOB_CD;
          IF (HOL_AMT%NOTFOUND) THEN EXIT;
          END IF;

          IF HOL_TOT_AMT > 0 THEN

             INSERT INTO T_CP_CHANGE
                   (OCC_CD, PIS_YY, PIS_MM, SAL_GBN, ENO_NO,
                    DPT_CD, JOB_CD, SAL_CD, AD_TAG,
                    SEQ,
                    AMOUNT, REMARK, BON_NUM, WRK_SEQ,
                    IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
             VALUES
                   (HOL_OCC_CD, SUBSTR(BAS_PIS_YM,1,4), SUBSTR(BAS_PIS_YM,5,2), '0', HOL_ENO_NO,
                    HOL_DPT_CD, HOL_JOB_CD, 'BD', 'A',
                    (SELECT NVL2(MAX(SEQ),MAX(SEQ)+1,0)
                       FROM T_CP_CHANGE
                      WHERE PIS_YY = SUBSTR(BAS_PIS_YM,1,4)
                        AND PIS_MM = SUBSTR(BAS_PIS_YM,5,2)
                        AND SAL_GBN = '0'
                        AND ENO_NO = HOL_ENO_NO
                        AND BON_NUM = '1'),
                   HOL_TOT_AMT, SUBSTR(BAS_PIS_YM,5,2)||'월 휴일근무수당', '1', '99',
                   BAS_UPT_MAN, SYSDATE, BAS_UPT_MAN, SYSDATE);
         END IF;

        END LOOP;
        CLOSE HOL_AMT;

        UPDATE T_DI_HOLIDAYWORK SET
               OK_TIME  = '',
               HOL_AMT  = '',
               MAPP_AMT = ''
         WHERE SUBSTR(HOL_YMD,1,6) = BAS_PIS_YM
           AND REP_APP <> '1';

      END;
            ]]>
        </query>
    </sql>


	<!-- 휴일, 휴일근무 합계 조회 -->
    <sql name="GUNC070_SHR_01">
        <description>휴일, 휴일근무 합계 조회</description>
        <query>
            <![CDATA[
            SELECT ATW_CNT, --정상근무
                   HOL_CNT, --휴일
                   HOW_CNT  --휴일근무
            FROM   T_DI_DILIGENCE
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

	<!-- 근무수당 반영처리 -->
    <sql name="GUNC070_INS">
        <description>근무수당 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_CHANGE
            ( OCC_CD, PIS_YY, PIS_MM, SAL_GBN, ENO_NO, SAL_CD,
              SEQ,
              AD_TAG, AMOUNT, BON_NUM, DPT_CD, JOB_CD,
              UPT_MAN, UPT_YMD, IPT_MAN, IPT_YMD )
            VALUES
            ( ?     , ?     , ?     , ?      , ?     , ?     ,
              NVL(( SELECT MAX(SEQ) + 1
                    FROM   T_CP_CHANGE
                    WHERE  OCC_CD = ?
                    AND    PIS_YY = ?
                    AND    PIS_MM = ?
                    AND    SAL_GBN = ?
                    AND    ENO_NO = ? ),1),
              ?     , ?     , ?      , ?     , ?     ,
              ?      , SYSDATE, ?      , SYSDATE )
            ]]>
        </query>
    </sql>

	<!-- 대체근무반영처리 -->
    <sql name="GUNC070_UPT_01">
        <description>근태사항 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_DILIGENCE
            SET    [1],
                   ATW_CNT = ?,
                   HOL_CNT = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

	<!-- 대체근무반영처리 -->
    <sql name="GUNC070_UPT_02">
        <description>휴일근무 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
            SET    END_TAG = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  HOL_YMD = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 휴일근무 정산 결재정보 저장 -->
    <sql name="GUNC070_SAV_APP">
        <description>대체근무휴가신청 결재정보 저장</description>
        <query>
            <![CDATA[
            MERGE
             INTO T_DI_APPROVAL A
            USING (SELECT ?     AS GUN_YMD
                        , ?     AS GUN_GBN
                        , ?     AS GUN_DPT
                        , ?     AS PENO_NO
                        , ?     AS SEQ_NO
                        , DECODE(?,'1','R','')     AS APP_YN
                        , ?     AS ENO_NO
                        , ?     AS JOB_CD
                        , ?     AS IPT_MAN
                        , ?     AS REQ_NO
                     FROM DUAL
                   ) B
               ON (A.GUN_YMD    = B.GUN_YMD
              AND  A.GUN_GBN    = B.GUN_GBN
              AND  A.GUN_DPT    = B.GUN_DPT
              AND  A.SEQ_NO     = B.SEQ_NO)
             WHEN MATCHED THEN
           UPDATE
              SET A.ENO_NO      = B.ENO_NO
                , A.JOB_CD      = B.JOB_CD
                , A.APP_YN      = B.APP_YN
                , A.UPT_MAN     = B.IPT_MAN
                , A.UPT_YMD     = SYSDATE
                , A.REQ_NO      = B.REQ_NO
             WHEN NOT MATCHED THEN
           INSERT
                ( A.GUN_YMD , A.GUN_GBN , A.GUN_DPT , A.PENO_NO , A.SEQ_NO , A.ENO_NO  , A.JOB_CD , A.APP_YN , A.IPT_MAN
				                 , A.IPT_YMD , A.UPT_MAN , A.UPT_YMD, A.REQ_NO)
              VALUES ( B.GUN_YMD , B.GUN_GBN , B.GUN_DPT , B.PENO_NO , B.SEQ_NO  , B.ENO_NO  , B.JOB_CD  , B.APP_YN , B.IPT_MAN
               					 , SYSDATE     , B.IPT_MAN  , SYSDATE, B.REQ_NO)
            ]]>
        </query>
    </sql>

	<!-- 휴일근무 정산 대상자 처리 -->
    <sql name="GUNC070_UPT_APP">
        <description>GUNC070_UPT_APP</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
            SET    CONF_TAG = ?,
            	   CONF_SEL = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  HOL_YMD = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

    <sql name="GUNC071_UPT_HOL">
        <description>휴일근무 정산 결재과정 저장</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET [1] = DECODE(?, '1', DECODE(?, 'Y', 'Y1', 'N', 'N1', 'R', 'R'), '2', ?)
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      LIKE ? || '%'
               AND CONF_SEL       = 'T'
               AND SIGN_TAG       = 'Y'

            ]]>
        </query>
    </sql>

    <!-- 휴일근무 수당 정산 결재 조회 -->
    <sql name="GUNC071_SHR">
        <description>휴일근무 수당 정산 결재 조회</description>
        <query>
            <![CDATA[
 SELECT DPT_CD
     , SF_GET_DPTNAME('01','A4',DPT_CD) DPT_NM
     , JOB_CD
     , SF_GET_COMMNAME('01','A2',JOB_CD) JOB_NM
     , ENO_NO, ENO_NM, HOL_AMT
     , CNT
  FROM(
          SELECT A.DPT_CD  AS DPT_CD,
                 B.JOB_CD  AS JOB_CD,
                 A.ENO_NO  AS ENO_NO,
                 B.ENO_NM  AS ENO_NM,
                 SUM(A.HOL_AMT) AS HOL_AMT,
                 NULL AS CNT
            FROM T_DI_HOLIDAYWORK A, T_CM_PERSON B
           WHERE SUBSTR(A.HOL_YMD,1,6) = ?
             AND A.ENO_NO = B.ENO_NO
             AND A.SIGN_TAG = 'Y' AND A.REP_APP = '1' AND A.CONF_SEL = 'T'
           GROUP BY A.DPT_CD, B.JOB_CD, A.ENO_NO, B.ENO_NM              -- 사번별 계

    UNION ALL
    SELECT DPT_CD ,'부서 계' AS JOB_CD, '**' AS ENO_NO, '**' AS ENO_NM, HOL_AMT, CNT
          FROM(
          SELECT A.DPT_CD  AS DPT_CD,
                 SUM(A.HOL_AMT) AS HOL_AMT,
                 COUNT(DISTINCT A.ENO_NO)  AS CNT
            FROM T_DI_HOLIDAYWORK A, T_CM_PERSON B
           WHERE SUBSTR(A.HOL_YMD,1,6) = ?
             AND A.ENO_NO = B.ENO_NO
             AND A.SIGN_TAG = 'Y' AND A.REP_APP = '1' AND A.CONF_SEL = 'T'
           GROUP BY A.DPT_CD ) AA                                             -- 부서별 계

    UNION ALL
    SELECT '총계' AS DPT_CD ,'***' AS JOB_CD, '***' AS ENO_NO, '***' AS ENO_NM, HOL_AMT, CNT
          FROM(
          SELECT SUM(HOL_AMT) AS HOL_AMT,
                 COUNT(DISTINCT ENO_NO)  AS CNT
            FROM T_DI_HOLIDAYWORK
           WHERE SUBSTR(HOL_YMD,1,6) = ?
             AND SIGN_TAG = 'Y' AND REP_APP = '1'  AND CONF_SEL = 'T') BB                          -- 총계
            ) CC
 ORDER BY SF_GET_DPTSEQ('01','A4',DPT_CD), SF_GET_COMMSEQ('01','A2',JOB_CD), ENO_NO
            ]]>
        </query>
    </sql>
<!-- 휴일근무 -->
<!--
***********************************************************************
* @UseCase     : GUNC090
* @description : 대체근무휴가신청
***********************************************************************
* 2007/02/02     한학현        최초작성.
***********************************************************************
-->
    <!-- 대체근무휴가신청  조회 -->
    <sql name="GUNC090_SHR">
        <description>대체근무휴가신청 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(TO_DATE(A.HOL_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS HOL_YMD
                 , B.ENO_NO
                 , B.ENO_NM
                 , A.DPT_CD
                 , SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
                 , SF_GET_COMMNAME('01','A2',B.JOB_CD) AS JOB_NM
                 , A.HOL_TIME
                 , A.STR_HOL_HOUR
                 , A.STR_HOL_MIN
                 , A.END_HOL_HOUR
                 , A.END_HOL_MIN
                 , A.STR_HOL_HOUR||':'||A.STR_HOL_MIN STR_TIME
                 , A.END_HOL_HOUR||':'||A.END_HOL_MIN END_TIME
                 , A.HOL_TIME||':'||A.HOL_MIN TOT_TIME
                 , A.END_TAG
                 , A.REMARK
              FROM T_DI_HOLIDAYWORK	A
                 , T_CM_PERSON B
             WHERE A.ENO_NO = B.ENO_NO
               AND A.HOL_YMD = ?
               AND A.DPT_CD = ?
               AND A.ENO_NO LIKE '%' || ? || '%'
          ORDER BY SF_GET_DPTSEQ('01','A4',B.DPT_CD)
                 , SF_GET_COMMSEQ('01','A2',B.JOB_CD)
                 , B.HOB_CD DESC

            ]]>
        </query>
    </sql>

    <!-- 대체근무휴가신청 결재선 조회 -->
    <sql name="GUNC090_SHR_01">
        <description>대체근무휴가신청 결재선 조회</description>
        <query>
            <![CDATA[
            SELECT C.GUN_YMD
                 , C.GUN_GBN
                 , C.GUN_DPT
                 , C.SEQ_NO
                 , A.ENO_NO
                 , B.ENO_NM
                 , B.JOB_CD
                 , SF_GET_COMMNAME('01', 'A2', B.JOB_CD)         AS JOB_NM                 -- 직위명
                 , A.APP_YN
                 , DECODE( A.APP_YN
                         , 'Y', '승인'
                         , 'N', '부결'
                         , 'R', '상신'     --상신 2009.11.24
                         , NVL2(A.ENO_NO, '미결', '')
                           ) AS APP_YN_NM
                 , DECODE( A.APP_YN
                         , 'Y', TO_CHAR(A.UPT_YMD, 'YY/MM/DD')||' '||A.APP_TIME
                         , 'N', TO_CHAR(A.UPT_YMD, 'YY/MM/DD')||' '||A.APP_TIME
                         , ' '
                           ) AS APP_TIME
              FROM (SELECT *
                      FROM T_DI_APPROVAL
                     WHERE GUN_YMD = ?
                       AND GUN_DPT = ?
                       AND GUN_GBN = ?
                    ) A
                 , T_CM_PERSON B
                 , (SELECT F.GUN_YMD
                         , F.GUN_DPT
                         , F.GUN_GBN
                         , E.SEQ_NO
                      FROM (SELECT '1' AS SEQ_NO
                              FROM DUAL
                             UNION
                            SELECT '2' AS SEQ_NO
                              FROM DUAL
                            ) E
                         , (SELECT ? AS GUN_YMD
                                 , ? AS GUN_DPT
                                 , ? AS GUN_GBN
                              FROM DUAL
                            ) F
                    ) C
             WHERE C.SEQ_NO  = A.SEQ_NO(+)
               AND A.ENO_NO  = B.ENO_NO(+)
          ORDER BY C.SEQ_NO
            ]]>
        </query>
    </sql>

    <!-- 휴일여부 조회 -->
    <sql name="GUNC090_SHR_02">
        <description>휴일여부 조회</description>
        <query>
            <![CDATA[
          SELECT (SELECT HOL_YN
                    FROM T_DI_HOLIDAY
                   WHERE REG_YMD = A.CHK_YMD)   AS HOL_YN,
                   CASE
                   WHEN TO_CHAR(SYSDATE,'D') IN ('1','7') THEN 'N'  -- 1:일요일  7:토요일
                   WHEN CHK_YMD BETWEEN TO_CHAR(SYSDATE,'YYYYMMDD') AND TO_CHAR(TRUNC(SYSDATE,'D') + 8,'YYYYMMDD') THEN 'Y'  -- -7 월요일까지 ORI :8
                   ELSE 'N'
                    END AS CHK_YN
              FROM (SELECT ? AS CHK_YMD
                      FROM DUAL
                    ) A
            ]]>
        </query>
    </sql>
    <sql name="GUNC090_SHR_021">
        <description>휴일여부 조회 서무용</description>
        <query>
            <![CDATA[
          SELECT (SELECT HOL_YN
                    FROM T_DI_HOLIDAY
                   WHERE REG_YMD = A.CHK_YMD)   AS HOL_YN,
                   CASE
                   WHEN TO_CHAR(SYSDATE,'D') IN ('1','7') THEN 'N'  -- 1:일요일  7:토요일
                   WHEN CHK_YMD BETWEEN TO_CHAR(SYSDATE-3,'YYYYMMDD') AND TO_CHAR(TRUNC(SYSDATE,'D') + 8,'YYYYMMDD') THEN 'Y'  -- -7 월요일까지 ORI :8
                   ELSE 'N'
                    END AS CHK_YN
              FROM (SELECT ? AS CHK_YMD
                      FROM DUAL
                    ) A
            ]]>
        </query>
    </sql>
    <!-- 5일여부 조회 -->
    <sql name="GUNC090_SHR_03">
        <description>5일여부 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(TO_DATE(HOL_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS HOL_YMD
                 , ENO_NO
                 , END_TAG
                 , SIGN_TAG
              FROM T_DI_HOLIDAYWORK
             WHERE HOL_YMD  LIKE  ? || '%'
               AND ENO_NO   = ?
               AND (END_TAG  not like 'N%' OR END_TAG IS  NULL)
          ORDER BY HOL_YMD
            ]]>
        </query>
    </sql>

    <!-- 대체근무휴가신청 저장 -->
    <sql name="GUNC090_INS">
        <description>대체근무휴가신청 저장</description>
        <query>
            <![CDATA[
            INSERT
              INTO T_DI_HOLIDAYWORK
                 ( HOL_YMD
                 , ENO_NO
                 , DPT_CD
                 , OCC_CD
                 , HOL_TIME
                 , HOL_MIN
                 , STR_HOL_HOUR
                 , STR_HOL_MIN
                 , END_HOL_HOUR
                 , END_HOL_MIN
                 , REMARK
                 , IPT_MAN
                 , IPT_YMD
                 , UPT_MAN
                 , UPT_YMD )
          VALUES ( ?
                 , ?
                 , ?
                 , (SELECT OCC_CD FROM T_CM_PERSON WHERE ENO_NO = ?)
                 , TO_CHAR(TRUNC(SF_GET_HOLHOUR(?,?,?,?)/60),'FM00')
                 , TO_CHAR(SF_GET_HOLHOUR(?,?,?,?)- (TRUNC(SF_GET_HOLHOUR(?,?,?,?)/60)*60),'FM00')
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , SYSDATE
                 , ?
                 , SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 대체근무휴가신청 수정 -->
    <sql name="GUNC090_UPT">
        <description>대체근무휴가신청 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET HOL_TIME     = TO_CHAR(TRUNC(SF_GET_HOLHOUR(?,?,?,?)/60),'FM00')
                 , HOL_MIN      = TO_CHAR(SF_GET_HOLHOUR(?,?,?,?)- (TRUNC(SF_GET_HOLHOUR(?,?,?,?)/60)*60),'FM00')
                 , STR_HOL_HOUR = ?
                 , STR_HOL_MIN  = ?
                 , END_HOL_HOUR = ?
                 , END_HOL_MIN  = ?
                 , REMARK       = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      = ?
               AND ENO_NO       = ?
            ]]>
        </query>
    </sql>

    <!-- 대체근무휴가신청 삭제 -->
    <sql name="GUNC090_DEL">
        <description>대체근무휴가신청 삭제</description>
        <query>
            <![CDATA[
        	DELETE FROM T_DI_HOLIDAYWORK
             WHERE HOL_YMD = ?
               AND ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 결재선정보 삭제 -->
    <sql name="GUNC090_DEL2">
         <description>결재선 삭제</description>
         <query>
              <![CDATA[
              DELETE FROM T_DI_APPROVAL
               WHERE REQ_NO = ?
              ]]>
         </query>
    </sql>

    <!-- 휴일근무 결재정보 저장 -->
    <sql name="GUNC090_SAV_APP">
        <description>대체근무휴가신청 결재정보 저장</description>
        <query>
            <![CDATA[

           INSERT INTO T_DI_APPROVAL
                ( GUN_YMD
                , GUN_GBN
                , GUN_DPT
                , PENO_NO
                , REQ_NO
                , SEQ_NO
                , ENO_NO
                , JOB_CD
                , IPT_MAN
                , IPT_YMD
                , UPT_MAN
                , UPT_YMD)
         VALUES ( ?
                , ?
                , ?
                , ?
                , ?
                , ?
                , ?
                , ?
                , ?
                , SYSDATE
                , ?
                , SYSDATE)
            ]]>
        </query>
    </sql>

    <!-- 대체근무휴가신청 수정 -->
    <sql name="GUNC090_UPT_APP">
        <description>휴일근무계획 상신</description>
        <query>
            <![CDATA[
            UPDATE T_DI_APPROVAL
               SET APP_YN       = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
                 , APP_TIME     = TO_CHAR(SYSDATE, 'HH24:MI')
             WHERE GUN_YMD      = ?
               AND GUN_GBN		= ?
               AND GUN_DPT      = ?
               AND SEQ_NO		= ?
            ]]>
        </query>
    </sql>

    <sql name="GUNC090_UPT_APP2">
        <description>휴일근무계획 상신</description>
        <query>
            <![CDATA[
            UPDATE T_DI_APPROVAL
               SET REMARK		= ''
             WHERE GUN_YMD      = ?
               AND GUN_GBN		= ?
               AND GUN_DPT      = ?
            ]]>
        </query>
    </sql>


    <!-- 휴일근무 결재과정 저장 -->
    <sql name="GUNC090_UPT_HOL">
        <description>휴일근무 결재과정 저장</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET [1]		= ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      = ?
               AND DPT_CD       = ?
            ]]>
        </query>
    </sql>

    <!-- 대체근무휴가신청 수정 -->
    <sql name="GUNC091_UPT_APP">
        <description>대체근무휴가신청 결재</description>
        <query>
            <![CDATA[
            UPDATE T_DI_APPROVAL
               SET APP_YN       = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
                 , APP_TIME     = TO_CHAR(SYSDATE, 'HH24:MI')
             WHERE GUN_YMD      = ?
               AND GUN_GBN      = ?
               AND GUN_DPT      = ?
               AND SEQ_NO       = ?
            ]]>
        </query>
    </sql>

    <sql name="GUNC091_UPT_HOL">
        <description>휴일근무 결재과정 저장</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET [1] = DECODE(?, '1', DECODE(?, 'Y', 'Y1', 'N', 'N1', 'R', 'R'), '2', ?)
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      = ?
               AND DPT_CD       = ?
            ]]>
        </query>
    </sql>

    <!-- 휴일근무 결재과정 저장 -->
    <sql name="GUNC091_UPT_REJ">
        <description>휴일근무 부결</description>
        <query>
            <![CDATA[
            UPDATE T_DI_APPROVAL
               SET APP_YN       = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
                 , APP_TIME     = TO_CHAR(SYSDATE, 'HH24:MI')
                 , REMARK		= ?
             WHERE GUN_YMD      = ?
               AND GUN_GBN      = ?
               AND GUN_DPT      = ?
               AND SEQ_NO       = ?
            ]]>
        </query>
    </sql>

    <!-- 결재처리 -->
    <sql name="GUNC091_UPT_NEW">
        <description>결재정보 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_APPROVAL
            SET    APP_YN = ?,
                   APP_TIME = TO_CHAR(sysdate,'HH24:MI'),
                   REMARK   = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  1=1
            AND    REQ_NO  = ?
            AND    GUN_GBN = ?
            AND    ENO_NO  = ?
            ]]>
        </query>
    </sql>
    <sql name="GUNC091_UPT_HOL_NEW">
        <description>휴일근무 결재과정 T_DI_HOLIDAYWORK 저장</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET [1] = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      = ?
               AND DPT_CD       = ?
            ]]>
        </query>
    </sql>
    <sql name="GUNC091_UPT_HOL_NEW_H">
        <description>휴일근무 결재과정 T_DI_HOLIDAYWORK 저장</description>
        <query>
            <![CDATA[
            UPDATE T_DI_HOLIDAYWORK
               SET [1] = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE HOL_YMD      = ?
               AND DPT_CD       = ?
               AND SIGN_TAG = 'R'  -- 상신된 Record만
            ]]>
        </query>
    </sql>
    <!-- 결재한개수 세기 -->
    <sql name="GUNC091_CNT">
        <description>결재정보개수세기</description>
        <query>
            <![CDATA[
		--SELECT DECODE(T.TOTAL,0,'-',DECODE(REJ,1,'N',  DECODE(CNT/TOTAL, 1, DECODE(Y.APP/T.TOTAL,1,'Y','N'),'-'))) APP_YN FROM
            SELECT TOTAL,APP,REJ,CNT,
              case
                 when REJ > 0 then 'N'
                 when APP = TOTAL then 'Y'
                 else '-'
            end APP_YN
            FROM
                (SELECT COUNT(*) APP
	                FROM T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN = 'Y') Y,
	            (SELECT COUNT(*) REJ
	                FROM T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN = 'N') N,
                (SELECT COUNT(*) CNT
	                FROM T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN IS NOT NULL) I,
                (SELECT COUNT(*) TOTAL
	                FROM T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?) T
            ]]>
        </query>
    </sql>
<!--
***********************************************************************
* @UseCase     : GUND010
* @description : 연차발생/미사용금액
***********************************************************************
* 2007/03/21     오대성        최초작성.
***********************************************************************
-->
    <!-- 연차발생/미사용금액 조회 -->
    <sql name="GUND010_SHR">
        <description>연차발생/미사용금액 조회</description>
        <query>
            <![CDATA[
         SELECT A.ENO_NO, A.YRP_CNT, A.USE_CNT, A.YRP_CNT-A.USE_CNT AS NO_CNT,
                DECODE(A.YRP_CNT,0,0,ROUND(A.USE_CNT/A.YRP_CNT*100,1)) AS YRP_PER,B.TEAM_SEQ,B.JOB_SEQ,
                B.HEAD_CD, B.HEAD_NM, B.ENO_NM, B.DPT_CD, B.DPT_NM, B.TEAM_CD, B.TEAM_NM, B.JOB_NM,
                B.DUTY_CD,TO_CHAR(B.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
				TRUNC((NVL(BAS_AMT,0)+NVL(DUTY_AMT,0)+NVL(OSE_AMT,0)+NVL(RUN_AMT,0)+NVL(MH_AMT,0)+NVL(WEL_AMT,0))/209)*8*(A.YRP_CNT-A.USE_CNT) AS YEAR_PAY
         FROM   ( SELECT AA.ENO_NO,
                         AA.PIS_YY,
                         AA.YRP_CNT-AA.AYRP_CNT AS YRP_CNT,
                         ( SELECT
                                  SUM(ATT_H)+SUM(ATT_P*0.5)+SUM(ATT_R*0.5)
                           FROM   T_DI_DILIGENCE
                           WHERE  PIS_YY = AA.PIS_YY
                           AND    PIS_MM <= ?
                           AND    ENO_NO = AA.ENO_NO ) AS USE_CNT
                  FROM   T_DI_YEARLY AA
                  WHERE  AA.PIS_YY = ? ) A,
                ( SELECT ENO_NO, ENO_NM, TEAM_SEQ,JOB_SEQ,
                HEAD_CD, HEAD_NM, DPT_CD, DPT_NM, TEAM_CD, TEAM_NM,
                JOB_CD, JOB_NM, DUTY_CD, HIR_YMD, RET_YMD
                  FROM VI_T_CM_PERSON2 BB
                  WHERE   [1]
                  ) B,
                ( SELECT
				       BAS_AMT, DUTY_AMT,OSE_AMT,RUN_AMT,MH_AMT,WEL_AMT,
					   ENO_NO
				FROM T_CP_PAYTABLE CC
				WHERE 1 = 1
				AND   STR_YMD <= ?
				AND   END_YMD IS NULL
				) C
         WHERE A.ENO_NO  = B.ENO_NO
         AND   B.ENO_NO  = C.ENO_NO(+)
         AND  (B.RET_YMD IS NULL OR RET_YMD >= SYSDATE)
         ORDER BY B.HEAD_CD,B.DPT_CD, B.TEAM_SEQ, B.JOB_SEQ, B.DUTY_CD , B.JOB_CD,B.TEAM_CD, B.HIR_YMD
            ]]>
        </query>
    </sql>


<!-- 연차관리 -->
<!--
***********************************************************************
* @UseCase     : GUND030
* @description : 연차발생관리
***********************************************************************
* 2007/02/02     한학현        최초작성.
***********************************************************************
-->
    <!-- 연차발생관리  조회 -->
    <sql name="GUND030_SHR">
        <description>연차발생관리  조회</description>
        <query>
            <![CDATA[
            SELECT PIS_YY,
                   NVL(B.GUN_DPT, B.DPT_CD) AS DPT_CD,
                   ASNHR.SF_GET_DPTNAME('01', 'A4', NVL(B.DPT_CD, B.HEAD_CD)) AS DPT_NM,
                   B.JOB_CD AS JOB_CD,
                   B.JOB_NM AS JOB_NM,
                   A.ENO_NO AS ENO_NO,
                   B.ENO_NM AS ENO_NM,
                   TO_CHAR(B.HIRG_YMD, 'YYYY-MM-DD') AS HIRG_YMD,
                   YRP_CNT,
                   AYRP_CNT,
		  			(YRP_CNT-AYRP_CNT) TOT_YRP
            FROM   ASNHR.T_DI_YEARLY A, ASNHR.VI_T_CM_PERSON B
            WHERE  A.ENO_NO=B.ENO_NO
            AND    NVL(A.PIS_YY,' ')                 LIKE '%'||?||'%'
            ORDER BY A.PIS_YY DESC, B.HEAD_SEQ, B.DPT_SEQ, B.JOB_SEQ, B.DUTY_CD, A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 연차발생관리 일괄생성 -->
    <sql name="GUND030_INS">
        <description>연차발생관리 일괄생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_DI_YEARLY
                  (PIS_YY,ENO_NO,
                   YRP_CNT,
                   AYRP_CNT,
                   IPT_MAN,IPT_YMD,UPT_MAN,UPT_YMD)

            SELECT ?, ENO_NO,
                   LEAST(YRP_M1, 25) AS YRP_CNT,        -- 연차,
                   CASE WHEN (NVL((SELECT (SUM(ATT_H) + SUM(ATT_P)*0.5 + SUM(ATT_R)*0.5) FROM ASNHR.T_DI_DILIGENCE WHERE PIS_YY = (?-1) AND ENO_NO = AAA.ENO_NO),0)
                             - NVL((SELECT YRP_CNT-AYRP_CNT FROM ASNHR.T_DI_YEARLY WHERE PIS_YY = (?-1) AND ENO_NO = AAA.ENO_NO),0)) < 0
                        THEN 0
                        ELSE (NVL((SELECT (SUM(ATT_H) + SUM(ATT_P)*0.5 + SUM(ATT_R)*0.5 ) FROM ASNHR.T_DI_DILIGENCE WHERE PIS_YY = (?-1) AND ENO_NO = AAA.ENO_NO),0)
                             - NVL((SELECT YRP_CNT-AYRP_CNT FROM T_DI_YEARLY WHERE PIS_YY = (?-1) AND ENO_NO = AAA.ENO_NO),0))
                        END AS AYRP_CNT, -- 작년에 발생한 연차보다 초과사용한 연차를 가져온다.
                   ?, SYSDATE, ?, SYSDATE
            FROM   (SELECT  BB.ENO_NO AS ENO_NO,
                            CASE WHEN SUBSTR(TO_CHAR(BB.HIRG_YMD,'YYYYMMDD'),1,4) <= (?-2)                            -- 년차계산(기존입사자 : 2년이전입사자)
                                           THEN CASE WHEN (NVL(HUJICKIL,0) + NVL(KYULKEUNIL,0)) > 0                             -- 결근일이나 휴직일이 있는 경우
                                           THEN CASE WHEN TRUNC((  TO_DATE((?-1)||'1231','YYYYMMDD')
                                                                 - TO_DATE((?-1)||'0101','YYYYMMDD')
                                                                 + 1
                                                                 - (NVL(HUJICKIL,0) + NVL(KYULKEUNIL,0))
                                                                ) /
                                                                (  TO_DATE((?-1)||'1231','YYYYMMDD')
                                                                 - TO_DATE((?-1)||'0101','YYYYMMDD')
                                                                 + 1
                                                                ) * 100) >= 80                                        -- 근무일수가 8할이상일때
                                                     THEN
                                                     (CASE WHEN  MOD(( (trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD'), BB.HIRG_YMD+ NVL(GUNHUJICKIL,0))/12))),2)=0
												   			  THEN ((trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD'), BB.HIRG_YMD+ NVL(GUNHUJICKIL,0))/12))/2) + 15 -- 짝수인경우
													    WHEN  MOD((trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD'), BB.HIRG_YMD + NVL(GUNHUJICKIL,0))/12)),2)=1
															  THEN TRUNC((trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD') , BB.HIRG_YMD+ NVL(GUNHUJICKIL,0))/12))/2) + 15   -- 홀수인경우
														WHEN  (trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD') , BB.HIRG_YMD+ NVL(GUNHUJICKIL,0))/12)) > 11
															  THEN 10  + 15
														ELSE 15
														END)                                                        -- 근무일수가 8할미만은 연차가 없다.
                                                END
                                           ELSE
												(CASE WHEN  MOD(( (trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD'), BB.HIRG_YMD+ NVL(GUNHUJICKIL,0))/12))),2)=0
										   			  THEN ((trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD'), BB.HIRG_YMD+ NVL(GUNHUJICKIL,0))/12))/2) + 15 -- 짝수인경우
											    WHEN  MOD((trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD'), BB.HIRG_YMD + NVL(GUNHUJICKIL,0))/12)),2)=1
													  THEN TRUNC((trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD') , BB.HIRG_YMD+ NVL(GUNHUJICKIL,0))/12))/2) + 15   -- 홀수인경우
												WHEN  (trunc(months_between(to_date(?||'0101', 'YYYY-MM-DD') , BB.HIRG_YMD+ NVL(GUNHUJICKIL,0))/12)) > 11
													  THEN 10  + 15
												ELSE 15
												END)
												END
                                 WHEN SUBSTR(TO_CHAR(BB.HIRG_YMD,'YYYYMMDD'),1,4) = (?-1)                             -- 중도 입사자 년차발생(입사일 기준으로  일할 계산)
									 THEN
									  			ROUND( 15 * ((to_date(?||'0101', 'YYYY-MM-DD') - BB.HIR_YMD) / 365) )
						             ELSE 0
						        END YRP_M1
                    FROM   (SELECT  A.ENO_NO AS ENO_NO,
                                    HUJICKIL,    -- 휴직일
                                    KYULKEUNIL,  -- 결근일
                                    GUNHUJICKIL  -- 군휴직일
                            FROM    ASNHR.VI_T_CM_PERSON A,
                                    (SELECT  ENO_NO,
                                             NVL(SUM(TO_DATE(LEAST(NVL(RTRIM(END_YMD),(?
                                             - 1)||'1231'),(? - 1)||'1231'),'YYYYMMDD')
                                             - TO_DATE(GREATEST(STR_YMD,(? - 1)||'0101'),
                                             'YYYYMMDD') + 1),0) HUJICKIL
                                     FROM    ASNHR.T_CM_AHISTORY
                                     WHERE   (JCD_CD = 'L25' OR JCD_CD = 'L26' OR JCD_CD = 'L27')
                                     AND NOT (STR_YMD > (? - 1)||'1231'
                                     OR      NVL(RTRIM(END_YMD),(? - 1)||'1231') <
                                             (? - 1)||'0101')
                                     GROUP BY ENO_NO
                                    ) B,                                                     -- 휴직일
                                    (SELECT ENO_NO,
                                            NVL(SUM(NVL(ATT_A,0) + NVL(ATT_B,0)),0) KYULKEUNIL
                                     FROM   ASNHR.T_DI_DILIGENCE
                                     WHERE  PIS_YY = (? - 1)
                                     GROUP BY ENO_NO
                                    ) C,                                                     -- 결근일
                                    (SELECT ENO_NO,
                                          (TO_DATE(MAX(END_YMD),'YYYYMMDD')+1) - TO_DATE(MIN(STR_YMD),'YYYYMMDD') AS GUNHUJICKIL
                                     FROM ASNHR.T_CM_AHISTORY
                                     WHERE JCD_CD='L29'
                                     GROUP BY ENO_NO
                                    ) E,                                                     --군휴직일
                                     ASNHR.T_CM_COMMON D
                            WHERE     A.ENO_NO = B.ENO_NO (+)
                            AND       A.ENO_NO = C.ENO_NO (+)
                            AND       A.ENO_NO = E.ENO_NO (+)
                            AND       A.HIRG_YMD <= ?||'0101'
                            AND      (A.RET_YMD IS NULL OR RET_YMD >= ?||'0101')
                            AND       D.CD_GBN = 'A2'
                            AND       D.COMM_CD = A.JOB_CD
                            AND       A.JOB_CD NOT IN ('A9','A7')
                           ) AA,                                                             -- 휴직일 및 결근일을 구한다.
                           ASNHR.VI_T_CM_PERSON BB
                    where  BB.eno_no = AA.eno_no(+)
                    AND   (BB.JOB_CD BETWEEN '140' AND '300' OR BB.JOB_CD = '700' OR BB.JOB_CD = '890')
                           AND BB.OCC_CD IN  ('0','1','2','3','4','5','8') -- 직위 / 직종 제외자
                   ) AAA
            ]]>
        </query>
    </sql>

    <!-- 연차발생관리 삭제 -->
    <sql name="GUND030_DEL">
        <description>연차발생관리 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_DI_YEARLY
			WHERE  PIS_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 연차발생관리 수정(미사용) -->
    <sql name="GUND030_UPT">
        <description>연차발생관리 수정(미사용)</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_YEARLY
            SET    YRP_M1       = ?,
                   YRP_M2       = ?,
                   YRP_M3       = ?,
                   YRP_M4       = ?,
                   YRP_M5       = ?,
                   YRP_M6       = ?,
                   YRP_M7       = ?,
                   YRP_M8       = ?,
                   YRP_M9       = ?,
                   YRP_M10      = ?,
                   YRP_M11      = ?,
                   YRP_M12      = ?,
                   AYRP_M1      = ?,
                   AYRP_M2      = ?,
                   AYRP_M3      = ?,
                   AYRP_M4      = ?,
                   AYRP_M5      = ?,
                   AYRP_M6      = ?,
                   AYRP_M7      = ?,
                   AYRP_M8      = ?,
                   AYRP_M9      = ?,
                   AYRP_M10     = ?,
                   AYRP_M11     = ?,
                   AYRP_M12     = ?,
                   YRP_CNT      = ?,
                   AYRP_CNT     = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  PIS_YY       = ?
            AND    ENO_NO       = ?
            ]]>
        </query>
    </sql>


<!-- 휴가계획관리 -->
<!--
***********************************************************************
* @UseCase     : GUNB050
* @description : 리프레시휴가기준관리
***********************************************************************
* 2006/11/29     한학현        최초작성.
***********************************************************************
-->
    <!-- 리프레시휴가기준관리 조회 -->
    <sql name="GUNB050_SHR">
        <description>리프레시휴가기준관리 조회</description>
        <query>
            <![CDATA[
            SELECT   DECODE(NVL(BASIC_YMD,''),'','',SUBSTR(BASIC_YMD,1,4)||'-'||SUBSTR(BASIC_YMD,5,2)||'-'||SUBSTR(BASIC_YMD,7,2)) AS BASIC_YMD, LSE_YY,
                     ATT_Z, ATT_S, SUM_DAY
            FROM     T_DI_REFRESH
            WHERE    NVL(BASIC_YMD,' ') LIKE '%'||?||'%'
            ORDER BY BASIC_YMD DESC, LSE_YY
            ]]>
        </query>
    </sql>

    <!-- 리프레시휴가기준관리 기준일 조회 -->
    <sql name="GUNB050_SHR_01">
        <description>리프레시휴가기준관리 기준일 조회</description>
        <query>
            <![CDATA[
            SELECT MAX(BASIC_YMD) AS BASIC_YMD FROM T_DI_REFRESH
            ]]>
        </query>
    </sql>

    <!-- 리프레시휴가기준관리 신규 저장. -->
    <sql name="GUNB050_INS">
        <description>리프레시휴가기준관리 신규 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_DI_REFRESH
                 ( BASIC_YMD, LSE_YY,
                   ATT_Z, ATT_S, SUM_DAY,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            VALUES
                 (  ?, ?,
                    ?, ?, ?,
                    ?, SYSDATE,?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 리프레시휴가기준관리 수정. -->
    <sql name="GUNB050_UPT">
        <description>리프레시휴가기준관리 수정</description>
        <query>
            <![CDATA[
            UPDATE T_DI_REFRESH
            SET    ATT_Z = ?, --연차휴가일수
                   ATT_S = ?, --유급휴가일수
                   SUM_DAY = ?, --합계
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  BASIC_YMD = ? --기준일
            AND    LSE_YY = ? --근속년수
            ]]>
        </query>
    </sql>

    <!-- 리프레시휴가기준관리 삭제 -->
    <sql name="GUNB050_DEL">
        <description>리프레시휴가기준관리 삭제</description>
        <query>
            <![CDATA[
            DELETE T_DI_REFRESH
            WHERE  BASIC_YMD = ?
            AND    LSE_YY = ?
            ]]>
        </query>
    </sql>

<!-- 휴가계획관리 -->
<!--
***********************************************************************
* @UseCase     : GUNB030
* @description : 휴가계획서입력현황
***********************************************************************
* 2006/02/20     김학수        최초작성.
***********************************************************************
-->
    <!-- 휴가계획서입력현황 조회 -->
    <sql name="GUNB030_SHR">
        <description>휴가계획서입력현황</description>
        <query>
            <![CDATA[
            SELECT DPT_CD, DPT_NM, END_TAG, ENO_CNT, YEAR, HALF, ETC, ENO_NO, ENO_NM
            FROM
            (SELECT  A.DPT_CD, A.DPT_NM,
                     DECODE(B.DPT_CD,'','미입력',DECODE(B.END_TAG,'Y','완료','저장')) AS END_TAG,
                     C.ENO_CNT,
                     C.YEAR, C.HALF, C.ETC,
                     D.ENO_NO, D.ENO_NM
             FROM   (SELECT DPT_CD, DPT_NM, SORT_NO
                     FROM   T_CM_DEPT
                     WHERE  CD_GBN='A4'
                     AND    SORT_NO BETWEEN 100 AND 750
                     AND    DPT_CD NOT IN ('AV','AA')
                    ) A,
                    (SELECT DISTINCT(DPT_CD) DPT_CD, END_TAG
                     FROM   T_DI_PLAN
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                    )B,
                    (SELECT DPT_CD, COUNT(*) ENO_CNT,
                            SUM(NVL(ATT_H,0)) YEAR,
                            SUM(NVL(ATT_P,0))+SUM(NVL(ATT_R,0))+SUM(NVL(ATT_V,0)) HALF,
                            SUM(NVL(ATT_Q,0))+SUM(NVL(ATT_Z,0))+SUM(NVL(ATT_I,0)) ETC
                     FROM   T_DI_PLAN
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     GROUP BY DPT_CD
                    )C,
                    (SELECT B.DPT_CD, A.ENO_NO, B.ENO_NM, C.SORT_NO
                     FROM   T_DI_PLAN A, T_CM_PERSON B, T_CM_COMMON C
                     WHERE  A.PIS_YY = ?
                     AND    A.PIS_MM = ?
                     AND    NVL(A.ATT_H,0) = 0
                     AND    NVL(A.ATT_P,0) = 0
                     AND    NVL(A.ATT_R,0) = 0
                     AND    NVL(A.ATT_V,0) = 0
                     AND    NVL(A.ATT_Q,0) = 0
                     AND    NVL(A.ATT_Z,0) = 0
                     AND    NVL(A.ATT_S,0) = 0
                     AND    NVL(A.ATT_I,0) = 0
                     AND    A.ENO_NO = B.ENO_NO
                     AND    A.OCC_CD = 'A'
                     AND    B.JOB_CD = C.COMM_CD
                     AND    C.CD_GBN  = 'A2'
                    ) D
             WHERE  A.DPT_CD = B.DPT_CD(+)
             AND    A.DPT_CD = C.DPT_CD(+)
             AND    A.DPT_CD = D.DPT_CD(+)
             ORDER BY A.SORT_NO, D.SORT_NO
            )
            WHERE NVL(DPT_CD,' ') LIKE '%'||?||'%'
            AND   NVL(END_TAG,' ') LIKE '%'||?||'%'
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNA090
* @description : 일자별근태현황
***********************************************************************
* 2007/02/23     김학수        최초작성.
***********************************************************************
-->
    <!-- 일자별근태현황 소속인원을 조회 한다. -->
    <sql name="GUNA090_SHR">
        <description>일자별근태현황 소속인원 조회</description>
        <query>
            <![CDATA[
			SELECT A.DPT_CD        AS DPT_CD,
			       MAX(B.DPT_NM)   AS DPT_NM,
			       COUNT(*)        AS ENO_CNT,
			       MIN(B.GBN_CD) AS GBN2_TAG
			FROM  (SELECT OCC_CD,
                          DPT_CD,
                          HIR_YMD,
                          RET_YMD
                   FROM   T_CM_PERSON) A,
			      (SELECT * FROM T_CM_DEPT WHERE CD_GBN='A4') B
			WHERE  TO_CHAR(A.HIR_YMD,'YYYYMMDD') <= ?
			AND   (A.RET_YMD IS NULL OR TO_CHAR(A.RET_YMD,'YYYYMMDD') >= ?)
			AND    A.OCC_CD LIKE '%'||?||'%'
			AND    A.DPT_CD = B.DPT_CD(+)
			GROUP BY A.DPT_CD
			ORDER BY MAX(NVL(B.SORT_NO,0)),A.DPT_CD
            ]]>
        </query>
    </sql>

    <!-- 소속별 근태현황 조회 -->
    <sql name="GUNA090_SHR_01">
        <description>소속별 근태현황 조회</description>
        <query>
            <![CDATA[
			SELECT A.DPT_CD,
			       A.ENO_NO,
			       B.ENO_NM,
			       NVL(A.[1],' ') AS ATT_CD,
			       C.REMARK
			FROM   T_DI_DILIGENCE A,
			      (SELECT ENO_NO,
			              ENO_NM,
			              JOB_CD,
			              SF_GET_COMMNAME('01','A2',JOB_CD) AS JOB_NM,
			              SF_GET_COMMSEQ('01','A2',JOB_CD) AS JOB_SEQ
			       FROM   T_CM_PERSON
			       WHERE  TO_CHAR(HIR_YMD,'YYYYMMDD')  <= ?
			       AND   (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') >= ?)
			       AND    DPT_CD = ?
			       AND    OCC_CD LIKE '%'||?||'%') B,
			       (SELECT * FROM T_DI_DILIGENCE_DTL WHERE PIS_DD = SUBSTR(?,7,2)) C
			WHERE  A.PIS_YY = SUBSTR(?,1,4)
			AND    A.PIS_MM = SUBSTR(?,5,2)
			AND    A.ENO_NO = B.ENO_NO
			AND    A.ENO_NO = C.ENO_NO(+)
			AND    A.PIS_YY = C.PIS_YY(+)
			AND    A.PIS_MM = C.PIS_MM(+)
			ORDER BY B.JOB_SEQ, B.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 연차일자조회 -->
    <sql name="GUNA090_SHR_02">
        <description>연차일자조회</description>
        <query>
            <![CDATA[
			SELECT SUBSTR(A.GUN||B.GUN, 32-SUBSTR(?,7,2), 62) GUN_CD,
			       LENGTH(SUBSTR(A.GUN||B.GUN, 32-SUBSTR(?,7,2), 62)) GUN_CD_LEN
			FROM  (SELECT ENO_NO,
			              NVL(AT31_CD,' ')||NVL(AT30_CD,' ')||NVL(AT29_CD,' ')||
			              NVL(AT28_CD,' ')||NVL(AT27_CD,' ')||NVL(AT26_CD,' ')||
			              NVL(AT25_CD,' ')||NVL(AT24_CD,' ')||NVL(AT23_CD,' ')||
			              NVL(AT22_CD,' ')||NVL(AT21_CD,' ')||NVL(AT20_CD,' ')||
			              NVL(AT19_CD,' ')||NVL(AT18_CD,' ')||NVL(AT17_CD,' ')||
			              NVL(AT16_CD,' ')||NVL(AT15_CD,' ')||NVL(AT14_CD,' ')||
			              NVL(AT13_CD,' ')||NVL(AT12_CD,' ')||NVL(AT11_CD,' ')||
			              NVL(AT10_CD,' ')||NVL(AT9_CD, ' ')||NVL(AT8_CD, ' ')||
			              NVL(AT7_CD, ' ')||NVL(AT6_CD, ' ')||NVL(AT5_CD, ' ')||
			              NVL(AT4_CD, ' ')||NVL(AT3_CD, ' ')||NVL(AT2_CD, ' ')||
			              NVL(AT1_CD, ' ') GUN
			       FROM   T_DI_DILIGENCE
			       WHERE  PIS_YY = SUBSTR(?,1,4)
			       AND    PIS_MM = SUBSTR(?,5,2)
			       AND    ENO_NO = ?) A,
			      (SELECT ENO_NO,
			              NVL(AT31_CD,' ')||NVL(AT30_CD,' ')||NVL(AT29_CD,' ')||
			              NVL(AT28_CD,' ')||NVL(AT27_CD,' ')||NVL(AT26_CD,' ')||
			              NVL(AT25_CD,' ')||NVL(AT24_CD,' ')||NVL(AT23_CD,' ')||
			              NVL(AT22_CD,' ')||NVL(AT21_CD,' ')||NVL(AT20_CD,' ')||
			              NVL(AT19_CD,' ')||NVL(AT18_CD,' ')||NVL(AT17_CD,' ')||
			              NVL(AT16_CD,' ')||NVL(AT15_CD,' ')||NVL(AT14_CD,' ')||
			              NVL(AT13_CD,' ')||NVL(AT12_CD,' ')||NVL(AT11_CD,' ')||
			              NVL(AT10_CD,' ')||NVL(AT9_CD, ' ')||NVL(AT8_CD, ' ')||
			              NVL(AT7_CD, ' ')||NVL(AT6_CD, ' ')||NVL(AT5_CD, ' ')||
			              NVL(AT4_CD, ' ')||NVL(AT3_CD, ' ')||NVL(AT2_CD, ' ')||
			              NVL(AT1_CD, ' ') GUN
			       FROM   T_DI_DILIGENCE
			       WHERE  PIS_YY = DECODE(SUBSTR(?,5,2),'01',
			                              SUBSTR(?,1,4)-1,SUBSTR(?,1,4))
			       AND    PIS_MM = DECODE(SUBSTR(?,5,2),'01','12',
			                              TO_CHAR(SUBSTR(?,5,2)-1,'FM00'))
			       AND    ENO_NO = ?) B
		    WHERE  A.ENO_NO = B.ENO_NO(+)
            ]]>
        </query>
    </sql>

    <!-- 일자별근태현황인쇄 -->
    <sql name="GUNA090_SHR_PRINT">
        <description>일자별근태현황인쇄</description>
        <query>
            <![CDATA[
            SELECT GBN2_TAG,
                   SEQ,
                   DPT_CD ,
                   CASE WHEN DPT_NM IS NULL AND GBN2_TAG = '1'    THEN '본 사'
                        WHEN DPT_NM IS NULL AND GBN2_TAG = '9'    THEN '지 점'
                        WHEN DPT_NM IS NULL AND GBN2_TAG IS NULL  THEN '일 계'
                        ELSE DPT_NM
                   END AS DPT_NM,
                   CASE WHEN DPT_NM IS NULL AND GBN2_TAG = '1'   THEN CNT1
                        WHEN DPT_NM IS NULL AND GBN2_TAG = '9'   THEN CNT2
                        WHEN DPT_NM IS NULL AND GBN2_TAG IS NULL THEN CNT3
                        ELSE ENO_CNT
                   END AS ENO_CNT,
                   SA_CNT,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(E_ENO)   ELSE E   END AS E,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(UT_ENO)  ELSE UT  END AS UT,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(FG_ENO)  ELSE FG  END AS FG,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(Q_ENO)   ELSE Q   END AS Q,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(PRV_ENO) ELSE PRV END AS PRV,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(H_ENO)   ELSE H   END AS H,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(ZS_ENO)  ELSE ZS  END AS ZS,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(I_ENO)   ELSE I   END AS I,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(AB_ENO)  ELSE AB  END AS AB,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(LJK_ENO) ELSE LJK END AS LJK,
                   CASE WHEN SEQ IS NULL THEN TO_CHAR(C_ENO)   ELSE C   END AS C
            FROM  (SELECT MA.GBN2_TAG,
                          MA.SEQ,
                          MA.DPT_CD,
                          MA.DPT_NM,
                          MIN(MA.ENO_CNT)    AS ENO_CNT,
                          SUM(NVL(SA_CNT,0)) AS SA_CNT,
                          MIN(E)             AS E,
                          SUM(E_ENO)         AS E_ENO,
                          MIN(UT)            AS UT,
                          SUM(UT_ENO)        AS UT_ENO,
                          MIN(FG)            AS FG,
                          SUM(FG_ENO)        AS FG_ENO,
                          MIN(Q)             AS Q,
                          SUM(Q_ENO)         AS Q_ENO,
                          MIN(PRV)           AS PRV,
                          SUM(PRV_ENO)       AS PRV_ENO,
                          MIN(H)             AS H,
                          SUM(H_ENO)         AS H_ENO,
                          MIN(ZS)            AS ZS,
                          SUM(ZS_ENO)        AS ZS_ENO,
                          MIN(I)             AS I,
                          SUM(I_ENO)         AS I_ENO,
                          MIN(AB)            AS AB,
                          SUM(AB_ENO)        AS AB_ENO,
                          MIN(LJK)           AS LJK,
                          SUM(LJK_ENO)       AS LJK_ENO,
                          MIN(C )            AS C,
                          SUM(C_ENO)         AS C_ENO,
                          MIN(MC.CNT1)       AS CNT1,
                          MIN(MC.CNT2)       AS CNT2,
                          MIN(MC.CNT3)       AS CNT3
                   FROM  (SELECT MIN(B.GBN2_TAG)          AS GBN2_TAG,
                                 A.DPT_CD AS DPT_CD,
                                 MAX(B.DPT_NM)            AS DPT_NM,
                                 COUNT(*)                 AS ENO_CNT,
                                 MAX(NVL(B.SORT_NO,0))    AS SEQ
                          FROM   T_CM_PERSON A,
                                (SELECT * FROM T_CM_DEPT WHERE CD_GBN = 'A4') B
                          WHERE  TO_CHAR(A.HIR_YMD,'YYYYMMDD') <= ?
                          AND   (A.RET_YMD IS NULL OR TO_CHAR(A.RET_YMD,'YYYYMMDD') >= ?)
                          AND    A.DPT_CD = B.DPT_CD
                          [1]
                          GROUP BY A.DPT_CD
                         ) MA,
                         (SELECT DPT_CD,
                                 DPT_NM,
                                 DPT_SEQ,
                                 REMARK,
                                 SUM(SA_CNT)              AS SA_CNT,
                                 MAX(REPLACE(E,',',''))   AS E,
                                 SUM(E_ENO)               AS E_ENO,
                                 MAX(REPLACE(UT,',',''))  AS UT,
                                 SUM(UT_ENO)              AS UT_ENO,
                                 MAX(REPLACE(FG,',',''))  AS FG,
                                 SUM(FG_ENO)              AS FG_ENO,
                                 MAX(REPLACE(Q,',',''))   AS Q,
                                 SUM(Q_ENO)               AS Q_ENO,
                                 MAX(REPLACE(PRV,',','')) AS PRV,
                                 SUM(PRV_ENO)             AS PRV_ENO,
                                 MAX(REPLACE(H,',',''))   AS H,
                                 SUM(H_ENO)               AS H_ENO,
                                 MAX(REPLACE(ZS,',',''))  AS ZS,
                                 SUM(ZS_ENO)              AS ZS_ENO,
                                 MAX(REPLACE(I,',',''))   AS I,
                                 SUM(I_ENO)               AS I_ENO,
                                 MAX(REPLACE(AB,',',''))  AS AB,
                                 SUM(AB_ENO)              AS AB_ENO,
                                 MAX(REPLACE(LJK,',','')) AS LJK,
                                 SUM(LJK_ENO)             AS LJK_ENO,
                                 MAX(REPLACE(C,',',''))   AS C,
                                 SUM(C_ENO)               AS C_ENO
                          FROM  (SELECT DPT_CD,
                                        DPT_NM,
                                        DPT_SEQ,
                                        ATT_CD,
                                        MIN(REMARK) REMARK,
                                        COUNT(SA_CNT)                             AS SA_CNT,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (E, ',')), 1)   AS E,
                                        COUNT(E)                                         AS E_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (UT, ',')), 1)  AS UT,
                                        COUNT(UT)                                        AS UT_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (FG, ',')), 1)  AS FG,
                                        COUNT(FG)                                        AS FG_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (Q, ',')), 1)   AS Q,
                                        COUNT(Q)                                         AS Q_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (PRV, ',')), 1) AS PRV,
                                        COUNT(PRV)                                       AS PRV_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (H, ',')), 1)   AS H,
                                        COUNT(H)                                         AS H_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (ZS, ',')), 1)  AS ZS,
                                        COUNT(ZS)                                        AS ZS_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (I, ',')), 1)   AS I,
                                        COUNT(I)                                         AS I_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (AB, ',')), 1)  AS AB,
                                        COUNT(AB)                                        AS AB_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (LJK, ',')), 1) AS LJK,
                                        COUNT(LJK)                                       AS LJK_ENO,
                                        SUBSTR (MAX (SYS_CONNECT_BY_PATH (C, ',')), 1)   AS C,
                                        COUNT(C)                                         AS C_ENO
                                 FROM  (SELECT DPT_CD,
                                               SF_GET_DPTNAME('01','A4',DPT_CD) AS DPT_NM,
                                               SF_GET_DPTSEQ('01','A4',DPT_CD)  AS DPT_SEQ,
                                               ENO_NO,
                                               SA_CNT,
                                               E,
                                               UT,
                                               FG,
                                               Q,
                                               PRV,
                                               H,
                                               ZS,
                                               I,
                                               AB,
                                               LJK,
                                               C,
                                               ATT_CD,
                                               REMARK,
                                               ROW_NUMBER () OVER (PARTITION BY DPT_CD,ATT_CD ORDER BY DPT_CD,ATT_CD) AS RNUM
                                        FROM  (SELECT DPT_CD,
                                                      ENO_NO,
                                                      SA_CNT,
                                                      CASE WHEN LENGTH(E)  >= 2 AND ECNT  >  1 THEN E||'('||ECNT||'일)'||CHR(13)||CHR(10)
                                                           WHEN LENGTH(E)  >= 2 AND ECNT  <= 1 THEN E||CHR(13)||CHR(10)
                                                      END AS E,
                                                      CASE WHEN LENGTH(UT) >= 2 AND UTCNT >  1 THEN UT||'('||UTCNT||'일)'||CHR(13)||CHR(10)
                                                           WHEN LENGTH(UT) >= 2 AND UTCNT <= 1 THEN UT||CHR(13)||CHR(10)
                                                      END AS UT,
                                                      CASE WHEN LENGTH(FG) >= 2 AND FGCNT >  1 THEN FG||'('||FGCNT||'일)'||CHR(13)||CHR(10)
                                                           WHEN LENGTH(FG) >= 2 AND FGCNT <= 1 THEN FG||CHR(13)||CHR(10)
                                                      END AS FG,
                                                      CASE WHEN LENGTH(Q)  >= 2  AND LENGTH(REMARK) > 2 THEN Q||'('||REMARK||')'||CHR(13)||CHR(10)
                                                           ELSE NULL
                                                      END AS Q,
                                                      CASE WHEN LENGTH(PRV) >= 2 AND PRVCNT >  1 THEN PRV||'('||PRVCNT||'일)'||CHR(13)||CHR(10)
                                                           WHEN LENGTH(PRV) >= 2 AND PRVCNT <= 1 THEN PRV||CHR(13)||CHR(10)
                                                      END AS PRV,
                                                      CASE WHEN LENGTH(H)   >= 2 AND HCNT   >  1 THEN H||'('||HCNT||'일)'||CHR(13)||CHR(10)
                                                           WHEN LENGTH(H)   >= 2 AND HCNT   <= 1 THEN H||CHR(13)||CHR(10)
                                                      END AS H,
                                                      CASE WHEN LENGTH(ZS)  >= 2 AND ZSCNT  >  1 THEN ZS||'('||ZSCNT||'일)'||CHR(13)||CHR(10)
                                                           WHEN LENGTH(ZS)  >= 2 AND ZSCNT  <= 1 THEN ZS||CHR(13)||CHR(10)
                                                      END AS ZS,
                                                      --CASE WHEN LENGTH(I)   >= 2 AND ICNT   >  1 THEN I||'('||ICNT||'일)'||CHR(13)||CHR(10)
                                                      --     WHEN LENGTH(I)   >= 2 AND ICNT   <= 1 THEN I||CHR(13)||CHR(10)
                                                      --END AS I,
                                                      CASE WHEN LENGTH(I)   >= 2 AND LENGTH(REMARK) > 2 THEN I||CHR(13)||CHR(10)||'('||REMARK||')'||CHR(13)||CHR(10)
                                                           ELSE NULL
                                                      END AS I,
                                                      CASE WHEN LENGTH(AB)  >= 2 AND ABCNT  >  1 THEN AB||'('||ABCNT||'일)'||CHR(13)||CHR(10)
                                                           WHEN LENGTH(AB)  >= 2 AND ABCNT  <= 1 THEN AB||CHR(13)||CHR(10)
                                                      END AS AB,
                                                      CASE WHEN LENGTH(LJK) >= 2 AND LENGTH(GITA) >  1 THEN LJK||'('||GITA||')'||CHR(13)||CHR(10)
                                                           WHEN LENGTH(LJK) >= 2 AND LENGTH(GITA) <= 1 THEN LJK||CHR(13)||CHR(10)
                                                      END AS LJK,
                                                      CASE WHEN LENGTH(C) >= 2 THEN C||CHR(13)||CHR(10)
                                                      END AS C,
                                                      ATT_CD,
                                                      REMARK
                                               FROM  (SELECT B.DPT_CD,   --인사기록표에 있는 소속으로 변경(소속 이동이 있을수 있음)
                                                             A.ENO_NO,
                                                             CASE WHEN NVL(A.[2],' ') IN ('F','G','Q','P','R','V','H','Z','S','I','A','B','L','J','K') THEN B.ENO_NM
                                                             END AS SA_CNT,
                                                             CASE WHEN NVL(A.[3],' ') = 'E'                THEN B.ENO_NM
                                                             END AS E,
                                                             CASE WHEN NVL(A.[4],' ') = 'E'
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'E','ZZ','ZZ')
                                                                  ELSE 0
                                                             END AS ECNT,
                                                             CASE WHEN NVL(A.[5],' ') IN ('U','T')         THEN B.ENO_NM
                                                             END AS UT,
                                                             CASE WHEN NVL(A.[6],' ') IN ('U','T')
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'U','T','ZZ')
                                                                  ELSE 0
                                                             END AS UTCNT,
                                                             CASE WHEN NVL(A.[7],' ') IN ('F')         THEN B.ENO_NM
                                                             END AS FG,
                                                             CASE WHEN NVL(A.[8],' ') IN ('F')
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'F','G','ZZ')
                                                                  ELSE 0
                                                             END AS FGCNT,
                                                             CASE WHEN NVL(A.[9],' ')  = 'Q'             THEN B.ENO_NM
                                                             END AS Q,
                                                             CASE WHEN NVL(A.[10],' ') = 'Q'
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'Q','ZZ','ZZ')
                                                                  ELSE 0
                                                             END AS QCNT,
                                                             CASE WHEN NVL(A.[11],' ') IN ('P','R','V')     THEN B.ENO_NM
                                                             END AS PRV,
                                                             CASE WHEN NVL(A.[12],' ') IN ('P','R','V')
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'P','R','V')
                                                                  ELSE 0
                                                             END AS PRVCNT,
                                                             CASE WHEN NVL(A.[13],' ') = 'H'             THEN B.ENO_NM
                                                             END AS H,
                                                             CASE WHEN NVL(A.[14],' ') = 'H'
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'H','ZZ','ZZ')
                                                                  ELSE 0
                                                             END AS HCNT,
                                                             CASE WHEN NVL(A.[15],' ') IN ('Z','S')         THEN B.ENO_NM
                                                             END AS ZS,
                                                             CASE WHEN NVL(A.[16],' ') IN ('Z','S')
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'Z','S','ZZ')
                                                                  ELSE 0
                                                             END AS ZSCNT,
                                                             CASE WHEN NVL(A.[17],' ') = 'I'             THEN B.ENO_NM
                                                             END AS I,
                                                             CASE WHEN NVL(A.[18],' ') = 'I'
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'I','ZZ','ZZ')
                                                                  ELSE 0
                                                             END AS ICNT,
                                                             CASE WHEN NVL(A.[19],' ') IN ('A','B')         THEN B.ENO_NM
                                                             END AS AB,
                                                             CASE WHEN NVL(A.[20],' ') IN ('A','B')
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'A','B','ZZ')
                                                                  ELSE 0
                                                             END AS ABCNT,
                                                             CASE WHEN NVL(A.[21],' ') IN ('L','J','K','G')     THEN B.ENO_NM
                                                             END AS LJK,
                                                             CASE WHEN NVL(A.[22],' ') =  'L' THEN '사고'
                                                                  WHEN NVL(A.[23],' ') =  'J' THEN '여직원휴가'
                                                                  WHEN NVL(A.[24],' ') =  'K' THEN '휴직'
                                                                  WHEN NVL(A.[25],' ') =  'G' THEN '훈련'
                                                             END AS GITA,
                                                             CASE WHEN NVL(A.[26],' ') = 'C'             THEN B.ENO_NM
                                                             END AS C,
                                                             CASE WHEN NVL(A.[27],' ') = 'C'
                                                                  THEN SF_GET_GUNTAECNT(?,SUBSTR(?,1,6),B.ENO_NO,'C','ZZ','ZZ')
                                                                  ELSE 0
                                                             END AS CCNT,
                                                             NVL(A.[28],' ') AS ATT_CD,
                                                             C.REMARK
                                                      FROM  (SELECT *
                                                             FROM   T_DI_DILIGENCE
                                                             WHERE  PIS_YY = SUBSTR(?,1,4)
                                                             AND    PIS_MM = SUBSTR(?,5,2)
                                                             AND    NVL([29],' ') <> 'W'
                                                            ) A,
                                                            (SELECT A.ENO_NO,
                                                                    A.ENO_NM,
                                                                    A.DPT_CD AS DPT_CD,
                                                                    A.JOB_CD,
                                                                    SF_GET_COMMSEQ('01','A2',A.JOB_CD) AS JOB_SEQ
                                                             FROM   T_CM_PERSON A
                                                             WHERE  TO_CHAR(A.HIR_YMD,'YYYYMMDD')  <= ?
                                                             AND   (A.RET_YMD IS NULL OR TO_CHAR(A.RET_YMD,'YYYYMMDD') >= ?)
                                                             [30]
                                                            ) B,
                                                            (SELECT *
                                                             FROM   T_DI_DILIGENCE_DTL
                                                             WHERE  PIS_YY = SUBSTR(?,1,4)
                                                             AND    PIS_MM = SUBSTR(?,5,2)
                                                             AND    PIS_DD = SUBSTR(?,7,2)
                                                            ) C
                                                      WHERE  A.ENO_NO = B.ENO_NO
                                                      AND    A.ENO_NO = C.ENO_NO(+)
                                                      AND    A.PIS_YY = C.PIS_YY(+)
                                                      AND    A.PIS_MM = C.PIS_MM(+)
                                                      ORDER BY B.JOB_SEQ, B.ENO_NO
                                                     )
                                              ) SUB
                                       )
                                 START WITH RNUM = 1
                                 CONNECT BY PRIOR RNUM = RNUM - 1 AND PRIOR DPT_CD = DPT_CD AND PRIOR ATT_CD = ATT_CD
                                 GROUP BY DPT_CD , DPT_NM , DPT_SEQ , ATT_CD --, REMARK
                                )
                          --WHERE DPT_SEQ > 0
                          GROUP BY DPT_CD,DPT_NM, DPT_SEQ ,REMARK
                         ) MB,
                         (SELECT A.CNT CNT1, B.CNT CNT2, A.CNT+B.CNT CNT3
                            FROM (SELECT COUNT(*) CNT FROM  T_CM_PERSON A, T_CM_DEPT B
                           WHERE TO_CHAR(A.HIR_YMD,'YYYYMMDD') <= ?
                             AND (A.RET_YMD IS NULL OR TO_CHAR(A.RET_YMD,'YYYYMMDD') >= ?)
                             AND A.DPT_CD = B.DPT_CD AND B.CD_GBN = 'A4' AND B.GBN2_TAG = '1') A,
                         (SELECT COUNT(*) CNT FROM  T_CM_PERSON A, T_CM_DEPT B
                           WHERE TO_CHAR(A.HIR_YMD,'YYYYMMDD') <= ?
                             AND (A.RET_YMD IS NULL OR TO_CHAR(A.RET_YMD,'YYYYMMDD') >= ?)
                             AND A.DPT_CD = B.DPT_CD AND B.CD_GBN = 'A4' AND B.GBN2_TAG = '9') B
                         ) MC
                   WHERE  MA.DPT_CD = MB.DPT_CD(+)
                --   AND    MA.SEQ > 0
                   GROUP BY ROLLUP(MA.GBN2_TAG,MA.SEQ,MA.DPT_CD,MA.DPT_NM)
                   ORDER BY MA.SEQ, MA.DPT_CD
                  ) MAIN
            WHERE  DPT_NM IS NOT NULL OR GBN2_TAG IS NULL OR ( SEQ IS NULL)
            ORDER BY GBN2_TAG, SEQ, DPT_CD
            ]]>
        </query>
    </sql>

    <!-- 일자별근태현황을 조회 한다.(미사용) -->
    <sql name="GUNA090_SHR_OLD">
        <description>일자별근태현황 조회</description>
        <query>
            <![CDATA[
      SELECT 	F.DPT_CD          DPT_CD
          , DECODE(R.R,NULL,F.DPT_NM,'1',F.DPT_NM,'')              DPT_NM
          , DECODE(R.R,NULL,F.ENO_NO_CNT,'1',F.ENO_NO_CNT,'')      ENO_NO_CNT
          , DECODE(R.R,NULL,F.S_AT5_CNT,'1',F.S_AT5_CNT,'')        S_AT5_CNT
          , DECODE(R.R,NULL,F.SAGO_CNT,'1',F.SAGO_CNT,'')          SAGO_CNT
          , R.ENO_NO_E           ENO_NO_E
          , R.ENO_NO_T           ENO_NO_T
          , R.ENO_NO_F           ENO_NO_F
          , R.ENO_NO_Q           ENO_NO_Q
          , R.ENO_NO_RUV         ENO_NO_RUV
          , R.ENO_NO_H           ENO_NO_H
          , R.ENO_NO_Z           ENO_NO_Z
          , R.ENO_NO_I           ENO_NO_I
          , R.ENO_NO_AB          ENO_NO_AB
          , R.ENO_NO_L           ENO_NO_L
          , R.ENO_NO_C           ENO_NO_C
          , F.GBN2_TAG           GBN2_TAG
        FROM (

          SELECT N.DPT_CD    DPT_CD
              ,N.DPT_NM    DPT_NM
              ,N.ENO_NO_CNT   ENO_NO_CNT
              ,S.AT5_CNT   S_AT5_CNT
              ,N.ENO_NO_CNT - NVL(C.AT5_CNT,0)  SAGO_CNT
              ,N.GBN2_TAG                       GBN2_TAG
            FROM (
              SELECT MAX(DPT_CD)   DPT_CD
                  ,MAX(DPT_NM)   DPT_NM
                  ,MAX(ENO_NO_CNT)   ENO_NO_CNT
                  ,GBN2_TAG
                FROM (

                  SELECT DI.DPT_CD     DPT_CD
                      ,DE.GBN2_TAG   GBN2_TAG
                      ,DE.DPT_NM     DPT_NM
                      ,COUNT(DI.ENO_NO)   ENO_NO_CNT
                    FROM T_DI_DILIGENCE DI, T_CM_DEPT DE, VI_T_CM_PERSON2 PE
                   WHERE PIS_YY = ?
                     AND PIS_MM = ?
                     AND DI.DPT_CD = DE.DPT_CD
                     AND DE.CD_GBN = 'A4'
                     AND DI.ENO_NO = PE.ENO_NO
                     AND PE.OCC_CD IN ([1])
                   GROUP BY DI.DPT_CD, DE.GBN2_TAG, DE.DPT_NM,ROLLUP(DI.ENO_NO)

                   )
               GROUP BY DPT_CD, DPT_NM, GBN2_TAG
               ) N,
               (
               SELECT DI.DPT_CD          DPT_CD
                   ,COUNT(DI.[2])   AT5_CNT
                 FROM T_DI_DILIGENCE DI, VI_T_CM_PERSON2 PE
                WHERE DI.PIS_YY = ?
                AND DI.PIS_MM = ?
                AND DI.[3] IN ('F','Q','R','U','V','H','Z','I','A','B','L')
                AND DI.ENO_NO = PE.ENO_NO
                AND PE.OCC_CD IN ([4])
                GROUP BY DI.DPT_CD
               ) S,
               (
               SELECT DI.DPT_CD     DPT_CD
                   ,COUNT(DI.[5])   AT5_CNT
                 FROM T_DI_DILIGENCE DI, VI_T_CM_PERSON2 PE
                WHERE DI.PIS_YY = ?
                AND DI.PIS_MM = ?
                AND DI.[6] IN ('E','T','F','Q','R','U','V','H','Z','I','A','B','L')
                AND DI.ENO_NO = PE.ENO_NO
                AND PE.OCC_CD IN ([7])
                GROUP BY DI.DPT_CD
               ) C
           WHERE N.DPT_CD = S.DPT_CD(+)
             AND N.DPT_CD = C.DPT_CD(+)
           ORDER BY N.DPT_CD
          ) F,
          (
             SELECT DPT_CD
                 ,MAX(ENO_NO_E)    ENO_NO_E
               ,MAX(ENO_NO_E)    ENO_NO_T
               ,MAX(ENO_NO_F)    ENO_NO_F
               ,MAX(ENO_NO_Q)    ENO_NO_Q
               ,MAX(ENO_NO_RUV)  ENO_NO_RUV
               ,MAX(ENO_NO_H)    ENO_NO_H
               ,MAX(ENO_NO_Z)    ENO_NO_Z
               ,MAX(ENO_NO_I)    ENO_NO_I
               ,MAX(ENO_NO_AB)   ENO_NO_AB
               ,MAX(ENO_NO_L)    ENO_NO_L
               ,MAX(ENO_NO_C)    ENO_NO_C
               ,R	            R
             FROM (
                SELECT DPT_CD
                      ,AT5_CD
                    ,DECODE(AT5_CD,'E',ENO_NM)   ENO_NO_E
                    ,DECODE(AT5_CD,'T',ENO_NM)   ENO_NO_T
                    ,DECODE(AT5_CD,'F',ENO_NM||'('||ATT_LONG||')')   ENO_NO_F
                    ,DECODE(AT5_CD,'Q',ENO_NM)   ENO_NO_Q
                    ,DECODE(AT5_CD,'R',ENO_NM,'U',ENO_NM,'V',ENO_NM)   ENO_NO_RUV
                    ,DECODE(AT5_CD,'H',ENO_NM||'('||ATT_LONG||')')   ENO_NO_H
                    ,DECODE(AT5_CD,'Z',ENO_NM||'('||ATT_LONG||')')   ENO_NO_Z
                    ,DECODE(AT5_CD,'I',ENO_NM)   ENO_NO_I
                    ,DECODE(AT5_CD,'A',ENO_NM,'B',ENO_NM)   ENO_NO_AB
                    ,DECODE(AT5_CD,'L',ENO_NM)   ENO_NO_L
                    ,DECODE(AT5_CD,'C',ENO_NM)   ENO_NO_C
                    ,ROWNUM                      RN
                    ,RANK() OVER (PARTITION BY DPT_CD,AT5_CD ORDER BY ROWNUM)    R
                  FROM (

                    SELECT A.DPT_CD   DPT_CD
                        ,A.ENO_NO   ENO_NO
                        ,NM.ENO_NM  ENO_NM
                        ,NM.OCC_CD
                        ,A.AT5_CD   AT5_CD
                        ,B.ATT_LONG    ATT_LONG
                      FROM
                        (
                        SELECT DPT_CD    DPT_CD
                            ,ENO_NO    ENO_NO
                            ,[8]       AT5_CD
                          FROM T_DI_DILIGENCE DI
                         WHERE PIS_YY=?
                           AND [9] IN ('E','T','F','Q','R','U','V','H','Z','I','A','B','L','C')
                           AND PIS_MM=?
                        ) A,
                        (
                        SELECT ENO_NO
                            ,GUN_CD
                            ,SUBSTR(STR_YMD,5,2)||'/'||SUBSTR(STR_YMD,7,2)||'~'||SUBSTR(END_YMD,5,2)||'/'||SUBSTR(END_YMD,7,2)  ATT_LONG
                          FROM T_DI_LONGTERM
                         WHERE STR_YMD <= ? AND END_YMD >= ?
                           AND GUN_CD IN ('F','H','Z')
                         ) B, VI_T_CM_PERSON2 NM
                      WHERE A.ENO_NO = B.ENO_NO(+)
                      AND A.AT5_CD = B.GUN_CD(+)
                      AND A.ENO_NO = NM.ENO_NO
                      AND A.ENO_NO = NM.ENO_NO
                      AND NM.OCC_CD IN ([10])
                     )
                 GROUP BY DPT_CD, AT5_CD
                        , DECODE(AT5_CD,'E',ENO_NM), DECODE(AT5_CD,'T',ENO_NM), DECODE(AT5_CD,'F',ENO_NM||'('||ATT_LONG||')')
                    , DECODE(AT5_CD,'Q',ENO_NM), DECODE(AT5_CD,'R',ENO_NM,'U',ENO_NM,'V',ENO_NM)
                    , DECODE(AT5_CD,'H',ENO_NM||'('||ATT_LONG||')'), DECODE(AT5_CD,'Z',ENO_NM||'('||ATT_LONG||')'), DECODE(AT5_CD,'I',ENO_NM)
                    , DECODE(AT5_CD,'A',ENO_NM,'B',ENO_NM), DECODE(AT5_CD,'L',ENO_NM), DECODE(AT5_CD,'C',ENO_NM), ROWNUM
                          )
            GROUP BY DPT_CD, R
          ) R
       WHERE F.DPT_CD = R.DPT_CD(+)
       ORDER BY DPT_CD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNA110
* @description : 기간별 근태 현황
***********************************************************************
* 2007/02/26     김학수        최초작성.
***********************************************************************
-->
    <!-- 기간별근태현황 조회(from to 사이의 달) -->
    <sql name="GUNA110_SHR">
        <description>기간별근태현황 조회(from to 사이의 달)</description>
        <query>
            <![CDATA[
			SELECT M.OCC_CD,                                      /*직종*/
			       M.TAX_DPT AS DPT_CD,
                   SF_GET_COMMNAME('01','AD',M.TAX_DPT) AS DPT_NM,
			       M.JOB_CD,
			       SF_GET_COMMNAME('01','A2',M.JOB_CD) AS JOB_NM, /*직위*/
			       M.ENO_NO,                                      /*사번*/
			       M.ENO_NM,                                      /*성명*/
			       M.MF_TAG,
			       NVL(VIEW_2.AB_CNT,0) AS AB_CNT,                /*결근있는달의 월차삭감위한 결근달 갯수*/
			       M.TMR_DD,                                      /*휴직일수*/
			       NVL(VIEW_3.ATT_F,0) AS ATT_F,                  /*FROM < X < TO 까지의 합산(교육,훈련)*/
			       NVL(VIEW_3.ATT_Q,0) AS ATT_Q,                  /*FROM < X < TO 까지의 합산(기념)*/
			       NVL(VIEW_3.ATT_H,0) AS ATT_H,                  /*FROM < X < TO 까지의 합산(연차)*/
			       NVL(VIEW_3.ATT_Z,0) AS ATT_Z,                  /*FROM < X < TO 까지의 합산(리프레쉬)*/
			       NVL(VIEW_3.ATT_I,0) AS ATT_I,                  /*FROM < X < TO 까지의 합산(특별)*/
			       NVL(VIEW_3.ATT_A,0) AS ATT_A,                  /*FROM < X < TO 까지의 합산(유결)*/
			       NVL(VIEW_3.ATT_B,0) AS ATT_B,                  /*FROM < X < TO 까지의 합산(무결)*/
			       NVL(VIEW_3.ATT_C,0) AS ATT_C,                  /*FROM < X < TO 까지의 합산(지각)*/
			       NVL(VIEW_3.ATT_D,0) AS ATT_D,                  /*FROM < X < TO 까지의 합산(조퇴)*/
			       NVL(VIEW_3.ATT_E,0) AS ATT_E,                  /*FROM < X < TO 까지의 합산(출장)*/
			       NVL(VIEW_3.ATT_T,0) AS ATT_T,                  /*FROM < X < TO 까지의 합산(휴일근무)*/
			       NVL(VIEW_3.ATT_L,0) AS ATT_L,                  /*FROM < X < TO 까지의 합산(여휴+휴직+기타)*/
			       NVL(VIEW_4.ATT_C,0) AS ATT_C_NU,               /*1/1<= X <= TO 까지의 합산(누적지각)*/
			       NVL(VIEW_4.ATT_H,0) AS ATT_H_NU,               /*1/1<= X <= TO 까지의 합산(누적연차)*/
			       M.HIRG_YMD,                                    /*그룹입사*/
			       NVL(VIEW_5.HUJICKIL,0) AS ATT_K_JUN,           /*전년도 휴직일수*/
			       NVL(VIEW_6.ATT_AB,0) AS ATT_A_JUN,             /*전년도 결근일수*/
			      (YRP_CNT-AYRP_CNT) AS YRP_CNT,                     /*발생연차*/
			       YRP_CNT-AYRP_CNT-NVL(VIEW_4.ATT_H,0) AS NYRP_CNT /*미사용연차*/
			FROM   T_CM_PERSON M,
			      (SELECT ENO_NO,
			              SUM(DECODE(NVL(ATT_A,0) + NVL(ATT_B,0),0,0,1)) AS AB_CNT
			       FROM   T_DI_DILIGENCE
			       WHERE  PIS_YY = SUBSTR(?,1,4)
			       AND    PIS_MM <= LEAST(SUBSTR(?,5,2),'06')
			       GROUP BY ENO_NO) VIEW_2,
			      (SELECT ENO_NO,
			              NVL(SUM(ATT_F),0)+NVL(SUM(ATT_G),0) AS ATT_F,
			              NVL(SUM(ATT_Q),0) AS ATT_Q,
			              SUM(NVL(ATT_H,0)) + SUM(NVL(ATT_P,0))*0.5 + SUM(NVL(ATT_R,0))*0.5 + SUM(NVL(ATT_V,0))*0.5 AS ATT_H,
			              NVL(SUM(ATT_Z),0) + NVL(SUM(ATT_S),0) AS ATT_Z,
			              NVL(SUM(ATT_I),0) AS ATT_I,
			              NVL(SUM(ATT_A),0) AS ATT_A,
			              NVL(SUM(ATT_B),0) AS ATT_B,
			              NVL(SUM(ATT_C),0) AS ATT_C,
			              NVL(SUM(ATT_D),0) AS ATT_D,
			              NVL(SUM(ATT_E),0) AS ATT_E,
			              NVL(SUM(HOW_CNT),0) + SUM(NVL(ATT_U,0)*0.5 + NVL(ATT_V,0)*0.5) AS ATT_T,
			              NVL(SUM(ATT_L),0) + NVL(SUM(ATT_K),0) + NVL(SUM(ATT_J),0) AS ATT_L
			       FROM   T_DI_DILIGENCE
			       WHERE  PIS_YY = SUBSTR(?,1,4)
			       AND    PIS_MM > SUBSTR(?,5,2)
			       AND    PIS_MM < SUBSTR(?,5,2)
			       GROUP BY ENO_NO) VIEW_3,
			      (SELECT ENO_NO,
			              NVL(SUM(ATT_C),0) AS ATT_C,
			              SUM(NVL(ATT_H,0)) + SUM(NVL(ATT_Q ,0)) + SUM(NVL(ATT_Z ,0)) + SUM(NVL(ATT_P,0))*0.5 + SUM(NVL(ATT_R,0))*0.5 + SUM(NVL(ATT_V,0))*0.5 AS ATT_H
			       FROM   T_DI_DILIGENCE
			       WHERE  PIS_YY = SUBSTR(?,1,4)
			       AND    PIS_MM <= SUBSTR(?,5,2)
			       GROUP BY ENO_NO) VIEW_4,
			      (SELECT ENO_NO,
			              NVL(SUM(TO_DATE(LEAST(NVL(RTRIM(END_YMD),(SUBSTR(?,1,4) - 1)||'1231'),(SUBSTR(?,1,4) - 1)||'1231'),'YYYYMMDD') -
			                      TO_DATE(GREATEST(STR_YMD,(SUBSTR(?,1,4) - 1)||'0101'), 'YYYYMMDD') + 1),0) AS HUJICKIL
			       FROM   T_CM_AHISTORY
			       WHERE (JCD_CD = 'L25' OR JCD_CD = 'L26' OR JCD_CD = 'L27')
			       AND    NOT (STR_YMD > (SUBSTR(?,1,4) - 1)||'1231'
			                   OR NVL(RTRIM(END_YMD),(SUBSTR(?,1,4) - 1)||'1231') < (SUBSTR(?,1,4) - 1)||'0101')
			       GROUP BY ENO_NO) VIEW_5,
			      (SELECT ENO_NO,
			              NVL(SUM(NVL(ATT_A,0) + NVL(ATT_B,0)),0) AS ATT_AB
			       FROM   T_DI_DILIGENCE
			       WHERE  PIS_YY = (SUBSTR(?,1,4) - 1)
			       GROUP BY ENO_NO) VIEW_6,
			      (SELECT ENO_NO, YRP_CNT, AYRP_CNT
                               FROM   T_DI_YEARLY
                               WHERE PIS_YY=SUBSTR(?,1,4)
			       ) VIEW_7
			WHERE  TO_CHAR(M.HIRG_YMD,'YYYYMMDD') <= ?
			AND   (M.RET_YMD IS NULL OR M.RET_YMD >= SYSDATE)
			AND    NVL(M.OCC_CD,' ')                 LIKE '%'||?||'%'
			AND    M.DPT_CD  LIKE '%'||?||'%'
			AND    M.ENO_NO = VIEW_2.ENO_NO (+)
			AND    M.ENO_NO = VIEW_3.ENO_NO (+)
			AND    M.ENO_NO = VIEW_4.ENO_NO (+)
			AND    M.ENO_NO = VIEW_5.ENO_NO (+)
			AND    M.ENO_NO = VIEW_6.ENO_NO (+)
			AND    M.ENO_NO = VIEW_7.ENO_NO (+)
			AND    M.DPT_CD <> 'AA'
			ORDER BY SF_GET_DPTSEQ('01','A4',M.DPT_CD),SF_GET_COMMSEQ('01','A2',M.JOB_CD), M.ENO_NO
		    ]]>
        </query>
    </sql>

    <!-- 기간별근태현황 조회(from달, to달) -->
    <sql name="GUNA110_SHR_01">
        <description>기간별근태현황 조회(from달, to달)</description>
        <query>
            <![CDATA[
			SELECT NVL(AT1_CD,' ')||NVL(AT2_CD,' ')||NVL(AT3_CD,' ')||NVL(AT4_CD,' ')||NVL(AT5_CD,' ')||
			       NVL(AT6_CD,' ')||NVL(AT7_CD,' ')||NVL(AT8_CD,' ')||NVL(AT9_CD,' ')||NVL(AT10_CD,' ')||
			       NVL(AT11_CD,' ')||NVL(AT12_CD,' ')||NVL(AT13_CD,' ')||NVL(AT14_CD,' ')||NVL(AT15_CD,' ')||
			       NVL(AT16_CD,' ')||NVL(AT17_CD,' ')||NVL(AT18_CD,' ')||NVL(AT19_CD,' ')||NVL(AT20_CD,' ')||
			       NVL(AT21_CD,' ')||NVL(AT22_CD,' ')||NVL(AT23_CD,' ')||NVL(AT24_CD,' ')||NVL(AT25_CD,' ')||
			       NVL(AT26_CD,' ')||NVL(AT27_CD,' ')||NVL(AT28_CD,' ')||NVL(AT29_CD,' ')||NVL(AT30_CD,' ')||
			       NVL(AT31_CD,' ') AS GUN_CD
			FROM T_DI_DILIGENCE
			WHERE PIS_YY = SUBSTR(?,1,4)
			AND   PIS_MM = SUBSTR(?,5,2)
			AND   ENO_NO = ?
		    ]]>
        </query>
    </sql>

    <!-- 기간별 근태현황을 조회 한다.(시작월과 종료월이 같은경우) -->
    <sql name="GUNA110_SHR_OLD">
        <description>일자별근태현황 조회</description>
        <query>
    <![CDATA[
      SELECT A.DPT_CD				DPT_CD
            ,MAX(A.DPT_NM)        DPT_NM
			,MAX(A.JOB_NM)		JOB_NM
			,DECODE(MAX(A.INT),1,'',2,'',MAX(A.ENO_NO))		ENO_NO
			,MAX(A.ENO_NM)		ENO_NM
			,DECODE(SUM(A.NYRP_CNT),0,'',SUM(A.NYRP_CNT))		NYRP_CNT
			,DECODE(SUM(B.F),0,'',SUM(B.F))					F
			,DECODE(SUM(B.Q),0,'',SUM(B.Q))					Q
			,DECODE(SUM(B.H),0,'',SUM(B.H))					H
			,DECODE(SUM(B.S),0,'',SUM(B.S))					S
			,DECODE(SUM(B.I),0,'',SUM(B.I))					I
			,DECODE(SUM(B.A),0,'',SUM(B.A))					A
			,DECODE(SUM(B.B),0,'',SUM(B.B))					B
			,DECODE(SUM(B.C),0,'',SUM(B.C))					C
			,DECODE(SUM(B.D),0,'',SUM(B.D))					D
			,DECODE(SUM(B.E),0,'',SUM(B.E))					E
			,DECODE(SUM(B.T),0,'',SUM(B.T))					T
			,DECODE(SUM(B.L),0,'',SUM(B.L))					L
			,DECODE(SUM(A.ATT_C),0,'',SUM(A.ATT_C))			C_YEAR
			,DECODE(SUM(A.ATT_H),0,'',SUM(A.ATT_H))			H_YEAR
			,DECODE(SUM(NYRP_CNT2),0,'',SUM(NYRP_CNT2))		NYRP_CNT2
		    ,SUM(A.CNT)										CNT
			,MAX(A.INT)
        FROM (
				SELECT  DECODE(INT,1,D.DPT_CD||'HAB',2,'총계',D.DPT_CD)					DPT_CD
					  , DECODE(INT,1,D.DPT_NM||'계',2,'총계',D.DPT_NM)					DPT_NM
					  , DECODE(INT,1,'',2,'',B.JOB_NM)            						JOB_NM
					  , DECODE(INT,1,D.DPT_CD||'NO',2,'총계',B.ENO_NO)					ENO_NO
					  , DECODE(INT,1,'',2,'',B.ENO_NM)        							ENO_NM
					  , SUM(D.NYRP_CNT)       											NYRP_CNT
					  , SUM(D.ATT_C)       												ATT_C
					  , SUM(D.ATT_H)       												ATT_H
					  , SUM(D.NYRP_CNT - D.ATT_H)    										NYRP_CNT2
					  , INT
					  , SUM(D.CNT)                                                        CNT
            FROM
               VI_T_CM_PERSON2 B,
               (
                SELECT  NVL(PE.GUN_DPT, PE.DPT_CD)		                        AS DPT_CD
					  , SF_GET_DPTNAME('01', 'A4', NVL(PE.GUN_DPT, PE.DPT_CD))	AS DPT_NM
					  , AA.ENO_NO					ENO_NO
					  , CC.YRP_CNT - CC.AYRP_CNT	NYRP_CNT
					  , SUM(AA.ATT_C)				ATT_C
					  , SUM(AA.ATT_H)				ATT_H
					  , 1  CNT
                 FROM T_DI_DILIGENCE  AA,
					  T_DI_YEARLY	  CC,
					  T_CM_DEPT		  DD,
					  VI_T_CM_PERSON2 PE
                WHERE AA.PIS_YY = SUBSTR( ? ,1,4)
                  [1]
                  AND AA.ENO_NO = CC.ENO_NO
                  AND AA.ENO_NO = PE.ENO_NO
                  AND NVL(PE.GUN_DPT, PE.DPT_CD) = DD.DPT_CD
                  AND DD.CD_GBN = 'A4'
                  AND SUBSTR(CC.PIS_YY,1,4) = SUBSTR( ? ,1,4)
                  AND PE.OCC_CD IN ([2])
             GROUP BY NVL(PE.GUN_DPT, PE.DPT_CD)
                    , SF_GET_DPTNAME('01', 'A4', NVL(PE.GUN_DPT, PE.DPT_CD))
                    , AA.ENO_NO
                    , CC.YRP_CNT
                    , CC.AYRP_CNT
                    , AA.ATT_C
               ) D,
               (
                SELECT ROWNUM INT
                FROM DICT
                 WHERE  3 >= ROWNUM
               ) COPYT
          WHERE B.ENO_NO = D.ENO_NO
          GROUP BY DECODE(INT,1,D.DPT_CD||'HAB',2,'총계',D.DPT_CD)
                 , DECODE(INT,1,D.DPT_NM||'계',2,'총계',D.DPT_NM)
                 , DECODE(INT,1,'',2,'',B.JOB_NM)
                 , DECODE(INT,1,D.DPT_CD||'NO',2,'총계',B.ENO_NO)
                 , DECODE(INT,1,'',2,'',B.ENO_NM)
                 , INT
          ORDER BY DPT_CD
          ) A,
          (
          SELECT DECODE(INT,1,DPT_CD||'HAB',2,'총계',DPT_CD)      DPT_CD
               , DECODE(INT,1,DPT_CD||'NO',2,'총계',ENO_NO)       ENO_NO
               , SUM(F)   F
               , SUM(Q)   Q
               , SUM(H)	H
               , SUM(S)	S
               , SUM(I)	I
               , SUM(A)	A
               , SUM(B)	B
               , SUM(C)	C
               , SUM(D)	D
               , SUM(E)	E
               , SUM(T)	T
               , SUM(L)	L
               , INT
            FROM (
              SELECT DPT_CD
                   , ENO_NO
                   , COUNT(DECODE(VAL,'F','F')) F
                   , COUNT(DECODE(VAL,'Q','Q')) Q
                   , COUNT(DECODE(VAL,'H','H')) H
                   , COUNT(DECODE(VAL,'S','S')) S
                   , COUNT(DECODE(VAL,'I','I')) I
                   , COUNT(DECODE(VAL,'A','A')) A
                   , COUNT(DECODE(VAL,'B','B')) B
                   , COUNT(DECODE(VAL,'C','C')) C
                   , COUNT(DECODE(VAL,'D','D')) D
                   , COUNT(DECODE(VAL,'E','E')) E
                   , COUNT(DECODE(VAL,'T','T')) T
                   , COUNT(DECODE(VAL,'L','L')) L
                FROM (

                  SELECT A.DPT_CD
                       , A.ENO_NO
                       , case B.rnum
               [3]
                        end as "VAL"
                    FROM  (
                       SELECT NVL(PE.GUN_DPT, PE.DPT_CD) AS DPT_CD
                            , AA.ENO_NO
                          [4]
                         FROM T_DI_DILIGENCE AA, VI_T_CM_PERSON2 PE
                        WHERE AA.PIS_YY = SUBSTR( ? ,1,4)
                          AND AA.PIS_MM = SUBSTR( ? ,6,2)
                          [5]
                          AND AA.ENO_NO = PE.ENO_NO
                          AND PE.OCC_CD IN ([6])
                      ) A,
                      (
                       select rownum+[7] as rnum from DICT
                       where [8] >= rownum
                      ) B
                    order by 1
                  )
               GROUP BY DPT_CD, ENO_NO
          UNION ALL
              SELECT NVL(PE.GUN_DPT, PE.DPT_CD) AS DPT_CD
				   , AA.ENO_NO      ENO_NO
				   , SUM(ATT_F)     F
				   , SUM(ATT_Q)     Q
				   , SUM(ATT_H)     H
				   , SUM(ATT_S)     S
				   , SUM(ATT_I)     I
				   , SUM(ATT_A)     A
				   , SUM(ATT_B)     B
			       , SUM(ATT_C)     C
				   , SUM(ATT_D)     D
				   , SUM(ATT_E)     E
				   , SUM(HOW_CNT)   T
				   , SUM(ATT_L)     L
                FROM T_DI_DILIGENCE AA, VI_T_CM_PERSON2 PE
               WHERE AA.PIS_YY = SUBSTR( ? ,1,4)
                 AND AA.PIS_MM > SUBSTR( ? ,6,2) AND  SUBSTR( ? ,6,2) > AA.PIS_MM
                 [9]
                 AND AA.ENO_NO = PE.ENO_NO
                 AND PE.OCC_CD IN ([10])
            GROUP BY NVL(PE.GUN_DPT, PE.DPT_CD)
                   , AA.ENO_NO
          UNION ALL
              SELECT DPT_CD
				   , ENO_NO
				   , COUNT(DECODE(VAL,'F','F')) F
				   , COUNT(DECODE(VAL,'Q','Q')) Q
				   , COUNT(DECODE(VAL,'H','H')) H
				   , COUNT(DECODE(VAL,'S','S')) S
				   , COUNT(DECODE(VAL,'I','I')) I
				   , COUNT(DECODE(VAL,'A','A')) A
				   , COUNT(DECODE(VAL,'B','B')) B
				   , COUNT(DECODE(VAL,'C','C')) C
				   , COUNT(DECODE(VAL,'D','D')) D
				   , COUNT(DECODE(VAL,'E','E')) E
				   , COUNT(DECODE(VAL,'T','T')) T
				   , COUNT(DECODE(VAL,'L','L')) L
                FROM (

                  SELECT A.DPT_CD    DPT_CD
                       , A.ENO_NO    ENO_NO
                       , case B.rnum
                       [11]
                      end as "VAL"
                    FROM  (
                       SELECT NVL(PE.GUN_DPT, PE.DPT_CD) AS DPT_CD
                            , AA.ENO_NO
                         [12]
                         FROM T_DI_DILIGENCE AA, VI_T_CM_PERSON2 PE
                        WHERE AA.PIS_YY = SUBSTR( ? ,1,4)
                          AND AA.PIS_MM = SUBSTR( ? ,6,2)
                          [13]
                          AND AA.ENO_NO = PE.ENO_NO
                          AND PE.OCC_CD IN ([14])
                      ) A,
                      (
                       select rownum as rnum from DICT
                       where  [15] >= rownum
                      ) B
                    order by 1
                  )
               GROUP BY DPT_CD, ENO_NO
               ) A,
               (
                SELECT ROWNUM INT
                  FROM DICT
                 WHERE 3 >= ROWNUM
               ) COPYT

            GROUP BY DECODE(INT,1,DPT_CD||'HAB',2,'총계',DPT_CD)
                   , DECODE(INT,1,DPT_CD||'NO',2,'총계',ENO_NO)
                   , INT

          ) B
       WHERE A.DPT_CD = B.DPT_CD
         AND A.ENO_NO = B.ENO_NO

       GROUP BY A.DPT_CD
              , A.JOB_NM
              , A.ENO_NO
              , A.ENO_NM
       ORDER BY DPT_CD
            ]]>
        </query>
    </sql>

    <!-- 기간별 근태현황을 조회 한다.(시작월과 종료월이 같은경우) -->
    <sql name="GUNA110_SHR02">
        <description>일자별근태현황 조회</description>
        <query>
    <![CDATA[
      SELECT A.DPT_CD				DPT_CD
            ,MAX(A.DPT_NM)        DPT_NM
			,MAX(A.JOB_NM)		JOB_NM
			,DECODE(MAX(A.INT),1,'',2,'',MAX(A.ENO_NO))		ENO_NO
			,MAX(A.ENO_NM)             		                ENO_NM
			,DECODE(SUM(A.NYRP_CNT),0,'',SUM(A.NYRP_CNT))		NYRP_CNT
			,DECODE(SUM(B.F),0,'',SUM(B.F))					F
			,DECODE(SUM(B.Q),0,'',SUM(B.Q))					Q
			,DECODE(SUM(B.H),0,'',SUM(B.H))					H
			,DECODE(SUM(B.S),0,'',SUM(B.S))					S
			,DECODE(SUM(B.I),0,'',SUM(B.I))					I
			,DECODE(SUM(B.A),0,'',SUM(B.A))					A
			,DECODE(SUM(B.B),0,'',SUM(B.B))					B
			,DECODE(SUM(B.C),0,'',SUM(B.C))					C
			,DECODE(SUM(B.D),0,'',SUM(B.D))					D
			,DECODE(SUM(B.E),0,'',SUM(B.E))					E
			,DECODE(SUM(B.T),0,'',SUM(B.T))					T
			,DECODE(SUM(B.L),0,'',SUM(B.L))					L
			,DECODE(SUM(A.ATT_C),0,'',SUM(A.ATT_C))			C_YEAR
			,DECODE(SUM(A.ATT_H),0,'',SUM(A.ATT_H))			H_YEAR
			,DECODE(SUM(NYRP_CNT2),0,'',SUM(NYRP_CNT2))		NYRP_CNT2
			,SUM(A.CNT)										CNT
			,MAX(A.INT)
        FROM (
			  SELECT  DECODE(INT,1,D.DPT_CD||'HAB',2,'총계',D.DPT_CD)					DPT_CD
					, DECODE(INT,1,D.DPT_NM||'계',2,'총계',D.DPT_NM)					DPT_NM
					, DECODE(INT,1,'',2,'',B.JOB_NM)            						JOB_NM
					, DECODE(INT,1,D.DPT_CD||'NO',2,'총계',B.ENO_NO)					ENO_NO
					, DECODE(INT,1,'',2,'',B.ENO_NM)        							ENO_NM
					, SUM(D.NYRP_CNT)       											NYRP_CNT
					, SUM(D.ATT_C)       												ATT_C
					, SUM(D.ATT_H)       												ATT_H
					, SUM(D.NYRP_CNT - D.ATT_H)    										NYRP_CNT2
					, INT
					, SUM(D.CNT)                                                        CNT
            FROM
               VI_T_CM_PERSON2 B,
               (
                SELECT  AA.DPT_CD					DPT_CD
					  , DD.DPT_NM					DPT_NM
					  , AA.ENO_NO					ENO_NO
				  	  , CC.YRP_CNT - CC.AYRP_CNT	NYRP_CNT
				  	  , SUM(AA.ATT_C)				ATT_C
					  , SUM(AA.ATT_H)				ATT_H
					  , 1  CNT
                 FROM T_DI_DILIGENCE		  AA,
					  T_DI_YEARLY	  CC,
					  T_CM_DEPT		  DD,
					  VI_T_CM_PERSON2 PE
                WHERE AA.PIS_YY = SUBSTR( ? ,1,4)
                  [1]
                  AND AA.ENO_NO = CC.ENO_NO
                  AND AA.DPT_CD = DD.DPT_CD
                  AND DD.CD_GBN = 'A4'
                  AND SUBSTR(CC.PIS_YY,1,4) = SUBSTR( ? ,1,4)
                  AND AA.ENO_NO = PE.ENO_NO
                  AND PE.OCC_CD IN ([2])
                GROUP BY AA.DPT_CD, DD.DPT_NM, AA.ENO_NO, CC.YRP_CNT, CC.AYRP_CNT, AA.ATT_C
               ) D,
               (
                SELECT ROWNUM INT
                FROM DICT
                 WHERE  3 >= ROWNUM
               ) COPYT
          WHERE B.ENO_NO = D.ENO_NO
          GROUP BY DECODE(INT,1,D.DPT_CD||'HAB',2,'총계',D.DPT_CD)
                 , DECODE(INT,1,D.DPT_NM||'계',2,'총계',D.DPT_NM)
                 , DECODE(INT,1,'',2,'',B.JOB_NM)
                 , DECODE(INT,1,D.DPT_CD||'NO',2,'총계',B.ENO_NO)
                 , DECODE(INT,1,'',2,'',B.ENO_NM)
                 , INT
          ORDER BY DPT_CD
          ) A,
          (
      SELECT DECODE(INT,1,DPT_CD||'HAB',2,'총계',DPT_CD)      DPT_CD
             , DECODE(INT,1,DPT_CD||'NO',2,'총계',ENO_NO)       ENO_NO
             , SUM(F)   F
             , SUM(Q)   Q
             , SUM(H)	H
             , SUM(S)	S
             , SUM(I)	I
             , SUM(A)	A
             , SUM(B)	B
             , SUM(C)	C
             , SUM(D)	D
             , SUM(E)	E
             , SUM(T)	T
             , SUM(L)	L
             , INT
       FROM (
            SELECT DPT_CD
             , ENO_NO
             , COUNT(DECODE(VAL,'F','F')) F
             , COUNT(DECODE(VAL,'Q','Q')) Q
             , COUNT(DECODE(VAL,'H','H')) H
             , COUNT(DECODE(VAL,'S','S')) S
             , COUNT(DECODE(VAL,'I','I')) I
             , COUNT(DECODE(VAL,'A','A')) A
             , COUNT(DECODE(VAL,'B','B')) B
             , COUNT(DECODE(VAL,'C','C')) C
             , COUNT(DECODE(VAL,'D','D')) D
             , COUNT(DECODE(VAL,'E','E')) E
             , COUNT(DECODE(VAL,'T','T')) T
             , COUNT(DECODE(VAL,'L','L')) L
            FROM (

              SELECT A.DPT_CD    DPT_CD
               , A.ENO_NO    ENO_NO
               , case B.rnum
                 [3]
                end as "VAL"
              FROM  (
                 SELECT AA.DPT_CD     DPT_CD
                  , AA.ENO_NO     ENO_NO
                  [4]
                 FROM T_DI_DILIGENCE AA, VI_T_CM_PERSON2 PE
                WHERE AA.PIS_YY = SUBSTR( ? ,1,4)
                  AND AA.PIS_MM = SUBSTR( ? ,6,2)
                  [5]
                  AND AA.ENO_NO = PE.ENO_NO
                  AND PE.OCC_CD IN ([6])
                ) A,
                (
                 select rownum+[7] as rnum from DICT
                 where  rownum <= [8]
                ) B
              order by 1
              )
             GROUP BY DPT_CD, ENO_NO
             ) A,
             (
            SELECT ROWNUM INT
              FROM DICT
             WHERE 3 >= ROWNUM
             ) COPYT

          GROUP BY DECODE(INT,1,DPT_CD||'HAB',2,'총계',DPT_CD)
               , DECODE(INT,1,DPT_CD||'NO',2,'총계',ENO_NO)
               , INT

          ) B
       WHERE A.DPT_CD = B.DPT_CD
         AND A.ENO_NO = B.ENO_NO

       GROUP BY A.DPT_CD
        , A.JOB_NM
        , A.ENO_NO
              , A.ENO_NM
       ORDER BY DPT_CD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNA110
* @description : 휴일 근무현황 통계
***********************************************************************
* 2007/03/05     김학수        최초작성.
***********************************************************************
-->
    <!-- 휴일 근무현황 통계 -->
    <sql name="GUNC060_SHR">
        <description>휴일 근무현황 통계</description>
        <query>
    <![CDATA[
	SELECT DECODE(INT,1,'총계',2,DECODE(B.GBN2_TAG,'1','본사','9','지방')||' 합계',DECODE(B.GBN2_TAG,'1','본사','9','지방'))   GBN2_TAG
		  ,DECODE(INT,1,'',2,'',3,A.HEAD_NM||'계',A.HEAD_NM)               HEAD_NM
		  ,DECODE(INT,1,'',2,'',3,'',4,A.GBN_NM||'계',A.GBN_NM)            GBN_NM
		  ,DECODE(INT,1,'',2,'',3,'',4,'',5,DECODE(B.END_YMD,NULL,A.DPT_NM,A.DPT_NM||' (폐기)'))           DPT_NM
		  ,COUNT(A.DPT_CD) - COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD))                                          P_CNT    --인원계
		  ,COUNT(DECODE(A.OCC_CD,'A',A.DPT_CD))       PA_CNT                        --사무직계
		  ,COUNT(DECODE(A.OCC_CD,'M',A.DPT_CD))       PM_CNT                        --택배직계
		  ,COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD))       PP_CNT                        --파견사원계

		  ,NVL(SUM(A.OCC_A_CNT),0) + NVL(SUM(A.OCC_M_CNT),0)													OCC_CNT        --근무인원계
		  ,DECODE((COUNT(A.DPT_CD) - COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD))),'0',''
		  ,ROUND((NVL(SUM(A.OCC_A_CNT),0) + NVL(SUM(A.OCC_M_CNT),0))/(COUNT(A.DPT_CD) - COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD)))*100))         OCC_P           --근무인원퍼센티지
		  ,SUM(A.OCC_A_CNT)                           															OCC_A_CNT      --근무인원 사무직계
		  ,ROUND(SUM(A.OCC_A_CNT)/(NVL(SUM(A.OCC_A_CNT),0) + NVL(SUM(A.OCC_M_CNT),0))*100)						OCC_AP         --사무직 퍼센티지
		  ,SUM(A.OCC_M_CNT)                           				  											OCC_M_CNT      --근무인원 택배직계
		  ,ROUND(SUM(A.OCC_M_CNT)/(NVL(SUM(A.OCC_A_CNT),0) + NVL(SUM(A.OCC_M_CNT),0))*100)						OCC_MP         --택배직 퍼센티지

		  ,SUM(A.REP_Y_CNT)                           							                REP_Y_CNT      --대체휴가 사용인원계
		  ,ROUND(SUM(A.REP_Y_CNT)/(NVL(SUM(A.OCC_A_CNT),0) + NVL(SUM(A.OCC_M_CNT),0))*100)		REP_YP         --대체휴가 사용인원퍼센티지
		  ,SUM(A.REP_YA_CNT)                          							                REP_YA_CNT     --대체휴가 사무직 사용인원계
		  ,ROUND(SUM(A.REP_YA_CNT)/SUM(A.REP_Y_CNT)*100)						                REP_YAP        --대체휴가 사무직 퍼센티지
		  ,SUM(A.REP_YM_CNT)                          							                REP_YM_CNT     --대체휴가 택배직 사용인원계
		  ,ROUND(SUM(A.REP_YM_CNT)/SUM(A.REP_Y_CNT)*100)						                REP_YMP        --대체휴가 택배직 퍼센티지

		  ,SUM(A.REP_N_CNT)                           							                REP_N_CNT
		  ,ROUND(SUM(A.REP_N_CNT)/(NVL(SUM(A.OCC_A_CNT),0) + NVL(SUM(A.OCC_M_CNT),0))*100)		REP_NP
		  ,SUM(A.REP_NA_CNT)                          							                REP_NA_CNT
		  ,ROUND(SUM(A.REP_NA_CNT)/SUM(A.REP_N_CNT)*100)						                REP_NAP
		  ,SUM(A.REP_NM_CNT)                          					                        REP_NM_CNT
		  ,ROUND(SUM(A.REP_NM_CNT)/SUM(A.REP_N_CNT)*100)					                    REP_NMP

		  ,SUM(A.AMT_N_CNT)                           							  AMT_N_CNT      --근무수당액 계
		  ,SUM(A.AMT_NA_CNT)                          							  AMT_NA_CNT     --근무수당액 사무직계
		  ,SUM(A.AMT_NM_CNT)                          							  AMT_NM_CNT     --근무수당액 택배직계

		  ,SUM(A.OCC_P_CNT)                                                       OCC_P_CNT      --파견사원 근무인원
		  ,ROUND(SUM(A.OCC_P_CNT)/COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD))*100)       OCC_PP_CNT     --파견사원 근무인원 퍼센티지
		  ,SUM(A.REP_YP_CNT)                                                      REP_YP_CNT     --파견사원 대체휴가 인원계
		  ,ROUND(SUM(A.REP_YP_CNT)/SUM(A.OCC_P_CNT)*100)                          REP_YPP        --파견사원 대휴 사용인원계
		  ,SUM(A.REP_NP_CNT)                                                      REP_NP_CNT     --파견사원 대체휴가 인원계
		  ,ROUND(SUM(A.REP_NP_CNT)/SUM(A.OCC_P_CNT)*100)                          REP_NPP        --파견사원 대휴 사용인원계
		  ,SUM(A.AMT_NP_CNT)                                                      AMT_NP_CNT     --파견사원 근무수당계
		  ,''																	  ETC
		  ,MIN(DECODE(INT,1,'1'))											      R
		  ,MIN(DECODE(INT,2,'계'))                                                GUBUN2         --EZGEN 에서의 디자인양식 구분값
		  ,MIN(DECODE(INT,3,'계'))                                                GUBUN3         --EZGEN 에서의 디자인양식 구분값
		  ,MIN(DECODE(INT,4,'계'))                                                GUBUN4         --EZGEN 에서의 디자인양식 구분값
	  FROM
			(
				SELECT P.HEAD_NM       HEAD_NM
					  ,P.GBN_NM        GBN_NM
					  ,P.DPT_NM        DPT_NM
					  ,P.DPT_CD        DPT_CD
					  ,P.OCC_CD        OCC_CD
					  ,DECODE(D.ENO_NO,P.ENO_NO,1) - DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',1))   OCC_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',1))       OCC_A_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',1))       OCC_M_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',1))       OCC_P_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(D.REP_APP,'Y',1))                                REP_Y_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',DECODE(D.REP_APP,'Y',1)))           REP_YA_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',DECODE(D.REP_APP,'Y',1)))           REP_YM_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',DECODE(D.REP_APP,'Y',1)))           REP_YP_CNT    --대휴파견사원 체크
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(D.REP_APP,'N',1))                                REP_N_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',DECODE(D.REP_APP,'N',1)))           REP_NA_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',DECODE(D.REP_APP,'N',1)))           REP_NM_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',DECODE(D.REP_APP,'N',1)))           REP_NP_CNT    --수당신청사원 체크
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(D.REP_APP,'N',HOL_AMT))                          AMT_N_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',DECODE(D.REP_APP,'N',HOL_AMT)))     AMT_NA_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',DECODE(D.REP_APP,'N',HOL_AMT)))     AMT_NM_CNT
					  ,DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',DECODE(D.REP_APP,'N',HOL_AMT)))     AMT_NP_CNT    --수당신청사원 수당금액

				  FROM
						   (
							SELECT ENO_NO
								  ,HEAD_NM
								  ,GBN_NM
								  ,DPT_NM
								  ,DPT_CD
								  ,OCC_CD
							  FROM VI_T_CM_PERSON2
							 WHERE (TO_CHAR(RET_YMD,'YYYYMMDD') > [1] OR RET_YMD IS NULL)
							 AND TO_CHAR(HIRG_YMD,'YYYYMMDD') <= [2]
						UNION

						     SELECT ENO_NO        ENO_NO
								   ,SF_GET_DPTNAME('01', 'B2', HEAD_CD)       HEAD_NM
								   ,SF_GET_COMMNAME('01', 'B7', GBN_CD)       GBN_NM
								   ,SF_GET_DPTNAME('01', 'A4', DPT_CD)       DPT_NM
								   ,DPT_CD        DPT_CD
								   ,'P'              OCC_CD
							  FROM T_ME_PERSON
							 WHERE (TO_CHAR(RET_YMD,'YYYYMMDD') > [3] OR RET_YMD IS NULL)
							 AND HIR_YMD <= TO_DATE([4],'YYYY.MM.DD')
				/*	  수정
				             SELECT PE.ENO_NO        ENO_NO
								   ,DE.HEAD_NM       HEAD_NM
								   ,DE.GBN_NM        GBN_NM
								   ,DE.DPT_NM        DPT_NM
								   ,PE.DPT_CD        DPT_CD
								   ,'P'              OCC_CD
							  FROM T_ME_PERSON PE,
								  (
								   SELECT DPT_CD
										, ''         HEAD_NM
										, ''         GBN_NM
										, DPT_NM
									 FROM T_CM_DEPT
									WHERE CD_GBN = 'A4'
								  ) DE
							 WHERE (PE.RET_YMD > [3] OR PE.RET_YMD IS NULL)
							 AND PE.HIR_YMD <= TO_DATE([4],'YYYY.MM.DD')
							 AND PE.DPT_CD = DE.DPT_CD
				*/
						   ) P,
						   (
							SELECT A.HOL_YMD     HOL_YMD
								  ,A.ENO_NO      ENO_NO
								  ,A.HOL_TIME    HOL_TIME
								  ,A.REP_YMD     REP_YMD
								  ,A.REP_APP     REP_APP
								  ,A.HOL_AMT     HOL_AMT
							  FROM
									(
									SELECT H.HOL_YMD
										  ,H.ENO_NO
										  ,H.HOL_TIME
										  ,H.REP_APP
										  ,H.REP_YMD
										  ,H.HOL_AMT
									  FROM [5]
									 WHERE [6]
									) A,
									(
									SELECT REG_YMD
									  FROM T_DI_HOLIDAY
									 WHERE [7]
									   AND HOL_GBN IN([8])
									) B
							 WHERE A.HOL_YMD = B.REG_YMD
							 ) D
					WHERE P.ENO_NO = D.ENO_NO(+)
			) A,
			(
			SELECT DPT_CD, GBN2_TAG, END_YMD
			  FROM T_CM_DEPT
			 WHERE CD_GBN = 'A4'
			) B,
			(
			SELECT ROWNUM INT
			  FROM DICT
			 WHERE ROWNUM <= 5
			) COPYT
	WHERE A.DPT_CD = B.DPT_CD
	GROUP BY DECODE(INT,1,'총계',2,DECODE(B.GBN2_TAG,'1','본사','9','지방')||' 합계',DECODE(B.GBN2_TAG,'1','본사','9','지방'))
		   , DECODE(INT,1,'',2,'',3,A.HEAD_NM||'계',A.HEAD_NM)
		   , DECODE(INT,1,'',2,'',3,'',4,A.GBN_NM||'계',A.GBN_NM)
		   , DECODE(INT,1,'',2,'',3,'',4,'',5,DECODE(B.END_YMD,NULL,A.DPT_NM,A.DPT_NM||' (폐기)'))
	ORDER BY R
		   , DECODE(INT,1,'총계',2,DECODE(B.GBN2_TAG,'1','본사','9','지방')||' 합계',DECODE(B.GBN2_TAG,'1','본사','9','지방'))
		   , DECODE(INT,1,'',2,'',3,A.HEAD_NM||'계',A.HEAD_NM)
		   , DECODE(INT,1,'',2,'',3,'',4,A.GBN_NM||'계',A.GBN_NM)
            ]]>
        </query>
    </sql>

	
<!-- 연차휴가사용촉진제 -->


<!-- 연차휴가사용촉진제(인사팀지정) -->


<!--
***********************************************************************
* @UseCase     : GUND021
* @description : 연차휴가사용촉진제(인사팀지정)
***********************************************************************
* 2007/03/19     오대성        최초작성.
***********************************************************************
-->
    <!-- 근태휴일날짜 조회 -->
    <sql name="GUND021_SHR_01">
        <description>근태휴일날짜 조회</description>
        <query>
            <![CDATA[
            SELECT SUBSTR(REG_YMD,5,4) H_DAY, HOL_YN,
                   'AT'||LTRIM(SUBSTR(REG_YMD,7,2),'0')||
                     DECODE(SUBSTR(REG_YMD,5,2),'10','_OCT','11','_NOV','12','_DEC') AS COL_NM
            FROM   T_DI_HOLIDAY
            WHERE  REG_YMD >= ?
            AND    REG_YMD <= ?
            AND    (HOL_GBN = '1' OR HOL_GBN = '2')
            ]]>
        </query>
    </sql>

    <!-- 연차휴가사용촉진제(인사팀지정) 조회 -->
    <sql name="GUND021_SHR_02">
        <description>연차휴가사용촉진제(인사팀지정) 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,ENO_NM,DPT_CD,JOB_CD,DPT_NM,JOB_NM,YRP_REM,(YRP_REM-(ATT_OCT+ATT_NOV+ATT_DEC)) AS REM_CNT,
                   AT1_OCT,AT2_OCT,AT3_OCT,AT4_OCT,AT5_OCT,AT6_OCT,AT7_OCT,AT8_OCT,AT9_OCT,AT10_OCT,
                   AT11_OCT,AT12_OCT,AT13_OCT,AT14_OCT,AT15_OCT,AT16_OCT,AT17_OCT,AT18_OCT,AT19_OCT,AT20_OCT,
                   AT21_OCT,AT22_OCT,AT23_OCT,AT24_OCT,AT25_OCT,AT26_OCT,AT27_OCT,AT28_OCT,AT29_OCT,AT30_OCT,
                   AT31_OCT,
                   AT1_NOV,AT2_NOV,AT3_NOV,AT4_NOV,AT5_NOV,AT6_NOV,AT7_NOV,AT8_NOV,AT9_NOV,AT10_NOV,
                   AT11_NOV,AT12_NOV,AT13_NOV,AT14_NOV,AT15_NOV,AT16_NOV,AT17_NOV,AT18_NOV,AT19_NOV,AT20_NOV,
                   AT21_NOV,AT22_NOV,AT23_NOV,AT24_NOV,AT25_NOV,AT26_NOV,AT27_NOV,AT28_NOV,AT29_NOV,AT30_NOV,AT31_NOV,
                   AT1_DEC,AT2_DEC,AT3_DEC,AT4_DEC,AT5_DEC,AT6_DEC,AT7_DEC,AT8_DEC,AT9_DEC,AT10_DEC,AT11_DEC,
                   AT12_DEC,AT13_DEC,AT14_DEC,AT15_DEC,AT16_DEC,AT17_DEC,AT18_DEC,AT19_DEC,AT20_DEC,
                   AT21_DEC,AT22_DEC,AT23_DEC,AT24_DEC,AT25_DEC,AT26_DEC,AT27_DEC,AT28_DEC,AT29_DEC,AT30_DEC,
                   AT31_DEC,
                   PIS_YY,NVL(ATT_OCT,'0'),NVL(ATT_NOV,'0'),NVL(ATT_DEC,'0'),ROLE_CD,
                   DPT_SEQ, JOB_SEQ, HOB_SEQ, HIR_YMD,END_TAG, REQ_GBN
            FROM (

            SELECT A.ENO_NO, A.ENO_NM, A.DPT_CD, A.JOB_CD,
                   SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM,
                   SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,
                   B.YRP_CNT-B.AYRP_CNT
                   -( SELECT (SUM(ATT_H)+SUM(ATT_P*0.5)+SUM(ATT_Q)+SUM(ATT_R*0.5)+SUM(ATT_V*0.5)+SUM(ATT_Z))
                      FROM   T_DI_DILIGENCE
                      WHERE  PIS_YY = B.PIS_YY
                      AND    ENO_NO = A.ENO_NO) AS YRP_REM,
                   D.AT1_CD AS AT1_OCT, D.AT2_CD AS AT2_OCT, D.AT3_CD AS AT3_OCT,
                   D.AT4_CD AS AT4_OCT, D.AT5_CD AS AT5_OCT, D.AT6_CD AS AT6_OCT,
                   D.AT7_CD AS AT7_OCT, D.AT8_CD AS AT8_OCT, D.AT9_CD AS AT9_OCT,
                   D.AT10_CD AS AT10_OCT, D.AT11_CD AS AT11_OCT, D.AT12_CD AS AT12_OCT,
                   D.AT13_CD AS AT13_OCT, D.AT14_CD AS AT14_OCT, D.AT15_CD AS AT15_OCT,
                   D.AT16_CD AS AT16_OCT, D.AT17_CD AS AT17_OCT, D.AT18_CD AS AT18_OCT,
                   D.AT19_CD AS AT19_OCT, D.AT20_CD AS AT20_OCT, D.AT21_CD AS AT21_OCT,
                   D.AT22_CD AS AT22_OCT, D.AT23_CD AS AT23_OCT, D.AT24_CD AS AT24_OCT,
                   D.AT25_CD AS AT25_OCT, D.AT26_CD AS AT26_OCT, D.AT27_CD AS AT27_OCT,
                   D.AT28_CD AS AT28_OCT, D.AT29_CD AS AT29_OCT, D.AT30_CD AS AT30_OCT,
                   D.AT31_CD AS AT31_OCT, E.AT1_CD AS AT1_NOV, E.AT2_CD AS AT2_NOV,
                   E.AT3_CD AS AT3_NOV, E.AT4_CD AS AT4_NOV, E.AT5_CD AS AT5_NOV,
                   E.AT6_CD AS AT6_NOV, E.AT7_CD AS AT7_NOV, E.AT8_CD AS AT8_NOV,
                   E.AT9_CD AS AT9_NOV, E.AT10_CD AS AT10_NOV, E.AT11_CD AS AT11_NOV,
                   E.AT12_CD AS AT12_NOV, E.AT13_CD AS AT13_NOV, E.AT14_CD AS AT14_NOV,
                   E.AT15_CD AS AT15_NOV, E.AT16_CD AS AT16_NOV, E.AT17_CD AS AT17_NOV,
                   E.AT18_CD AS AT18_NOV, E.AT19_CD AS AT19_NOV, E.AT20_CD AS AT20_NOV,
                   E.AT21_CD AS AT21_NOV, E.AT22_CD AS AT22_NOV, E.AT23_CD AS AT23_NOV,
                   E.AT24_CD AS AT24_NOV, E.AT25_CD AS AT25_NOV, E.AT26_CD AS AT26_NOV,
                   E.AT27_CD AS AT27_NOV, E.AT28_CD AS AT28_NOV, E.AT29_CD AS AT29_NOV,
                   E.AT30_CD AS AT30_NOV, E.AT31_CD AS AT31_NOV,
                   F.AT1_CD AS AT1_DEC, F.AT2_CD AS AT2_DEC,
                   F.AT3_CD AS AT3_DEC, F.AT4_CD AS AT4_DEC, F.AT5_CD AS AT5_DEC,
                   F.AT6_CD AS AT6_DEC, F.AT7_CD AS AT7_DEC, F.AT8_CD AS AT8_DEC,
                   F.AT9_CD AS AT9_DEC, F.AT10_CD AS AT10_DEC, F.AT11_CD AS AT11_DEC,
                   F.AT12_CD AS AT12_DEC, F.AT13_CD AS AT13_DEC, F.AT14_CD AS AT14_DEC,
                   F.AT15_CD AS AT15_DEC, F.AT16_CD AS AT16_DEC, F.AT17_CD AS AT17_DEC,
                   F.AT18_CD AS AT18_DEC, F.AT19_CD AS AT19_DEC, F.AT20_CD AS AT20_DEC,
                   F.AT21_CD AS AT21_DEC, F.AT22_CD AS AT22_DEC, F.AT23_CD AS AT23_DEC,
                   F.AT24_CD AS AT24_DEC, F.AT25_CD AS AT25_DEC, F.AT26_CD AS AT26_DEC,
                   F.AT27_CD AS AT27_DEC, F.AT28_CD AS AT28_DEC, F.AT29_CD AS AT29_DEC,
                   F.AT30_CD AS AT30_DEC, F.AT31_CD AS AT31_DEC, ? AS PIS_YY,
                   D.ATT_H AS ATT_OCT, E.ATT_H AS ATT_NOV, F.ATT_H AS ATT_DEC,
                   ( SELECT ROLE_CD FROM T_CM_EMPLIST WHERE ENO_NO = ?) AS ROLE_CD,
                   A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ, A.HIR_YMD, D.END_TAG, D.REQ_GBN
            FROM   ( SELECT ENO_NO, ENO_NM, DPT_CD, JOB_CD, HIR_YMD,
                            SF_GET_DPTSEQ('01', 'B2', HEAD_CD) AS HEAD_SEQ,
                            SF_GET_DPTSEQ('01', 'A4', DPT_CD) AS DPT_SEQ,
                            SF_GET_COMMSEQ('01', 'A2', JOB_CD) AS JOB_SEQ,
                            SF_GET_COMMSEQ('01', 'A3', HOB_CD) AS HOB_SEQ
                     FROM   T_CM_PERSON
                     WHERE (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYY') > ?)
                    -- AND    NVL(GUN_DPT, DPT_CD) LIKE --||'%'
                     AND    ENO_NO LIKE ?||'%'
                     AND    NVL(DUTY_CD, ' ') <> 'B5'
                     ) A,
                   ( SELECT PIS_YY, ENO_NO, YRP_CNT, AYRP_CNT
                     FROM   T_DI_YEARLY
                     WHERE  PIS_YY = ?) B,
                   ( SELECT ENO_NO, PIS_YY, REQ_GBN, END_TAG, AT1_CD, AT2_CD, AT3_CD, AT4_CD,
                            AT5_CD, AT6_CD, AT7_CD, AT8_CD, AT9_CD, AT10_CD, AT11_CD,
                            AT12_CD, AT13_CD, AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD,
                            AT19_CD, AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H
                     FROM   T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    NVL(REQ_GBN,' ') LIKE '%'||?||'%' ) D,
                   ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                            AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                            AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                            AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H
                     FROM   T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    NVL(REQ_GBN,' ') LIKE '%'||?||'%' ) E,
                   ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                            AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                            AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                            AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H
                     FROM   T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    NVL(REQ_GBN,' ') LIKE '%'||?||'%') F
                   WHERE  A.ENO_NO = B.ENO_NO(+)
                   AND    A.ENO_NO = D.ENO_NO(+)
                   AND    A.ENO_NO = E.ENO_NO(+)
                   AND    A.ENO_NO = F.ENO_NO(+)
            )
            [1]
            WHERE ( YRP_REM > 0
			    AND  (END_TAG IS NULL OR END_TAG <> 'Y') )
			    OR   REQ_GBN  = '3'   -- 3차
            ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIR_YMD, ENO_NO

            ]]>
        </query>
    </sql>

    <!-- 연차휴가사용촉진제(인사팀지정) 조회 -->
    <sql name="GUND021_SHR_03">
        <description>연차휴가사용촉진제(인사팀지정) 조회(결재에서 조회)</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,ENO_NM,DPT_CD,JOB_CD,DPT_NM,JOB_NM,YRP_REM,(YRP_REM-(ATT_OCT+ATT_NOV+ATT_DEC)) AS REM_CNT,
                   AT1_OCT,AT2_OCT,AT3_OCT,AT4_OCT,AT5_OCT,AT6_OCT,AT7_OCT,AT8_OCT,AT9_OCT,AT10_OCT,
                   AT11_OCT,AT12_OCT,AT13_OCT,AT14_OCT,AT15_OCT,AT16_OCT,AT17_OCT,AT18_OCT,AT19_OCT,AT20_OCT,
                   AT21_OCT,AT22_OCT,AT23_OCT,AT24_OCT,AT25_OCT,AT26_OCT,AT27_OCT,AT28_OCT,AT29_OCT,AT30_OCT,
                   AT31_OCT,
                   AT1_NOV,AT2_NOV,AT3_NOV,AT4_NOV,AT5_NOV,AT6_NOV,AT7_NOV,AT8_NOV,AT9_NOV,AT10_NOV,
                   AT11_NOV,AT12_NOV,AT13_NOV,AT14_NOV,AT15_NOV,AT16_NOV,AT17_NOV,AT18_NOV,AT19_NOV,AT20_NOV,
                   AT21_NOV,AT22_NOV,AT23_NOV,AT24_NOV,AT25_NOV,AT26_NOV,AT27_NOV,AT28_NOV,AT29_NOV,AT30_NOV,AT31_NOV,
                   AT1_DEC,AT2_DEC,AT3_DEC,AT4_DEC,AT5_DEC,AT6_DEC,AT7_DEC,AT8_DEC,AT9_DEC,AT10_DEC,AT11_DEC,
                   AT12_DEC,AT13_DEC,AT14_DEC,AT15_DEC,AT16_DEC,AT17_DEC,AT18_DEC,AT19_DEC,AT20_DEC,
                   AT21_DEC,AT22_DEC,AT23_DEC,AT24_DEC,AT25_DEC,AT26_DEC,AT27_DEC,AT28_DEC,AT29_DEC,AT30_DEC,
                   AT31_DEC,
                   PIS_YY,NVL(ATT_OCT,'0'),NVL(ATT_NOV,'0'),NVL(ATT_DEC,'0'),ROLE_CD,
                   DPT_SEQ, JOB_SEQ, HOB_SEQ, HIR_YMD
            FROM (

            SELECT A.ENO_NO, A.ENO_NM, A.DPT_CD, A.JOB_CD,
                   SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM,
                   SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,
                   B.YRP_CNT-B.AYRP_CNT
                   -( SELECT ROUND(SUM(ATT_H)+SUM(ATT_P*0.5)+SUM(ATT_Q)+SUM(ATT_R*0.5)+SUM(ATT_V*0.5)+SUM(ATT_Z))
                      FROM   T_DI_DILIGENCE
                      WHERE  PIS_YY = B.PIS_YY
                      AND    ENO_NO = A.ENO_NO) AS YRP_REM,
                   D.AT1_CD AS AT1_OCT, D.AT2_CD AS AT2_OCT, D.AT3_CD AS AT3_OCT,
                   D.AT4_CD AS AT4_OCT, D.AT5_CD AS AT5_OCT, D.AT6_CD AS AT6_OCT,
                   D.AT7_CD AS AT7_OCT, D.AT8_CD AS AT8_OCT, D.AT9_CD AS AT9_OCT,
                   D.AT10_CD AS AT10_OCT, D.AT11_CD AS AT11_OCT, D.AT12_CD AS AT12_OCT,
                   D.AT13_CD AS AT13_OCT, D.AT14_CD AS AT14_OCT, D.AT15_CD AS AT15_OCT,
                   D.AT16_CD AS AT16_OCT, D.AT17_CD AS AT17_OCT, D.AT18_CD AS AT18_OCT,
                   D.AT19_CD AS AT19_OCT, D.AT20_CD AS AT20_OCT, D.AT21_CD AS AT21_OCT,
                   D.AT22_CD AS AT22_OCT, D.AT23_CD AS AT23_OCT, D.AT24_CD AS AT24_OCT,
                   D.AT25_CD AS AT25_OCT, D.AT26_CD AS AT26_OCT, D.AT27_CD AS AT27_OCT,
                   D.AT28_CD AS AT28_OCT, D.AT29_CD AS AT29_OCT, D.AT30_CD AS AT30_OCT,
                   D.AT31_CD AS AT31_OCT, E.AT1_CD AS AT1_NOV, E.AT2_CD AS AT2_NOV,
                   E.AT3_CD AS AT3_NOV, E.AT4_CD AS AT4_NOV, E.AT5_CD AS AT5_NOV,
                   E.AT6_CD AS AT6_NOV, E.AT7_CD AS AT7_NOV, E.AT8_CD AS AT8_NOV,
                   E.AT9_CD AS AT9_NOV, E.AT10_CD AS AT10_NOV, E.AT11_CD AS AT11_NOV,
                   E.AT12_CD AS AT12_NOV, E.AT13_CD AS AT13_NOV, E.AT14_CD AS AT14_NOV,
                   E.AT15_CD AS AT15_NOV, E.AT16_CD AS AT16_NOV, E.AT17_CD AS AT17_NOV,
                   E.AT18_CD AS AT18_NOV, E.AT19_CD AS AT19_NOV, E.AT20_CD AS AT20_NOV,
                   E.AT21_CD AS AT21_NOV, E.AT22_CD AS AT22_NOV, E.AT23_CD AS AT23_NOV,
                   E.AT24_CD AS AT24_NOV, E.AT25_CD AS AT25_NOV, E.AT26_CD AS AT26_NOV,
                   E.AT27_CD AS AT27_NOV, E.AT28_CD AS AT28_NOV, E.AT29_CD AS AT29_NOV,
                   E.AT30_CD AS AT30_NOV, E.AT31_CD AS AT31_NOV,
                   F.AT1_CD AS AT1_DEC, F.AT2_CD AS AT2_DEC,
                   F.AT3_CD AS AT3_DEC, F.AT4_CD AS AT4_DEC, F.AT5_CD AS AT5_DEC,
                   F.AT6_CD AS AT6_DEC, F.AT7_CD AS AT7_DEC, F.AT8_CD AS AT8_DEC,
                   F.AT9_CD AS AT9_DEC, F.AT10_CD AS AT10_DEC, F.AT11_CD AS AT11_DEC,
                   F.AT12_CD AS AT12_DEC, F.AT13_CD AS AT13_DEC, F.AT14_CD AS AT14_DEC,
                   F.AT15_CD AS AT15_DEC, F.AT16_CD AS AT16_DEC, F.AT17_CD AS AT17_DEC,
                   F.AT18_CD AS AT18_DEC, F.AT19_CD AS AT19_DEC, F.AT20_CD AS AT20_DEC,
                   F.AT21_CD AS AT21_DEC, F.AT22_CD AS AT22_DEC, F.AT23_CD AS AT23_DEC,
                   F.AT24_CD AS AT24_DEC, F.AT25_CD AS AT25_DEC, F.AT26_CD AS AT26_DEC,
                   F.AT27_CD AS AT27_DEC, F.AT28_CD AS AT28_DEC, F.AT29_CD AS AT29_DEC,
                   F.AT30_CD AS AT30_DEC, F.AT31_CD AS AT31_DEC, ? AS PIS_YY,
                   D.ATT_H AS ATT_OCT, E.ATT_H AS ATT_NOV, F.ATT_H AS ATT_DEC,
                   ( SELECT ROLE_CD FROM T_CM_EMPLIST WHERE ENO_NO = ?) AS ROLE_CD,
                   A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ, A.HIR_YMD
            FROM   ( SELECT ENO_NO, ENO_NM, DPT_CD, JOB_CD, HIR_YMD,
                            SF_GET_DPTSEQ('01', 'B2', HEAD_CD) AS HEAD_SEQ,
                            SF_GET_DPTSEQ('01', 'A4', DPT_CD) AS DPT_SEQ,
                            SF_GET_COMMSEQ('01', 'A2', JOB_CD) AS JOB_SEQ,
                            SF_GET_COMMSEQ('01', 'A3', HOB_CD) AS HOB_SEQ
                     FROM   T_CM_PERSON
                     WHERE (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYY') > ?)
                     AND    NVL(DUTY_CD, ' ') <> 'B5'
                     ) A,
                   ( SELECT PIS_YY, ENO_NO, YRP_CNT, AYRP_CNT
                     FROM   T_DI_YEARLY
                     WHERE  PIS_YY = ?) B,
                   ( SELECT ENO_NO, PIS_YY, REQ_GBN, END_TAG, AT1_CD, AT2_CD, AT3_CD, AT4_CD,
                            AT5_CD, AT6_CD, AT7_CD, AT8_CD, AT9_CD, AT10_CD, AT11_CD,
                            AT12_CD, AT13_CD, AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD,
                            AT19_CD, AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H
                     FROM   T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    REQ_NO = ?) D,
                   ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                            AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                            AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                            AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H
                     FROM   T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    REQ_NO = ?) E,
                   ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                            AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                            AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                            AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H
                     FROM   T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    REQ_NO = ?) F
                   WHERE  A.ENO_NO = B.ENO_NO
                   AND    A.ENO_NO = D.ENO_NO
                   AND    A.ENO_NO = E.ENO_NO
                   AND    A.ENO_NO = F.ENO_NO
            )
            ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIR_YMD, ENO_NO

            ]]>
        </query>
    </sql>


	<!-- 연차휴가사용촉진제(인사팀지정) 데이터 존재유무 -->
    <sql name="GUND021_SHR_04">
        <description>연차휴가사용촉진제(인사팀지정) 데이터 조회</description>
        <query>
            <![CDATA[
                SELECT COUNT(*) AS CNT
                FROM   T_DI_ACCELERATE
                WHERE  PIS_YY = ?
            ]]>
        </query>
    </sql>

	<!-- 연차휴가사용촉진제(인사팀지정) 생성 -->
    <sql name="GUND021_INS">
        <description>연차휴가사용촉진제(인사팀지정) 일괄 생성</description>
        <query>
            <![CDATA[
            INSERT INTO T_DI_ACCELERATE
                 ( PIS_YY, PIS_MM, ENO_NO, DPT_CD, MD_DSP,
                   AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD, AT8_CD, AT9_CD, AT10_CD,
                   AT11_CD,AT12_CD,AT13_CD,AT14_CD,AT15_CD,AT16_CD,AT17_CD,AT18_CD,AT19_CD,AT20_CD,
                   AT21_CD,AT22_CD,AT23_CD,AT24_CD,AT25_CD,AT26_CD,AT27_CD,AT28_CD,AT29_CD,AT30_CD,
                   AT31_CD,
                   ATT_H,REQ_GBN,END_TAG,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
            values(?,?,?,?,?,
                   ?,?,?,?,?,?,?,?,?,?,
                   ?,?,?,?,?,?,?,?,?,?,
                   ?,?,?,?,?,?,?,?,?,?,
                   ?,
                   ?,?,?,
                   ?, SYSDATE,?, SYSDATE)
            ]]>
        </query>
    </sql>

	<!-- 연차휴가사용촉진제(인사팀지정) 삭제 -->
    <sql name="GUND021_DEL">
        <description>연차휴가사용촉진제(인사팀지정) 일괄 생성</description>
        <query>
            <![CDATA[
            DELETE T_DI_ACCELERATE
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 결재선 정보를 조회 한다. -->
    <sql name="GUND021_SHR_05">
        <description>결재선 정보 조회</description>
        <query>
            <![CDATA[
     SELECT GUN_YMD,
     		GUN_GBN,
     		GUN_DPT AS DPT_CD,
     		SEQ_NO,
     		ENO_NO,
     		JOB_CD,
     		APP_TIME,
     		PENO_NO
           ,APP_YN
           ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결') AS APP_YN_NM
           ,SF_GET_ENONAME('01', ENO_NO) AS ENO_NM
           ,SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM
           ,SF_GET_DPTNAME('01', 'A4', GUN_DPT) AS DPT_NM
           ,REQ_NO
     FROM   T_DI_APPROVAL
     WHERE  GUN_GBN = 'A'
     AND       REQ_NO   = (SELECT MAX(REQ_NO)
                        				FROM T_DI_ACCELERATE
				                        WHERE REQ_GBN = '3'  )  -- 대상 3차
            ]]>
        </query>
    </sql>

    <!-- 결재선 정보를 조회 한다. -->
    <sql name="GUND021_SHR_06">
        <description>수정할 정보 조회</description>
        <query>
            <![CDATA[
			SELECT B.PIS_YY, B.PIS_MM, B.ENO_NO, B.REQ_NO
			FROM T_CM_PERSON A, T_DI_ACCELERATE B
			WHERE A.ENO_NO = B.ENO_NO
			AND  B.REQ_GBN = '3' -- 3차 연차촉진
			AND  PIS_YY  = ?
            ]]>
        </query>
    </sql>

    <!-- 근태부서  정보를 조회 한다. -->
    <sql name="GUND021_SHR_07">
        <description>수정할 정보 조회</description>
        <query>
            <![CDATA[
			SELECT 	GUN_DPT
			FROM T_CM_PERSON
			WHERE ENO_NO = ?
			    AND GUN_DPT <> DPT_CD

            ]]>
        </query>
    </sql>

    <!-- 결재선 삭제 -->
    <sql name="GUND021_DEL_01">
        <description>결재선 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM T_DI_APPROVAL
            WHERE 1 = 1
            AND REQ_NO=?
            AND GUN_GBN='A'
            ]]>
        </query>
    </sql>
    <!-- 결재선 정보를 저장 한다. -->
    <sql name="GUND021_INS_01">
        <description>결재선 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO T_DI_APPROVAL
                    (GUN_YMD, GUN_GBN, GUN_DPT, SEQ_NO, ENO_NO, JOB_CD, PENO_NO, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD, REQ_NO)
             VALUES (      ?,       ?,       ?,      ?,      ?,      ?,       ?,       ?, sysdate,       ?, sysdate, ?)
            ]]>
        </query>
    </sql>

        <!-- 연차촉진 등록번호 정보를 저장 한다. -->
    <sql name="GUND021_INS_02">
        <description>등록번호 저장</description>
        <query>
            <![CDATA[
            UPDATE T_DI_ACCELERATE    SET
            	REQ_NO = ?,
            	END_TAG = null
              WHERE PIS_YY = ?
                AND PIS_MM = ?
                AND ENO_NO = ?
            ]]>
        </query>
    </sql>
<!-- 연차휴가사용촉진제(인사팀지정) -->
<!--
***********************************************************************
* @UseCase     : GUNC050
* @description : 휴일근무현황비교
***********************************************************************
* 2007/04/03     김학수        최초작성.
***********************************************************************
-->
    <!-- 근태휴일날짜 조회 -->
    <sql name="GUNC050_SHR">
        <description>휴일근무현황비교</description>
        <query>
            <![CDATA[
			SELECT DECODE(INT,1,'총계',2,DECODE(B.GBN2_TAG,'1','본사','9','지방')||' 합계',DECODE(B.GBN2_TAG,'1','본사','9','지방'))   GBN2_TAG
				  ,DECODE(INT,1,'',2,'',3,A.HEAD_NM||'계',A.HEAD_NM)               HEAD_NM
				  ,DECODE(INT,1,'',2,'',3,'',4,A.GBN_NM||'계',A.GBN_NM)            GBN_NM
				  ,DECODE(INT,1,'',2,'',3,'',4,'',5,DECODE(B.END_YMD,NULL,A.DPT_NM,A.DPT_NM||' (폐기)'))           DPT_NM
				  ,COUNT(A.DPT_CD) - COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD))                                          P_CNT    --인원계
				  ,DECODE(COUNT(DECODE(A.OCC_CD,'A',A.DPT_CD)),'0','',COUNT(DECODE(A.OCC_CD,'A',A.DPT_CD)))       PA_CNT                        --사무직계
				  ,DECODE(COUNT(DECODE(A.OCC_CD,'M',A.DPT_CD)),'0','',COUNT(DECODE(A.OCC_CD,'M',A.DPT_CD)))        PM_CNT                        --택배직계
				  ,DECODE(COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD)),'0','',COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD)))        PP_CNT                        --파견사원계

				  ,DECODE(NVL(SUM(A.OCC_A_CNT_A),0) + NVL(SUM(A.OCC_M_CNT_A),0),'0','',NVL(SUM(A.OCC_A_CNT_A),0) + NVL(SUM(A.OCC_M_CNT_A),0))		OCC_CNT_A        --근무인원계
				  ,DECODE((COUNT(A.DPT_CD) - COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD))),'0',''
						  ,ROUND((NVL(SUM(A.OCC_A_CNT_A),0) + NVL(SUM(A.OCC_M_CNT_A),0))/(COUNT(A.DPT_CD) - COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD)))*100))         OCC_P_A           --근무인원퍼센티지
				  ,SUM(A.OCC_A_CNT_A)                           															OCC_A_CNT_A      --근무인원 사무직계
				  ,ROUND(SUM(A.OCC_A_CNT_A)/(NVL(SUM(A.OCC_A_CNT_A),0) + NVL(SUM(A.OCC_M_CNT_A),0))*100)			        OCC_AP_A         --사무직 퍼센티지
				  ,SUM(A.OCC_M_CNT_A)                           				  											OCC_M_CNT_A      --근무인원 택배직계
				  ,ROUND(SUM(A.OCC_M_CNT_A)/(NVL(SUM(A.OCC_A_CNT_A),0) + NVL(SUM(A.OCC_M_CNT_A),0))*100)	           	    OCC_MP_A         --택배직 퍼센티지

				  ,SUM(A.REP_Y_CNT_A)                           							                REP_Y_CNT_A      --대체휴가 사용인원계
				  ,ROUND(SUM(A.REP_Y_CNT_A)/(NVL(SUM(A.OCC_A_CNT_A),0) + NVL(SUM(A.OCC_M_CNT_A),0))*100)	REP_YP_A         --대체휴가 사용인원퍼센티지
				  ,SUM(A.REP_YA_CNT_A)                          							                REP_YA_CNT_A     --대체휴가 사무직 사용인원계
				  ,ROUND(SUM(A.REP_YA_CNT_A)/SUM(A.REP_Y_CNT_A)*100)						                REP_YAP_A        --대체휴가 사무직 퍼센티지
				  ,SUM(A.REP_YM_CNT_A)                          							                REP_YM_CNT_A     --대체휴가 택배직 사용인원계
				  ,ROUND(SUM(A.REP_YM_CNT_A)/SUM(A.REP_Y_CNT_A)*100)						                REP_YMP_A        --대체휴가 택배직 퍼센티지

				  ,SUM(A.REP_N_CNT_A)                           							                REP_N_CNT_A
				  ,ROUND(SUM(A.REP_N_CNT_A)/(NVL(SUM(A.OCC_A_CNT_A),0) + NVL(SUM(A.OCC_M_CNT_A),0))*100)	REP_NP_A
				  ,SUM(A.REP_NA_CNT_A)                          							                REP_NA_CNT_A
				  ,ROUND(SUM(A.REP_NA_CNT_A)/SUM(A.REP_N_CNT_A)*100)						                REP_NAP_A
				  ,SUM(A.REP_NM_CNT_A)                          					                        REP_NM_CNT_A
				  ,ROUND(SUM(A.REP_NM_CNT_A)/SUM(A.REP_N_CNT_A)*100)					                    REP_NMP_A

				  ,SUM(A.AMT_N_CNT_A) / 1000                           							  AMT_N_CNT_A      --근무수당액 계
				  ,SUM(A.AMT_NA_CNT_A) / 1000                          							  AMT_NA_CNT_A     --근무수당액 사무직계
				  ,SUM(A.AMT_NM_CNT_A) / 1000                         							  AMT_NM_CNT_A     --근무수당액 택배직계




				  ,DECODE(NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0),'0','',NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0))															OCC_CNT_B        --근무인원계
				  ,DECODE(NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0) - (NVL(SUM(A.OCC_A_CNT_A),0) + NVL(SUM(A.OCC_M_CNT_A),0)),'0',''
				         ,NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0) - (NVL(SUM(A.OCC_A_CNT_A),0) + NVL(SUM(A.OCC_M_CNT_A),0)))    OCC_DIF          --근무인원계 증감
				  ,DECODE((COUNT(A.DPT_CD) - COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD))),'0',''
				          ,ROUND((NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0))/(COUNT(A.DPT_CD) - COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD)))*100))         OCC_P_B           --근무인원퍼센티지
				  ,SUM(A.OCC_A_CNT_B)                           																	OCC_A_CNT_B      --근무인원 사무직계
				  ,DECODE(NVL(SUM(A.OCC_A_CNT_B),0) - NVL(SUM(A.OCC_A_CNT_A),0),0,'',
				          NVL(SUM(A.OCC_A_CNT_B),0) - NVL(SUM(A.OCC_A_CNT_A),0))                                                    OCC_A_DIF		 --근무인원 사무직계 증감
				  ,ROUND(SUM(A.OCC_A_CNT_B)/(NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0))*100)							OCC_AP_B         --사무직 퍼센티지
				  ,SUM(A.OCC_M_CNT_B)                           				  													OCC_M_CNT_B      --근무인원 택배직계
				  ,DECODE(NVL(SUM(A.OCC_M_CNT_B),0) - NVL(SUM(A.OCC_M_CNT_A),0),0,'',
				          NVL(SUM(A.OCC_M_CNT_B),0) - NVL(SUM(A.OCC_M_CNT_A),0))                                                    OCC_M_DIF		 --근무인원 택배직계 증감
				  ,ROUND(SUM(A.OCC_M_CNT_B)/(NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0))*100)							OCC_MP_B         --택배직 퍼센티지

				  ,SUM(A.REP_Y_CNT_B)                           							                REP_Y_CNT_B      --대체휴가 사용인원계
				  ,DECODE(NVL(SUM(A.REP_Y_CNT_B),0) - NVL(SUM(A.REP_Y_CNT_A),0),0,'',
				          NVL(SUM(A.REP_Y_CNT_B),0) - NVL(SUM(A.REP_Y_CNT_A),0))                            REP_Y_DIF		 --대체휴가 사용인원계 증감
				  ,DECODE((NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0)),0,'',
				           ROUND(SUM(A.REP_Y_CNT_B)/(NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0))*100))	REP_YP_B         --대체휴가 사용인원퍼센티지
				  ,SUM(A.REP_YA_CNT_B)                          							                REP_YA_CNT_B     --대체휴가 사무직 사용인원계
				  ,DECODE(NVL(SUM(A.REP_YA_CNT_B),0) - NVL(SUM(A.REP_YA_CNT_A),0),0,'',
				          NVL(SUM(A.REP_YA_CNT_B),0) - NVL(SUM(A.REP_YA_CNT_A),0))                          REP_YA_DIF		 --대체휴가 사무직 사용인원계 증감
				  ,ROUND(SUM(A.REP_YA_CNT_B)/SUM(A.REP_Y_CNT_B)*100)						                REP_YAP_B        --대체휴가 사무직 퍼센티지
				  ,SUM(A.REP_YM_CNT_B)                          							                REP_YM_CNT_B     --대체휴가 택배직 사용인원계
				  ,DECODE(NVL(SUM(A.REP_YM_CNT_B),0) - NVL(SUM(A.REP_YM_CNT_A),0),0,'',
				          NVL(SUM(A.REP_YM_CNT_B),0) - NVL(SUM(A.REP_YM_CNT_A),0))                          REP_YM_DIF		 --대체휴가 택배직 사용인원계 증감
				  ,ROUND(SUM(A.REP_YM_CNT_B)/SUM(A.REP_Y_CNT_B)*100)						                REP_YMP_B        --대체휴가 택배직 퍼센티지

				  ,SUM(A.REP_N_CNT_B)                           							                REP_N_CNT_B
				  ,DECODE(NVL(SUM(A.REP_N_CNT_B),0) - NVL(SUM(A.REP_N_CNT_A),0),0,'',
				          NVL(SUM(A.REP_N_CNT_B),0) - NVL(SUM(A.REP_N_CNT_A),0))							REP_N_DIF
				  ,ROUND(SUM(A.REP_N_CNT_B)/(NVL(SUM(A.OCC_A_CNT_B),0) + NVL(SUM(A.OCC_M_CNT_B),0))*100)	REP_NP_B
				  ,SUM(A.REP_NA_CNT_B)                          							                REP_NA_CNT_B
				  ,DECODE(NVL(SUM(A.REP_NA_CNT_B),0) - NVL(SUM(A.REP_NA_CNT_A),0),0,'',
				          NVL(SUM(A.REP_NA_CNT_B),0) - NVL(SUM(A.REP_NA_CNT_A),0))                          REP_NA_DIF
				  ,ROUND(SUM(A.REP_NA_CNT_B)/SUM(A.REP_N_CNT_B)*100)						                REP_NAP_B
				  ,SUM(A.REP_NM_CNT_B)                          					                        REP_NM_CNT_B
				  ,DECODE(NVL(SUM(A.REP_NM_CNT_B),0) - NVL(SUM(A.REP_NM_CNT_A),0),0,'',
				          NVL(SUM(A.REP_NM_CNT_B),0) - NVL(SUM(A.REP_NM_CNT_A),0))                          REP_NM_DIF
				  ,ROUND(SUM(A.REP_NM_CNT_B)/SUM(A.REP_N_CNT_B)*100)					                    REP_NMP_B

				  ,SUM(A.AMT_N_CNT_B) / 1000                           								  AMT_N_CNT_B      --근무수당액 계
				  ,DECODE((NVL(SUM(A.AMT_N_CNT_B),0) - NVL(SUM(A.AMT_N_CNT_A),0)) / 1000,0,'',
				          (NVL(SUM(A.AMT_N_CNT_B),0) - NVL(SUM(A.AMT_N_CNT_A),0)) / 1000)             AMT_N_DIF        --근무수당액 계 증감
				  ,SUM(A.AMT_NA_CNT_B) / 1000                           							  AMT_NA_CNT_B     --근무수당액 사무직계
				  ,DECODE((NVL(SUM(A.AMT_NA_CNT_B),0) - NVL(SUM(A.AMT_NA_CNT_A),0)) / 1000,0,'',
				          (NVL(SUM(A.AMT_NA_CNT_B),0) - NVL(SUM(A.AMT_NA_CNT_A),0)) / 1000)           AMT_NA_DIF       --근무수당액 계 증감
				  ,SUM(A.AMT_NM_CNT_B) / 1000                            							  AMT_NM_CNT_B     --근무수당액 택배직계
				  ,DECODE((NVL(SUM(A.AMT_NM_CNT_B),0) - NVL(SUM(A.AMT_NM_CNT_A),0)) / 1000,0,'',
				          (NVL(SUM(A.AMT_NM_CNT_B),0) - NVL(SUM(A.AMT_NM_CNT_A),0)) / 1000)           AMT_NM_DIF       --근무수당액 계 증감





				  ,SUM(A.OCC_P_CNT_B)                                                       OCC_P_CNT      --파견사원 근무인원
				  ,ROUND(SUM(A.OCC_P_CNT_B)/COUNT(DECODE(A.OCC_CD,'P',A.DPT_CD))*100)       OCC_PP_CNT     --파견사원 근무인원 퍼센티지
				  ,SUM(A.REP_YP_CNT_B)                                                      REP_YP_CNT     --파견사원 대체휴가 인원계
				  ,ROUND(SUM(A.REP_YP_CNT_B)/SUM(A.OCC_P_CNT_B)*100)                          REP_YPP        --파견사원 대휴 사용인원계
				  ,SUM(A.REP_NP_CNT_B)                                                      REP_NP_CNT     --파견사원 대체휴가 인원계
				  ,ROUND(SUM(A.REP_NP_CNT_B)/SUM(A.OCC_P_CNT_B)*100)                          REP_NPP        --파견사원 대휴 사용인원계
				  ,SUM(A.AMT_NP_CNT_B)                                                      AMT_NP_CNT     --파견사원 근무수당계
				  ,''																	  ETC
				  ,MIN(DECODE(INT,1,'1'))											      R
				  ,MIN(DECODE(INT,2,'계'))                                                GUBUN2         --EZGEN 에서의 디자인양식 구분값
				  ,MIN(DECODE(INT,3,'계'))                                                GUBUN3         --EZGEN 에서의 디자인양식 구분값
				  ,MIN(DECODE(INT,4,'계'))                                                GUBUN4         --EZGEN 에서의 디자인양식 구분값
			  FROM
					(
						SELECT P.HEAD_NM       HEAD_NM
							  ,P.GBN_NM        GBN_NM
							  ,P.DPT_NM        DPT_NM
							  ,P.DPT_CD        DPT_CD
							  ,P.OCC_CD        OCC_CD
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',1)))       OCC_A_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',1)))       OCC_M_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',1)))       OCC_P_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(D.REP_APP,'Y',1)))                                REP_Y_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',DECODE(D.REP_APP,'Y',1))))           REP_YA_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',DECODE(D.REP_APP,'Y',1))))           REP_YM_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',DECODE(D.REP_APP,'Y',1))))           REP_YP_CNT_A    --대휴파견사원 체크
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(D.REP_APP,'N',1)))                                REP_N_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',DECODE(D.REP_APP,'N',1))))           REP_NA_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',DECODE(D.REP_APP,'N',1))))           REP_NM_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',DECODE(D.REP_APP,'N',1))))           REP_NP_CNT_A    --수당신청사원 체크
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(D.REP_APP,'N',HOL_AMT)))                          AMT_N_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',DECODE(D.REP_APP,'N',HOL_AMT))))     AMT_NA_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',DECODE(D.REP_APP,'N',HOL_AMT))))     AMT_NM_CNT_A
							  ,DECODE(D.HOL_M,'MONTH_A',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',DECODE(D.REP_APP,'N',HOL_AMT))))     AMT_NP_CNT_A    --수당신청사원 수당금액

							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',1)))       OCC_A_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',1)))       OCC_M_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',1)))       OCC_P_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(D.REP_APP,'Y',1)))                                REP_Y_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',DECODE(D.REP_APP,'Y',1))))           REP_YA_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',DECODE(D.REP_APP,'Y',1))))           REP_YM_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',DECODE(D.REP_APP,'Y',1))))           REP_YP_CNT_B    --대휴파견사원 체크
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(D.REP_APP,'N',1)))                                REP_N_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',DECODE(D.REP_APP,'N',1))))           REP_NA_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',DECODE(D.REP_APP,'N',1))))           REP_NM_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',DECODE(D.REP_APP,'N',1))))           REP_NP_CNT_B    --수당신청사원 체크
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(D.REP_APP,'N',HOL_AMT)))                          AMT_N_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'A',DECODE(D.REP_APP,'N',HOL_AMT))))     AMT_NA_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'M',DECODE(D.REP_APP,'N',HOL_AMT))))     AMT_NM_CNT_B
							  ,DECODE(D.HOL_M,'MONTH_B',DECODE(D.ENO_NO,P.ENO_NO,DECODE(P.OCC_CD,'P',DECODE(D.REP_APP,'N',HOL_AMT))))     AMT_NP_CNT_B    --수당신청사원 수당금액
						  FROM
								   (
									SELECT ENO_NO
										  ,HEAD_NM
										  ,GBN_NM
										  ,DPT_NM
										  ,DPT_CD
										  ,OCC_CD
									  FROM VI_T_CM_PERSON2
									 WHERE (TO_CHAR(RET_YMD,'YYYYMMDD') > [1] OR RET_YMD IS NULL)
									 AND TO_CHAR(HIRG_YMD,'YYYYMMDD') <= [2]
								UNION

									 SELECT ENO_NO        ENO_NO
										   ,SF_GET_DPTNAME('01', 'B2', HEAD_CD)       HEAD_NM
										   ,SF_GET_COMMNAME('01', 'B7', GBN_CD)       GBN_NM
										   ,SF_GET_DPTNAME('01', 'A4', DPT_CD)       DPT_NM
										   ,DPT_CD        DPT_CD
										   ,'P'              OCC_CD
									  FROM T_ME_PERSON
									 WHERE (TO_CHAR(RET_YMD,'YYYYMMDD') > [3] OR RET_YMD IS NULL)
									 AND HIR_YMD <= TO_DATE([4],'YYYY.MM.DD')
								   ) P,
								   (
									SELECT A.HOL_YMD     HOL_YMD
										  ,DECODE(SUBSTR(A.HOL_YMD,5,2),'02','MONTH_A','03','MONTH_B')   HOL_M
										  ,A.ENO_NO      ENO_NO
										  ,A.HOL_TIME    HOL_TIME
										  ,A.REP_YMD     REP_YMD
										  ,A.REP_APP     REP_APP
										  ,A.HOL_AMT     HOL_AMT
									  FROM
											(
											SELECT HOL_YMD
												  ,ENO_NO
												  ,HOL_TIME
												  ,REP_APP
												  ,REP_YMD
												  ,HOL_AMT
											  FROM T_DI_HOLIDAYWORK
											 WHERE  [5]
											) A,
											(
											SELECT REG_YMD
											  FROM T_DI_HOLIDAY
											 WHERE  [6]
											   AND HOL_GBN IN([7])
											) B
									 WHERE A.HOL_YMD = B.REG_YMD
									 ) D
							WHERE P.ENO_NO = D.ENO_NO(+)
					) A,
					(
					SELECT DPT_CD, GBN2_TAG, END_YMD
					  FROM T_CM_DEPT
					 WHERE CD_GBN = 'A4'
					) B,
					(
					SELECT ROWNUM INT
					  FROM DICT
					 WHERE ROWNUM <= 5
					) COPYT
			WHERE A.DPT_CD = B.DPT_CD
			GROUP BY DECODE(INT,1,'총계',2,DECODE(B.GBN2_TAG,'1','본사','9','지방')||' 합계',DECODE(B.GBN2_TAG,'1','본사','9','지방'))
				   , DECODE(INT,1,'',2,'',3,A.HEAD_NM||'계',A.HEAD_NM)
				   , DECODE(INT,1,'',2,'',3,'',4,A.GBN_NM||'계',A.GBN_NM)
				   , DECODE(INT,1,'',2,'',3,'',4,'',5,DECODE(B.END_YMD,NULL,A.DPT_NM,A.DPT_NM||' (폐기)'))
			ORDER BY R
				   , DECODE(INT,1,'총계',2,DECODE(B.GBN2_TAG,'1','본사','9','지방')||' 합계',DECODE(B.GBN2_TAG,'1','본사','9','지방'))
				   , DECODE(INT,1,'',2,'',3,A.HEAD_NM||'계',A.HEAD_NM)
				   , DECODE(INT,1,'',2,'',3,'',4,A.GBN_NM||'계',A.GBN_NM)
            ]]>
        </query>
    </sql>






<!-- 연차휴가사용촉진제 -->
<!--
***********************************************************************
* @UseCase     : GUND020
* @description : 연차휴가사용촉진제
***********************************************************************
* 2007/03/19     오대성        최초작성.
***********************************************************************
-->
    <!-- 근태휴일날짜 조회 -->
    <sql name="GUND020_SHR_01">
        <description>근태휴일날짜 조회</description>
        <query>
            <![CDATA[
            SELECT SUBSTR(REG_YMD,5,4) H_DAY, HOL_YN,
                   'AT'||LTRIM(SUBSTR(REG_YMD,7,2),'0')||
                     DECODE(SUBSTR(REG_YMD,5,2),'01','_OCT','02','_NOV','03','_DEC','04','_OCT','05','_NOV','06','_DEC','07','_OCT','08','_NOV','09','_DEC','10','_OCT','11','_NOV','12','_DEC') AS COL_NM
            FROM   T_DI_HOLIDAY
            WHERE  REG_YMD >= ?
            AND    REG_YMD <= ?
            AND    (HOL_GBN = '1' OR HOL_GBN = '2')
            ]]>
        </query>
    </sql>

    <!-- 연차휴가사용촉진제 조회 -->
    <sql name="GUND020_SHR_02">
        <description>연차휴가사용촉진제 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,ENO_NM,DPT_CD,JOB_CD,DPT_NM,JOB_NM,YRP_REM,(YRP_REM-(ATT_OCT+ATT_NOV+ATT_DEC)) AS REM_CNT,
                   AT1_OCT,AT2_OCT,AT3_OCT,AT4_OCT,AT5_OCT,AT6_OCT,AT7_OCT,AT8_OCT,AT9_OCT,AT10_OCT,
                   AT11_OCT,AT12_OCT,AT13_OCT,AT14_OCT,AT15_OCT,AT16_OCT,AT17_OCT,AT18_OCT,AT19_OCT,AT20_OCT,
                   AT21_OCT,AT22_OCT,AT23_OCT,AT24_OCT,AT25_OCT,AT26_OCT,AT27_OCT,AT28_OCT,AT29_OCT,AT30_OCT,
                   AT31_OCT, MM_NAM_OCT,
                   AT1_NOV,AT2_NOV,AT3_NOV,AT4_NOV,AT5_NOV,AT6_NOV,AT7_NOV,AT8_NOV,AT9_NOV,AT10_NOV,
                   AT11_NOV,AT12_NOV,AT13_NOV,AT14_NOV,AT15_NOV,AT16_NOV,AT17_NOV,AT18_NOV,AT19_NOV,AT20_NOV,
                   AT21_NOV,AT22_NOV,AT23_NOV,AT24_NOV,AT25_NOV,AT26_NOV,AT27_NOV,AT28_NOV,AT29_NOV,AT30_NOV,
                   AT31_NOV, MM_NAM_NOV,
                   AT1_DEC,AT2_DEC,AT3_DEC,AT4_DEC,AT5_DEC,AT6_DEC,AT7_DEC,AT8_DEC,AT9_DEC,AT10_DEC,AT11_DEC,
                   AT12_DEC,AT13_DEC,AT14_DEC,AT15_DEC,AT16_DEC,AT17_DEC,AT18_DEC,AT19_DEC,AT20_DEC,
                   AT21_DEC,AT22_DEC,AT23_DEC,AT24_DEC,AT25_DEC,AT26_DEC,AT27_DEC,AT28_DEC,AT29_DEC,AT30_DEC,
                   AT31_DEC, MM_NAM_DEC,
                   PIS_YY,ATT_OCT,ATT_NOV,ATT_DEC,ROLE_CD,
                   DPT_SEQ, JOB_SEQ, HOB_SEQ, HIR_YMD, END_TAG, YRP_CNT, 0 AS USE_PER
            FROM (

            SELECT A.ENO_NO, A.ENO_NM, A.DPT_CD, A.JOB_CD,
                   SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM,
                   SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,
                   B.YRP_CNT-B.AYRP_CNT
                   -( SELECT (SUM(ATT_H)+SUM(ATT_P*0.5)+SUM(ATT_Q)+SUM(ATT_R*0.5)+SUM(ATT_V*0.5)+SUM(ATT_Z))
                      FROM   T_DI_DILIGENCE
                      WHERE  PIS_YY = B.PIS_YY
                      AND    ENO_NO = A.ENO_NO) AS YRP_REM,
                   D.AT1_CD AS AT1_OCT, D.AT2_CD AS AT2_OCT, D.AT3_CD AS AT3_OCT,
                   D.AT4_CD AS AT4_OCT, D.AT5_CD AS AT5_OCT, D.AT6_CD AS AT6_OCT,
                   D.AT7_CD AS AT7_OCT, D.AT8_CD AS AT8_OCT, D.AT9_CD AS AT9_OCT,
                   D.AT10_CD AS AT10_OCT, D.AT11_CD AS AT11_OCT, D.AT12_CD AS AT12_OCT,
                   D.AT13_CD AS AT13_OCT, D.AT14_CD AS AT14_OCT, D.AT15_CD AS AT15_OCT,
                   D.AT16_CD AS AT16_OCT, D.AT17_CD AS AT17_OCT, D.AT18_CD AS AT18_OCT,
                   D.AT19_CD AS AT19_OCT, D.AT20_CD AS AT20_OCT, D.AT21_CD AS AT21_OCT,
                   D.AT22_CD AS AT22_OCT, D.AT23_CD AS AT23_OCT, D.AT24_CD AS AT24_OCT,
                   D.AT25_CD AS AT25_OCT, D.AT26_CD AS AT26_OCT, D.AT27_CD AS AT27_OCT,
                   D.AT28_CD AS AT28_OCT, D.AT29_CD AS AT29_OCT, D.AT30_CD AS AT30_OCT,
                   D.AT31_CD AS AT31_OCT, D.MM_NAM  AS MM_NAM_OCT,
                   E.AT1_CD AS AT1_NOV, E.AT2_CD AS AT2_NOV,
                   E.AT3_CD AS AT3_NOV, E.AT4_CD AS AT4_NOV, E.AT5_CD AS AT5_NOV,
                   E.AT6_CD AS AT6_NOV, E.AT7_CD AS AT7_NOV, E.AT8_CD AS AT8_NOV,
                   E.AT9_CD AS AT9_NOV, E.AT10_CD AS AT10_NOV, E.AT11_CD AS AT11_NOV,
                   E.AT12_CD AS AT12_NOV, E.AT13_CD AS AT13_NOV, E.AT14_CD AS AT14_NOV,
                   E.AT15_CD AS AT15_NOV, E.AT16_CD AS AT16_NOV, E.AT17_CD AS AT17_NOV,
                   E.AT18_CD AS AT18_NOV, E.AT19_CD AS AT19_NOV, E.AT20_CD AS AT20_NOV,
                   E.AT21_CD AS AT21_NOV, E.AT22_CD AS AT22_NOV, E.AT23_CD AS AT23_NOV,
                   E.AT24_CD AS AT24_NOV, E.AT25_CD AS AT25_NOV, E.AT26_CD AS AT26_NOV,
                   E.AT27_CD AS AT27_NOV, E.AT28_CD AS AT28_NOV, E.AT29_CD AS AT29_NOV,
                   E.AT30_CD AS AT30_NOV, E.AT31_CD AS AT31_NOV, E.MM_NAM  AS MM_NAM_NOV,
                   F.AT1_CD AS AT1_DEC, F.AT2_CD AS AT2_DEC,
                   F.AT3_CD AS AT3_DEC, F.AT4_CD AS AT4_DEC, F.AT5_CD AS AT5_DEC,
                   F.AT6_CD AS AT6_DEC, F.AT7_CD AS AT7_DEC, F.AT8_CD AS AT8_DEC,
                   F.AT9_CD AS AT9_DEC, F.AT10_CD AS AT10_DEC, F.AT11_CD AS AT11_DEC,
                   F.AT12_CD AS AT12_DEC, F.AT13_CD AS AT13_DEC, F.AT14_CD AS AT14_DEC,
                   F.AT15_CD AS AT15_DEC, F.AT16_CD AS AT16_DEC, F.AT17_CD AS AT17_DEC,
                   F.AT18_CD AS AT18_DEC, F.AT19_CD AS AT19_DEC, F.AT20_CD AS AT20_DEC,
                   F.AT21_CD AS AT21_DEC, F.AT22_CD AS AT22_DEC, F.AT23_CD AS AT23_DEC,
                   F.AT24_CD AS AT24_DEC, F.AT25_CD AS AT25_DEC, F.AT26_CD AS AT26_DEC,
                   F.AT27_CD AS AT27_DEC, F.AT28_CD AS AT28_DEC, F.AT29_CD AS AT29_DEC,
                   F.AT30_CD AS AT30_DEC, F.AT31_CD AS AT31_DEC, F.MM_NAM  AS MM_NAM_DEC,
                    ? AS PIS_YY,
                   D.ATT_H AS ATT_OCT, E.ATT_H AS ATT_NOV, F.ATT_H AS ATT_DEC,
                   ( SELECT ROLE_CD FROM T_CM_EMPLIST WHERE ENO_NO = ?) AS ROLE_CD,
                   A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ, A.HIR_YMD,   END_TAG, B.YRP_CNT
            FROM   ( SELECT ENO_NO, ENO_NM, DPT_CD, JOB_CD, HIR_YMD,
                            SF_GET_DPTSEQ('01', 'B2', HEAD_CD) AS HEAD_SEQ,
                            SF_GET_DPTSEQ('01', 'A4', DPT_CD) AS DPT_SEQ,
                            SF_GET_COMMSEQ('01', 'A2', JOB_CD) AS JOB_SEQ,
                            SF_GET_COMMSEQ('01', 'A3', HOB_CD) AS HOB_SEQ
                     FROM   T_CM_PERSON
                     WHERE (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYY') > ?)

					 AND   (TEAM_CD = ? OR DPT_CD = ?)
							[1]
							[2]
							[3]

                     AND    ENO_NO LIKE ?||'%'
                     AND    NVL(DUTY_CD, ' ') <> 'B5'
                     ) A,
                   ( SELECT PIS_YY, ENO_NO, YRP_CNT, AYRP_CNT
                     FROM   T_DI_YEARLY
                     WHERE  PIS_YY = ?) B,
                   ( SELECT ENO_NO, PIS_YY, REQ_GBN, END_TAG, AT1_CD, AT2_CD, AT3_CD, AT4_CD,
                            AT5_CD, AT6_CD, AT7_CD, AT8_CD, AT9_CD, AT10_CD, AT11_CD,
                            AT12_CD, AT13_CD, AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD,
                            AT19_CD, AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H, ? AS MM_NAM
                     FROM   T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    NVL(REQ_GBN,' ') LIKE '%'||?||'%' ) D,
                   ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                            AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                            AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                            AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H, ? AS MM_NAM
                     FROM   T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    NVL(REQ_GBN,' ') LIKE '%'||?||'%' ) E,
                   ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                            AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                            AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                            AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H, ? AS MM_NAM
                     FROM   T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    NVL(REQ_GBN,' ') LIKE '%'||?||'%') F
                   WHERE  A.ENO_NO = B.ENO_NO(+)
                   AND    A.ENO_NO = D.ENO_NO(+)
                   AND    A.ENO_NO = E.ENO_NO(+)
                   AND    A.ENO_NO = F.ENO_NO(+)
            )
            [4]
            ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIR_YMD, ENO_NO

            ]]>
        </query>
    </sql>

    <!-- 연차휴가사용촉진제 조회 -->
    <sql name="GUND020_SHR_03">
        <description>연차휴가사용촉진제 조회(결재에서 조회)</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,ENO_NM,DPT_CD,JOB_CD,DPT_NM,JOB_NM,YRP_REM,(YRP_REM-(ATT_OCT+ATT_NOV+ATT_DEC)) AS REM_CNT,
                   AT1_OCT,AT2_OCT,AT3_OCT,AT4_OCT,AT5_OCT,AT6_OCT,AT7_OCT,AT8_OCT,AT9_OCT,AT10_OCT,
                   AT11_OCT,AT12_OCT,AT13_OCT,AT14_OCT,AT15_OCT,AT16_OCT,AT17_OCT,AT18_OCT,AT19_OCT,AT20_OCT,
                   AT21_OCT,AT22_OCT,AT23_OCT,AT24_OCT,AT25_OCT,AT26_OCT,AT27_OCT,AT28_OCT,AT29_OCT,AT30_OCT,
                   AT31_OCT,
                   AT1_NOV,AT2_NOV,AT3_NOV,AT4_NOV,AT5_NOV,AT6_NOV,AT7_NOV,AT8_NOV,AT9_NOV,AT10_NOV,
                   AT11_NOV,AT12_NOV,AT13_NOV,AT14_NOV,AT15_NOV,AT16_NOV,AT17_NOV,AT18_NOV,AT19_NOV,AT20_NOV,
                   AT21_NOV,AT22_NOV,AT23_NOV,AT24_NOV,AT25_NOV,AT26_NOV,AT27_NOV,AT28_NOV,AT29_NOV,AT30_NOV,AT31_NOV,
                   AT1_DEC,AT2_DEC,AT3_DEC,AT4_DEC,AT5_DEC,AT6_DEC,AT7_DEC,AT8_DEC,AT9_DEC,AT10_DEC,AT11_DEC,
                   AT12_DEC,AT13_DEC,AT14_DEC,AT15_DEC,AT16_DEC,AT17_DEC,AT18_DEC,AT19_DEC,AT20_DEC,
                   AT21_DEC,AT22_DEC,AT23_DEC,AT24_DEC,AT25_DEC,AT26_DEC,AT27_DEC,AT28_DEC,AT29_DEC,AT30_DEC,
                   AT31_DEC,
                   PIS_YY,ATT_OCT,ATT_NOV,ATT_DEC,ROLE_CD,
                   DPT_SEQ, JOB_SEQ, HOB_SEQ, HIR_YMD, REQ_GBN, END_TAG, YRP_CNT, 0 AS USE_PER
            FROM (

            SELECT A.ENO_NO, A.ENO_NM, A.DPT_CD, A.JOB_CD,
                   ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM,
                   ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,
                   B.YRP_CNT-B.AYRP_CNT
                   -( SELECT SUM(ATT_H)+SUM(ATT_P*0.5)+SUM(ATT_Q)+SUM(ATT_R*0.5)+SUM(ATT_V*0.5)+SUM(ATT_Z)
                      FROM   ASNHR.T_DI_DILIGENCE
                      WHERE  PIS_YY = B.PIS_YY
                      AND    ENO_NO = A.ENO_NO) AS YRP_REM,
                   D.AT1_CD AS AT1_OCT, D.AT2_CD AS AT2_OCT, D.AT3_CD AS AT3_OCT,
                   D.AT4_CD AS AT4_OCT, D.AT5_CD AS AT5_OCT, D.AT6_CD AS AT6_OCT,
                   D.AT7_CD AS AT7_OCT, D.AT8_CD AS AT8_OCT, D.AT9_CD AS AT9_OCT,
                   D.AT10_CD AS AT10_OCT, D.AT11_CD AS AT11_OCT, D.AT12_CD AS AT12_OCT,
                   D.AT13_CD AS AT13_OCT, D.AT14_CD AS AT14_OCT, D.AT15_CD AS AT15_OCT,
                   D.AT16_CD AS AT16_OCT, D.AT17_CD AS AT17_OCT, D.AT18_CD AS AT18_OCT,
                   D.AT19_CD AS AT19_OCT, D.AT20_CD AS AT20_OCT, D.AT21_CD AS AT21_OCT,
                   D.AT22_CD AS AT22_OCT, D.AT23_CD AS AT23_OCT, D.AT24_CD AS AT24_OCT,
                   D.AT25_CD AS AT25_OCT, D.AT26_CD AS AT26_OCT, D.AT27_CD AS AT27_OCT,
                   D.AT28_CD AS AT28_OCT, D.AT29_CD AS AT29_OCT, D.AT30_CD AS AT30_OCT,
                   D.AT31_CD AS AT31_OCT, E.AT1_CD AS AT1_NOV, E.AT2_CD AS AT2_NOV,
                   E.AT3_CD AS AT3_NOV, E.AT4_CD AS AT4_NOV, E.AT5_CD AS AT5_NOV,
                   E.AT6_CD AS AT6_NOV, E.AT7_CD AS AT7_NOV, E.AT8_CD AS AT8_NOV,
                   E.AT9_CD AS AT9_NOV, E.AT10_CD AS AT10_NOV, E.AT11_CD AS AT11_NOV,
                   E.AT12_CD AS AT12_NOV, E.AT13_CD AS AT13_NOV, E.AT14_CD AS AT14_NOV,
                   E.AT15_CD AS AT15_NOV, E.AT16_CD AS AT16_NOV, E.AT17_CD AS AT17_NOV,
                   E.AT18_CD AS AT18_NOV, E.AT19_CD AS AT19_NOV, E.AT20_CD AS AT20_NOV,
                   E.AT21_CD AS AT21_NOV, E.AT22_CD AS AT22_NOV, E.AT23_CD AS AT23_NOV,
                   E.AT24_CD AS AT24_NOV, E.AT25_CD AS AT25_NOV, E.AT26_CD AS AT26_NOV,
                   E.AT27_CD AS AT27_NOV, E.AT28_CD AS AT28_NOV, E.AT29_CD AS AT29_NOV,
                   E.AT30_CD AS AT30_NOV, E.AT31_CD AS AT31_NOV,
                   F.AT1_CD AS AT1_DEC, F.AT2_CD AS AT2_DEC,
                   F.AT3_CD AS AT3_DEC, F.AT4_CD AS AT4_DEC, F.AT5_CD AS AT5_DEC,
                   F.AT6_CD AS AT6_DEC, F.AT7_CD AS AT7_DEC, F.AT8_CD AS AT8_DEC,
                   F.AT9_CD AS AT9_DEC, F.AT10_CD AS AT10_DEC, F.AT11_CD AS AT11_DEC,
                   F.AT12_CD AS AT12_DEC, F.AT13_CD AS AT13_DEC, F.AT14_CD AS AT14_DEC,
                   F.AT15_CD AS AT15_DEC, F.AT16_CD AS AT16_DEC, F.AT17_CD AS AT17_DEC,
                   F.AT18_CD AS AT18_DEC, F.AT19_CD AS AT19_DEC, F.AT20_CD AS AT20_DEC,
                   F.AT21_CD AS AT21_DEC, F.AT22_CD AS AT22_DEC, F.AT23_CD AS AT23_DEC,
                   F.AT24_CD AS AT24_DEC, F.AT25_CD AS AT25_DEC, F.AT26_CD AS AT26_DEC,
                   F.AT27_CD AS AT27_DEC, F.AT28_CD AS AT28_DEC, F.AT29_CD AS AT29_DEC,
                   F.AT30_CD AS AT30_DEC, F.AT31_CD AS AT31_DEC, ? AS PIS_YY,
                   D.ATT_H AS ATT_OCT, E.ATT_H AS ATT_NOV, F.ATT_H AS ATT_DEC,
                   ( SELECT ROLE_CD FROM ASNHR.T_CM_EMPLIST WHERE ENO_NO = ?) AS ROLE_CD,
                   A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ, A.HIR_YMD, D.REQ_GBN,    F.END_TAG, B.YRP_CNT
            FROM   ( SELECT ENO_NO, ENO_NM, DPT_CD, JOB_CD, HIR_YMD,
                            ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD) AS HEAD_SEQ,
                            ASNHR.SF_GET_DPTSEQ('01', 'A4', DPT_CD) AS DPT_SEQ,
                            ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD) AS JOB_SEQ,
                            ASNHR.SF_GET_COMMSEQ('01', 'A3', HOB_CD) AS HOB_SEQ
                     FROM   ASNHR.T_CM_PERSON
                     WHERE (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYY') > ?)
                     AND    NVL(DUTY_CD, ' ') <> 'B5'
                     ) A,
                   ( SELECT PIS_YY, ENO_NO, YRP_CNT, AYRP_CNT
                     FROM   ASNHR.T_DI_YEARLY
                     WHERE  PIS_YY = ?) B,
                   ( SELECT ENO_NO, PIS_YY, REQ_GBN, END_TAG, AT1_CD, AT2_CD, AT3_CD, AT4_CD,
                            AT5_CD, AT6_CD, AT7_CD, AT8_CD, AT9_CD, AT10_CD, AT11_CD,
                            AT12_CD, AT13_CD, AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD,
                            AT19_CD, AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H
                     FROM   ASNHR.T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    REQ_NO = ?) D,
                   ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                            AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                            AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                            AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD,ATT_H
                     FROM   ASNHR.T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    REQ_NO = ?) E,
                   ( SELECT ENO_NO, AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD,
                            AT8_CD, AT9_CD, AT10_CD, AT11_CD, AT12_CD, AT13_CD,
                            AT14_CD, AT15_CD, AT16_CD, AT17_CD, AT18_CD, AT19_CD,
                            AT20_CD, AT21_CD, AT22_CD, AT23_CD, AT24_CD, AT25_CD,
                            AT26_CD, AT27_CD, AT28_CD, AT29_CD, AT30_CD, AT31_CD, ATT_H, END_TAG
                     FROM   ASNHR.T_DI_ACCELERATE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    REQ_NO = ?) F
                   WHERE  A.ENO_NO = B.ENO_NO
                   AND    A.ENO_NO = D.ENO_NO
                   AND    A.ENO_NO = E.ENO_NO
                   AND    A.ENO_NO = F.ENO_NO
            )
            ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIR_YMD, ENO_NO

            ]]>
        </query>
    </sql>


	<!-- 연차휴가사용촉진제 데이터 존재유무 -->
    <sql name="GUND020_SHR_04">
        <description>연차휴가사용촉진제 데이터 조회</description>
        <query>
            <![CDATA[
                SELECT COUNT(*) AS CNT
                FROM   ASNHR.T_DI_ACCELERATE
                WHERE  PIS_YY = ?
            ]]>
        </query>
    </sql>

	<!-- 연차휴가사용촉진제 생성 -->
    <sql name="GUND020_INS">
        <description>연차휴가사용촉진제 일괄 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_DI_ACCELERATE
                 ( PIS_YY, PIS_MM, ENO_NO, DPT_CD, MD_DSP,
                   AT1_CD, AT2_CD, AT3_CD, AT4_CD, AT5_CD, AT6_CD, AT7_CD, AT8_CD, AT9_CD, AT10_CD,
                   AT11_CD,AT12_CD,AT13_CD,AT14_CD,AT15_CD,AT16_CD,AT17_CD,AT18_CD,AT19_CD,AT20_CD,
                   AT21_CD,AT22_CD,AT23_CD,AT24_CD,AT25_CD,AT26_CD,AT27_CD,AT28_CD,AT29_CD,AT30_CD,
                   AT31_CD,
                   ATT_H,REQ_GBN,END_TAG,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
            values(?,?,?,?,?,
                   ?,?,?,?,?,?,?,?,?,?,
                   ?,?,?,?,?,?,?,?,?,?,
                   ?,?,?,?,?,?,?,?,?,?,
                   ?,
                   ?,?,?,
                   ?, SYSDATE,?, SYSDATE)
            ]]>
        </query>
    </sql>

	<!-- 연차휴가사용촉진제 삭제 -->
    <sql name="GUND020_DEL">
        <description>연차휴가사용촉진제 일괄 생성</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_DI_ACCELERATE
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 결재선 정보를 조회 한다. -->
    <sql name="GUND020_SHR_05">
        <description>결재선 정보 조회</description>
        <query>
            <![CDATA[
     SELECT GUN_YMD,
     		GUN_GBN,
     		GUN_DPT AS DPT_CD,
     		SEQ_NO,
     		ENO_NO,
     		JOB_CD,
     		APP_TIME,
     		PENO_NO
           ,APP_YN
           ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결') AS APP_YN_NM
           ,ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM
           ,ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM
           ,ASNHR.SF_GET_DPTNAME('01', 'A4', GUN_DPT) AS DPT_NM
           ,REQ_NO
           ,REMARK
		   ,NVL2(REMARK,'Click','') AS REMARK1
     FROM   ASNHR.T_DI_APPROVAL
     WHERE  REQ_NO LIKE  ? || '%'
     AND    GUN_GBN = 'A'
     AND    GUN_YMD LIKE  ? || '%'
	 AND    PENO_NO IN (SELECT ENO_NO
   		  		  	 FROM ASNHR.T_CM_PERSON
					 [1]
					 )
            ]]>
        </query><!--//DPT_CD에서바꿈-->
    </sql>

    <!-- 결재선 정보를 조회 한다. -->
    <sql name="GUND020_SHR_06">
        <description>수정할 정보 조회</description>
        <query>
            <![CDATA[
			SELECT B.PIS_YY, B.PIS_MM, B.ENO_NO, B.REQ_NO
			FROM ASNHR.T_CM_PERSON A, ASNHR.T_DI_ACCELERATE B
			WHERE A.ENO_NO = B.ENO_NO
			AND  A.DPT_CD = ?
			AND  PIS_YY  = ?
			AND  PIS_MM IN (?,?,?)
            ]]>
        </query>
    </sql>

    <!-- 근태부서  정보를 조회 한다. -->
    <sql name="GUND020_SHR_07">
        <description>수정할 정보 조회</description>
        <query>
            <![CDATA[
			SELECT 	GUN_DPT
			FROM ASNHR.T_CM_PERSON
			WHERE ENO_NO = ?
			    AND GUN_DPT <> DPT_CD

            ]]>
        </query>
    </sql>

    <!-- 결재선 삭제 -->
    <sql name="GUND020_DEL_01">
        <description>결재선 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_DI_APPROVAL
            WHERE 1 = 1
            AND REQ_NO=?
            AND GUN_GBN='A'
            ]]>
        </query>
    </sql>
    <!-- 결재선 정보를 저장 한다. -->
    <sql name="GUND020_INS_01">
        <description>결재선 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_APPROVAL
                    (GUN_YMD, GUN_GBN, GUN_DPT, SEQ_NO, ENO_NO, JOB_CD, PENO_NO, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD, REQ_NO)
             VALUES (      ?,       ?,       ?,      ?,      ?,      ?,       ?,       ?, sysdate,       ?, sysdate, ?)
            ]]>
        </query>
    </sql>

        <!-- 연차촉진 등록번호 정보를 저장 한다. -->
    <sql name="GUND020_INS_02">
        <description>등록번호 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_ACCELERATE
              SET     	REQ_NO = ?,
            	END_TAG = 'R'
              WHERE PIS_YY = ?
                AND PIS_MM = ?
                AND ENO_NO = ?
            ]]>
        </query>
    </sql>
	



 <!--
***********************************************************************
* @UseCase     : GUND040
* @description : 반기별 연차 사용 현황
***********************************************************************
* 2016/06/29     이동훈       최초작성.
***********************************************************************
-->
    <!-- 반기별 연차 사용 현황 조회 -->
    <sql name="GUND040_SHR">
        <description>반기별 연차 사용 현황 조회</description>
        <query>
            <![CDATA[
            SELECT 
                   A.PIS_YY||'-'||A.PIS_MM AS PIS_YYMM, 
            	   A.ENO_NO, A.END_TAG,
                   A.AT1_CD, A.AT2_CD, A.AT3_CD, A.AT4_CD, A.AT5_CD, 
                   A.AT6_CD,A.AT7_CD, A.AT8_CD, A.AT9_CD, A.AT10_CD, 
                   A.AT11_CD, A.AT12_CD,A.AT13_CD, A.AT14_CD, A.AT15_CD, 
                   A.AT16_CD, A.AT17_CD, A.AT18_CD,A.AT19_CD, A.AT20_CD, 
                   A.AT21_CD, A.AT22_CD, A.AT23_CD, A.AT24_CD,A.AT25_CD, 
                   A.AT26_CD, A.AT27_CD, A.AT28_CD, A.AT29_CD, A.AT30_CD,A.AT31_CD, 
                   B.ATT_H,
                   B.ATT_P, 
                   B.ATT_R, 
                   C.DPT_NM, C.JOB_NM, 
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'01') AS HOL_YN1,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'02') AS HOL_YN2,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'03') AS HOL_YN3,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'04') AS HOL_YN4,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'05') AS HOL_YN5,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'06') AS HOL_YN6,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'07') AS HOL_YN7,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'08') AS HOL_YN8,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'09') AS HOL_YN9,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'10') AS HOL_YN10,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'11') AS HOL_YN11,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'12') AS HOL_YN12,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'13') AS HOL_YN13,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'14') AS HOL_YN14,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'15') AS HOL_YN15,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'16') AS HOL_YN16,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'17') AS HOL_YN17,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'18') AS HOL_YN18,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'19') AS HOL_YN19,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'20') AS HOL_YN20,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'21') AS HOL_YN21,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'22') AS HOL_YN22,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'23') AS HOL_YN23,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'24') AS HOL_YN24,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'25') AS HOL_YN25,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'26') AS HOL_YN26,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'27') AS HOL_YN27,
                   NVL(( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'28'),'X') AS HOL_YN28,
                   NVL(( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'29'),'X') AS HOL_YN29,
                   NVL(( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'30'),'X') AS HOL_YN30,
                   NVL(( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'31'),'X') AS HOL_YN31
            FROM   ASNHR.T_DI_ACCELERATE A,
                   ( SELECT 
                            SUM(ATT_H) AS ATT_H,    -- 년차
                            SUM(ATT_P) AS ATT_P,    -- 오전연반차
                            SUM(ATT_R) AS ATT_R     -- 오후연반차
                     FROM   ASNHR.T_DI_DILIGENCE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM >= ?
                     AND    PIS_MM <= ?
                     AND    ENO_NO = ? ) B,
                   ASNHR.VI_T_CM_EMPLIST2 C
            WHERE  A.PIS_YY = ?
            AND    A.PIS_MM >= ?
            AND    A.PIS_MM <= ?
            AND    A.ENO_NO = ?
            AND    C.ENO_NO = A.ENO_NO
         ORDER BY  A.PIS_MM
            ]]>
        </query>
    </sql>


    <!-- 반기별 연차 사용 현황 조회 -->
    <sql name="GUND040_SHR_02">
        <description>반기별 연차 사용현황</description>
        <query>
            <![CDATA[
            SELECT 
                   B.JOB_NM,
                   B.DPT_NM,
                   (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT,
                   (A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12) AS YRP_ATT_H,
                   (A.YRP_CNT-A.AYRP_CNT-(A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12)) AS REM_YRP,
                   NVL(M.MPH_CNT,0) MPH_CNT,
                   NVL(M.UMPH_CNT,0) UMPH_CNT,
                   NVL(M.LMPH_CNT,0) LMPH_CNT
            FROM   ( SELECT AA.ENO_NO, AA.YRP_CNT, AA.AYRP_CNT,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '01'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H1,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '02'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H2,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '03'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H3,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '04'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H4,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '05'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H5,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '06'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H6,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '07'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H7,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '08'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H8,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '09'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H9,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '10'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H10,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '11'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H11,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '12'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H12
                   FROM   ASNHR.T_DI_YEARLY AA
                   WHERE  AA.PIS_YY = ?
                   AND    AA.ENO_NO = ?) A,
                   ASNHR.VI_T_CM_PERSON2 B,
                   
                   (SELECT  ENO_NO, 
		                   NVL(MAX(TO_NUMBER(GET_CNT)),0) MPH_CNT, 
		                   NVL(MAX(TO_NUMBER(USE_CNT)),0) UMPH_CNT, 
                           (NVL(MAX(TO_NUMBER(GET_CNT)),0) - NVL(MAX(TO_NUMBER(USE_CNT)),0)) LMPH_CNT 
                   FROM   ASNHR.T_DI_MONTHLY_HISTORY GROUP BY ENO_NO) M                         
                   
            WHERE  A.ENO_NO = B.ENO_NO
                   AND A.ENO_NO = M.ENO_NO(+)
            ]]>
        </query>
    </sql>


    <!-- 반기별 연차 사용 현황 조회 -->
    <sql name="GUND040_SHR_03">
        <description>반기별 연차 사용현황</description>
        <query>
            <![CDATA[
		       SELECT SUM(ATT_H) AS ATT_H
		       FROM   ASNHR.T_DI_ACCELERATE AA
		                   WHERE  AA.PIS_YY = '2017' 
		                   AND    AA.PIS_MM BETWEEN '07' AND '12'
		                   AND    AA.ENO_NO = ? 
		            GROUP BY AA.ENO_NO
            ]]>
        </query>
    </sql>




    <!-- 반기별 연차 사용 현황 저장 한다. -->
    <sql name="GUND040_SAV">
        <description>반기별 연차 사용 현황 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_ACCELERATE
                    (PIS_YY, PIS_MM, ENO_NO,
                     AT1_CD , AT2_CD , AT3_CD , AT4_CD , AT5_CD
                    ,IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
                    
             VALUES (      ?,       ?,      ?,
             			   ?,       ?,      ?,       ?,      ?,
                           ?,    sysdate,   ?,    sysdate)
            ]]>
        </query>
    </sql>


	<!-- 반기별 연차 사용 현황수정 -->
    <sql name="GUND040_UPT">
        <description>반기별 연차 사용 현황수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_ACCELERATE
            SET    AT1_CD = ?,
                   AT2_CD = ?,
                   AT3_CD = ?,
                   AT4_CD = ?,
                   AT5_CD = ?,
                   AT6_CD = ?,
                   AT7_CD = ?,
                   AT8_CD = ?,
                   AT9_CD = ?,
                   AT10_CD = ?,
                   AT11_CD = ?,
                   AT12_CD = ?,
                   AT13_CD = ?,
                   AT14_CD = ?,
                   AT15_CD = ?,
                   AT16_CD = ?,
                   AT17_CD = ?,
                   AT18_CD = ?,
                   AT19_CD = ?,
                   AT20_CD = ?,
                   AT21_CD = ?,
                   AT22_CD = ?,
                   AT23_CD = ?,
                   AT24_CD = ?,
                   AT25_CD = ?,
                   AT26_CD = ?,
                   AT27_CD = ?,
                   AT28_CD = ?,
                   AT29_CD = ?,
                   AT30_CD = ?,
                   AT31_CD = ?,
                   ATT_H = ?,        
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

	<!-- 전산제출  -->
    <sql name="GUND040_UPT_END">
        <description>전산제출</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_ACCELERATE
            SET END_TAG = ?
            WHERE  PIS_YY = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>


	<!-- 반기별 연차 사용 현황수정 -->
    <sql name="GUND040_DEL">
        <description>반기별 연차 사용 현황 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_DI_ACCELERATE
            WHERE  PIS_YY = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>



		    <!-- 반기별 연차 제출현황을 조회 한다. -->
	    <sql name="GUND050_SHR">
	        <description>반기별 연차 제출현황</description>
        <query>
            <![CDATA[
            SELECT  DISTINCT A.ENO_NO
		                 ,B.ENO_NM
		                 ,A.END_TAG
		                 ,B.HEAD_CD, ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD) AS  HEAD_NM
		                 ,B.DPT_CD, ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD) AS  DPT_NM
						 ,B.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD) AS JOB_NM
						 ,B.TEAM_CD, ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM
              FROM ASNHR.T_DI_ACCELERATE A, ASNHR.T_CM_PERSON B
             WHERE A.ENO_NO = B.ENO_NO
               AND A.ENO_NO LIKE '%'||?||'%'
               AND B.DPT_CD  LIKE '%'||?||'%'
               AND A.END_TAG LIKE '%'||?||'%'
			  AND A.PIS_YY = '2021'
			  ORDER BY B.HEAD_CD DESC,B.DPT_CD,B.TEAM_CD DESC,B.JOB_CD,A.ENO_NO
            ]]>
        </query>
    </sql>




<!--
***********************************************************************
* @UseCase     : GUND060
* @description : 연차조회
***********************************************************************
* 2017/04/11     이동훈        최초작성.
***********************************************************************
-->
    <!-- 연차 조회 -->
    <sql name="GUND060_SHR">
        <description>연차 조회</description>
        <query>
            <![CDATA[
            SELECT 
                   B.HEAD_NM,            
                   B.DPT_NM,            
                   B.JOB_NM,
                   B.ENO_NM,
                   B.ENO_NO,
                   TO_CHAR(B.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                   (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT,
                   (A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12) AS YRP_ATT_H,
                   (A.YRP_CNT-A.AYRP_CNT-(A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12)) AS REM_YRP,
                    CASE WHEN (A.YRP_CNT-A.AYRP_CNT) > 0 THEN
                    ROUND(((A.YRP_CNT-A.AYRP_CNT) - (A.YRP_CNT-A.AYRP_CNT-(A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12)))/(A.YRP_CNT-A.AYRP_CNT),4)*100
                    ELSE 0 END USE_PER,
                   A.ATT_H1,A.ATT_H2, A.ATT_H3, A.ATT_H4, A.ATT_H5, A.ATT_H6, A.ATT_H7,A.ATT_H8, A.ATT_H9, A.ATT_H10, A.ATT_H11, A.ATT_H12
            FROM   ( SELECT AA.ENO_NO, AA.YRP_CNT, AA.AYRP_CNT,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '01'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H1,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '02'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H2,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '03'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H3,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '04'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H4,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '05'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H5,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '06'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H6,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '07'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H7,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '08'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H8,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '09'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H9,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '10'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H10,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '11'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H11,
                            NVL(( SELECT ATT_H+ATT_Q+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '12'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H12
                   FROM   ASNHR.T_DI_YEARLY AA
                   WHERE  AA.PIS_YY = ?) A,
                   ASNHR.VI_T_CM_PERSON2 B
            WHERE  A.ENO_NO = B.ENO_NO
                   AND A.ENO_NO NOT IN ('2170004')
                   AND B.RET_YMD IS NULL
                   AND A.ENO_NO NOT LIKE '6%'
			ORDER BY B.HEAD_CD, B.DPT_CD, B.JOB_CD, B.HOB_CD, B.ENO_NO
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : GUND080
* @description : 연월차조회
***********************************************************************
* 2019/01/18     이동훈        최초작성.
***********************************************************************
-->
    <!-- 연월차 조회 -->
    <sql name="GUND080_SHR">
        <description>연월차 조회</description>
        <query>
            <![CDATA[
            SELECT 
                   B.HEAD_NM,            
                   B.DPT_NM,            
                   B.JOB_NM,
                   B.ENO_NM,
                   B.ENO_NO,
                   B.HIR_YMD,
                   (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT,
                   (A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12) AS YRP_ATT_H,
                   (A.YRP_CNT-A.AYRP_CNT-(A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12)) AS REM_YRP,
                   NVL(M.MPH_CNT,0) MPH_CNT,
                   NVL(M.UMPH_CNT,0) UMPH_CNT,
                   NVL(M.LMPH_CNT,0) LMPH_CNT,
                   (A.YRP_CNT-A.AYRP_CNT-(A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+A.ATT_H11+A.ATT_H12))+NVL(M.LMPH_CNT,0) AS TOTAL

            FROM   ( SELECT AA.ENO_NO, AA.YRP_CNT, AA.AYRP_CNT,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '01'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H1,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '02'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H2,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '03'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H3,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '04'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H4,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '05'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H5,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '06'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H6,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '07'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H7,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '08'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H8,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '09'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H9,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '10'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H10,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '11'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H11,
                            NVL(( SELECT ATT_H+(ATT_P*0.5)+(ATT_R*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '12'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H12
                   FROM   ASNHR.T_DI_YEARLY AA
                   WHERE  AA.PIS_YY = ? AND AA.ENO_NO LIKE '%'||?||'%') A,
                   ASNHR.VI_T_CM_PERSON2 B,
                  (SELECT  ENO_NO, 
		                   NVL(MAX(TO_NUMBER(GET_CNT)),0) MPH_CNT, 
		                   NVL(MAX(TO_NUMBER(USE_CNT)),0) UMPH_CNT, 
                           (NVL(MAX(TO_NUMBER(GET_CNT)),0) - NVL(MAX(TO_NUMBER(USE_CNT)),0)) LMPH_CNT 
                   FROM   ASNHR.T_DI_MONTHLY_HISTORY A GROUP BY ENO_NO) M                   
            WHERE  A.ENO_NO = B.ENO_NO
                   AND B.ENO_NO = M.ENO_NO(+)
                   AND B.RET_YMD IS NULL            
                   AND A.ENO_NO LIKE '%'||?||'%'
                   AND A.ENO_NO NOT LIKE '6%'
              ORDER BY A.ENO_NO     
            ]]>
        </query>
    </sql>



    <sql name="GUND080_SHR_DTL">
        <description>연월차 조회</description>
        <query>
            <![CDATA[
            SELECT 
                   A.HEAD_NM,            
                   A.DPT_NM,            
                   A.JOB_NM,
                   A.ENO_NM,
                   A.ENO_NO,
                   B.GET_DT,
                   B.GET_CNT,
                   B.USE_DT,
                   B.USE_CNT,
                   B.GUBUN
            FROM   
                   ASNHR.VI_T_CM_PERSON2 A,
                   ASNHR.T_DI_MONTHLY_HISTORY B
            WHERE  A.ENO_NO = B.ENO_NO
                   AND A.ENO_NO = ?
                   AND (B.GET_CNT != '0' OR B.GET_CNT IS NULL)
			ORDER BY B.GUBUN, B.GET_DT , B.USE_DT
            ]]>
        </query>
    </sql>
    
 <!-- 연장근무관리 -->

<!--
***********************************************************************
* @UseCase     : GUNE010
* @description : 연장근무
***********************************************************************
* 2019/12/24     moon        최초작성.
***********************************************************************
-->   
    
    <!-- 사원 정보를 조회 한다. -->
    <sql name="GUNE010_SHR">
        <description>사원 정보조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO
                 , ENO_NM
                 , DPT_CD
                 , DPT_NM
                 , JOB_CD
                 , JOB_NM
                 , PER_ADR
                 , ADR_CT || ' ' || ADDRESS AS ADDRESS
                 , RET_YMD
              FROM ASNHR.VI_T_CM_PERSON2
             WHERE ENO_NO = ?
            ]]>
        </query>
    </sql>
    
    <!-- 사원 정보를 조회 한다. -->
    <sql name="GUNE010_SHR_01">
        <description>사원 정보조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO
                 , A.ENO_NM
                 , A.JOB_NM
                 , A.DPT_NM
                 , A.OCC_CD
                 , A.EM_PHN_NO
                 , TO_CHAR(A.HIRG_YMD, 'YYYY-MM-DD')             AS HIR_YMD
                 , TRUNC(MONTHS_BETWEEN(SYSDATE, A.HIRG_YMD)/12) AS PAST_MON
                 , B.PAY_YM
                 , B.PAY_YMD
              FROM (SELECT M.*
                         , 1 AS NUM
                      FROM ASNHR.VI_T_CM_PERSON M
                    ) A
                 , (SELECT ROW_NUMBER() OVER(ORDER BY STR_YMD DESC)         AS NUM
                         , TO_CHAR(TO_DATE(PAY_YM, 'YYYYMM'), 'YYYY-MM')    AS PAY_YM
                         , TO_CHAR(TO_DATE(PAY_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS PAY_YMD
                      FROM ASNHR.T_SC_RQSTYMD
                     WHERE STR_YMD <= TO_CHAR(SYSDATE, 'YYYYMMDD')
                       AND END_YMD >= TO_CHAR(SYSDATE, 'YYYYMMDD')
                    ) B
             WHERE A.ENO_NO = ?
               AND A.NUM    = B.NUM(+)
            ]]>
        </query>
    </sql>
    
    

    <!-- 결재선 정보를 조회 한다. -->
    <sql name="GUNE010_SHR_APP">
        <description>결재선 정보 조회</description>
        <query>
            <![CDATA[
				 --본사
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		                 
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE A.DPT_CD = B.DPT_CD
						   AND B.DUTY_CD = '41'
		        --           AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD IN ('1','6','8')
		                   AND A.JOB_CD BETWEEN '140' AND '890'
		                   AND A.ENO_NO = ?
		
		       UNION ALL            
		       
		       
				 --본사 특이 케이스 최준헌차장 - 토목팀장님인데 메인은 인프라영업팀으로 되어 있어서 매칭이 안됨
		          SELECT DISTINCT '2090005' ENO_NO
		                 , '최준헌' ENO_NM
		                 , '180' JOB_CD                 
		                 , '차장' JOB_NM                
		                 , 'II25' DPT_CD                
		                 , '토목사업팀' DPT_NM
		                 , '' TEAM_CD                 
		                 , '' TEAM_NM
		                 , '2030002' HENO_NO
		                 , '한상욱' HENO_NM
		                 , '140' HJOB_CD
		                 , '부장' HJOB_NM                 
		                 , 'II25' HDPT_CD                 
		                 , '토목사업팀' HDPT_NM
		                 , '' HTEAM_CD                 
		                 , '' HTEAM_NM		                 
		            FROM ASNHR.VI_T_CM_PERSON A
		             WHERE '2090005' = ?       
		       
		       
		       UNION ALL            
		       
		       
				 --본사 특이 케이스 한정희차장 - 팀장 토목팀장님인데 메인은 인프라영업팀으로 되어 있어서 매칭이 안됨
		          SELECT DISTINCT '2050037' ENO_NO
		                 , '한정희' ENO_NM
		                 , '180' JOB_CD                 
		                 , '차장' JOB_NM                
		                 , 'II25' DPT_CD                
		                 , '토목사업팀' DPT_NM
		                 , '' TEAM_CD                 
		                 , '' TEAM_NM
		                 , '2030002' HENO_NO
		                 , '한상욱' HENO_NM
		                 , '140' HJOB_CD
		                 , '부장' HJOB_NM                 
		                 , 'II25' HDPT_CD                 
		                 , '토목사업팀' HDPT_NM
		                 , '' HTEAM_CD                 
		                 , '' HTEAM_NM		                 
		            FROM ASNHR.VI_T_CM_PERSON A
		             WHERE '2050037' = ?  
		             
		             
		       UNION ALL            
		       
		       
				 --본사 특이 케이스 이영현씨 팀장 토목팀장님인데 메인은 인프라영업팀으로 되어 있어서 매칭이 안됨
		          SELECT DISTINCT '3200001' ENO_NO
		                 , '이영현' ENO_NM
		                 , '890' JOB_CD                 
		                 , '한국인계약직' JOB_NM                
		                 , 'II25' DPT_CD                
		                 , '토목사업팀' DPT_NM
		                 , '' TEAM_CD                 
		                 , '' TEAM_NM
		                 , '2030002' HENO_NO
		                 , '한상욱' HENO_NM
		                 , '140' HJOB_CD
		                 , '부장' HJOB_NM                 
		                 , 'II25' HDPT_CD                 
		                 , '토목사업팀' HDPT_NM
		                 , '' HTEAM_CD                 
		                 , '' HTEAM_NM		                 
		            FROM ASNHR.VI_T_CM_PERSON A
		             WHERE '3200001' = ?  		             
		             		       
		       
		       
		       
		       UNION ALL  
		       
				 --현장 겸직 중 중리동 이천 생활숙박시설 포함시키기
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.TEAM_CD = 'I386'
		             	   AND A.TEAM_CD = 'I369'
						   AND B.DUTY_CD = '20'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.JOB_CD BETWEEN '140' AND '890'                               
		                   AND A.ENO_NO = ?
		
		       UNION ALL            
		       
				 --본사 원가관리팀 포함시키기
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.DPT_CD = 'II44'
		             	   AND A.DPT_CD = 'II55'
						   AND B.DUTY_CD = '04'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '1'
		                   AND A.JOB_CD BETWEEN '140' AND '890'                  
		                   AND A.ENO_NO = ?
		
		       UNION ALL            
		       
				 --인천면세점 포함시키기
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.DPT_CD = 'KK65'
		             	   AND A.DPT_CD = 'KK65'
						   AND B.DUTY_CD = '41'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '3'
		                   AND A.JOB_CD BETWEEN '140' AND '890'                 
		                   AND A.ENO_NO = ?
		
		       UNION ALL      
		                   
		          --현장 중 현장소장 있는 현장은 현장소장에게 결재 올라가도록          
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE A.TEAM_CD = B.TEAM_CD
						   AND B.DUTY_CD = '20'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '3'
		                   AND A.JOB_CD BETWEEN '140' AND '890' 
		                   AND A.TEAM_CD NOT IN ('I378','I370','I171','I347','I375','I380','I376')        --무릉도원, 새만금, 영산강, 천안우회도로, 화성도시, 남양주, 시흥장현                   
		                   AND A.ENO_NO = ?
		                   
		       UNION ALL      
		                   
		          --현장 중 현장소장 없는 현장은 본사 건축팀장에게 결재 올라가도록          
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE A.DPT_CD = B.DPT_CD
						   AND B.DUTY_CD = '41'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '3'
		                   AND A.JOB_CD BETWEEN '140' AND '890' 
		                   AND A.TEAM_CD IN ('I378','I370','I171','I347','I375','I380','I376')        --무릉도원, 새만금, 영산강, 천안우회도로, 화성도시, 남양주, 시흥장현          
		                   AND A.ENO_NO = ?
		              
		       UNION ALL      
		                   
		          --현장 중 현장소장 없는 현장은 본사 토목팀장에게 결재 올라가도록          
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.DPT_CD = 'II20'
		                   AND A.DPT_CD = 'II25'
						   AND B.DUTY_CD = '41'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '3'
		                   AND A.JOB_CD BETWEEN '140' AND '890' 
		                   AND A.TEAM_CD IN ('I378','I370','I171','I347','I375','I380','I376')        --무릉도원, 새만금, 영산강, 천안우회도로, 화성도시, 남양주, 시흥장현          
		                   AND A.ENO_NO = ?
		                        
		       UNION ALL      
		                   
		          --현장 중 현장소장 없는 현장은 본사 토목팀장에게 결재 올라가도록          
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.DPT_CD = 'II20'
		                   AND A.DPT_CD = 'II25'
						   AND B.DUTY_CD = '41'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '1'
		                   AND A.JOB_CD BETWEEN '140' AND '890'     
		                   AND A.ENO_NO = ?    
    
            ]]>
        </query>
    </sql>
    
    
    
    <!-- 주차 정보를 조회 한다. -->
    <sql name="GUNE010_SHR_WK">
        <description>주차 정보 조회</description>
        <query>
            <![CDATA[

          SELECT TO_CHAR(TO_DATE(MIN(REG_YMD), 'YYYY-MM-DD'), 'YYYY.MM.DD') || ' ~ ' || 
        		 TO_CHAR(TO_DATE(MAX(REG_YMD), 'YYYY-MM-DD'), 'YYYY.MM.DD') AS REG_YMD
                 , WEEK_NO
		  FROM ASNHR.T_DI_HOLIDAY
		  WHERE WEEK_NO = (SELECT WEEK_NO 
		                    FROM ASNHR.T_DI_HOLIDAY 
		                    WHERE REG_YMD = ?)
		  AND REG_YMD LIKE ? || '%' --해당월
		  GROUP BY WEEK_NO
  		  
            ]]>
        </query>
    </sql>
    <!--당월 연장근무 누적시간을 조회한다. -->
    <sql name="GUNE010_SHR_ACC">
        <description>연장근무 누적시간 조회</description>
        <query>
            <![CDATA[
		SELECT  ENO_NO, 
        		NVL(MAX(TO_NUMBER(WEEK_TOT_TIME)),0) WEEK_TOT_TIME, 
        		NVL(MAX(TO_NUMBER(HOL_TOT_TIME)),0) HOL_TOT_TIME, 
        		NVL(MAX(TO_NUMBER(ALL_TOT_TIME)),0) ALL_TOT_TIME 
    	FROM   ASNHR.T_DI_OVERTIMEWORK 
  	 	WHERE WEEK_OF_YEAR = ?
   	   	  AND ENO_NO = ?
   	   	  AND STR_REG_YMD LIKE '2021%'
		GROUP BY ENO_NO
            ]]>
        </query>
    </sql>

    <!--당월 연장근무 등록가능일자를 조회한다. -->
    <sql name="GUNE010_SHR_OTD">
        <description>휴일여부 확인</description>
        <query>
            <![CDATA[

        SELECT REG_YMD
     		  ,HOL_YN
      		  ,HOL_GBN 
  		FROM ASNHR.T_DI_HOLIDAY
  		WHERE REG_YMD = ?
	
            ]]>
        </query>
    </sql>
    
    <!-- 연장근무 내역을 저장 한다. -->
    <sql name="GUNE010_UPT_APP">
        <description>연장근무 내역 저장</description>
        <query>
            <![CDATA[
             INSERT INTO ASNHR.T_DI_OVERTIMEWORK
                    (REQ_NO, ENO_NO, STR_REG_YMD, STR_OVR_TIME, END_REG_YMD, END_OVR_TIME, REMARK, PENO_NO, GUBN, WEEK_TOT_TIME, HOL_TOT_TIME, ALL_TOT_TIME, WEEK_OF_YEAR, OVR_TIME, APP_YN, APP_STATUS, JOB_CD)
             VALUES (      ?,      ?,           ?,            ?,           ?,           ?,      ?,       ?,    ?,             ?,		    ?,		      ?,             ?,        ?,      ?,'상신', ?)
            ]]>
        </query>
    </sql>
    
    
    <!-- 결재선 정보를 저장 한다. -->
    <sql name="GUNE010_UPT_APP_01">
        <description>결재선 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_APPROVAL
                    (GUN_YMD, GUN_GBN, GUN_DPT, SEQ_NO, ENO_NO, JOB_CD, PENO_NO, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD, REQ_NO)
             VALUES (      ?,       ?,       ?,      1,      ?,      ?,       ?,       ?, sysdate,       ?, sysdate, ?)
            ]]>
        </query>
    </sql>
        
    <!-- 결재선 정보를 조회 한다. -->
   <sql name="GUNE010_SHR_00">
        <description>결재선 정보 조회</description>
        <query>
            <![CDATA[

       SELECT GUN_YMD, GUN_GBN, GUN_DPT AS DPT_CD, SEQ_NO, ENO_NO, JOB_CD, APP_TIME, PENO_NO
             ,APP_YN
             ,DECODE(APP_YN,NULL,'미결','Y','승인','N','부결') AS APP_YN_NM
             ,ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM
             ,ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM
			 ,ASNHR.SF_GET_DPTNAME('01', 'A4', GUN_DPT) AS DPT_NM
			 ,REQ_NO
       FROM   ASNHR.T_DI_APPROVAL
       WHERE  REQ_NO = ?
       AND    GUN_GBN = 'C'
            ]]>
        </query>
    </sql>
    
      <!-- 연장근무결재 현황 조회 -->
    <sql name="GUNE010_SHR_MAX">
        <description>결재번호 현황</description>
        <query>
            <![CDATA[
            
		   		SELECT NVL(MAX(REQ_NO), 0)+1 AS REQ_NO 

		   		FROM ASNHR.T_DI_OVERTIMEWORK
		   		
		   		 
		   		
            ]]>
        </query>
    </sql>
    
    
<!-- 연장근무관리 -->

<!--
***********************************************************************
* @UseCase     : GUNE011
* @description : 연장근무결재
***********************************************************************
* 2019/12/24     moon        최초작성.
***********************************************************************
-->
    <!-- 연장근무결재 현황 조회 -->
    <sql name="GUNE011_SHR">
        <description>연장근무결재 현황</description>
        <query>
            <![CDATA[
		       
         SELECT distinct '9'  AS APP_GBN
		          ,'연장근무' AS APP_GBN_NM
		          ,ASNHR.SF_GET_ENONAME('01',B.ENO_NO)   AS ENO_NM
		          ,TO_CHAR(TO_DATE(B.STR_REG_YMD,'YYYYMMDD'),'YYYY/MM/DD')||' '||B.REMARK AS APP_TITLE
		          ,TO_CHAR(A.IPT_YMD,'YYYY-MM-DD') AS APP_YMD
		          ,B.APP_CMT
		          ,B.APP_YN
		          ,B.APP_STATUS
		          ,A.REQ_NO
		          ,B.ENO_NO ENO_NO
        FROM ASNHR.T_DI_APPROVAL A, ASNHR.T_DI_OVERTIMEWORK B
		    WHERE A.GUN_GBN  ='O'
		      AND A.REQ_NO = B.REQ_NO
		      AND A.PENO_NO LIKE ? || '%' -- 상신자
			  AND A.ENO_NO LIKE ? || '%' -- 결재자
		      AND   ( (STR_REG_YMD >= ? AND   STR_REG_YMD <= ?) OR  (END_REG_YMD >= ? AND   END_REG_YMD <= ?) ) 
		                        [1]
		                        [2]
        ORDER BY  REQ_NO DESC
		
            ]]>
        </query>
    </sql>


	<!-- 연장근무 결재 삭제 -->
    <sql name="GUNE011_DEL_01">
        <description>연장근무 신청서 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_DI_OVERTIMEWORK
            WHERE  REQ_NO = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>    


<!-- 연장근무관리 -->

<!--
***********************************************************************
* @UseCase     : GUNE015
* @description : 연장근무결재 팝업
***********************************************************************
* 2019/12/24     moon        최초작성.
***********************************************************************
-->
    <!-- 연장근무결재 현황 조회 -->
    <sql name="GUNE015_SHR">
        <description>연장근무 내역 조회</description>
        <query>
            <![CDATA[
		       SELECT REQ_NO
		       		 ,ENO_NO
		       		 ,ASNHR.SF_GET_ENONAME('01',ENO_NO)   AS ENO_NM
		       		 ,CASE WHEN JOB_CD = '700' THEN '사원' 
					  WHEN JOB_CD = '890' THEN '사원'    
					  ELSE ASNHR.SF_GET_COMMNAME('01','A2',JOB_CD) END AS JOB_NM	
		       		 ,STR_REG_YMD
		       		 ,STR_OVR_TIME
		       		 ,END_REG_YMD
		       		 ,END_OVR_TIME
		       		 ,REMARK
		       		 ,OVR_TIME
		       	FROM ASNHR.T_DI_OVERTIMEWORK 
		       	WHERE REQ_NO =? AND ENO_NO=?
        
            ]]>
        </query>
    </sql>    

	<!-- 연장근무결재 현황 조회 -->
    <sql name="GUNE015_SHR_01">
        <description>연장근무 결재 정보 조회</description>
        <query>
            <![CDATA[
		        SELECT * FROM     
           (SELECT ENO_NO
		    	  , ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM --결재자
		   		  , REQ_NO
				  , GUN_DPT
				  , ASNHR.SF_GET_DPTNAME('01','A4',GUN_DPT) AS DPT_NM
				  , JOB_CD
				  , CASE WHEN JOB_CD = '700' THEN '사원' 
					WHEN JOB_CD = '890' THEN '사원'    
					ELSE ASNHR.SF_GET_COMMNAME('01','A2',JOB_CD) END AS JOB_NM	
				  , SEQ_NO
				  , '' SEQ_NM,'99991231' GUN_YMD, GUN_DPT as DPT_CD
				  , APP_YN
                  , (CASE WHEN APP_YN = 'R' THEN  '상신  ' || TO_CHAR(UPT_YMD, 'YYYY-MM-DD  HH24:MI')
                          	   WHEN APP_YN = 'N' THEN  '부결  ' || TO_CHAR(UPT_YMD, 'YYYY-MM-DD  HH24:MI')
                          	   WHEN APP_YN = 'E' THEN  '반송  ' || TO_CHAR(UPT_YMD, 'YYYY-MM-DD  HH24:MI')
                          	   WHEN APP_YN = 'Y' THEN  '승인  ' || TO_CHAR(UPT_YMD, 'YYYY-MM-DD  HH24:MI')
                    	       ELSE '미결'
                      END ) APP_STATUS
                   ,REMARK
                   ,NVL2(REMARK,'Click','') AS REMARK1
                   ,APP_TIME
            FROM   ASNHR.T_DI_APPROVAL
            WHERE  REQ_NO = ?
			AND    GUN_GBN = ?
			AND    SEQ_NO < '90'
            ORDER BY SEQ_NO)    
        
            ]]>
        </query>
    </sql> 
    
    <!-- 상신처리(연장근무 결재자 정보) -->
    <sql name="GUNE015_UPT_01">
        <description>상신정보 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_APPROVAL
            SET    APP_YN = ?,
                   APP_TIME = TO_CHAR(sysdate,'HH24:MI'),
                   REMARK   = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE REQ_NO = ?
            AND     ENO_NO = ?
            AND    GUN_GBN = 'O'
            ]]>
        </query>
    </sql>
    
    <!-- 연장근무 결재 정보 -->
    <sql name="GUNE015_UPT_02">
        <description>연장근무 결재 정보 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_OVERTIMEWORK
            SET    APP_YN = ?,
                   APP_TIME = TO_CHAR(sysdate,'HH24:MI'),
                   APP_CMT  = ?,
                   APP_STATUS = ?,
                   PENO_NO = ?,
                   PENO_TIME = sysdate
            WHERE REQ_NO = ?
          
            ]]>
        </query>
    </sql>
    
    
     <!-- 결재한개수 세기 -->
    <sql name="GUNE015_CNT">
        <description>결재정보개수세기</description>
        <query>
            <![CDATA[
              SELECT TOTAL,APP,REJ,BAN,
              case
                 when REJ > 0 then 'N'
                 when BAN > 0 then 'E'
                 when APP = TOTAL then 'Y'
                 else '-'
            end APP_YN
            FROM
                (SELECT COUNT(*) APP
	                FROM ASNHR.T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN = 'Y') Y,
	            (SELECT COUNT(*) REJ
	                FROM ASNHR.T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN = 'N') N,
	            (SELECT COUNT(*) BAN
	                FROM ASNHR.T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN = 'E') B,
                (SELECT COUNT(*) CNT
	                FROM ASNHR.T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?
	                AND APP_YN IS NOT NULL) I,
                (SELECT COUNT(*) TOTAL
	                FROM ASNHR.T_DI_APPROVAL
	                WHERE  REQ_NO  = ?
	                AND    GUN_GBN = ?) T
            ]]>
        </query>
    </sql>
        
<!--
***********************************************************************
* @UseCase     : GUNF010
* @description : 근무조회
***********************************************************************
* 2019/12/11     이동훈        최초작성.
***********************************************************************
-->
    <!-- 기본근무조회 -->
    <sql name="GUNF010_SHR">
        <description>근무조회</description>
        <query>
            <![CDATA[
            SELECT 
				A.REG_YMD,            
				A.WEEK_NO,            
				A.HOL_GBN,
				A.HOL_YN,
				A.REMARK AS YOIL,
                CASE WHEN B.STR_OVR_TIME IS NULL AND C.COL_NEW IN ('W','E','F','G','R') THEN '09:00'	
                     WHEN B.STR_OVR_TIME IS NULL AND C.COL_NEW IN ('Y','H','I','T','M') THEN ''
                     WHEN B.STR_OVR_TIME IS NULL AND C.COL_NEW = 'P' THEN '13:00'
                     WHEN B.STR_OVR_TIME IS NOT NULL AND C.COL_NEW IN ('W') THEN '09:00'
                     WHEN B.STR_OVR_TIME IS NOT NULL  THEN SUBSTR(B.STR_OVR_TIME, 1, 2) || ':' ||  SUBSTR(B.STR_OVR_TIME, 3, 2)
                	ELSE ''								
                END STR_TIME,				
                CASE WHEN B.END_OVR_TIME IS NULL AND C.COL_NEW IN ('W','E','F','G','P') THEN '18:00'	
                     WHEN B.END_OVR_TIME IS NULL AND C.COL_NEW IN ('Y','H','I','T','M') THEN ''
                     WHEN B.END_OVR_TIME IS NULL AND C.COL_NEW = 'R' THEN '12:00'
                     WHEN B.END_OVR_TIME IS NOT NULL AND C.COL_NEW IN ('W') THEN 
                     	SUBSTR(B.END_OVR_TIME, 1, 2) || ':' ||  SUBSTR(B.END_OVR_TIME, 3, 2)
                     WHEN B.END_OVR_TIME IS NOT NULL  THEN SUBSTR(B.END_OVR_TIME, 1, 2) || ':' ||  SUBSTR(B.END_OVR_TIME, 3, 2)
                	ELSE ''										
                END END_TIME,	
                CASE WHEN B.STR_OVR_TIME IS NULL AND B.END_OVR_TIME IS NULL AND C.COL_NEW IN ('W','E','F','G') THEN 8	
                     WHEN B.STR_OVR_TIME IS NULL AND B.END_OVR_TIME IS NULL AND C.COL_NEW IN ('Y','H','I','T','M') THEN 0
                     WHEN B.STR_OVR_TIME IS NULL AND B.END_OVR_TIME IS NULL AND C.COL_NEW = 'P' THEN 5
                     WHEN B.STR_OVR_TIME IS NULL AND B.END_OVR_TIME IS NULL AND C.COL_NEW = 'R' THEN 3   
                     WHEN B.STR_OVR_TIME IS NOT NULL AND B.END_OVR_TIME IS NOT NULL AND A.HOL_YN = 'N' THEN NVL(B.OVR_TIME,0) + 8                  
                     WHEN B.STR_OVR_TIME IS NOT NULL AND B.END_OVR_TIME IS NOT NULL AND A.HOL_YN = 'Y' THEN NVL(B.OVR_TIME,0) + 0         
                	ELSE 0							
                END WRK_TIME,	  
                CASE WHEN C.COL_NEW = 'P' THEN '오전반차    '
                     WHEN C.COL_NEW = 'R' THEN '오후반차    '      
                     WHEN C.COL_NEW = 'E' THEN '출장'
                     WHEN C.COL_NEW = 'F' THEN '교육'    
                     WHEN C.COL_NEW = 'G' THEN '훈련'
                     WHEN C.COL_NEW = 'H' THEN '연차'                         
                     WHEN C.COL_NEW = 'Y' THEN '휴일'
                     WHEN C.COL_NEW = 'I' THEN '경조휴가    '    
                     WHEN C.COL_NEW = 'T' THEN '대체휴가    '
                     WHEN C.COL_NEW = 'M' THEN '월차'  
                     WHEN C.COL_NEW = 'W' THEN '근무'                     
                	ELSE ''								
                END GUBUN,	 
                B.REMARK,								
             	ASNHR.SF_GET_ENONAME('01', ?) AS ENO_NM
            FROM  
                ( SELECT ENO_NO, PIS_YY || PIS_MM || lpad(lv, 2, '0') AS PIS_YMD,
					   DECODE(lv,1,AT1_CD,
					   			 2,AT2_CD,
								 3,AT3_CD,
								 4,AT4_CD,
								 5,AT5_CD,
								 6,AT6_CD,
								 7 , AT7_CD,
								 8 , AT8_CD,
								 9 , AT9_CD,
								 10, AT10_CD,
								 11, AT11_CD,
							     12, AT12_CD,
						         13, AT13_CD,
							 	 14, AT14_CD,
								 15, AT15_CD,
								 16, AT16_CD,
								 17, AT17_CD,
								 18, AT18_CD,
								 19, AT19_CD,
								 20, AT20_CD,
								 21, AT21_CD,
								 22, AT22_CD,
								 23, AT23_CD,
								 24, AT24_CD,
								 25, AT25_CD,
								 26, AT26_CD,
								 27, AT27_CD,
								 28, AT28_CD,
								 29, AT29_CD,
								 30, AT30_CD,
								 31, AT31_CD
							 ) col_new
                FROM
                (
                SELECT BB.ENO_NM, AA.*
                FROM ASNHR.T_DI_DILIGENCE AA, ASNHR.T_CM_PERSON BB
                WHERE  PIS_YY || PIS_MM = ?
                AND    AA.ENO_NO = BB.ENO_NO
                AND    AA.ENO_NO = ?
                ), (SELECT LEVEL lv FROM dual CONNECT BY LEVEL <= 31) 
                ) C,            
           ASNHR.T_DI_HOLIDAY A
           LEFT JOIN ASNHR.T_DI_OVERTIMEWORK B ON A.REG_YMD = B.STR_REG_YMD AND B.ENO_NO = ?  
            WHERE  
				   SUBSTR(A.REG_YMD, 1, 6) = ?
                  AND C.PIS_YMD = A.REG_YMD
           ORDER BY A.REG_YMD    
            ]]>
        </query>
    </sql>





<!--
***********************************************************************
* @UseCase     : GUNF020
* @description : 근무조회
***********************************************************************
* 2019/12/02     이동훈        최초작성.
***********************************************************************
-->
    <!-- 기본근무조회 -->
    <sql name="GUNF020_SHR">
        <description>근무조회</description>
        <query>
            <![CDATA[
            SELECT 
				A.HEAD_NM,            
				A.DPT_NM,            
				A.JOB_NM,
				A.ENO_NM,
				A.ENO_NO,
				B.REQ_NO,
				B.STR_REG_YMD,
				B.END_REG_YMD,				
				SUBSTR(B.STR_OVR_TIME, 1, 2) || ':' ||  SUBSTR(B.STR_OVR_TIME, 3, 2) STR_TIME,
				SUBSTR(B.END_OVR_TIME, 1, 2) || ':' ||  SUBSTR(B.END_OVR_TIME, 3, 2) END_TIME,
				B.WEEK_TOT_TIME,
				B.STR_OVR_TIME||'~'||B.END_OVR_TIME AS OVERTIME,
				B.APP_YN,
				B.APP_TIME,
				B.REMARK,
				B.PENO_NO,
				B.PENO_TIME,
				B.GUBN,
				B.WEEK_TOT_TIME,
				B.HOL_TOT_TIME,
				B.ALL_TOT_TIME,
				B.WEEK_OF_YEAR,
				B.TARGET_WEEK                   
            FROM  ASNHR.VI_T_CM_PERSON2 A,
				  ASNHR.T_DI_OVERTIMEWORK B              
            WHERE  A.ENO_NO = B.ENO_NO
                   AND A.RET_YMD IS NULL            
				   AND B.STR_REG_YMD = ?
				   AND A.DPT_CD LIKE '%'||?||'%'
				   AND A.ENO_NO LIKE '%'||?||'%'
              ORDER BY A.ENO_NO     
            ]]>
        </query>
    </sql>


    <!-- 차수 조회 -->
    <sql name="GUNF020_SHR_WEEK">
        <description>차수 조회</description>
        <query>
            <![CDATA[
            SELECT 
				A.WEEK_NO                   
            FROM  ASNHR.T_DI_HOLIDAY A          
            WHERE  A.REG_YMD = ?    
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : GUNF030
* @description : 근무조회
***********************************************************************
* 2019/12/11     이동훈        최초작성.
***********************************************************************
-->
    <!-- 기본근무조회 -->
    <sql name="GUNF030_SHR">
        <description>근무조회</description>
        <query>
            <![CDATA[
            SELECT 
				A.HEAD_NM,            
				A.DPT_NM,            
				A.JOB_NM,
				A.ENO_NM,
				A.ENO_NO,
				B.REQ_NO,
				B.STR_REG_YMD,
				B.END_REG_YMD,				
				SUBSTR(B.STR_OVR_TIME, 1, 2) || ':' ||  SUBSTR(B.STR_OVR_TIME, 3, 2) STR_TIME,
				SUBSTR(B.END_OVR_TIME, 1, 2) || ':' ||  SUBSTR(B.END_OVR_TIME, 3, 2) END_TIME,
				B.WEEK_TOT_TIME,
				B.STR_OVR_TIME||'~'||B.END_OVR_TIME AS OVERTIME,
				B.APP_YN,
				B.APP_TIME,
				B.REMARK,
				B.PENO_NO,
				B.PENO_TIME,
				B.GUBN,
				B.WEEK_TOT_TIME,
				B.HOL_TOT_TIME,
				B.ALL_TOT_TIME,
				B.WEEK_OF_YEAR,
				B.TARGET_WEEK                   
            FROM  ASNHR.VI_T_CM_PERSON2 A,
				  ASNHR.T_DI_OVERTIMEWORK B              
            WHERE  A.ENO_NO = B.ENO_NO
                   AND A.RET_YMD IS NULL            
				   AND B.STR_REG_YMD BETWEEN ? AND ?
				   AND A.DPT_CD LIKE '%'||?||'%'
				   AND A.ENO_NO LIKE '%'||?||'%'
              ORDER BY B.STR_REG_YMD, A.ENO_NO                   
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : GUNF040
* @description : 근무조회
***********************************************************************
* 2020/01/15     이동훈        최초작성.
***********************************************************************
-->


    <!-- 사원 정보를 조회 한다. -->
    <sql name="GUNF040_SHR">
        <description>근무조회</description>
        <query>
            <![CDATA[
			SELECT DISTINCT PP.PIS_YY, PP.HEAD_CD, PP.HEAD_NM, PP.DPT_CD, PP.DPT_NM, PP.JOB_CD, PP.JOB_NM, PP.DUTY_CD, PP.HOB_CD, PP.ENO_NO, PP.ENO_NM, 
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '01' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_01,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '02' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_02,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '03' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_03,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '04' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_04,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '05' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_05,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '06' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_06,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '07' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_07,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '08' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_08,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '09' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_09,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '10' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_10,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '11' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_11,
				(SELECT SUM(WRK_TIME) FROM T_DI_DAILYWORK WHERE SUBSTR(PIS_YMD,'1','4') = ? AND SUBSTR(PIS_YMD,'5','2') = '12' AND ENO_NO = PP.ENO_NO GROUP BY SUBSTR(PIS_YMD,'1','6')) AS WRK_TIME_12
			FROM
             (   SELECT AA.PIS_YY, AA.PIS_MM, AA.ATW_CNT, BB.HEAD_CD, BB.HEAD_NM, BB.DPT_CD, BB.DPT_NM, BB.JOB_CD, BB.JOB_NM, BB.ENO_NO, BB.ENO_NM, BB.DUTY_CD, BB.HOB_CD
                FROM ASNHR.T_DI_DILIGENCE AA, 
                ASNHR.VI_T_CM_PERSON2 BB
                WHERE  PIS_YY  = ?
                AND BB.RET_YMD IS NULL
                AND BB.ENO_NO NOT IN ('2140029','6180021','6180022')
                AND BB.JOB_CD NOT IN ('000','020','030','040','060','080','100','120','840','940','999') 
                AND BB.DPT_CD NOT IN ('AA67','W001','W020')              
                AND AA.ENO_NO = BB.ENO_NO
                AND BB.DPT_CD LIKE '%'||?||'%'
              ) PP
              ORDER BY PP.HEAD_CD ASC, PP.DPT_CD, PP.JOB_CD ASC, PP.DUTY_CD, PP.HOB_CD DESC
            ]]>
        </query>
    </sql>



    <!-- 사원 정보를 조회 한다. -->
    <sql name="GUNF040_SHR_01">
        <description>사원 정보조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO
                 , A.ENO_NM
                 , A.JOB_CD
                 , A.JOB_NM
                 , A.DPT_CD
                 , A.DPT_NM
              FROM ASNHR.VI_T_CM_PERSON A
              WHERE A.ENO_NO = ?
            ]]>
        </query>
    </sql>
    
    
    <!-- 사원 정보를 조회 한다. -->
    <sql name="GUNF040_SHR_DTL">
        <description>사원 근무조회</description>
        <query>
            <![CDATA[
            SELECT 
				A.REG_YMD,            
				A.WEEK_NO,            
				A.HOL_GBN,
				A.HOL_YN,
				A.REMARK AS YOIL,
				SUBSTR(B.STR_TIME, 1, 2) ||':'|| SUBSTR(B.STR_TIME, 3, 4) STR_TIME,
				SUBSTR(B.END_TIME, 1, 2) ||':'|| SUBSTR(B.END_TIME, 3, 4) END_TIME,
                B.WRK_TIME,
                CASE WHEN B.GUN_CD = 'P' THEN '오전반차    '
                     WHEN B.GUN_CD = 'R' THEN '오후반차    '      
                     WHEN B.GUN_CD = 'E' THEN '출장'
                     WHEN B.GUN_CD = 'F' THEN '교육'    
                     WHEN B.GUN_CD = 'G' THEN '훈련'
                     WHEN B.GUN_CD = 'H' THEN '연차'                         
                     WHEN B.GUN_CD = 'Y' THEN '휴일'
                     WHEN B.GUN_CD = 'I' THEN '경조휴가    '    
                     WHEN B.GUN_CD = 'T' THEN '대체휴가    '
                     WHEN B.GUN_CD = 'M' THEN '월차'  
                     WHEN B.GUN_CD = 'W' THEN '근무'                     
                	ELSE ''								
                END GUBUN,	  
                B.REMARK,								
             	ASNHR.SF_GET_ENONAME('01', ?) AS ENO_NM
          FROM      
           ASNHR.T_DI_HOLIDAY A
           LEFT JOIN ASNHR.T_DI_DAILYWORK B ON A.REG_YMD = B.PIS_YMD AND B.ENO_NO = ?  
            WHERE  
				   SUBSTR(A.REG_YMD, 1, 6) = ?
           ORDER BY A.REG_YMD  
            ]]>
        </query>
    </sql>    
    
    
<!--
***********************************************************************
* @UseCase     : GUNF070
* @description : 근무제 조회
***********************************************************************
* 2019/12/11     이동훈        최초작성.
***********************************************************************
-->
    <!-- 근무형태 조회 -->
    <sql name="GUNF070_SHR">
        <description>근무조회</description>
        <query>
            <![CDATA[
			SELECT 
				A.HEAD_CD,
        		ASNHR.SF_GET_DPTNAME('01', 'B2', A.HEAD_CD) HEAD_NM,            
				A.DPT_CD,
        		ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) DPT_NM,    
				A.TEAM_CD,
        		ASNHR.SF_GET_DPTNAME('01', 'A6', A.TEAM_CD) TEAM_NM,        
				A.JOB_CD,
        		ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) JOB_NM, 
				A.ENO_NO,        
				A.ENO_NM,
				A.DUTY_CD,
				A.HOB_CD,
				A.GBN_CD,
        		ASNHR.SF_GET_COMMNAME('01', 'B7', A.GBN_CD) GBN_NM,
        		A.JOB_OCC
			FROM  ASNHR.T_CM_PERSON A                               
            WHERE  A.DPT_CD LIKE '%'||?||'%'
				   AND A.ENO_NO LIKE '%'||?||'%'
				   AND A.RET_YMD IS NULL
				   AND A.ENO_NO NOT LIKE '6%'
				   AND A.JOB_CD NOT IN ('000','020','030','040','060','080','100','120','840','940','999')
				   AND A.GBN_CD NOT IN ('2')
				   AND A.DPT_CD NOT IN ('AA67','W001')
              ORDER BY A.HEAD_CD, A.DPT_CD, A.TEAM_CD DESC, A.DUTY_CD, A.JOB_CD, A.HOB_CD DESC           
            ]]>
        </query>
    </sql>


    <!-- 근무형태 조회 -->
    <sql name="GUNF070_SHR_DTL">
        <description>근무형태 History조회</description>
        <query>
            <![CDATA[
			SELECT 
				A.HEAD_CD,
        		ASNHR.SF_GET_DPTNAME('01', 'B2', A.HEAD_CD) HEAD_NM,            
				A.DPT_CD,
        		ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) DPT_NM,    
				A.TEAM_CD,
        		ASNHR.SF_GET_DPTNAME('01', 'A6', A.TEAM_CD) TEAM_NM,        
				A.JOB_CD,
        		ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) JOB_NM, 
				A.ENO_NO,        
				A.ENO_NM,
				B.SET_YMD,
				B.SEQ,
        		CASE WHEN B.JOB_OCC = '1' THEN '기본근무     '
        		     WHEN B.JOB_OCC = '3' THEN '탄력근무(고/도/인)       '        		
        		     WHEN B.JOB_OCC = '5' THEN '탄력근무     '
        		    ELSE ' ' END WORK_STYLE,
        		ASNHR.SF_GET_ENONAME('01', B.IPT_MAN) AS IPT_MAN,
        		B.IPT_YMD
                       
			FROM  ASNHR.T_CM_PERSON A,                       
                  ASNHR.T_DI_WORKSTYLE B     
            WHERE  A.ENO_NO = B.ENO_NO 
               AND A.ENO_NO = ?
              ORDER BY B.SEQ          
            ]]>
        </query>
    </sql>


	<!-- 개인별 근무형태 HISTORY 기록 -->
    <sql name="GUNF070_INS">
        <description>개인별 근무형태</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_WORKSTYLE
                    (   ENO_NO,  
	                    SEQ,  
	                    SET_YMD,    
	                    JOB_OCC, 
	                    IPT_MAN, 
	                    IPT_YMD )
             VALUES (   ?, 
                        (SELECT  NVL(MAX(SEQ),0)+1 FROM ASNHR.T_DI_WORKSTYLE WHERE ENO_NO = ?),
             			TO_CHAR(SYSDATE,'YYYYMMDD'),  
             			?, 
             			?,
             			SYSDATE )
            ]]>
        </query>
    </sql>


	<!-- 개인별 근무형태 처리 -->
    <sql name="GUNF070_UPT">
        <description>개인별 근무형태</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_PERSON
            SET    
                   JOB_OCC = ?
            WHERE  
            	   ENO_NO = ?
            ]]>
        </query>
    </sql>
    
    
    <!--
***********************************************************************
* @UseCase     : GUNF080
* @description : 근무제 조회
***********************************************************************
* 2020/01/16     이동훈        최초작성.
***********************************************************************
-->
    <!-- 근무형태 조회 -->
    <sql name="GUNF080_SHR">
        <description>근무조회</description>
        <query>
            <![CDATA[
			SELECT 
				A.HEAD_CD,
        		ASNHR.SF_GET_DPTNAME('01', 'B2', A.HEAD_CD) HEAD_NM,            
				A.DPT_CD,
        		ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) DPT_NM,    
				A.TEAM_CD,
        		ASNHR.SF_GET_DPTNAME('01', 'A6', A.TEAM_CD) TEAM_NM,        
				A.JOB_CD,
        		ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) JOB_NM, 
				A.ENO_NO,        
				A.ENO_NM,
				A.DUTY_CD,
				A.HOB_CD,
				A.GBN_CD,
        		ASNHR.SF_GET_COMMNAME('01', 'B7', A.GBN_CD) GBN_NM,
        		A.JOB_OCC   
			FROM  ASNHR.T_CM_PERSON A                         
            WHERE  A.DPT_CD LIKE '%'||?||'%'
				   AND A.ENO_NO LIKE '%'||?||'%'
				   AND A.JOB_OCC IN ('3','5')
				   AND A.RET_YMD IS NULL
				   --AND A.ENO_NO NOT LIKE '6%'
				   AND A.JOB_CD NOT IN ('000','020','040','060','080','100','120','840','999')
              ORDER BY A.HEAD_CD, A.DPT_CD, A.TEAM_CD DESC, A.DUTY_CD, A.JOB_CD, A.HOB_CD DESC           
            ]]>
        </query>
    </sql>
    
    
    
     <!-- 근무형태 조회 -->
    <sql name="GUNF080_SHR_01">
        <description>근무조회</description>
        <query>
            <![CDATA[
            SELECT 
            	'F' CHK,
				A.REG_YMD,            
				A.WEEK_NO,            
				A.HOL_GBN,
				A.HOL_YN,
				B.REQ_NO,
				A.REMARK,					
                B.STR_TIME,	
                B.STR_MINUTE,										
                B.END_TIME,	
                B.END_MINUTE,	
				CASE WHEN C.DILIGENCE = 'P' THEN '4.25'
		             WHEN C.DILIGENCE = 'R' THEN '4.75'
		             WHEN C.DILIGENCE = 'E' THEN '8' 		
		             WHEN C.DILIGENCE = 'F' THEN '8'   
		           	 WHEN C.DILIGENCE = 'G' THEN '8'  
		             WHEN C.DILIGENCE = 'H' THEN '0' 
		             WHEN C.DILIGENCE = 'I' THEN '0' 
		             WHEN C.DILIGENCE = 'M' THEN '0' 
		             WHEN C.DILIGENCE = 'T' THEN '0'    
				ELSE B.DAY_TOTAL_TIME END DAY_TOTAL_TIME,
				'' DAY_TOTAL_TIME2,    			
				? AS ENO_NO,
             	ASNHR.SF_GET_ENONAME('01', ?) AS ENO_NM,
				CASE WHEN A.REG_YMD >= TO_CHAR(SYSDATE,'YYYYMMDD') AND C.DILIGENCE IS NULL AND B.STATUS != 'A' THEN 'Y'
            		 WHEN (A.REG_YMD >= TO_CHAR(SYSDATE,'YYYYMMDD') AND C.DILIGENCE IS NOT NULL) OR B.STATUS = 'A' THEN 'N'		 
				ELSE 'N' END EDIT,
				B.STATUS AS STATUS_NOW,
				ASNHR.SF_GET_JOBOCC(?) AS JOB_OCC,
				C.DILIGENCE
            FROM  ASNHR.T_DI_HOLIDAY A,
            	  ASNHR.T_DI_OVERTIMESCHEDULE B, 
	            ( 
	            SELECT ENO_NO, ?||'01' AS PIS_YMD, AT1_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT1_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'02' AS PIS_YMD, AT2_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT2_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'03' AS PIS_YMD, AT3_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT3_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'04' AS PIS_YMD, AT4_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT4_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'05' AS PIS_YMD, AT5_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT5_CD NOT IN ('Y','W') 
	             UNION
	            SELECT ENO_NO, ?||'06' AS PIS_YMD, AT6_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT6_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'07' AS PIS_YMD, AT7_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT7_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'08' AS PIS_YMD, AT8_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT8_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'09' AS PIS_YMD, AT9_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT9_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'10' AS PIS_YMD, AT10_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT10_CD NOT IN ('Y','W') 	              
	             UNION
	            SELECT ENO_NO, ?||'11' AS PIS_YMD, AT11_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT11_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'12' AS PIS_YMD, AT12_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT12_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'13' AS PIS_YMD, AT13_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT13_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'14' AS PIS_YMD, AT14_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT14_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'15' AS PIS_YMD, AT15_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT15_CD NOT IN ('Y','W')  
	             UNION
	            SELECT ENO_NO, ?||'16' AS PIS_YMD, AT16_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT16_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'17' AS PIS_YMD, AT17_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT17_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'18' AS PIS_YMD, AT18_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT18_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'19' AS PIS_YMD, AT19_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT19_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'20' AS PIS_YMD, AT20_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT20_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'21' AS PIS_YMD, AT21_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT21_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'22' AS PIS_YMD, AT22_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT22_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'23' AS PIS_YMD, AT23_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT23_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'24' AS PIS_YMD, AT24_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT24_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'25' AS PIS_YMD, AT25_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT25_CD NOT IN ('Y','W')  
	             UNION
	            SELECT ENO_NO, ?||'26' AS PIS_YMD, AT26_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT26_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'27' AS PIS_YMD, AT27_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT27_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'28' AS PIS_YMD, AT28_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT28_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'29' AS PIS_YMD, AT29_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT29_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'30' AS PIS_YMD, AT30_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT30_CD NOT IN ('Y','W')
	             UNION
	            SELECT ENO_NO, ?||'31' AS PIS_YMD, AT31_CD AS DILIGENCE FROM T_DI_DILIGENCE
	              WHERE  PIS_YY = ? AND PIS_MM = ? AND ENO_NO = ?  AND AT31_CD NOT IN ('Y','W')            
				) C  
            WHERE  
		           A.REG_YMD = B.PIS_YMD(+) 
		           AND B.ENO_NO(+) = ? 
		           AND A.REG_YMD LIKE '%'||?||'%' 
				   AND C.PIS_YMD(+) = A.REG_YMD
		     ORDER BY A.REG_YMD                 
            ]]>
        </query>
    </sql>    
    
    
     <!-- 근무 누적시간 조회 -->
    <sql name="GUNF080_SHR_DTL">
        <description>근무 누적시간 조회</description>
        <query>
            <![CDATA[   
     SELECT  DISTINCT
            (  SELECT MIN(PIS_YMD) FROM  ASNHR.T_DI_OVERTIMESCHEDULE A   WHERE  ENO_NO = ? AND A.WEEK_NO = ? ) STR_YMD,
            (  SELECT MAX(PIS_YMD) FROM  ASNHR.T_DI_OVERTIMESCHEDULE A   WHERE  ENO_NO = ? AND A.WEEK_NO = ? ) END_YMD,
            (  SELECT SUM(DAY_TOTAL_TIME)  FROM  ASNHR.T_DI_OVERTIMESCHEDULE A   WHERE  ENO_NO = ? AND A.WEEK_NO = ? ) WEEK_TOTAL_TIME,
            (  SELECT 64 - SUM(DAY_TOTAL_TIME)  FROM  ASNHR.T_DI_OVERTIMESCHEDULE A   WHERE  ENO_NO = ?  AND A.WEEK_NO = ? ) POSIBLE_TIME,
            (  SELECT SUM(DAY_TOTAL_TIME)  FROM  ASNHR.T_DI_OVERTIMESCHEDULE A   WHERE  ENO_NO = ?  AND A.PIS_YMD LIKE '%'||?||'%' ) MONTH_TOTAL_TIME,
            (  SELECT 208 - SUM(DAY_TOTAL_TIME)  FROM  ASNHR.T_DI_OVERTIMESCHEDULE A   WHERE  ENO_NO = ?  AND A.PIS_YMD LIKE '%'||?||'%' ) POSIBLE_TIME2
       FROM  ASNHR.T_DI_OVERTIMESCHEDULE A   
            WHERE  ENO_NO = ?
                   AND A.PIS_YMD LIKE '%'||?||'%'                                     
            ]]>
        </query>
    </sql>    
    
    
    
    <!-- 결재선 정보를 조회 한다. -->
    <sql name="GUNF080_SHR_APP">
        <description>결재선 정보 조회</description>
        <query>
            <![CDATA[
          SELECT A.ENO_NO
                 , A.ENO_NM
                 , A.JOB_CD
                 , A.JOB_NM
                 , A.DPT_NM
                 , A.DPT_CD
                 , B.ENO_NO HENO_NO
                 , B.ENO_NM HENO_NM
                 , B.JOB_CD HJOB_CD
                 , B.JOB_NM HJOB_NM
                 , B.DPT_NM HDPT_NM
                 , B.DUTY_NM
            FROM (SELECT M.*
                         , 1 AS NUM
                      FROM ASNHR.VI_T_CM_PERSON M
                    ) A
                 , (SELECT M.*
                         , 1 AS NUM
                      FROM ASNHR.VI_T_CM_PERSON M
                    )B
             WHERE A.ENO_NO = ?
               [1]
            ]]>
        </query>
    </sql>    
    
    
    
    <!-- 월별 상신 결재 번호 채번 조회 -->
    <sql name="GUNF080_SHR_MAX">
        <description>월별 상신 결재 번호 채번 조회</description>
        <query>
            <![CDATA[
				SELECT  TO_CHAR(SYSDATE,'YYYYMM')|| TRIM(TO_CHAR( DECODE( MAX(SUBSTR(REQ_NO, 7, 4)), NULL, '0001', MAX(SUBSTR(REQ_NO, 7,4))+1 ), '0000')) REQ_NO
				FROM    ASNHR.T_DI_OVERTIMESCHEDULE
				WHERE   SUBSTR(REQ_NO,0,6) = TO_CHAR(SYSDATE,'YYYYMM')
            ]]>
        </query>
    </sql>    
    
    
    <!-- 개별 상신 결재 번호 채번 조회 -->
    <sql name="GUNF080_SHR_MAX2">
        <description>개별 상신 결재 번호 채번 조회</description>
        <query>
            <![CDATA[
				SELECT  TO_CHAR(SYSDATE,'YYYYMM')|| TRIM(TO_CHAR( DECODE( MAX(SUBSTR(REQ_NO, 7, 4)), NULL, '0001', MAX(SUBSTR(REQ_NO, 7,4))+1 ), '0000')) REQ_NO
				FROM    ASNHR.T_DI_APPROVAL
				WHERE   SUBSTR(REQ_NO,0,6) = TO_CHAR(SYSDATE,'YYYYMM')
                	AND GUN_GBN IN ('O2','O3')
            ]]>
        </query>
    </sql>    
        
    
    <!-- 결재신청번호 조회 -->
    <sql name="GUNF080_SHR_REQ">
        <description>결재신청번호 조회</description>
        <query>
            <![CDATA[
				SELECT  REQ_NO
				FROM    ASNHR.T_DI_OVERTIMESCHEDULE
				WHERE   ENO_NO = ? 
				   AND  SUBSTR(PIS_YMD,0,6) = ?
            ]]>
        </query>
    </sql>  
    
    
    
    <!-- 근무스케줄 저장 -->
    <sql name="GUNF080_INS">
        <description>근무스케줄 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_OVERTIMESCHEDULE
                    (ENO_NO , PIS_YMD , WEEK_NO, STR_TIME , STR_MINUTE, END_TIME , END_MINUTE, DAY_TOTAL_TIME, STATUS, 

                     IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
             VALUES (  ?,       ?,       ?,       	?,    	?,    	?,		?, 		?,    'S',

                       ?, sysdate,       ?, sysdate)
            ]]>
        </query>
    </sql>    

    
    <!-- 근무스케줄 저장 -->
    <sql name="GUNF080_UPT">
        <description>근무스케줄 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_OVERTIMESCHEDULE
                    (ENO_NO , PIS_YMD , WEEK_NO, STR_TIME , STR_MINUTE, END_TIME , END_MINUTE, DAY_TOTAL_TIME, STATUS,
                     IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
             VALUES (      ?,       ?,       ?,       	?,    	?,    	?,		?, 		?,     'C',
                           ?, sysdate,       ?, sysdate)
            ]]>
        </query>
    </sql>        
    
    
    <!-- 근무스케줄 삭제 -->
    <sql name="GUNF080_DEL">
        <description>근무스케줄 삭제</description>
        <query>
            <![CDATA[
             DELETE
             FROM    ASNHR.T_DI_OVERTIMESCHEDULE
             WHERE   PIS_YMD  = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>  
    
    
    
    <!-- 월별 결재 상신 한다. -->
    <sql name="GUNF080_UPT_APP">
        <description>월별 결재 상신</description>
        <query>
            <![CDATA[
             UPDATE  T_DI_OVERTIMESCHEDULE
             SET     STATUS = 'A',
             		 REQ_NO = ?,
                     UPT_MAN = ?,
                     UPT_YMD = sysdate
             WHERE   ENO_NO  = ?
             	 AND PIS_YMD = ?
            ]]>
        </query>
    </sql>    
    
    
    <!-- 월별상신 결재선 정보를 저장 한다. -->
    <sql name="GUNF080_UPT_APP_01">
        <description>월별상신 결재선 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_APPROVAL
                    ( REQ_NO, SEQ_NO, GUN_GBN,
                      GUN_DPT, PENO_NO, ENO_NO, JOB_CD,  
                      IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD,
                      GUN_YMD 
                     )
             VALUES (   
             			?,		1,      'O2',
             			?,      ?,      ?,      ?,      
             			?, 	sysdate,     ?, 	sysdate, 
             			?
             		)
            ]]>
        </query>
    </sql>
    
    
    
    <!-- 개별 결재 상신 한다. -->
    <sql name="GUNF080_UPT_APP_EACH">
        <description>개별 결재 상신</description>
        <query>
            <![CDATA[
             UPDATE  T_DI_OVERTIMESCHEDULE
             SET     STATUS = 'A',
             		 REQ_NO = ?,
                     UPT_MAN = ?,
                     UPT_YMD = sysdate
             WHERE   ENO_NO  = ?
             	 AND PIS_YMD = ?
            ]]>
        </query>
    </sql>        
    
    
    
    <!-- 개별상신 결재선 정보를 저장 한다. -->
    <sql name="GUNF080_UPT_APP_01_EACH">
        <description>개별상신 결재선 정보 저장</description>
        <query>
            <![CDATA[
             INSERT  INTO ASNHR.T_DI_APPROVAL
                    ( REQ_NO, SEQ_NO, GUN_GBN,
                      GUN_DPT, PENO_NO, ENO_NO, JOB_CD,  
                      IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD,
                      GUN_YMD 
                     )
             VALUES (   
             			?,		1,      'O3',
             			?,      ?,      ?,      ?,      
             			?, 	sysdate,     ?, 	sysdate, 
             			?
             		)
            ]]>
        </query>
    </sql>    
    
    
<!--
***********************************************************************
* @UseCase     : GUNF085
* @description : 한달근무결재 팝업
***********************************************************************
* 2020/02/13     이동훈      최초작성.
***********************************************************************
-->
    <!-- 한달근무 현황 조회 -->
    <sql name="GUNF085_SHR">
        <description>한달근무 내역 조회</description>
        <query>
            <![CDATA[
            SELECT 
				A.REG_YMD,            
				A.WEEK_NO,            
				A.HOL_GBN,
				A.HOL_YN,
				B.REQ_NO,
				A.REMARK,					
                B.STR_TIME || B.STR_MINUTE AS STR_TIME,									
                B.END_TIME || B.END_MINUTE AS END_TIME,	
				B.DAY_TOTAL_TIME,
				B.ENO_NO,   			
             	ASNHR.SF_GET_ENONAME('01', ?) AS ENO_NM,
				B.STATUS AS STATUS_NOW
            FROM  ASNHR.T_DI_HOLIDAY A,
            	  ASNHR.T_DI_OVERTIMESCHEDULE B 
		       	WHERE 
				 A.REG_YMD = B.PIS_YMD(+) 
		          AND B.ENO_NO(+) = ?
		       	  AND B.REQ_NO =? 
            ORDER BY A.REG_YMD
            ]]>
        </query>
    </sql>    

	<!-- 한달근무결재 현황 조회 -->
    <sql name="GUNF085_SHR_01">
        <description>한달근무 결재 정보 조회</description>
        <query>
            <![CDATA[
		        SELECT * FROM     
           		 (SELECT ENO_NO
		    	  , ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM --결재자
		   		  , REQ_NO
				  , GUN_DPT
				  , ASNHR.SF_GET_DPTNAME('01','A4',GUN_DPT) AS DPT_NM
				  , JOB_CD
				  , CASE WHEN JOB_CD = '700' THEN '사원' 
					WHEN JOB_CD = '890' THEN '사원'    
					ELSE ASNHR.SF_GET_COMMNAME('01','A2',JOB_CD) END AS JOB_NM	
				  , SEQ_NO
				  , '' SEQ_NM,'99991231' GUN_YMD, GUN_DPT as DPT_CD
				  , APP_YN
                  , (CASE WHEN APP_YN = 'R' THEN  '상신  ' || TO_CHAR(UPT_YMD, 'YYYY-MM-DD  HH24:MI')
                          	   WHEN APP_YN = 'N' THEN  '부결  ' || TO_CHAR(UPT_YMD, 'YYYY-MM-DD  HH24:MI')
                          	   WHEN APP_YN = 'E' THEN  '반송  ' || TO_CHAR(UPT_YMD, 'YYYY-MM-DD  HH24:MI')
                          	   WHEN APP_YN = 'Y' THEN  '승인  ' || TO_CHAR(UPT_YMD, 'YYYY-MM-DD  HH24:MI')
                    	       ELSE '미결'
                      END ) APP_STATUS
                   ,REMARK
                   ,NVL2(REMARK,'Click','') AS REMARK1
                   ,APP_TIME
            FROM   ASNHR.T_DI_APPROVAL
            WHERE  REQ_NO = ?
			AND    GUN_GBN = ?
			AND    SEQ_NO < '90'
            ORDER BY SEQ_NO)    
        
            ]]>
        </query>
    </sql> 
    
    <!-- 상신처리(한달근무 결재자 정보) -->
    <sql name="GUNF085_UPT_01">
        <description>상신정보 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_APPROVAL
            SET    APP_YN = ?,
                   APP_TIME = TO_CHAR(sysdate,'HH24:MI'),
                   REMARK   = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE REQ_NO = ?
            AND   ENO_NO = ?
            AND   GUN_GBN = 'O2'
            ]]>
        </query>
    </sql>
    
    <!-- 한달근무 결재 정보 -->
    <sql name="GUNF085_UPT_02">
        <description>한달근무 결재정보저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_OVERTIMESCHEDULE
            SET    
                   STATUS =  ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE REQ_NO = ?
            ]]>
        </query>
    </sql>
    
    
    <!-- 상신처리(개별상신 결재자 정보) -->
    <sql name="GUNF085_UPT_03">
        <description>상신정보 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_APPROVAL
            SET    APP_YN = ?,
                   APP_TIME = TO_CHAR(sysdate,'HH24:MI'),
                   REMARK   = ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE REQ_NO = ?
            AND   ENO_NO = ?
            AND   GUN_GBN = 'O3'
            ]]>
        </query>
    </sql>
    
    <!-- 개별상신 결재 정보 -->
    <sql name="GUNF085_UPT_04">
        <description>개별상신 결재정보저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_DI_OVERTIMESCHEDULE
            SET    
                   STATUS =  ?,
                   UPT_MAN = ?,
                   UPT_YMD = sysdate
            WHERE REQ_NO = ?
            ]]>
        </query>
    </sql>    
    
    
    
    
<!--
***********************************************************************
* @UseCase     : GUNF090
* @description : 근무조회
***********************************************************************
* 2019/12/11     이동훈        최초작성.
***********************************************************************
-->
    <!-- 기본근무조회 -->
    <sql name="GUNF090_SHR">
        <description>근무조회</description>
        <query>
            <![CDATA[

          SELECT X.ENO_NO
                 , X.ENO_NM
                 , X.JOB_CD                 
                 , X.JOB_NM                 
                 , X.DPT_CD                 
                 , X.DPT_NM
                 , X.TEAM_CD                 
                 , X.TEAM_NM
                 , X.HENO_NO
                 , X.HENO_NM
                 , X.HJOB_CD
                 , X.HJOB_NM                 
                 , X.HDPT_CD                 
                 , X.HDPT_NM
                 , X.HTEAM_CD                 
                 , X.HTEAM_NM                 
            FROM
			(
				 --본사
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		                 
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE A.DPT_CD = B.DPT_CD
						   AND B.DUTY_CD = '41'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD IN ('1','6','8')
		                   AND A.JOB_CD BETWEEN '140' AND '890'
		                   AND A.ENO_NO LIKE '%'||?||'%'
		
		       UNION ALL            
		       
		       
				 --본사 특이 케이스 이영현씨 팀장 토목팀장님인데 메인은 인프라영업팀으로 되어 있어서 매칭이 안됨
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		                 
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE A.ENO_NO = '3200001'
		                   AND B.ENO_NO = '2030002'
		       
		       
		       UNION ALL  
		       
				 --현장 겸직 중 중리동 이천 생활숙박시설 포함시키기
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.TEAM_CD = 'I386'
		             	   AND A.TEAM_CD = 'I369'
						   AND B.DUTY_CD = '20'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.JOB_CD BETWEEN '140' AND '890'                   
		                   AND A.ENO_NO LIKE '%'||?||'%'
		
		       UNION ALL            
		       
				 --본사 원가관리팀 포함시키기
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.DPT_CD = 'II44'
		             	   AND A.DPT_CD = 'II55'
						   AND B.DUTY_CD = '04'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '1'
		                   AND A.JOB_CD BETWEEN '140' AND '890'                  
		                   AND A.ENO_NO LIKE '%'||?||'%'
		
		       UNION ALL            
		       
				 --인천면세점 포함시키기
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.DPT_CD = 'KK65'
		             	   AND A.DPT_CD = 'KK65'
						   AND B.DUTY_CD = '41'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '3'
		                   AND A.JOB_CD BETWEEN '140' AND '890'                 
		                   AND A.ENO_NO LIKE '%'||?||'%'
		
		       UNION ALL      
		                   
		          --현장 중 현장소장 있는 현장은 현장소장에게 결재 올라가도록          
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE A.TEAM_CD = B.TEAM_CD
						   AND B.DUTY_CD = '20'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '3'
		                   AND A.JOB_CD BETWEEN '140' AND '890' 
		                   AND A.TEAM_CD NOT IN ('I378','I370','I171','I347','I375','I380','I376')        --무릉도원, 새만금, 영산강, 천안우회도로, 화성도시, 남양주, 시흥장현                   
		                   AND A.ENO_NO LIKE '%'||?||'%'
		                   
		       UNION ALL      
		                   
		          --현장 중 현장소장 없는 현장은 본사 건축팀장에게 결재 올라가도록          
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE A.DPT_CD = B.DPT_CD
						   AND B.DUTY_CD = '41'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '3'
		                   AND A.JOB_CD BETWEEN '140' AND '890' 
		                   AND A.TEAM_CD IN ('I378','I370','I171','I347','I375','I380','I376')        --무릉도원, 새만금, 영산강, 천안우회도로, 화성도시, 남양주, 시흥장현          
		                   AND A.ENO_NO LIKE '%'||?||'%'
		              
		       UNION ALL      
		                   
		          --현장 중 현장소장 없는 현장은 본사 토목팀장에게 결재 올라가도록          
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.DPT_CD = 'II20'
		                   AND A.DPT_CD = 'II25'
						   AND B.DUTY_CD = '41'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '3'
		                   AND A.JOB_CD BETWEEN '140' AND '890' 
		                   AND A.TEAM_CD IN ('I378','I370','I171','I347','I375','I380','I376')        --무릉도원, 새만금, 영산강, 천안우회도로, 화성도시, 남양주, 시흥장현          
		                   AND A.ENO_NO LIKE '%'||?||'%'
		                        
		       UNION ALL      
		                   
		          --현장 중 현장소장 없는 현장은 본사 토목팀장에게 결재 올라가도록          
		          SELECT A.ENO_NO
		                 , A.ENO_NM
		                 , A.JOB_CD                 
		                 , A.JOB_NM                 
		                 , A.DPT_CD                 
		                 , A.DPT_NM
		                 , A.TEAM_CD                 
		                 , A.TEAM_NM
		                 , B.ENO_NO HENO_NO
		                 , B.ENO_NM HENO_NM
		                 , B.JOB_CD HJOB_CD
		                 , B.JOB_NM HJOB_NM                 
		                 , B.DPT_CD HDPT_CD                 
		                 , B.DPT_NM HDPT_NM
		                 , B.TEAM_CD HTEAM_CD                 
		                 , B.TEAM_NM HTEAM_NM		
		            FROM ASNHR.VI_T_CM_PERSON A
		                 ,ASNHR.VI_T_CM_PERSON B
		             WHERE B.DPT_CD = 'II20'
		                   AND A.DPT_CD = 'II25'
						   AND B.DUTY_CD = '41'
		                   AND A.ENO_NO NOT LIKE '6%'
		                   AND A.GBN_CD = '1'
		                   AND A.JOB_CD BETWEEN '140' AND '890'     
		                   AND A.ENO_NO LIKE '%'||?||'%'                        
                        
                        ) X
                      ORDER BY X.DPT_CD, X.TEAM_CD DESC, X.JOB_CD, X.ENO_NO, X.HDPT_CD, X.HTEAM_CD DESC, X.HJOB_CD, X.HENO_NO   
                        
            ]]>
        </query>
    </sql>
    

</sqls>