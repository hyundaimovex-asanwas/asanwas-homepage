<?xml version="1.0" encoding="euc-kr"?>

<sqls>

<!-- 업적평가 -->
<!-- 고과자지정(부서장) -->
<!--
***********************************************************************
* @UseCase     : VLUL070
* @description :고과자지정(부서장)
***********************************************************************
* 2013/11/18      정하나        최초작성.
***********************************************************************
-->

 <!-- 조회 한다. -->
    <sql name="VLUL070_SHR">
        <description>고과자지정(부서장) 조회</description>
        <query>
            <![CDATA[
				SELECT
				X.CHK, X.EVAYM, X.EMPNO, X.EMPNMK, X.DEPTCD,
				RTRIM(X.DEPTNM) DEPTNM ,
				X.PAYGRD, X.PAYGRDNM,
				MAX(X.SEQ1)SEQ1,   MAX(X.EMPNMK1)EMPNMK1,
				MAX(X.SEQ2)SEQ2,   MAX(X.EMPNMK2)EMPNMK2,
				MAX(X.SEQ3)SEQ3,   MAX(X.EMPNMK3)EMPNMK3,
				MAX(X.SEQ4)SEQ4,   MAX(X.EMPNMK4)EMPNMK4,
				MAX(X.SEQ5)SEQ5,   MAX(X.EMPNMK5)EMPNMK5,
				MAX(X.SEQ6)SEQ6,   MAX(X.EMPNMK6)EMPNMK6,
				MAX(X.SEQ7)SEQ7,   MAX(X.EMPNMK7)EMPNMK7,
				MAX(X.SEQ8)SEQ8,   MAX(X.EMPNMK8)EMPNMK8,
				MAX(X.SEQ9)SEQ9,   MAX(X.EMPNMK9)EMPNMK9,
				MAX(X.SEQ10)SEQ10, MAX(X.EMPNMK10)EMPNMK10,
				MAX(X.SEQ11)SEQ11, MAX(X.EMPNMK11)EMPNMK11,
				MAX(X.SEQ12)SEQ12, MAX(X.EMPNMK12)EMPNMK12,
				MAX(X.SEQ13)SEQ13, MAX(X.EMPNMK13)EMPNMK13,
				MAX(X.SEQ14)SEQ14, MAX(X.EMPNMK14)EMPNMK14,
				MAX(X.SEQ15)SEQ15, MAX(X.EMPNMK15)EMPNMK15
			FROM (
			SELECT
				'F' CHK,
				A.EVAYM,
				A.EMPNO, ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,

				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,

				CASE B.EVASEQ WHEN 1  THEN B.EMPNOH END AS SEQ1,
				CASE B.EVASEQ WHEN 2  THEN B.EMPNOH END AS SEQ2,
				CASE B.EVASEQ WHEN 3  THEN B.EMPNOH END AS SEQ3,
				CASE B.EVASEQ WHEN 4  THEN B.EMPNOH END AS SEQ4,
				CASE B.EVASEQ WHEN 5  THEN B.EMPNOH END AS SEQ5,
				CASE B.EVASEQ WHEN 6  THEN B.EMPNOH END AS SEQ6,
				CASE B.EVASEQ WHEN 7  THEN B.EMPNOH END AS SEQ7,
				CASE B.EVASEQ WHEN 8  THEN B.EMPNOH END AS SEQ8,
				CASE B.EVASEQ WHEN 9  THEN B.EMPNOH END AS SEQ9,
				CASE B.EVASEQ WHEN 10 THEN B.EMPNOH END AS SEQ10,
				CASE B.EVASEQ WHEN 11 THEN B.EMPNOH END AS SEQ11,
				CASE B.EVASEQ WHEN 12 THEN B.EMPNOH END AS SEQ12,
				CASE B.EVASEQ WHEN 13 THEN B.EMPNOH END AS SEQ13,
				CASE B.EVASEQ WHEN 14 THEN B.EMPNOH END AS SEQ14,
				CASE B.EVASEQ WHEN 15 THEN B.EMPNOH END AS SEQ15,
				CASE B.EVASEQ WHEN 1  THEN C.ENO_NM END AS EMPNMK1,
				CASE B.EVASEQ WHEN 2  THEN C.ENO_NM END AS EMPNMK2,
				CASE B.EVASEQ WHEN 3  THEN C.ENO_NM END AS EMPNMK3,
				CASE B.EVASEQ WHEN 4  THEN C.ENO_NM END AS EMPNMK4,
				CASE B.EVASEQ WHEN 5  THEN C.ENO_NM END AS EMPNMK5,
				CASE B.EVASEQ WHEN 6  THEN C.ENO_NM END AS EMPNMK6,
				CASE B.EVASEQ WHEN 7  THEN C.ENO_NM END AS EMPNMK7,
				CASE B.EVASEQ WHEN 8  THEN C.ENO_NM END AS EMPNMK8,
				CASE B.EVASEQ WHEN 9  THEN C.ENO_NM END AS EMPNMK9,
				CASE B.EVASEQ WHEN 10 THEN C.ENO_NM END AS EMPNMK10,
				CASE B.EVASEQ WHEN 11 THEN C.ENO_NM END AS EMPNMK11,
				CASE B.EVASEQ WHEN 12 THEN C.ENO_NM END AS EMPNMK12,
				CASE B.EVASEQ WHEN 13 THEN C.ENO_NM END AS EMPNMK13,
				CASE B.EVASEQ WHEN 14 THEN C.ENO_NM END AS EMPNMK14,
				CASE B.EVASEQ WHEN 15 THEN C.ENO_NM END AS EMPNMK15

				FROM ASNHR.T_EV_EQEMP_DPT A
				FULL OUTER JOIN ASNHR.T_EV_EQHEMP_DPT B ON A.EVAYM = B.EVAYM  AND  A.EMPNO = B.EMPNO
				FULL OUTER JOIN ASNHR.T_CM_PERSON C ON B.EMPNOH = C.ENO_NO AND (C.RET_YMD ='' OR C.RET_YMD IS NULL)
				FULL OUTER JOIN ASNHR.T_CM_PERSON D ON A.EMPNO = D.ENO_NO AND (D.RET_YMD ='' OR D.RET_YMD IS NULL)
				) X
			WHERE X.EVAYM = ?
				AND X.EMPNO LIKE '%'||?||'%'
				AND X.DEPTCD LIKE '%'||?||'%'
				AND X.PAYGRD LIKE '%'||?||'%'
				GROUP BY X.CHK, X.EVAYM, X.EMPNO, X.EMPNMK, X.DEPTCD, X.DEPTNM, X.PAYGRD, X.PAYGRDNM
				ORDER BY X.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 조회 한다. -->
    <sql name="VLUL070_SHR_01">
        <description>고과자지정(부서장) 조회</description>
        <query>
            <![CDATA[
				SELECT
				'' CHKOUT,
				A.EVAYM,
				A.EMPNOH,
				B.ENO_NM AS EMPNMKH,
				A.EMPNO ,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.EVASEQ,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.EMPNOH AS OLDEMPNOH,
				A.EVASEQ AS OLDEVASEQ
			FROM
				T_EV_EQHEMP_DPT A, ASNHR.T_CM_PERSON B, ASNHR.T_CM_PERSON C
			WHERE A.EMPNOH = B.ENO_NO
				AND A.EMPNO = C.ENO_NO
				AND A.EVAYM = ?
				AND A.EMPNO LIKE '%'||?||'%'
				AND B.DPT_CD LIKE '%'||?||'%'
				AND B.JOB_CD LIKE '%'||?||'%'
				AND A.EMPNOH LIKE '%'||?||'%'
				AND A.EVASEQ LIKE '%'||?||'%'

            ]]>
        </query>
    </sql>

    <!-- 부서장에 대한 고과자 저장 한다. -->
    <sql name="VLUL070_SAV">
        <description>부서장에 대한 고과자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EQHEMP_DPT
                 ( EVAYM,EMPNOH,EMPNO,EVASEQ,DEPTCD,DEPTNM,PAYGRD
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 ?
                 )

            ]]>
        </query>
    </sql>


    <!-- 부서장 고과자 삭제 한다. -->
    <sql name="VLUL070_DEL">
        <description>부서장 고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_EQHEMP_DPT
			WHERE EVAYM = ?
				AND EMPNOH = ?
				AND EMPNO = ?
				AND EVASEQ = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUL080
* @description : 목표설정
***********************************************************************
* 2014/03/17      이동훈        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정 정보를 조회 -->
    <sql name="VLUL080_SHR">
        <description>목표설정 조회</description>
        <query>
            <![CDATA[
            SELECT  EVL_YYYY, ENO_NO, GOAL_NO, CATEGORY, FORMULA, GOAL_YMD, WEIGHT, APP_STATUS,
            			 ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM,
            			 ASNHR.SF_GET_ENODPT(ENO_NO) AS DPT_NM,
				         ASNHR.SF_GET_ENOJOB(ENO_NO) AS JOB_NM            			 
            FROM    ASNHR.T_EV_GOALSET
            WHERE   EVL_YYYY    = ?
	        AND     ENO_NO      = ?
			ORDER BY GOAL_NO
            ]]>
        </query>
    </sql>



    <!-- 평가자 조회 -->
    <sql name="VLUL080_SHR_01">
        <description>평가자 조회</description>
        <query>
            <![CDATA[
            SELECT	EVL_YYYY, GUBUN, ENO_NO, 
				            EVL_ENO_NO, 
				            ASNHR.SF_GET_ENONAME('01', EVL_ENO_NO) AS EVL_ENO_NM,
				            ASNHR.SF_GET_ENODPT(EVL_ENO_NO) AS DPT_NM,
				            ASNHR.SF_GET_ENOJOB(EVL_ENO_NO) AS JOB_NM,
				            EVL_NO,
				            STATUS, DECODE(STATUS,'Y','결재완료','N','부결','미결') AS STATUS_NM,
				            APP_YMD,
				            REMARK
			FROM    ASNHR.T_EV_APPROVAL
            WHERE   EVL_YYYY    = ?
	        AND     ENO_NO      = ?
			ORDER BY EVL_NO DESC
            ]]>
        </query>
    </sql>
    

    <!-- 목표설정 전체삭제 -->
    <sql name="VLUL080_DEL_01">
        <description>목표설정 전체삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_GOALSET
            WHERE  EVL_YYYY = ?			   	--해당년도
            AND    ENO_NO   	= ?				--피평가자사번
            ]]>
        </query>
    </sql>


    <!-- 목표설정 등록 -->
    <sql name="VLUL080_INS">
        <description>목표설정 등록</description>
        <query>
            <![CDATA[
            MERGE INTO ASNHR.T_EV_GOALSET A
            USING
			(SELECT ? AS EVL_YYYY, ? AS ENO_NO, ? AS GOAL_NO FROM DUAL) B
			   ON ( A.EVL_YYYY = B.EVL_YYYY
				  	AND A.ENO_NO 	= B.ENO_NO
				  	AND A.GOAL_NO 	= B.GOAL_NO)
			WHEN MATCHED THEN
			UPDATE SET
				   A.CATEGORY	= ?,             -- 구분
                   A.FORMULA      = ?,             -- 산출식
                   A.GOAL_YMD   	= ?,             -- 목표설정일                   
                   A.WEIGHT   		= ?,             -- 비중
                   A.UPT_MAN      = ?,             -- 최종수정자
                   A.UPT_YMD      = SYSDATE        -- 최종수정일시
			 WHEN NOT MATCHED THEN
            INSERT
                ( EVL_YYYY, ENO_NO, GOAL_NO, CATEGORY, FORMULA, GOAL_YMD,
                  WEIGHT,  IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                (	?,	?,	?,	?,	?,	?,  ?,  ?,	 sysdate,	?, 	 sysdate )
            ]]>
        </query>
    </sql>


    <!-- 전산제출 -->
    <sql name="VLUL080_INS_01">
        <description>전산제출</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_GOALSET
			SET APP_STATUS  = 'R',
			           UPT_YMD = SYSDATE,
					   UPT_MAN = ?
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?	   

            ]]>
        </query>
    </sql>


    <!-- 목표설정 승인상태 업데이트 -->
    <sql name="VLUL080_UPT_01">
        <description>목표설정 승인상태 업데이트</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_GOALSET
            SET  APP_STATUS	= ?,		-- 승인상태(R:미결,Y:결재완료,N:부결)
                   UPT_MAN	= ?,				-- 최종수정자
                   UPT_YMD  = SYSDATE	-- 최종수정일시
            WHERE  EVL_YYYY = '2014'	--해당년도
            AND ENO_NO = ?					--피평가자사번
            ]]>
        </query>
    </sql>


    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정 정보를 조회 -->
    <sql name="VLUL090_SHR">
        <description>목표설정 조회</description>
        <query>
            <![CDATA[
            SELECT  DISTINCT A.EMPNO AS ENO_NO, B.APP_STATUS,
            			DECODE(B.APP_STATUS,'Y','결재완료','N','부결','R','작성완료','작성중') AS STATUS_NM,
            			 ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS ENO_NM,
						 ASNHR.SF_GET_ENOHEAD(A.EMPNO) AS HEAD_NM,             			 
            			 ASNHR.SF_GET_ENODPT(A.EMPNO) AS DPT_NM,
				         ASNHR.SF_GET_ENOJOB(A.EMPNO) AS JOB_NM            			 
            FROM    ASNHR.T_EV_EQHEMP A, ASNHR.T_EV_GOALSET B
            WHERE A.EMPNO = B.ENO_NO
            AND A.EVAYM    = '201404'
	        AND A.EMPNOH      = ?
	        [1]

            ]]>
        </query>
    </sql>


<!-- 고과점수조정 -->
<!--
***********************************************************************
* @UseCase     : VLUL060
* @description : 고과점수조정
***********************************************************************
* 2013/11/18      정하나        최초작성.
***********************************************************************
-->


    <!-- 업적평가 정규직 고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2',A.HEAD_CD) AS HEADNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD), ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD), ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,

				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				[1]
				[2]
				AND A.PAYGRD NOT IN ('300','700','890') 
				AND A.JOBREF!='8'
				AND ( A.DUTY_CD NOT IN ('07','17','05','20','41') OR A.DUTY_CD IS NULL ) -- 정규직이면서, 팀장,  현장소장 제외
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    
    <!-- 업적평가 PJT 고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR_PJT">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.HEAD_CD,
				DECODE(A.HEAD_CD,ASNHR.SF_GET_DPTNAME('01', 'B2',A.HEAD_CD),A.HEAD_CD,ASNHR.SF_GET_DPTNAME('01', 'B2',A.HEAD_CD)) AS HEADNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,

				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				[1]
				[2]
				AND A.PAYGRD NOT IN ('300','700','890') 
				AND A.JOBREF ='8'
				AND ( A.DUTY_CD !='20' OR A.DUTY_CD IS NULL ) -- PJT 이면서   현장소장 제외
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    
    <!-- 업적평가 팀장  고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR_DPT">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.HEAD_CD,
				DECODE(A.HEAD_CD,ASNHR.SF_GET_DPTNAME('01', 'B2',A.HEAD_CD),A.HEAD_CD,ASNHR.SF_GET_DPTNAME('01', 'B2',A.HEAD_CD)) AS HEADNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,

				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
				
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				[1]
				[2]
				AND A.PAYGRD NOT IN ('300','700','890') 
				AND A.DUTY_CD IN ('41') -- 정규직이면서, 팀장
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    
    
    <!-- 업적평가 현장소장  고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR_CON">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.HEAD_CD,
				DECODE(A.HEAD_CD,ASNHR.SF_GET_DPTNAME('01', 'B2',A.HEAD_CD),A.HEAD_CD,ASNHR.SF_GET_DPTNAME('01', 'B2',A.HEAD_CD)) AS HEADNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,

				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				[1]
				[2]
				AND A.PAYGRD NOT IN ('300','700','890') 
				AND A.DUTY_CD='20' -- 현장소장
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>



    <!-- 계약직 고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR_01">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				RTRIM(F.EMPNOH) EMPNOH_1,	ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, COALESCE(A.AVG1,0) AVG1,
				RTRIM(G.EMPNOH) EMPNOH_2,	ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, COALESCE(A.AVG2,0) AVG2,
				RTRIM(H.EMPNOH) EMPNOH_3,	ASNHR.SF_GET_ENONAME('01', H.EMPNOH) AS EMPNMH_3,
				COALESCE(A.SCR3,0) SCR3, COALESCE(A.AVG3,0) AVG3,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.4+COALESCE(A.SCR2,0)*0.3+COALESCE(A.SCR3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*0.6+COALESCE(A.SCR2,0)*0.4+COALESCE(A.SCR3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0+COALESCE(A.SCR3,0)*0)
				ELSE 0 END AS SCRAVG ,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.4+COALESCE(A.AVG2,0)*0.3+COALESCE(A.AVG3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*0.6+COALESCE(A.AVG2,0)*0.4+COALESCE(A.AVG3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0+COALESCE(A.AVG3,0)*0)
				ELSE 0 END AS CORAVG,
				'0' AS CORAVG2,
				COALESCE(P.DPTAVG,0) DPTAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				COALESCE(Y.CORAVG_SUM,0) CORAVG_SUM,
				COALESCE(Y.TOTAVG_SUM,0) TOTAVG_SUM,
				A.GRADE,  A.GRADE2 , A.GRADE3
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                FULL JOIN ASNHR.T_EV_EQHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO = H.EMPNO AND H.EVASEQ = 3
				FULL JOIN (
					SELECT
					X.EMPNO,
					X.CORAVG/X.CNT AS CORAVG_SUM,
					X.TOTAVG/X.CNT AS TOTAVG_SUM
					FROM (
						SELECT
						A.EMPNO,COUNT(A.EMPNO)CNT, SUM(COALESCE(A.TOTAVG,0)) AS TOTAVG,  SUM(COALESCE(A.TOTAVG,0)) AS CORAVG
						FROM ASNHR.T_EV_EQEMP A
						FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO=F.EMPNO AND F.EVASEQ=1
						FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO=G.EMPNO AND G.EVASEQ=2
						FULL JOIN ASNHR.T_EV_EQHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO=H.EMPNO AND H.EVASEQ=3
						WHERE A.EVAYM LIKE ?
						AND A.TOTAVG!=0
						GROUP BY A.EMPNO
					) X
				) Y ON Y.EMPNO = A.EMPNO
				FULL JOIN
				(
				SELECT A.EVAYM, A.EMPNO,
					ROUND(COALESCE(
					(A.AVG1+A.AVG2+A.AVG3+A.AVG4+A.AVG5
					+A.AVG6+A.AVG7+A.AVG8+A.AVG9+A.AVG10
					+A.AVG11+A.AVG12+A.AVG13+A.AVG14+A.AVG15)/V.CNT,0),4) AS DPTAVG
				FROM ASNHR.T_EV_EQEMP_DPT A
				FULL JOIN (
					SELECT EVAYM, EMPNO, COUNT(EMPNOH) CNT
					FROM ASNHR.T_EV_EQHEMP_DPT
					WHERE EVAYM = ?
					GROUP BY EVAYM, EMPNO
					)V ON A.EVAYM = V.EVAYM AND A.EMPNO = V.EMPNO
				)P ON P.EVAYM = A.EVAYM AND P.EMPNO = A.EMPNO
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND (F.EMPNOH LIKE '%'||?||'%' OR G.EMPNOH LIKE '%'||?||'%' OR H.EMPNOH LIKE '%'||?||'%')
				[1]
				[2]
				AND A.PAYGRD IN ('300','700','890')
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>



    <!-- 업적평가 정규직 고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR_02">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE	
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND A.PAYGRD NOT IN ('300','700','890')
				AND A.JOBREF!='8'
				AND (A.DUTY_CD NOT IN ('05','07','17','20','41') OR A.DUTY_CD IS NULL ) -- 정규직
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 업적평가 PJT 고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR_02_PJT">
        <description>PJT 고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE	
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND A.PAYGRD NOT IN ('300','700','890')
				AND A.JOBREF='8'
				AND (A.DUTY_CD !='20' OR A.DUTY_CD IS NULL ) -- PJT이면서 현장소장 제외
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    
    <!-- 업적평가 팀장  고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR_02_DPT">
        <description>팀장 고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE	
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND A.PAYGRD NOT IN ('300','700','890')
				AND A.JOBREF!='8'
				AND A.DUTY_CD IN ('05','07','17','41') -- 팀장
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    
    <!-- 업적평가 현장소장  고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR_02_CON">
        <description>현장소장 고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE	
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND A.PAYGRD NOT IN ('300','700','890')
				AND A.DUTY_CD ='20' --현장소장
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 계약직 고과점수 조정 조회 한다. -->
    <sql name="VLUL060_SHR_03">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				RTRIM(F.EMPNOH) EMPNOH_1,	ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, COALESCE(A.AVG1,0) AVG1,
				RTRIM(G.EMPNOH) EMPNOH_2,	ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, COALESCE(A.AVG2,0) AVG2,
				RTRIM(H.EMPNOH) EMPNOH_3,	ASNHR.SF_GET_ENONAME('01', H.EMPNOH) AS EMPNMH_3,
				COALESCE(A.SCR3,0) SCR3, COALESCE(A.AVG3,0) AVG3,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.4+COALESCE(A.SCR2,0)*0.3+COALESCE(A.SCR3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*0.6+COALESCE(A.SCR2,0)*0.4+COALESCE(A.SCR3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0+COALESCE(A.SCR3,0)*0)
				ELSE 0 END AS SCRAVG ,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.4+COALESCE(A.AVG2,0)*0.3+COALESCE(A.AVG3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*0.6+COALESCE(A.AVG2,0)*0.4+COALESCE(A.AVG3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0+COALESCE(A.AVG3,0)*0)
				ELSE 0 END AS CORAVG,
				COALESCE(P.DPTAVG,0) DPTAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				COALESCE(Y.CORAVG_SUM,0) CORAVG_SUM,
				COALESCE(Y.TOTAVG_SUM,0) TOTAVG_SUM,
				A.GRADE,  A.GRADE2 , A.GRADE3
			FROM
                ASNHR.T_EV_EQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                FULL JOIN ASNHR.T_EV_EQHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO = H.EMPNO AND H.EVASEQ = 3
				FULL JOIN (
					SELECT
					X.EMPNO,
					X.CORAVG/X.CNT AS CORAVG_SUM,
					X.TOTAVG/X.CNT AS TOTAVG_SUM
					FROM (
						SELECT
						A.EMPNO,COUNT(A.EMPNO)CNT, SUM(COALESCE(A.TOTAVG,0)) AS TOTAVG,  SUM(COALESCE(A.TOTAVG,0)) AS CORAVG
						FROM ASNHR.T_EV_EQEMP A
						FULL JOIN ASNHR.T_EV_EQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO=F.EMPNO AND F.EVASEQ=1
						FULL JOIN ASNHR.T_EV_EQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO=G.EMPNO AND G.EVASEQ=2
						FULL JOIN ASNHR.T_EV_EQHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO=H.EMPNO AND H.EVASEQ=3
						WHERE A.EVAYM LIKE ?
						AND A.TOTAVG!=0
						GROUP BY A.EMPNO
					) X
				) Y ON Y.EMPNO = A.EMPNO
				FULL JOIN
				(
				SELECT A.EVAYM, A.EMPNO,
					ROUND(COALESCE(
					(A.AVG1+A.AVG2+A.AVG3+A.AVG4+A.AVG5
					+A.AVG6+A.AVG7+A.AVG8+A.AVG9+A.AVG10
					+A.AVG11+A.AVG12+A.AVG13+A.AVG14+A.AVG15)/V.CNT,0),4) AS DPTAVG
				FROM ASNHR.T_EV_EQEMP_DPT A
				FULL JOIN (
					SELECT EVAYM, EMPNO, COUNT(EMPNOH) CNT
					FROM ASNHR.T_EV_EQHEMP_DPT
					WHERE EVAYM = ?
					GROUP BY EVAYM, EMPNO
					)V ON A.EVAYM = V.EVAYM AND A.EMPNO = V.EMPNO
				)P ON P.EVAYM = A.EVAYM AND P.EMPNO = A.EMPNO
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND (F.EMPNOH LIKE '%'||?||'%' OR G.EMPNOH LIKE '%'||?||'%' OR H.EMPNOH LIKE '%'||?||'%')
				AND A.PAYGRD IN ('300','700','890')
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>


    <!-- 정규직 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUL060_SHR_04">
        <description>정규직  등급 인원수 조회</description>
        <query>
            <![CDATA[
            SELECT
				Y.HEAD_CD, Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT X.HEAD_CD, ASNHR.SF_GET_EQ_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'1') CNT, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, 
						A.EMPNO, A.PAYGRD, 
						A.TOTAVG,
                        CASE  
                             WHEN A.EMPNO IN ('2040025','2070039','2080009','2080019','2080028','2100002','2100004','2110002','2130015','2140032','2150001') THEN 'C000' --공사관리는 경영지원본부 등급
                             ELSE A.HEAD_CD END HEAD_CD,
                        CASE WHEN (A.PAYGRD>='140' AND A.PAYGRD<='210') THEN '200'
                        	 WHEN (A.PAYGRD>='220' AND A.PAYGRD<='270') THEN '220'
                             ELSE '999' END PAYGRD2						
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					  AND A.PAYGRD NOT IN ('300','700','890')
					  AND A.JOBREF!='8'
					  AND A.EMPNO NOT IN ('1990099','2040080','2080003','2140002')
					  AND (A.DUTY_CD NOT IN ('05','07','17','20','41') OR A.DUTY_CD IS NULL) --정규직
				) X
			WHERE X.EVAYM =?  
			  AND X.HEAD_CD <>'A600'
			)Y
			ORDER BY Y.HEAD_CD,Y.PAYGRD2
            ]]>
        </query>
    </sql>
    
    <!-- PJT 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUL060_SHR_04_PJT">
        <description>PJT 등급 인원수 조회</description>
        <query>
            <![CDATA[
            SELECT
				Y.HEAD_CD, Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT X.HEAD_CD, ASNHR.SF_GET_EQ_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'2') CNT, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, 
						A.EMPNO, A.PAYGRD, 
						A.TOTAVG,
                        A.HEAD_CD,
                        CASE WHEN (A.PAYGRD>='140' AND A.PAYGRD<='210') THEN '200'
                        	 WHEN (A.PAYGRD>='220' AND A.PAYGRD<='270') THEN '200'
                             ELSE '999' ENDPAYGRD2						
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					  AND A.PAYGRD NOT IN ('300','700','890')
					  AND A.JOBREF='8'
					  AND (A.DUTY_CD !='20' OR A.DUTY_CD IS NULL) --정규직
				) X
			WHERE X.EVAYM =?  
			  AND X.HEAD_CD <>'A600'
			)Y
			ORDER BY Y.HEAD_CD,Y.PAYGRD2
           
            ]]>
        </query>
    </sql>
    
    <!-- 팀장  등급 인원수 조회 한다. -->
    <sql name="VLUL060_SHR_04_DPT">
        <description>팀장  등급 인원수 조회</description>
        <query>
            <![CDATA[
            SELECT
				Y.HEAD_CD, Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*17.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*17.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*17.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*17.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT X.HEAD_CD, ASNHR.SF_GET_EQ_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'3') CNT, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, 
						A.EMPNO, A.PAYGRD, 
						A.TOTAVG,
                        'A999' HEAD_CD,
                        '200' PAYGRD2	
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					  AND A.PAYGRD NOT IN ('300','700','890')
					  AND A.JOBREF!='8'
					  AND A.EMPNO NOT IN ('1990099')   
					  AND A.DUTY_CD IN ('05','07','17','41') 
				) X
			WHERE X.EVAYM =?  
			  AND X.HEAD_CD <>'A600'
			)Y
			ORDER BY Y.HEAD_CD,Y.PAYGRD2
           
            ]]>
        </query>
    </sql>
    
    <!-- 현장소장   등급 인원수 조회 한다. -->
    <sql name="VLUL060_SHR_04_CON">
        <description>현자오장  등급 인원수 조회</description>
        <query>
            <![CDATA[
            SELECT
				Y.HEAD_CD, Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT X.HEAD_CD, ASNHR.SF_GET_EQ_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'4') CNT, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, 
						A.EMPNO, A.PAYGRD, 
						A.TOTAVG,
                        'A999' HEAD_CD,
                        '200' PAYGRD2			
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					  AND A.PAYGRD NOT IN ('300','700','890')
					  AND A.DUTY_CD ='20'
				) X
			WHERE X.EVAYM =?  
			  AND X.HEAD_CD <>'A600'
			)Y
			ORDER BY Y.HEAD_CD,Y.PAYGRD2
           
            ]]>
        </query>
    </sql>


    <!-- 계약직 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUL060_SHR_05">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) )AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_EQ_MAXCNT2(X.EVAYM, X.PAYGRD2) CNT, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD, A.TOTAVG,

						CASE WHEN (B.DUTY_CD IN ('17','29','34') OR  			--//2013년 상반기에는 부서장을  제외 조재균 차장님이 부서장이라서
						--CASE WHEN (B.DUTY_CD IN ('05','17','29','34') OR  	--//2012년 상반기에는 부서장 대행 제외
						--CASE WHEN (B.DUTY_CD IN ('05','17','29') OR  //2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
 						(B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR (A.PAYGRD >='140' AND A.PAYGRD<='170') ) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ? AND A.PAYGRD IN ('300','700','890')
				) X
			WHERE X.EVAYM =? AND X.PAYGRD2 IN ('300','700','890')
			)Y
			ORDER BY Y.PAYGRD2
            ]]>
        </query>
    </sql>


    <!-- 정규직 직급별 rank 조회 한다. -->
    <sql name="VLUL060_SHR_06">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
            SELECT
				Y.EVAYM, Y.EMPNO, Y.HEAD_CD, Y.PAYGRD, Y.PAYGRD2,
				Y.TOTAVG, Y.RNK, Y.CNT, ''GRADE
			FROM(
				SELECT
					X.EVAYM, X.EMPNO, X.HEAD_CD,X.PAYGRD, X.PAYGRD2, X.TOTAVG,
					RANK() OVER( PARTITION BY X.HEAD_CD, X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_EQ_MAXCNT2015(X.EVAYM,X.HEAD_CD, X.PAYGRD2,'1') CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, 
						A.EMPNO, A.PAYGRD, 
						A.TOTAVG,
						CASE  
						     WHEN A.EMPNO IN ('2040025','2070039','2080009','2080019','2080028','2100002','2100004','2110002','2130015','2140032','2150001') THEN 'C000' --공사관리는 경영지원본부 등급 
						     ELSE A.HEAD_CD END HEAD_CD,
						     
                        CASE WHEN (A.PAYGRD>='140' AND A.PAYGRD<='210') THEN '200'
                        	 WHEN (A.PAYGRD>='220' AND A.PAYGRD<='270') THEN '220'
                             ELSE '999' END PAYGRD2					
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					  AND A.PAYGRD NOT IN ('300','700','890')
					  AND A.JOBREF!='8'
					  AND A.EMPNO NOT IN ('1990099','2040080','2080003','2140002')
					  AND (A.DUTY_CD NOT IN ('05','07','17','20','41') OR A.DUTY_CD IS NULL) --정규직
				) X
				WHERE X.EVAYM = ?  
				  AND X.HEAD_CD<>'A600'
			) Y
			ORDER BY Y.HEAD_CD,Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>
    
    <!-- PJT rank 조회 한다. -->
    <sql name="VLUL060_SHR_06_PJT">
        <description>PJT 등급 인원수 조회</description>
        <query>
            <![CDATA[
            SELECT
				Y.EVAYM, Y.EMPNO, Y.HEAD_CD, Y.PAYGRD, Y.PAYGRD2,
				Y.TOTAVG, Y.RNK, Y.CNT, ''GRADE
			FROM(
				SELECT
					X.EVAYM, X.EMPNO, X.HEAD_CD, X.PAYGRD, X.PAYGRD2, X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_EQ_MAXCNT2015(X.EVAYM,X.HEAD_CD, X.PAYGRD2,'2') CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, 
						A.EMPNO, A.PAYGRD, 
						A.TOTAVG,
						A.HEAD_CD,
                        CASE WHEN (A.PAYGRD>='140' AND A.PAYGRD<='210') THEN '200'
                        	 WHEN (A.PAYGRD>='220' AND A.PAYGRD<='270') THEN '200'
                             ELSE '999' END PAYGRD2					
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					  AND A.PAYGRD NOT IN ('300','700','890')
					  AND A.JOBREF='8'
					  AND (A.DUTY_CD !='20' OR A.DUTY_CD IS NULL) --PJT이고 현장소장 제외
				) X
				WHERE X.EVAYM = ?  
				  AND X.HEAD_CD<>'A600'
			) Y
			ORDER BY Y.HEAD_CD,Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>
    
    <!-- 팀장  rank 조회 한다. -->
    <sql name="VLUL060_SHR_06_DPT">
        <description>팀장  등급 인원수 조회</description>
        <query>
            <![CDATA[
            SELECT
				Y.EVAYM, Y.EMPNO, Y.HEAD_CD, Y.PAYGRD, Y.PAYGRD2,
				Y.TOTAVG, Y.RNK, Y.CNT, ''GRADE
			FROM(
				SELECT
					X.EVAYM, X.EMPNO, X.HEAD_CD, X.PAYGRD, X.PAYGRD2, X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_EQ_MAXCNT2015(X.EVAYM,X.HEAD_CD, X.PAYGRD2,'3') CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, 
						A.EMPNO, A.PAYGRD, 
						A.TOTAVG,
						'A999' HEAD_CD,
                        '200' PAYGRD2			
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					  AND A.PAYGRD NOT IN ('300','700','890')
					  AND A.JOBREF!='8'
					  AND A.EMPNO NOT IN ('1990099')   
					  AND A.DUTY_CD IN ('05','07','17','41') --팀장
				) X
				WHERE X.EVAYM = ?  
				  AND X.HEAD_CD<>'A600'
			) Y
			ORDER BY Y.HEAD_CD,Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>
    
    <!-- 현장소장  rank 조회 한다. -->
    <sql name="VLUL060_SHR_06_CON">
        <description>현장소장  등급 인원수 조회</description>
        <query>
            <![CDATA[
            SELECT
				Y.EVAYM, Y.EMPNO, Y.HEAD_CD, Y.PAYGRD, Y.PAYGRD2,
				Y.TOTAVG, Y.RNK, Y.CNT, ''GRADE
			FROM(
				SELECT
					X.EVAYM, X.EMPNO, X.HEAD_CD, X.PAYGRD, X.PAYGRD2, X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_EQ_MAXCNT2015(X.EVAYM,X.HEAD_CD, X.PAYGRD2,'4') CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, 
						A.EMPNO, A.PAYGRD, 
						A.TOTAVG,
						'A999' HEAD_CD,
                        '200' PAYGRD2					
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					  AND A.PAYGRD NOT IN ('300','700','890')
					  AND A.DUTY_CD ='20'--현장소장
				) X
				WHERE X.EVAYM = ?  
				  AND X.HEAD_CD<>'A600'
			) Y
			ORDER BY Y.HEAD_CD,Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>

    <!-- 계약직 직급별 rank 조회 한다. -->
    <sql name="VLUL060_SHR_07">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, Y.EMPNO, Y.PAYGRD, Y.PAYGRD2,
				Y.TOTAVG, Y.RNK, Y.CNT, ''GRADE
			FROM(
				SELECT
					X.EVAYM, X.EMPNO, X.PAYGRD, X.PAYGRD2, X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_EQ_MAXCNT2(X.EVAYM, X.PAYGRD2) CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD, A.TOTAVG,

						CASE WHEN (B.DUTY_CD IN ('17','29','34') OR  			--//2013년 상반기에는 부서장을  제외 조재균 차장님이 부서장이라서
						--CASE WHEN (B.DUTY_CD IN ('05','17','29','34') OR  	--//2012년 상반기에는 부서장 대행 제외
						-- CASE WHEN (B.DUTY_CD IN ('05','17','29') OR  //2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
						(B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR  (A.PAYGRD >='140' AND A.PAYGRD<='170')) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_EQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  AND A.PAYGRD IN ('300','700','890')
				) X
				WHERE X.EVAYM = ?  AND X.PAYGRD2 IN ('300','700','890')
			) Y
			ORDER BY Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>


    <!-- 등급생성 저장 한다. -->
    <sql name="VLUL060_SAV">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_EQEMP
			SET
			GRADE2 = ?,
			GRADE3 = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 실행결과 저장 한다. -->
    <sql name="VLUL060_SAV_EXE">
        <description>실행결과 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_EQEMP
			SET
			TOTAVG = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 등급생성 저장 한다. -->
    <sql name="VLUL060_SAV_GRD">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_EQEMP
			SET
			GRADE = ?,
			GRADE2 = ?,
			GRADE3 = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>

<!-- 업적평가고과자지정 -->
<!--
***********************************************************************
* @UseCase     : VLUL050
* @description : 업적평가고과자지정
***********************************************************************
* 2013/11/11     정하나       최초작성
***********************************************************************
-->
  <!-- 고과자지정 조회 한다. -->
    <sql name="VLUL050_SHR">
        <description>고과자지정 조회</description>
        <query>
            <![CDATA[
			SELECT
				X.CHK, X.EVAYM, X.EMPNO,
				ASNHR.SF_GET_ENONAME('01', X.EMPNO) AS EMPNMK,
				X.DEPTCD,
				DECODE(X.DEPTCD,SF_GET_DPTNAME('01', 'A4',X.DEPTCD),SF_GET_DPTNAME('01', 'A6',X.DEPTCD),SF_GET_DPTNAME('01', 'A4',X.DEPTCD))AS DEPTNM,
				X.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(X.PAYGRD)) AS GRDNM,
				X.GRSTRTDT,
				X.STRTDT,
				MAX(X.SEQ1)SEQ1,
				CASE WHEN MAX(H.ENO_NM)='' OR  MAX(H.ENO_NM) IS NULL THEN  '' ELSE MAX(H.ENO_NM) END EMPNMK1,
				MAX(X.SEQ2)SEQ2,
				CASE WHEN MAX(I.ENO_NM)='' OR  MAX(I.ENO_NM) IS NULL THEN  '' ELSE MAX(I.ENO_NM) END EMPNMK2,
				MAX(X.SEQ3)SEQ3,
				CASE WHEN MAX(J.ENO_NM)='' OR  MAX(J.ENO_NM) IS NULL THEN  '' ELSE MAX(J.ENO_NM) END EMPNMK3,
				MAX(X.SEQ4)SEQ4,
				CASE WHEN MAX(K.ENO_NM)='' OR  MAX(K.ENO_NM) IS NULL THEN  '' ELSE MAX(K.ENO_NM) END EMPNMK4
			FROM
				(SELECT
					'F' CHK,
					A.EVAYM,
					A.EMPNO,
					A.DEPTCD,
					A.PAYGRD,
					A.GRSTRTDT,A.STRTDT,
				    CASE B.EVASEQ WHEN 1 THEN B.EMPNOH END AS SEQ1,
				    CASE B.EVASEQ WHEN 2 THEN B.EMPNOH END AS SEQ2,
				    CASE B.EVASEQ WHEN 3 THEN B.EMPNOH END AS SEQ3,
				    CASE B.EVASEQ WHEN 4 THEN B.EMPNOH END AS SEQ4
				FROM
					T_EV_EQEMP A,
					T_EV_EQHEMP B,
					T_CM_PERSON C
				WHERE
					A.EVAYM = B.EVAYM
					AND A.EMPNO = C.ENO_NO
					AND B.EMPNO = C.ENO_NO
					AND A.EMPNO = B.EMPNO
					AND A.EVAYM = ?
          	UNION ALL
                SELECT
					'F' CHK,
					A.EVAYM,
					A.EMPNO,
					A.DEPTCD,
					A.PAYGRD,
					A.GRSTRTDT,A.STRTDT,
                    ''SEQ1,''SEQ2,''SEQ3,''SEQ4
                FROM
                    ASNHR.T_EV_EQEMP A,
                    ASNHR.T_CM_PERSON C
                WHERE
                    A.EMPNO = C.ENO_NO
                    AND A.EVAYM = ?

				) X,
			T_CM_PERSON H,
			T_CM_PERSON I,
			T_CM_PERSON J,
			T_CM_PERSON K
		WHERE X.SEQ1 = H.ENO_NO(+)
			AND X.SEQ2 = I.ENO_NO(+)
			AND X.SEQ3 = J.ENO_NO(+)
			AND X.SEQ4 = K.ENO_NO(+)
			AND X.DEPTCD LIKE '%'||?||'%'
			AND X.PAYGRD LIKE '%'||?||'%'
			AND X.EMPNO LIKE '%'||?||'%'
		GROUP BY X.CHK, X.EVAYM, X.EMPNO,X.DEPTCD, X.PAYGRD, X.GRSTRTDT,X.STRTDT
		ORDER BY X.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 고과자지정 조회 한다. -->
    <sql name="VLUL050_SHR_01">
        <description>고과자지정 조회</description>
        <query>
            <![CDATA[
			SELECT DISTINCT
				'' CHKOUT,

				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.EMPNOH,
				ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS EMPNMKH,
				A.EVASEQ,
				A.DEPTCD,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.DEPTNM AS DEPTNM
			FROM
				T_EV_EQHEMP A,
				T_CM_PERSON B
			WHERE
                A.EMPNOH = B.ENO_NO
				AND A.EVAYM = ?
				AND B.DPT_CD LIKE '%'||?||'%'
				AND B.JOB_CD LIKE '%'||?||'%'
				AND B.ENO_NO LIKE '%'||?||'%'
				AND A.EMPNOH LIKE '%'||?||'%'
				AND A.EVASEQ LIKE '%'||?||'%'

			ORDER BY A.EMPNO

            ]]>
        </query>
    </sql>



    <!-- 고과자 저장 한다. -->
    <sql name="VLUL050_SAV">
        <description>고과자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EQHEMP
                 ( EVAYM,EMPNOH,EMPNO,EVASEQ,DEPTCD,DEPTNM,PAYGRD
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 ?
                 )

            ]]>
        </query>
    </sql>


    <!-- 고과자 삭제 한다. -->
    <sql name="VLUL050_DEL">
        <description>고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_EQHEMP
			WHERE EVAYM = ?
				AND EMPNOH = ?
				AND EMPNO = ?
				AND EVASEQ = ?
            ]]>
        </query>
    </sql>

<!-- 피평가자 설정 -->
<!--
***********************************************************************
* @UseCase     : VLUL040
* @description :  업적평가피평가자 설정조회
***********************************************************************
* 2013/11/18     정하나       최초작성
***********************************************************************
-->

  <!-- 일반 피고과자선정 조회 한다. -->
    <sql name="VLUL040_SHR">
        <description>일반 피고과자선정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO AS ENO_NO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS ENO_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
                A.GRSTRTDT,
				A.STRTDT,
				A.WRDT,
                A.LAMDT,
                A.RECDIV,
                ASNHR.SF_GET_COMMNAME('01', 'C1', A.RECDIV) AS RECNM,
                A.JOBKIND,
				ASNHR.SF_GET_COMMNAME('01', 'SD', A.JOBREF) AS JOBREF
			FROM ASNHR.T_EV_EQEMP A
            WHERE      A.EVAYM = ?
            ORDER BY A.PAYGRD
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자선정 조회 한다. -->
    <sql name="VLUL040_SHR_01">
        <description>부서장 피고과자선정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO AS ENO_NO,
				B.ENO_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				TO_CHAR(B.HIRG_YMD, 'YYYYMMDD')  AS GRSTRTDT,
				TO_CHAR(B.HIR_YMD, 'YYYYMMDD')  AS STRTDT,
				TO_CHAR(B.JPR_YMD, 'YYYYMMDD')  AS LAMDT,
				A.WRDT,
                A.RECDIV,
                ASNHR.SF_GET_COMMNAME('01', 'C1', A.RECDIV) AS RECNM,
                A.JOBKIND,
				ASNHR.SF_GET_COMMNAME('01', 'SD', A.JOBREF) AS JOBREF
			FROM ASNHR.T_EV_EQEMP_DPT A, ASNHR.T_CM_PERSON B
            WHERE  A.EMPNO = B.ENO_NO
            	AND A.EVAYM = ?
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 기생성자 조회 한다. -->
    <sql name="VLUL040_SHR_02">
        <description>일반 피고과자 기생성자 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO AS ENO_NO,
				B.ENO_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.GRSTRTDT,    	A.STRTDT,    SUBSTR(A.WRDT,1,6) WRDT,
				A.TOTAVG,
				A.SCR1,      	A.AVG1,       	A.SCR2,        	A.AVG2,
				A.SCR3,     	A.AVG3,      	A.SCR4,       	A.AVG4
			FROM ASNHR.T_EV_EQEMP A, ASNHR.T_CM_PERSON B
            WHERE  A.EMPNO = B.ENO_NO
            	AND A.EVAYM = ?
            ORDER BY A.PAYGRD
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 생성 대상자 조회 한다. -->
    <sql name="VLUL040_SHR_12">
        <description>일반 피고과자 생성 대상자 조회</description>
        <query>
            <![CDATA[

			SELECT    ? AS WRDT,
                A.ENO_NO,
                ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
                A.DPT_CD, DECODE(A.DPT_CD,SF_GET_DPTNAME('01', 'A4',A.DPT_CD), ASNHR.SF_GET_DPTNAME('01', 'A6',A.DPT_CD),SF_GET_DPTNAME('01', 'A4',A.DPT_CD)) AS DEPTNM,
                A.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.JOB_CD)) AS GRDNM,
                TO_CHAR(A.HIRG_YMD, 'YYYYMMDD')  AS HIRG_YMD,
                TO_CHAR(A.HIR_YMD, 'YYYYMMDD')  AS HIR_YMD,
                TO_CHAR(A.JPR_YMD, 'YYYYMMDD')  AS JPR_YMD,
                A.OCC_CD, A.GBN_CD,
                A.HIR_CD,
                A.HEAD_CD,
				A.DUTY_CD
            FROM ASNHR.T_CM_PERSON A, ASNHR.T_CM_AHISTORY B
            WHERE A.RET_YMD IS NULL
                AND A.ENO_NO = B.ENO_NO AND B.SEQ_NO = '1' AND NOT (B.SEQ_NO = '1' AND  B.APP_CD = 'A1' AND B.STR_YMD >= ADD_MONTHS(SYSDATE,-2))
                AND A.FINJ_CD IN ('L11','L24','L30')
                AND SUBSTR(A.ENO_NO,0,1) < '5'
                AND (A.JOB_CD BETWEEN '140' AND '250' )

            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 생성 대상자 조회 한다. -->
    <sql name="VLUL040_SHR_13">
        <description>부서장 피고과자 생성 대상자 조회</description>
        <query>
            <![CDATA[
			SELECT ? AS WRDT,
				A.ENO_NO,
				ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
				A.DPT_CD, DECODE(A.DPT_CD,SF_GET_DPTNAME('01', 'A4',A.DPT_CD),SF_GET_DPTNAME('01', 'A6',A.DPT_CD),SF_GET_DPTNAME('01', 'A4',A.DPT_CD)) AS DEPTNM,
				A.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.JOB_CD)) AS GRDNM,
				TO_CHAR(A.HIRG_YMD, 'YYYYMMDD')  AS HIRG_YMD,
				TO_CHAR(A.HIR_YMD, 'YYYYMMDD')  AS HIR_YMD,
				TO_CHAR(A.JPR_YMD, 'YYYYMMDD')  AS JPR_YMD,
				A.OCC_CD, A.GBN_CD,
				A.HIR_CD
			FROM ASNHR.T_CM_PERSON A
			WHERE A.RET_YMD IS NULL
				AND A.FINJ_CD IN ('L11','L24','L30')
				AND (A.DUTY_CD IN ('05','17','34') OR (A.DUTY_CD = '20' AND A.JOB_CD BETWEEN '140' AND '170'))
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 기생성자 저장 한다. -->
    <sql name="VLUL040_SAV_01">
        <description>일반 피고과자 기생성자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EQEMP
                 ( EVAYM,	EMPNO, 		DEPTCD,		PAYGRD,		GRSTRTDT,
                   STRTDT,  WRDT,  		LAMDT,   	DEPREF,		RECDIV,  	JOBREF, HEAD_CD, DUTY_CD
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,
                   ?, 	 ?,		?,		?,		?, 		?, ? ,?
                 )
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 기생성자 저장 한다. -->
    <sql name="VLUL040_SAV_02">
        <description>부서장 피고과자 기생성자 저장</description>
        <query>
            <![CDATA[

            INSERT INTO ASNHR.T_EV_EQEMP_DPT
                 ( EVAYM,	EMPNO, 		DEPTCD,		PAYGRD,
                   WRDT,  	DEPREF,		RECDIV,  	GRSREF
                 )
            VALUES
                 ( ?, 	 ?,		?,		?,
                   ?,	 ?,		?,		?
                 )

            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자  삭제 한다. -->
    <sql name="VLUL040_DEL1">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_EQEMP
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자  삭제 한다. -->
    <sql name="VLUL040_DEL2">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQHEMP
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 일반 피고과자  삭제 한다. -->
    <sql name="VLUL040_DEL3">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_EQSCORE
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 부서장 피고과자  삭제 한다. -->
    <sql name="VLUL040_DEL4">
        <description>부서장 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_EQEMP_DPT
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 부서장 피고과자  삭제 한다. -->
    <sql name="VLUL040_DEL5">
        <description>부서장 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQHEMP_DPT
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 삭제 한다. -->
    <sql name="VLUL040_DEL6">
        <description>부서장 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_EQSCORE_DPT
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 기생성자 삭제 한다. -->
    <sql name="VLUL040_DEL_01">
        <description>일반 피고과자 기생성자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_EQEMP
			WHERE
				EVAYM = ?
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 기생성자 삭제 한다. -->
    <sql name="VLUL040_DEL_02">
        <description>부서장 피고과자 기생성자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_EQEMP_DPT
			WHERE
				EVAYM = ?
            ]]>
        </query>
    </sql>


<!-- 부서장 입력 조회 -->
<!--
***********************************************************************
* @UseCase     : VLUL030
* @description : 역량평가고과점수입력 조회
***********************************************************************
* 2013/11/18     정하나       최초작성
***********************************************************************
-->

    <!-- 고과 대상자 - 본사 부서장 조회 한다.-->
    <sql name="VLUL030_SHR_02">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[

                  SELECT
                          A.EVAYM,
                          A.EMPNO AS EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
                          C.HEAD_CD,
                          A.DEPTCD,
                          DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
                                                  ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
                          A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
                          NVL(A.TOTAVG,0)TOTAVG,
                          SCR1 ,
                          AVG1 ,
                          '' ASSES
          FROM ASNHR.T_EV_EQEMP_DPT A
          LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
                  WHERE   A.DEPREF IN ('1')
                           AND A.EVAYM = ?
                  ORDER BY A.PAYGRD, A.EMPNO

            ]]>
        </query>
    </sql>


    <!-- 고과 대상자 - 본사외(개성, 현장, 금강산등등) 부서장 조회 한다.-->
    <sql name="VLUL030_SHR_03">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[

                  SELECT
                          A.EVAYM,
                          A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
                          C.HEAD_CD,
                          A.DEPTCD,
                          DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
                                                  ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
                          A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
                          NVL(A.TOTAVG,0)TOTAVG,
                          SCR1,
                          AVG1 ,
                          '' ASSES
          FROM ASNHR.T_EV_EQEMP_DPT A
          LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
                  WHERE   A.DEPREF IN ('2','3','4','5','6','7','8')
                           AND A.EVAYM = ?
                  ORDER BY A.PAYGRD, A.EMPNO


            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 저장 한다.-->
    <sql name="VLUL030_SAV_01">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[

            UPDATE ASNHR.T_EV_EQEMP_DPT
              SET
                  SCR1=? , AVG1=?
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 저장 한다.-->
    <sql name="VLUL030_SAV_02">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[

            UPDATE ASNHR.T_EV_EQEMP_DPT
              SET
                  SCR1=? , AVG1=?
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 고과점수 부서장 업데이트 한다.-->

    <sql name="VLUL030_UPT_01">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EQEMP_DPT
              SET
                  [1]
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 고과점수 부서장 삭제 한다. -->
    <sql name="VLUL030_DEL_01">
        <description>고과점수 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_EQSCORE_DPT
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
				AND  EVASEQ = ?
				AND  SEQ2 = ?
            ]]>
        </query>
    </sql>


<!-- 고과점수입력 조회 -->
<!--
***********************************************************************
* @UseCase     : VLUL020
* @description : 역량평가고과점수입력 조회
***********************************************************************
* 2013/11/18     정하나       최초작성
***********************************************************************
-->

    <!-- 상세고과점수  정규직 및 계약직 조회 한다. AND E.HEAD_CD = F.HEAD_CD-->
    <sql name="VLUL020_SHR_ITEM">
        <description>상세고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A. SEQ2,
				A.WORKGB,
				A.WKCONT,
				A.IMPORT,
				A.SCORE,
				A.CH_SCORE,A.CH_SCORE as CH_SCORE2,
				F.HEAD_CD, F.DPT_CD, F.TEAM_CD,F.JOB_CD,
				nvl(E.DPT_IMPORT,0)DPT_IMPORT,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				COALESCE(E.SCR,0) SCR,
                E.SCRGBN,
                E.DPT_CH_SCR,E.DPT_CH_SCR as DPT_CH_SCR2,
                COALESCE(E.EMPNOH,'') AS EMPNOH, COALESCE(E.EMPNO,'') AS EMPNO, COALESCE(E.EVASEQ,0) AS EVASEQ,
                E.FEEDBACK
			FROM ASNHR.T_EV_RQWORKDTL A
			LEFT JOIN ASNHR.T_EV_EQSCORE E ON A.EVAYM = E.EVAYM AND A.SEQ2 = E.SEQ2
				 AND E.EMPNOH = ?
				 AND E.EMPNO = ?
				 AND E.EVASEQ = ?
			LEFT JOIN ASNHR.T_CM_PERSON F ON E.EMPNO = F.ENO_NO
             WHERE A.EVAYM = ?
             	  AND A.EMPNO = ?
            ORDER BY A.SEQ2

            ]]>
        </query>
    </sql>


    <!-- 상세고과점수 부서장 조회 한다.
    <sql name="VLUL020_SHR_ITEM_01">
        <description>상세고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A. SEQ2,
				A.WORKGB,
				A.WKCONT,
				A.IMPORT,
				A.SCORE,
				A.CH_SCORE,
				E.DPT_IMPORT,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				COALESCE(E.SCR,0) SCR,
                E.SCRGBN,
                E.DPT_CH_SCR,
                COALESCE(E.EMPNOH,'') AS EMPNOH, COALESCE(E.EMPNO,'') AS EMPNO, COALESCE(E.EVASEQ,0) AS EVASEQ
			FROM ASNHR.T_EV_RQWORKDTL A
			FULL OUTER JOIN ASNHR.T_EV_EQSCORE_DPT E ON A.EVAYM = E.EVAYM AND A.SEQ2 = E.SEQ2
				 AND E.EMPNOH = ?
				 AND E.EMPNO = ?
				 AND E.EVASEQ = ?
				 AND E.EVAYM = ?
			LEFT JOIN ASNHR.T_CM_PERSON F ON E.EMPNO = F.ENO_NO
             WHERE A.EVAYM = '999999'
			ORDER BY A.SEQ2
            ]]>
        </query>
    </sql>  -->

    <!-- 고과 대상자 - 본사 정규직 및 계약직 조회 한다. -->
    <sql name="VLUL020_SHR">
        <description>고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				C.HEAD_CD,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
							ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				A.JOBREF JOBGRPH ,
				COALESCE(X.DPT_CH_SCR,0) DPT_CH_SCR, COALESCE(X.DPT_CH_SCR2,0) DPT_CH_SCR2,
			CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0) END AVGSCR

	        FROM ASNHR.T_EV_EQEMP A
	        FULL OUTER JOIN ASNHR.T_EV_EQHEMP B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
	        LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.DPT_CH_SCR) DPT_CH_SCR,SUM(G.DPT_CH_SCR) DPT_CH_SCR2
		        FROM ASNHR.T_EV_EQSCORE G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   1=1
				[1]
				[2]
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD, A.EMPNO



            ]]>
        </query>
    </sql>

    <!-- 고과 대상자 - 본사외(개성, 현장, 금강산등등) 정규직 및 계약직 조회 한다. -->
    <sql name="VLUL020_SHR_01">
        <description>고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				C.HEAD_CD,
				A.DEPTCD,
                DECODE(C.DPT_CD,'I100',SF_GET_DPTNAME('01', 'A6',C.TEAM_CD),
                                    		'I200',SF_GET_DPTNAME('01', 'A6',C.TEAM_CD),
                    						'I300',SF_GET_DPTNAME('01', 'A6',C.TEAM_CD),
                                            ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				A.JOBREF JOBGRPH , COALESCE(X.DPT_CH_SCR,0) DPT_CH_SCR,  COALESCE(X.DPT_CH_SCR2,0) DPT_CH_SCR2,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0) END AVGSCR

	        FROM ASNHR.T_EV_EQEMP A
	        FULL OUTER JOIN ASNHR.T_EV_EQHEMP B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
	        LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.DPT_CH_SCR) DPT_CH_SCR,SUM(G.DPT_CH_SCR) DPT_CH_SCR2
		        FROM ASNHR.T_EV_EQSCORE G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   A.DEPREF IN ('2','3','4','5','6','7','8')
				[1]
				[2]
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD, A.EMPNO


            ]]>
        </query>
    </sql>


    <!-- 고과 대상자 - 본사 부서장 조회 한다.
    <sql name="VLUL020_SHR_02">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				C.HEAD_CD,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
							ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				COALESCE(X.DPT_CH_SCR,0) DPT_CH_SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0)
				WHEN B.EVASEQ = 5 THEN COALESCE(A.AVG5,0)
				WHEN B.EVASEQ = 6 THEN COALESCE(A.AVG6,0)
				WHEN B.EVASEQ = 7 THEN COALESCE(A.AVG7,0)
				WHEN B.EVASEQ = 8 THEN COALESCE(A.AVG8,0)
				WHEN B.EVASEQ = 9 THEN COALESCE(A.AVG9,0)
				WHEN B.EVASEQ = 10 THEN COALESCE(A.AVG10,0)
				WHEN B.EVASEQ = 11 THEN COALESCE(A.AVG11,0)
				WHEN B.EVASEQ = 12 THEN COALESCE(A.AVG12,0)
				WHEN B.EVASEQ = 13 THEN COALESCE(A.AVG13,0)
				WHEN B.EVASEQ = 14 THEN COALESCE(A.AVG14,0)
				WHEN B.EVASEQ = 15 THEN COALESCE(A.AVG15,0) END AVGSCR,
				'' ASSES
	        FROM ASNHR.T_EV_EQEMP_DPT A
	        FULL OUTER JOIN ASNHR.T_EV_EQHEMP_DPT B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
	        LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.DPT_CH_SCR) DPT_CH_SCR
		        FROM ASNHR.T_EV_EQSCORE_DPT G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   A.DEPREF IN ('1')
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql> -->


    <!-- 고과 대상자 - 본사외(개성, 현장, 금강산등등) 부서장 조회 한다.
    <sql name="VLUL020_SHR_03">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				C.HEAD_CD,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
							ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				COALESCE(X.DPT_CH_SCR,0) DPT_CH_SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0)
				WHEN B.EVASEQ = 5 THEN COALESCE(A.AVG5,0)
				WHEN B.EVASEQ = 6 THEN COALESCE(A.AVG6,0)
				WHEN B.EVASEQ = 7 THEN COALESCE(A.AVG7,0)
				WHEN B.EVASEQ = 8 THEN COALESCE(A.AVG8,0)
				WHEN B.EVASEQ = 9 THEN COALESCE(A.AVG9,0)
				WHEN B.EVASEQ = 10 THEN COALESCE(A.AVG10,0)
				WHEN B.EVASEQ = 11 THEN COALESCE(A.AVG11,0)
				WHEN B.EVASEQ = 12 THEN COALESCE(A.AVG12,0)
				WHEN B.EVASEQ = 13 THEN COALESCE(A.AVG13,0)
				WHEN B.EVASEQ = 14 THEN COALESCE(A.AVG14,0)
				WHEN B.EVASEQ = 15 THEN COALESCE(A.AVG15,0) END AVGSCR,
				'' ASSES
	        FROM ASNHR.T_EV_EQEMP_DPT A
	        FULL OUTER JOIN ASNHR.T_EV_EQHEMP_DPT B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
	        LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.DPT_CH_SCR) DPT_CH_SCR
		        FROM ASNHR.T_EV_EQSCORE_DPT G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   A.DEPREF IN ('2','3','4','5','6','7','8')
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql> -->


    <!-- 고과점수 정규직 및 계약직 저장 한다. -->
    <sql name="VLUL020_SAV">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EQSCORE
                 ( EVAYM, EMPNOH, EMPNO, EVASEQ, SEQ2, DPT_IMPORT, SCR, SCRGBN, DPT_CH_SCR, HEAD_CD, DPT_CD, TEAM_CD, JOB_CD, FEEDBACK
                 )
            VALUES
                 ( ?, ?, ?, ?, ?,	?,	?,	?, ?, ?,  ?, ?, ?, ?
                 )

            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 저장 한다.
    <sql name="VLUL020_SAV_01">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EQSCORE_DPT
                 ( EVAYM, EMPNOH, EMPNO, EVASEQ, SEQ2, DPT_IMPORT, SCR,  SCRGBN
                 )
            VALUES
                 ( ?, ?, ?, ?, ?,	?,	?,	?
                 )

            ]]>
        </query>
    </sql>-->

    <!-- 고과점수 정규직 및 계약직 업데이트 한다. -->
    <sql name="VLUL020_UPT">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EQEMP
              SET
                  [1]
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 업데이트 한다.
    <sql name="VLUL020_UPT_01">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EQEMP_DPT
              SET
                  [1]
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql> -->

    <!-- 고과점수 정규직 및 계약직삭제 한다. -->
    <sql name="VLUL020_DEL">
        <description>고과점수 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_EQSCORE
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
				AND  EVASEQ = ?
				AND  SEQ2 = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 삭제 한다.
    <sql name="VLUL020_DEL_01">
        <description>고과점수 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_EQSCORE_DPT
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
				AND  EVASEQ = ?
				AND  SEQ2 = ?
            ]]>
        </query>
    </sql> -->



<!--

***********************************************************************
* @UseCase     : VLUL010
* @description : 업적평가 설정조회
***********************************************************************
* 2013/11/11     이동훈       최초작성
***********************************************************************
-->

<!-- 업적신고작성 조회 한다. -->
    <sql name="VLUL010_SHR">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.HEADCD,
				ASNHR.SF_GET_DPTNAME('01', 'B2',A.HEADCD) HEADNM,
				A.DIVCD, 
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DIVCD) DIVNM,
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A6',B.TEAM_CD) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.WORK_1,  A.STARTDT_1, A.ENDDT_1, A.PLACE_1, A.REMARK_1,
				A.WORK_2,  A.STARTDT_2, A.ENDDT_2, A.PLACE_2, A.REMARK_2,
				A.WORK_3,  A.STARTDT_3, A.ENDDT_3, A.PLACE_3, A.REMARK_3

			FROM
				ASNHR.T_EV_RQWORKMST A,
				ASNHR.T_CM_PERSON B

			WHERE
				A.EMPNO = B.ENO_NO
				AND A.EVAYM = ?
				AND A.EMPNO = ?

            ]]>
        </query>
    </sql>

    <!-- 업적신고작성 조회 한다. -->
    <sql name="VLUL010_SHR_01">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
            
		SELECT Z.*
			FROM
			(            
			SELECT
				A.EVAYM,   A.EMPNO,   A.SEQ2,    A.WORKGB,  A.WKCONT,
				A.IMPORT,  A.SCORE, A.CH_SCORE AS CH_SCORE
			FROM
				ASNHR.T_EV_RQWORKDTL A
			WHERE
				A.EVAYM = ?
				AND A.EMPNO = ?
		
		 UNION ALL		
				
			SELECT 
			        '' EVAYM,   '' EMPNO,   99 AS SEQ2,    '' WORKGB,  '' WKCONT,
							0 AS IMPORT,  0 AS SCORE, SUM(X.CH_SCORE) AS CH_SCORE
			FROM
						( SELECT
							A.EVAYM,   A.EMPNO,   A.SEQ2,    A.WORKGB,  A.WKCONT,
							A.IMPORT,  A.SCORE, A.CH_SCORE AS CH_SCORE
						FROM
							ASNHR.T_EV_RQWORKDTL A
						WHERE
							A.EVAYM = ?
							AND A.EMPNO = ?) X				
			) Z
            ]]>
        </query>
    </sql>


    <!-- 업적신고작성 조회 한다. -->
    <sql name="VLUL010_SHR_02">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
                      
			SELECT
				A.EVAYM,   A.EMPNO,   A.SEQ2,    A.WORKGB,  A.WKCONT,
				A.IMPORT,  A.SCORE, A.CH_SCORE AS CH_SCORE
			FROM
				ASNHR.T_EV_RQWORKDTL A
			WHERE
				A.EVAYM = ?
				AND A.EMPNO = ?

            ]]>
        </query>
    </sql>

    <!-- 업적신고작성 조회 한다. -->
    <sql name="VLUL010_SHR_00">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.ENO_NO,   A.ENO_NM,
				A.JOB_CD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.JOB_CD)) AS JOB_NM,
				A.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD) AS  HEAD_NM,
				A.DPT_CD,
				ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD) AS  DPT_NM,
				A.TEAM_CD,
				ASNHR.SF_GET_DPTNAME('01', 'A6', TEAM_CD) AS  TEAM_NM
			FROM
				ASNHR.T_CM_PERSON A
			WHERE
				A.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUL010_SHR_CHK">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				COUNT(*) CNT
			FROM
				ASNHR.T_EV_RQWORKMST A
			WHERE A.EVAYM = ?
				AND A.EMPNO = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUL010_SHR_TERM">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.COMM_NM
			FROM
				ASNHR.T_CM_COMMON A
			WHERE A.CD_GBN = 'O5'
				AND A.COMM_CD = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUL010_SHR_LENGTH">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				MAX(LENGTH(RTRIM(A.WKCONT))) AS LEN
			FROM
				ASNHR.T_EV_RQWORKDTL A
			WHERE A.EVAYM = ?
				AND A.EMPNO = ?
            ]]>
        </query>
    </sql>


    <sql name="VLUL010_SHR_SUB">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT DISTINCT
				B.EVAYM, B.EMPNO AS ENO_NO, 
				ASNHR.SF_GET_ENONAME('01', B.EMPNO) AS ENO_NM,
				C.JOB_CD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(C.JOB_CD)) AS JOB_NM,
				C.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2', C.HEAD_CD) AS  HEAD_NM,
				C.DPT_CD,
				ASNHR.SF_GET_DPTNAME('01', 'A4', C.DPT_CD) AS  DPT_NM,
				C.TEAM_CD,
				ASNHR.SF_GET_DPTNAME('01', 'A6', C.TEAM_CD) AS  TEAM_NM,
				DECODE (A.EMPNO,'','N','Y') AS END_TAG
  	FROM ASNHR.T_EV_RQWORKMST A, 
		  	ASNHR.T_EV_RQWORKDTL B, 
		  	ASNHR.T_CM_PERSON C
	 WHERE B.EVAYM = '201708' 
		     AND B.EMPNO = C.ENO_NO
		     [1]
	ORDER BY C.HEAD_CD, C.DPT_CD, C.TEAM_CD DESC, C.JOB_CD
            ]]>
        </query>
    </sql>

    <sql name="VLUL010_SAV_MST">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_RQWORKMST (
				EVAYM,	EMPNO,		HEADCD,		DIVCD,		DEPTCD, 	PAYGRD,
				WORK_1,	STARTDT_1,	ENDDT_1,	PLACE_1,	REMARK_1,
				WORK_2,	STARTDT_2,	ENDDT_2,	PLACE_2,	REMARK_2,
				WORK_3,	STARTDT_3,	ENDDT_3,	PLACE_3,	REMARK_3,
				WRDT,	WRID,	  	UPDT,	  	UPID
			) VALUES(
				?, ?, ?, ?, ?, ?,
				?, ?, ?, ?, ?,
				?, ?, ?, ?, ?,
				?, ?, ?, ?, ?,
				TO_CHAR(sysdate, 'YYYYMMDD'), ?, TO_CHAR(sysdate, 'YYYYMMDD'), ?
			)
            ]]>
        </query>
    </sql>

    <sql name="VLUL010_UPT_MST">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_RQWORKMST SET
				 HEADCD = ?,
				 DIVCD = ?,
				 DEPTCD = ?,
				 PAYGRD = ?,
				 WORK_1 = ?,
				 STARTDT_1 = ?,
				 ENDDT_1 = ?,
				 PLACE_1 = ?,
				 REMARK_1 = ?,
				 WORK_2 = ?,
				 STARTDT_2 = ?,
				 ENDDT_2 = ?,
				 PLACE_2 = ?,
				 REMARK_2 = ?,
				 WORK_3 = ?,
				 STARTDT_3 = ?,
				 ENDDT_3 = ?,
				 PLACE_3 = ?,
				 REMARK_3 = ?,
				 UPDT = TO_CHAR(sysdate, 'YYYYMMDD'),
				 UPID = ?
			WHERE EVAYM = ?
			  AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUL010_SAV_DTL">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_RQWORKDTL (
				EVAYM,	  	EMPNO,		SEQ2,	WORKGB,		WKCONT,
				IMPORT,		SCORE,    CH_SCORE,
				WRDT,		WRID,	  	UPDT,	  UPID
			)
			VALUES(
				?, ?, ?, ?, ?,
				?, ?, ?,
				TO_CHAR(sysdate, 'YYYYMMDD'), ?, TO_CHAR(sysdate, 'YYYYMMDD'), ?
			)
            ]]>
        </query>
    </sql>

    <sql name="VLUL010_UPT_DTL">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_RQWORKDTL SET
				WORKGB = ?,
				WKCONT = ?,
				IMPORT = ?,
				SCORE = ?,
				CH_SCORE = ?,
				UPDT = TO_CHAR(sysdate, 'YYYYMMDD'),
				UPID = ?
			WHERE EVAYM = ?
				AND EMPNO = ?
				AND  SEQ2 = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUL010_DEL">
        <description>업적신고작성 전체 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQWORKDTL
			WHERE  EVAYM = ?
				AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUL010_DEL_DTL">
        <description>업적신고작성 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQWORKDTL
			WHERE  EVAYM = ?
				AND EMPNO = ?
				AND  SEQ2 = ?
            ]]>
        </query>
    </sql>





<!--

***********************************************************************
* @UseCase     : VLUL015
* @description : 잡프로필 설정조회
***********************************************************************
* 2016/07/11     이동훈       최초작성
***********************************************************************
-->


    <!-- 조회 한다. -->
    <sql name="VLUL015_SHR">
        <description>잡프로필 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,   
				A.ENO_NO, ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
	         	B.HEAD_CD, ASNHR.SF_GET_DPTNAME('01', 'B2', B.HEAD_CD) AS HEAD_NM,
				B.DPT_CD, ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD) AS DPT_NM,
				B.TEAM_CD, ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM,
				B.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2',B. JOB_CD) AS JOB_NM,
				A.JOBSM,
				A.EDU, 
				A.MAJOR,	
				A.SEX, 
				A.ETC, 
				A.EXP, 
				A.CERTIFICATE,
				A.FRGRD, 
				A.OAGRD,	
				A.TECH, 
				A.STUDY, 
				A.STUDY2, 
				A.STUDY3
			FROM
				ASNHR.T_EV_JOBSPEC A, ASNHR.T_CM_PERSON B
			WHERE
				A.ENO_NO = B.ENO_NO
				AND A.EVAYM = ?
				AND A.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 조회 한다. -->
    <sql name="VLUL015_SHR_01">
        <description>잡프로필 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,   A.ENO_NO,   A.SEQ,    	A.JOB,  A.TASK,  A.TASKDESC,
				A.IMPORT,  A.DEGREE,   A.FREQUENCY
			FROM
				ASNHR.T_EV_JOBTASK A
			WHERE
				A.EVAYM = ?
				AND A.ENO_NO = ?
            ]]>
        </query>
    </sql>


    <!-- 조회 한다. -->
    <sql name="VLUL015_SHR_SUB">
        <description>잡프로필 작성현황조회</description>
        <query>
            <![CDATA[
				SELECT DISTINCT
					A.EVAYM, A.ENO_NO AS ENO_NO, 
					ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
					C.JOB_CD,
					ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(C.JOB_CD)) AS JOB_NM,
					C.HEAD_CD,
					ASNHR.SF_GET_DPTNAME('01', 'B2', C.HEAD_CD) AS  HEAD_NM,
					C.DPT_CD,
					ASNHR.SF_GET_DPTNAME('01', 'A4', C.DPT_CD) AS  DPT_NM,
					C.TEAM_CD,
					ASNHR.SF_GET_DPTNAME('01', 'A6', C.TEAM_CD) AS  TEAM_NM,
					DECODE (B.JOB,'※직무(JOB)항목','N','Y') AS END_TAG
	  	FROM ASNHR.T_EV_JOBSPEC A, ASNHR.T_EV_JOBTASK B,
			  	ASNHR.T_CM_PERSON C
		 WHERE 1 = 1 
			     AND A.ENO_NO = C.ENO_NO
			     AND A.ENO_NO = B.ENO_NO AND A.EVAYM = B.EVAYM AND B.SEQ = '1'
			     [1]
			     AND A.EVAYM LIKE ?||'%'
		ORDER BY C.HEAD_CD, C.DPT_CD, C.TEAM_CD DESC, C.JOB_CD		
				
            ]]>
        </query>
    </sql>





    <sql name="VLUL015_UPT_MST">
        <description>잡프로필 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_JOBSPEC SET
				 JOBSM = ?,
				 EDU = ?,
				 MAJOR = ?,
				 SEX = ?,
				 ETC = ?,
				 EXP = ?,
				 CERTIFICATE = ?,
				 FRGRD = ?,
				 OAGRD = ?,
				 TECH = ?,
				 STUDY = ?,
				 STUDY2 = ?,
				 STUDY3 = ?
			WHERE ENO_NO = ?
			  AND EVAYM = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUL015_SAV_DTL">
        <description>잡프로필 저장</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_JOBTASK (
				ENO_NO,	  		EVAYM,		SEQ,			JOB,				TASK,
				TASKDESC,		IMPORT,		DEGREE,		FREQUENCY
			)
			VALUES(
				?, ?, ?, ?, ?,
				?, ?, ?, ?
			)
            ]]>
        </query>
    </sql>

    <sql name="VLUL015_UPT_DTL">
        <description>잡프로필 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_JOBTASK SET
				JOB = ?,
				TASK = ?,
				TASKDESC = ?,
				IMPORT = ?,
				DEGREE = ?,
				FREQUENCY = ?
			WHERE ENO_NO = ?
				AND EVAYM = ?
				AND SEQ = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUL015_DEL_DTL">
        <description>잡프로필 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_JOBTASK
			WHERE ENO_NO = ?
				AND EVAYM = ?
				AND SEQ = ?
            ]]>
        </query>
    </sql>



<!-- 역량평가기간 설정 -->
<!--
***********************************************************************
* @UseCase     : VLUK010
* @description : 역량평가기간 설정조회
***********************************************************************
* 2013/04/30     정하나       최초작성
***********************************************************************
-->

    <!-- 역량평가기간 설정 조회  -->
    <sql name="VLUK010_SHR_INFO">
        <description>역량평가기간 설정 조회</description>
        <query>
            <![CDATA[
      SELECT  A.GUBUN, A.EVL_YY, A.EVL_FRQ, A.EVL_STDT, A.EVL_ENDT, A.IPT_STDT, A.IPT_ENDT,
      			A.PROT_STDT, A.PROT_ENDT,
      			A.DPT_NM, A.JIK_NM, A.ENO_NO, A.ENO_NM
      FROM  ( SELECT INFO.GUBUN, INFO.EVL_YY, INFO.EVL_GBN, INFO.EVL_FRQ, INFO.EVL_STDT, INFO.EVL_ENDT,
      				INFO.IPT_STDT, INFO.IPT_ENDT, INFO.PROT_STDT, INFO.PROT_ENDT,
                    EMP.ENO_NO, EMP.ENO_NM, EMP.DPT_NM, EMP.JIK_NM
              FROM ( SELECT  GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, EVL_STDT, EVL_ENDT,
              			TO_CHAR(IPT_STDT, 'YYYY-MM-DD')  AS IPT_STDT,
						TO_CHAR(IPT_ENDT, 'YYYY-MM-DD')  AS IPT_ENDT,
              			TO_CHAR(PROT_STDT, 'YYYY-MM-DD')  AS PROT_STDT,
						TO_CHAR(PROT_ENDT, 'YYYY-MM-DD')  AS PROT_ENDT
                     FROM    ASNHR.T_EV_RQINFO
                     WHERE   GUBUN   = '01'
                     AND     EVL_YY  = TO_CHAR(SYSDATE, 'YYYY')
                     AND     EVL_GBN = '1'
                     AND     ROWNUM = 1
                   ) INFO,
                   ( SELECT  ENO_NO, NAME AS ENO_NM,
                             ASNHR.SF_GET_DPTNAME(GUBUN, 'A4',DPT_CD) AS DPT_NM,
                             ASNHR.SF_GET_COMMNAME(GUBUN, 'A2', JOB_CD) AS JIK_NM
                     FROM    ASNHR.T_CM_EMPLIST
                     WHERE   ENO_NO = ?
                   ) EMP
            ) A

            ]]>
        </query>
    </sql>

    <!-- 역량평가기간 설정 조회  -->
    <sql name="VLUK010_SHR">
        <description>역량평가기간 설정 조회</description>
        <query>
            <![CDATA[
            SELECT EVAYM
                 , TO_CHAR(TO_DATE(STR_YMD,'YYYYMMDD'), 'YYYY-MM-DD') AS STR_YMD
                 , TO_CHAR(TO_DATE(END_YMD,'YYYYMMDD'), 'YYYY-MM-DD') AS END_YMD
              FROM ASNHR.T_EV_RQSTYMD
             WHERE EVAYM = ?
            ]]>
        </query>
    </sql>

    <!-- 역량평가기간 설정  저장 -->
    <sql name="VLUK010_INS">
        <description>역량평가기간 설정 저장</description>
        <query>
            <![CDATA[
            INSERT  INTO ASNHR.T_EV_RQSTYMD
                    ( EVAYM, STR_YMD, END_YMD,
                      IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES  ( ?     , ?     , ?      ,
                      ?      , sysdate, ?      , sysdate )
            ]]>
        </query>
    </sql>

    <!-- 역량평가기간 설정  수정 -->
    <sql name="VLUK010_UPT">
        <description>역량평가기간 설정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_RQSTYMD
               SET END_YMD  = ?
                 , STR_YMD   = ?
                 , UPT_MAN  = ?
                 , UPT_YMD  = SYSDATE
             WHERE EVAYM   = ?
            ]]>
        </query>
    </sql>

    <!-- 역량평가기간 설정 삭제 -->
    <sql name="VLUK010_DEL">
        <description>역량평가기간 설정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_RQSTYMD
             WHERE EVAYM   = ?

            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUK020
* @description : 고과표입력
***********************************************************************
* 2013/05/07      정하나        최초작성.
***********************************************************************
-->


    <!-- 고과항목 조회 한다. -->
    <sql name="VLUK020_SHR">
        <description>고과항목 조회</description>
        <query>
            <![CDATA[
			SELECT
				 A.EVAYM,
				 A.GB_MST,
				 A.GB_DTL,
				 A.ACT_ITEM
			FROM ASNHR.T_EV_RQSHEET A
            WHERE      A.EVAYM = ?
            [1]
            ORDER BY A.EVAYM, A.GB_MST, A.GB_DTL
            ]]>
        </query>
    </sql>


    <!-- 고과항목 생성 한다. -->
    <sql name="VLUK020_SAV">
        <description>데이터 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_RQSHEET
                 ( EVAYM,       GB_MST,      GB_DTL,     ACT_ITEM
                 )
            VALUES
                 ('999999',           ?,           ?,           ?)
            ]]>
        </query>
    </sql>

    <!-- 고과항목 수정 한다. -->
    <sql name="VLUK020_UPT">
        <description>데이터 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_RQSHEET
            SET     GB_MST = ?,
                    GB_DTL = ?,
                    ACT_ITEM = ?
            WHERE   EVAYM = ?
		            AND GB_MST = ?
            	    AND GB_DTL = ?
            ]]>
        </query>
    </sql>



    <!-- 고과항목 삭제 한다. -->
    <sql name="VLUK020_DEL">
        <description>데이터 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_RQSHEET
	            WHERE  EVAYM        = '999999'
	            AND    GB_MST        = ?
	            AND    GB_DTL        = ?
	            AND    ACT_ITEM      = ?
            ]]>
        </query>
    </sql>


    <!-- 부서장 고과항목 조회 한다. -->
    <sql name="VLUK020_SHR_DPT">
        <description>고과항목 조회</description>
        <query>
            <![CDATA[
			SELECT
				 A.EVAYM,
				 A.GB_MST,
				 A.GB_DTL,
                      A.ACT_ITEM, A.T_SCR
             FROM ASNHR.T_EV_RQSHEET_DPT A
            WHERE      A.EVAYM = '999999'
            ORDER BY A.EVAYM, A.GB_MST
            ]]>
        </query>
    </sql>


    <!-- 부서장 고과항목 생성 한다. -->
    <sql name="VLUK020_SAV_DPT">
        <description>데이터 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_RQSHEET_DPT
                 ( EVAYM,       GB_MST,      	GB_DTL,     ACT_ITEM,
                 ASNHR.T_SCR, 			VG_SCR, 		G_SCR, 		N_SCR, 		B_SCR, 		VB_SCR
                 )
            VALUES
                 ('999999', ?, ?, ?, ?, ?, ?, ?, ?, ?)
            ]]>
        </query>
    </sql>

    <!-- 고과항목 수정 한다. -->
    <sql name="VLUK020_UPT_DPT">
        <description>데이터 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_RQSHEET_DPT
            SET     GB_MST = ?,
                    GB_DTL = ?,
                    ACT_ITEM = ?,
                    ASNHR.T_SCR = ?,
                    VG_SCR = ?,
                    G_SCR = ?,
                    N_SCR = ?,
                    B_SCR = ?,
                    VB_SCR = ?
            WHERE   EVAYM = ?
		            AND GB_MST = ?
            	    AND GB_DTL = ?
            ]]>
        </query>
    </sql>



    <!-- 고과항목 삭제 한다. -->
    <sql name="VLUK020_DEL_DPT">
        <description>데이터 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_RQSHEET_DPT
	            WHERE  EVAYM        = '999999'
	            AND    GB_MST        = ?
	            AND    GB_DTL        = ?
	            AND    ACT_ITEM      = ?
            ]]>
        </query>
    </sql>




<!-- 피평가자 설정 -->
<!--
***********************************************************************
* @UseCase     : VLUK030
* @description : 피평가자 설정조회
***********************************************************************
* 2013/05/06     정하나       최초작성
***********************************************************************
-->

  <!-- 일반 피고과자선정 조회 한다. -->
    <sql name="VLUK030_SHR">
        <description>일반 피고과자선정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO AS ENO_NO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS ENO_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
                A.GRSTRTDT,
				A.STRTDT,
				A.WRDT,
                A.LAMDT,
                A.RECDIV,
                ASNHR.SF_GET_COMMNAME('01', 'C1', A.RECDIV) AS RECNM,
                A.JOBKIND,
				ASNHR.SF_GET_COMMNAME('01', 'SD', A.JOBREF) AS JOBREF
			FROM ASNHR.T_EV_RQEMP A
            WHERE      A.EVAYM = ?
            ORDER BY A.PAYGRD
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자선정 조회 한다. -->
    <sql name="VLUK030_SHR_01">
        <description>부서장 피고과자선정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO AS ENO_NO,
				B.ENO_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				TO_CHAR(B.HIRG_YMD, 'YYYYMMDD')  AS GRSTRTDT,
				TO_CHAR(B.HIR_YMD, 'YYYYMMDD')  AS STRTDT,
				TO_CHAR(B.JPR_YMD, 'YYYYMMDD')  AS LAMDT,
				A.WRDT,
                A.RECDIV,
                ASNHR.SF_GET_COMMNAME('01', 'C1', A.RECDIV) AS RECNM,
                A.JOBKIND,
				ASNHR.SF_GET_COMMNAME('01', 'SD', A.JOBREF) AS JOBREF
			FROM ASNHR.T_EV_RQEMP_DPT A, ASNHR.T_CM_PERSON B
            WHERE  A.EMPNO = B.ENO_NO
            	AND A.EVAYM = ?
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 기생성자 조회 한다. -->
    <sql name="VLUK030_SHR_02">
        <description>일반 피고과자 기생성자 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO AS ENO_NO,
				B.ENO_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.GRSTRTDT,    	A.STRTDT,    SUBSTR(A.WRDT,1,6) WRDT,
				A.TOTAVG,
				A.SCR1,      	A.AVG1,       	A.SCR2,        	A.AVG2,
				A.SCR3,     	A.AVG3,      	A.SCR4,       	A.AVG4,
				A.GRSREF
			FROM ASNHR.T_EV_RQEMP A, ASNHR.T_CM_PERSON B
            WHERE  A.EMPNO = B.ENO_NO
            	AND A.EVAYM = ?
            ORDER BY A.PAYGRD
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 생성 대상자 조회 한다. -->
    <sql name="VLUK030_SHR_12">
        <description>일반 피고과자 생성 대상자 조회</description>
        <query>
            <![CDATA[

			SELECT    ? AS WRDT,
                A.ENO_NO,
                ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
                A.DPT_CD, DECODE(A.DPT_CD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DPT_CD), ASNHR.SF_GET_DPTNAME('01', 'A6',A.DPT_CD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DPT_CD)) AS DEPTNM,
                A.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.JOB_CD)) AS GRDNM,
                TO_CHAR(A.HIRG_YMD, 'YYYYMMDD')  AS HIRG_YMD,
                TO_CHAR(A.HIR_YMD, 'YYYYMMDD')  AS HIR_YMD,
                TO_CHAR(A.JPR_YMD, 'YYYYMMDD')  AS JPR_YMD,
                A.OCC_CD, A.GBN_CD,
                A.HIR_CD,
				A.HEAD_CD,
				A.DUTY_CD
            FROM ASNHR.T_CM_PERSON A, ASNHR.T_CM_AHISTORY B
            WHERE A.RET_YMD IS NULL
                AND A.ENO_NO = B.ENO_NO AND B.SEQ_NO = '1' AND NOT (B.SEQ_NO = '1' AND  B.APP_CD = 'A1' AND B.STR_YMD >= ADD_MONTHS(SYSDATE,-2))
                AND A.FINJ_CD IN ('L11','L24','L30')
                AND SUBSTR(A.ENO_NO,0,1) < '5'
                AND (A.JOB_CD BETWEEN '140' AND '300' OR A.JOB_CD = '700' OR A.JOB_CD = '890')

            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 생성 대상자 조회 한다. -->
    <sql name="VLUK030_SHR_13">
        <description>부서장 피고과자 생성 대상자 조회</description>
        <query>
            <![CDATA[
			SELECT ? AS WRDT,
				A.ENO_NO,
				ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
				A.DPT_CD, DECODE(A.DPT_CD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DPT_CD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DPT_CD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DPT_CD)) AS DEPTNM,
				A.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.JOB_CD)) AS GRDNM,
				TO_CHAR(A.HIRG_YMD, 'YYYYMMDD')  AS HIRG_YMD,
				TO_CHAR(A.HIR_YMD, 'YYYYMMDD')  AS HIR_YMD,
				TO_CHAR(A.JPR_YMD, 'YYYYMMDD')  AS JPR_YMD,
				A.OCC_CD, A.GBN_CD,
				A.HIR_CD
			FROM ASNHR.T_CM_PERSON A
			WHERE A.RET_YMD IS NULL
				AND A.FINJ_CD IN ('L11','L24','L30')
				AND (A.DUTY_CD IN ('05','17','34') OR (A.DUTY_CD = '20' AND A.JOB_CD BETWEEN '140' AND '170'))
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 기생성자 저장 한다. -->
    <sql name="VLUK030_SAV_01">
        <description>일반 피고과자 기생성자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_RQEMP
                 ( EVAYM,	EMPNO, 		DEPTCD,		PAYGRD,		GRSTRTDT,
                   STRTDT,  WRDT,  		LAMDT,   	DEPREF,		RECDIV,  	 JOBREF,  HEAD_CD, DUTY_CD
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,
                   ?, 	 ?,		?,		?,		?, 	?,  ?,  ?
                 )
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 기생성자 저장 한다. -->
    <sql name="VLUK030_SAV_02">
        <description>부서장 피고과자 기생성자 저장</description>
        <query>
            <![CDATA[

            INSERT INTO ASNHR.T_EV_RQEMP_DPT
                 ( EVAYM,	EMPNO, 		DEPTCD,		PAYGRD,
                   WRDT,  	DEPREF,		RECDIV,  	GRSREF
                 )
            VALUES
                 ( ?, 	 ?,		?,		?,
                   ?,	 ?,		?,		?
                 )

            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자  삭제 한다. -->
    <sql name="VLUK030_DEL1">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQEMP
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자  삭제 한다. -->
    <sql name="VLUK030_DEL2">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQHEMP
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 일반 피고과자  삭제 한다. -->
    <sql name="VLUK030_DEL3">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQSCORE
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 부서장 피고과자  삭제 한다. -->
    <sql name="VLUK030_DEL4">
        <description>부서장 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQEMP_DPT
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 부서장 피고과자  삭제 한다. -->
    <sql name="VLUK030_DEL5">
        <description>부서장 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQHEMP_DPT
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 삭제 한다. -->
    <sql name="VLUK030_DEL6">
        <description>부서장 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQSCORE_DPT
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 기생성자 삭제 한다. -->
    <sql name="VLUK030_DEL_01">
        <description>일반 피고과자 기생성자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQEMP
			WHERE
				EVAYM = ?
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 기생성자 삭제 한다. -->
    <sql name="VLUK030_DEL_02">
        <description>부서장 피고과자 기생성자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQEMP_DPT
			WHERE
				EVAYM = ?
            ]]>
        </query>
    </sql>

<!-- 고과자지정 -->
<!--
***********************************************************************
* @UseCase     : VLUK040
* @description : 고과자지정
***********************************************************************
* 2013/05/07     정하나       최초작성
***********************************************************************
-->
  <!-- 고과자지정 조회 한다. -->
    <sql name="VLUK040_SHR">
        <description>고과자지정 조회</description>
        <query>
            <![CDATA[
			SELECT
				X.CHK, X.EVAYM, X.EMPNO,
				ASNHR.SF_GET_ENONAME('01', X.EMPNO) AS EMPNMK,
				X.DEPTCD,
				DECODE(X.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',X.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',X.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',X.DEPTCD))AS DEPTNM,
        		X.TEAM_CD,
        		DECODE(X.TEAM_CD,ASNHR.SF_GET_DPTNAME('01', 'A4',X.TEAM_CD),ASNHR.SF_GET_DPTNAME('01', 'A6',X.TEAM_CD),ASNHR.SF_GET_DPTNAME('01', 'A4',X.TEAM_CD))AS TEAMNM,				
				X.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(X.PAYGRD)) AS GRDNM,
				X.GRSTRTDT,
				X.STRTDT,
				MAX(X.SEQ1)SEQ1,
				CASE WHEN MAX(H.ENO_NM)='' OR  MAX(H.ENO_NM) IS NULL THEN  '' ELSE MAX(H.ENO_NM) END EMPNMK1,
				MAX(X.SEQ2)SEQ2,
				CASE WHEN MAX(I.ENO_NM)='' OR  MAX(I.ENO_NM) IS NULL THEN  '' ELSE MAX(I.ENO_NM) END EMPNMK2,
				MAX(X.SEQ3)SEQ3,
				CASE WHEN MAX(J.ENO_NM)='' OR  MAX(J.ENO_NM) IS NULL THEN  '' ELSE MAX(J.ENO_NM) END EMPNMK3,
				MAX(X.SEQ4)SEQ4,
				CASE WHEN MAX(K.ENO_NM)='' OR  MAX(K.ENO_NM) IS NULL THEN  '' ELSE MAX(K.ENO_NM) END EMPNMK4
			FROM
				(SELECT
					'F' CHK,
					A.EVAYM,
					A.EMPNO,
					A.DEPTCD,
					C.TEAM_CD,
					A.PAYGRD,
					A.GRSTRTDT,A.STRTDT,
				    CASE B.EVASEQ WHEN 1 THEN B.EMPNOH END AS SEQ1,
				    CASE B.EVASEQ WHEN 2 THEN B.EMPNOH END AS SEQ2,
				    CASE B.EVASEQ WHEN 3 THEN B.EMPNOH END AS SEQ3,
				    CASE B.EVASEQ WHEN 4 THEN B.EMPNOH END AS SEQ4
				FROM
					ASNHR.T_EV_RQEMP A,
					ASNHR.T_EV_RQHEMP B,
					ASNHR.T_CM_PERSON C
				WHERE
					A.EVAYM = B.EVAYM
					AND A.EMPNO = C.ENO_NO
					AND B.EMPNO = C.ENO_NO
					AND A.EMPNO = B.EMPNO
					AND A.EVAYM = ?
          	UNION ALL
                SELECT
					'F' CHK,
					A.EVAYM,
					A.EMPNO,
					A.DEPTCD,
					C.TEAM_CD,
					A.PAYGRD,
					A.GRSTRTDT,A.STRTDT,
                    ''SEQ1,''SEQ2,''SEQ3,''SEQ4
                FROM
                    ASNHR.T_EV_RQEMP A,
                    ASNHR.T_CM_PERSON C
                WHERE
                    A.EMPNO = C.ENO_NO
                    AND A.EVAYM = ?

				) X,
			ASNHR.T_CM_PERSON H,
			ASNHR.T_CM_PERSON I,
			ASNHR.T_CM_PERSON J,
			ASNHR.T_CM_PERSON K
		WHERE X.SEQ1 = H.ENO_NO(+)
			AND X.SEQ2 = I.ENO_NO(+)
			AND X.SEQ3 = J.ENO_NO(+)
			AND X.SEQ4 = K.ENO_NO(+)
			AND X.DEPTCD LIKE '%'||?||'%'
			AND X.PAYGRD LIKE '%'||?||'%'
			AND X.EMPNO LIKE '%'||?||'%'
		GROUP BY X.CHK, X.EVAYM, X.EMPNO,X.DEPTCD, X.TEAM_CD, X.PAYGRD, X.GRSTRTDT,X.STRTDT
		ORDER BY X.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 고과자지정 조회 한다. -->
    <sql name="VLUK040_SHR_01">
        <description>고과자지정 조회</description>
        <query>
            <![CDATA[
			SELECT DISTINCT
				'' CHKOUT,

				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.EMPNOH,
				ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS EMPNMKH,
				A.EVASEQ,
				A.DEPTCD,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.DEPTNM AS DEPTNM
			FROM
				ASNHR.T_EV_RQHEMP A,
				ASNHR.T_CM_PERSON B
			WHERE
                A.EMPNOH = B.ENO_NO
				AND A.EVAYM = ?
				AND B.DPT_CD LIKE '%'||?||'%'
				AND B.JOB_CD LIKE '%'||?||'%'
				AND B.ENO_NO LIKE '%'||?||'%'
				AND A.EMPNOH LIKE '%'||?||'%'
				AND A.EVASEQ LIKE '%'||?||'%'

			ORDER BY A.EMPNO

            ]]>
        </query>
    </sql>



    <!-- 고과자 저장 한다. -->
    <sql name="VLUK040_SAV">
        <description>고과자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_RQHEMP
                 ( EVAYM,EMPNOH,EMPNO,EVASEQ,DEPTCD,DEPTNM,PAYGRD
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 ?
                 )

            ]]>
        </query>
    </sql>


    <!-- 고과자 삭제 한다. -->
    <sql name="VLUK040_DEL">
        <description>고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQHEMP
			WHERE EVAYM = ?
				AND EMPNOH = ?
				AND EMPNO = ?
				AND EVASEQ = ?
            ]]>
        </query>
    </sql>


<!-- 고과점수입력 조회 -->
<!--
***********************************************************************
* @UseCase     : VLUK050
* @description : 고과점수입력 조회
***********************************************************************
* 2013/05/20     이동훈       최초작성
***********************************************************************
-->

    <!-- 고과입력표 정규직 및 계약직 조회 한다. -->
    <sql name="VLUK050_SHR_ITEM">
        <description>고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				--DECODE(A.GB_MST,'01',DECODE(A.GB_DTL,'공통','1','2'),'02',DECODE(A.GB_DTL,'리더십','1','2'),'03',DECODE(A.GB_DTL,'직무','1','2'),'2') AS SEQ,
				A.GB_MST,
				A.GB_DTL,
				A.ACT_ITEM,
				B.HEAD_CD, B.DPT_CD, B.TEAM_CD,B.JOB_CD,B.T_SCR,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				B.VG_SCR AS ESCR,
				B.G_SCR AS GSCR,
				B.N_SCR AS MSCR,
				B.B_SCR AS LSCR,
				B.VB_SCR AS PSCR,
				COALESCE(E.SCR,0) SCR,
                E.SCRGBN,
                COALESCE(E.EMPNOH,'') AS EMPNOH, COALESCE(E.EMPNO,'') AS EMPNO, COALESCE(E.EVASEQ,0) AS EVASEQ
			FROM ASNHR.T_EV_RQSHEET A
			LEFT JOIN ASNHR.T_EV_RQGROUP B ON A.EVAYM = B.EVAYM AND A.GB_MST = B.GB_MST AND A.GB_DTL = B.GB_DTL
			FULL OUTER JOIN ASNHR.T_EV_RQSCORE E ON A.EVAYM = E.EVAYM AND A.GB_MST = E.GB_MST AND A.GB_DTL = E.GB_DTL
				 AND E.EMPNOH = ?
				 AND E.EMPNO = ?
				 AND E.EVASEQ = ?
				 AND (E.JOB_CD = ? OR E.JOB_CD = '1')
			LEFT JOIN ASNHR.T_CM_PERSON F ON E.EMPNO = F.ENO_NO AND E.HEAD_CD = F.HEAD_CD
             WHERE A.EVAYM = ?
				AND (B.HEAD_CD = ? OR B.HEAD_CD = 'A600')
				AND (B.JOB_CD = ? OR B.JOB_CD = '1')
				AND A.GB_DTL NOT IN ('공통','리더십','직무')
				AND A.GB_MST IN ('01',?)
            ORDER BY A.GB_MST

            ]]>
        </query>
    </sql>


    <!-- 고과입력표 부서장 조회 한다. -->
    <sql name="VLUK050_SHR_ITEM_01">
        <description>고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.GB_MST,
				A.GB_DTL,
				A.ACT_ITEM,
				A.T_SCR,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				A.VG_SCR AS ESCR,
				A.G_SCR AS GSCR,
				A.N_SCR AS MSCR,
				A.B_SCR AS LSCR,
				A.VB_SCR AS PSCR,
				COALESCE(E.SCR,0) SCR,
                E.SCRGBN,
                COALESCE(E.EMPNOH,'') AS EMPNOH, COALESCE(E.EMPNO,'') AS EMPNO, COALESCE(E.EVASEQ,0) AS EVASEQ
			FROM ASNHR.T_EV_RQSHEET_DPT A
			FULL OUTER JOIN ASNHR.T_EV_RQSCORE_DPT E ON A.GB_MST = E.GB_MST AND A.GB_DTL = E.GB_DTL
				 AND E.EMPNOH = ?
				 AND E.EMPNO = ?
				 AND E.EVASEQ = ?
				 AND E.EVAYM = ?
			LEFT JOIN ASNHR.T_CM_PERSON F ON E.EMPNO = F.ENO_NO
             WHERE A.EVAYM = '999999'
			ORDER BY A.GB_MST, A.GB_DTL
            ]]>
        </query>
    </sql>


    <!-- 고과입력표 부서장 조회 한다. -->
    <sql name="VLUK050_SHR_CMT">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.CMMENT
			FROM ASNHR.T_EV_COMMENT A
             WHERE A.EVAYM = ?
             AND A.EMPNOH = ?
             AND A.EMPNO = ?

            ]]>
        </query>
    </sql>

    <!-- 고과 대상자 - 본사 정규직 및 계약직 , PJT 조회 한다. 그룹 A-->
    <sql name="VLUK050_SHR">
        <description>고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				B.EMPNOH,  ASNHR.SF_GET_ENONAME('01', B.EMPNOH) AS HENO_NM,
				C.HEAD_CD, C.DPT_CD, C.TEAM_CD, ASNHR.SF_GET_DPTNAME('01', 'A6', C.TEAM_CD) AS TEAM_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
							ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				A.JOBREF JOBGRPH ,
				COALESCE(X.SCR,0) SCR,
			CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0) END AVGSCR

	        FROM ASNHR.T_EV_RQEMP A
	        FULL OUTER JOIN ASNHR.T_EV_RQHEMP B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
	        LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_RQSCORE G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH LIKE '%'||?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH LIKE '%'||?
			WHERE   1=1
				[1]
				AND A.EVAYM = ?
				AND B.EMPNOH LIKE '%'||?
				AND A.GROUP_NM = 'A'
			ORDER BY C.DPT_CD, C.TEAM_CD, A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql>


    <!-- 고과 대상자 - 본사 정규직 및 계약직 , PJT 조회 한다. 그룹 B-->
    <sql name="VLUK050_SHR2">
        <description>고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				B.EMPNOH,  ASNHR.SF_GET_ENONAME('01', B.EMPNOH) AS HENO_NM,
				C.HEAD_CD, C.DPT_CD, C.TEAM_CD, ASNHR.SF_GET_DPTNAME('01', 'A6', C.TEAM_CD) AS TEAM_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
							ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				A.JOBREF JOBGRPH ,
				COALESCE(X.SCR,0) SCR,
			CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0) END AVGSCR

	        FROM ASNHR.T_EV_RQEMP A
	        FULL OUTER JOIN ASNHR.T_EV_RQHEMP B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
	        LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_RQSCORE G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH LIKE '%'||?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH LIKE '%'||?
			WHERE   1=1
				[1]
				AND A.EVAYM = ?
				AND B.EMPNOH LIKE '%'||?
				AND A.GROUP_NM = 'B'
			ORDER BY C.DPT_CD, C.TEAM_CD, A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql>


    <!-- 고과 대상자 - 본사외(개성, 현장, 금강산등등) 정규직 및 계약직, PJT 조회 한다. -->
    <sql name="VLUK050_SHR_01">
        <description>고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				B.EMPNOH,  ASNHR.SF_GET_ENONAME('01', B.EMPNOH) AS HENO_NM,
				C.HEAD_CD, C.DPT_CD, C.TEAM_CD, ASNHR.SF_GET_DPTNAME('01', 'A6', C.TEAM_CD) AS TEAM_NM,
				A.DEPTCD,
                DECODE(C.DPT_CD,'I100',ASNHR.SF_GET_DPTNAME('01', 'A6',C.TEAM_CD),
                                    		'I200',ASNHR.SF_GET_DPTNAME('01', 'A6',C.TEAM_CD),
                    						'I300',ASNHR.SF_GET_DPTNAME('01', 'A6',C.TEAM_CD),
                                            ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				A.JOBREF JOBGRPH , COALESCE(X.SCR,0) SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0) END AVGSCR

	        FROM ASNHR.T_EV_RQEMP A
	        FULL OUTER JOIN ASNHR.T_EV_RQHEMP B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
	        LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_RQSCORE G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   A.DEPREF IN ('2','3','4','5','6','7','8')
				[1]
				[2]
				AND A.EVAYM = ?
				AND B.EMPNOH LIKE '%'||?
			ORDER BY C.DPT_CD, C.TEAM_CD, A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql>


    <!-- 고과 대상자 - 본사 부서장 조회 한다. -->
    <sql name="VLUK050_SHR_02">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				C.HEAD_CD,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
							ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				COALESCE(X.SCR,0) SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0)
				WHEN B.EVASEQ = 5 THEN COALESCE(A.AVG5,0)
				WHEN B.EVASEQ = 6 THEN COALESCE(A.AVG6,0)
				WHEN B.EVASEQ = 7 THEN COALESCE(A.AVG7,0)
				WHEN B.EVASEQ = 8 THEN COALESCE(A.AVG8,0)
				WHEN B.EVASEQ = 9 THEN COALESCE(A.AVG9,0)
				WHEN B.EVASEQ = 10 THEN COALESCE(A.AVG10,0)
				WHEN B.EVASEQ = 11 THEN COALESCE(A.AVG11,0)
				WHEN B.EVASEQ = 12 THEN COALESCE(A.AVG12,0)
				WHEN B.EVASEQ = 13 THEN COALESCE(A.AVG13,0)
				WHEN B.EVASEQ = 14 THEN COALESCE(A.AVG14,0)
				WHEN B.EVASEQ = 15 THEN COALESCE(A.AVG15,0) END AVGSCR,
				'' ASSES
	        FROM ASNHR.T_EV_RQEMP_DPT A
	        FULL OUTER JOIN ASNHR.T_EV_RQHEMP_DPT B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
	        LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_RQSCORE_DPT G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   A.DEPREF IN ('1')
				AND A.EVAYM = ?
				AND B.EMPNOH LIKE '%'||?
			ORDER BY A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql>


    <!-- 고과 대상자 - 본사외(개성, 현장, 금강산등등) 부서장 조회 한다. -->
    <sql name="VLUK050_SHR_03">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				C.HEAD_CD,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
							ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				COALESCE(X.SCR,0) SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0)
				WHEN B.EVASEQ = 5 THEN COALESCE(A.AVG5,0)
				WHEN B.EVASEQ = 6 THEN COALESCE(A.AVG6,0)
				WHEN B.EVASEQ = 7 THEN COALESCE(A.AVG7,0)
				WHEN B.EVASEQ = 8 THEN COALESCE(A.AVG8,0)
				WHEN B.EVASEQ = 9 THEN COALESCE(A.AVG9,0)
				WHEN B.EVASEQ = 10 THEN COALESCE(A.AVG10,0)
				WHEN B.EVASEQ = 11 THEN COALESCE(A.AVG11,0)
				WHEN B.EVASEQ = 12 THEN COALESCE(A.AVG12,0)
				WHEN B.EVASEQ = 13 THEN COALESCE(A.AVG13,0)
				WHEN B.EVASEQ = 14 THEN COALESCE(A.AVG14,0)
				WHEN B.EVASEQ = 15 THEN COALESCE(A.AVG15,0) END AVGSCR,
				'' ASSES
	        FROM ASNHR.T_EV_RQEMP_DPT A
	        FULL OUTER JOIN ASNHR.T_EV_RQHEMP_DPT B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
	        LEFT JOIN ASNHR.T_CM_PERSON C ON C.ENO_NO = A.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_RQSCORE_DPT G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   A.DEPREF IN ('2','3','4','5','6','7','8')
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 고과입력표 정규직 및 계약직 조회 한다. -->
    <sql name="VLUK050_SHR_SCR">
        <description>고과점수입력(하향) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM, A.GRPCD,
				A.DIVCD, ASNHR.SF_GET_COMMNAME('01', 'O3', A.DIVCD) AS DIVNM,
				A.JOBGRPH,
				A.PRTSEQ,
				A.GRPITEM,
				A.ASKITEM, E.SCRGBN,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				A.ESCR, A.GSCR, A.MSCR, A.LSCR, A.PSCR, COALESCE(E.SCR,0) SCR,
				COALESCE(E.EMPNOH,'') AS EMPNOH, COALESCE(E.EMPNO,'') AS EMPNO, COALESCE(E.EVASEQ,0) AS EVASEQ
			FROM ASNHR.T_EV_RQSHEET A
				 FULL OUTER JOIN ASNHR.T_EV_RQSCORE E ON
			    A.EVAYM = E.EVAYM
				AND A.GRPCD = E.GRPCD
				AND A.DIVCD = E.DIVCD
				AND A.PRTSEQ = E.PRTSEQ
				AND A.EVAYM = ?
				AND E.EMPNOH = ?
				AND E.EMPNO = ?
				AND E.EVASEQ = ?
             WHERE A.EVAYM = ?
             AND A.GRPCD = ?
            ORDER BY A.DIVCD, A.PRTSEQ
            ]]>
        </query>
    </sql>

    <!-- 고과입력표 부서장 조회 한다. -->
    <sql name="VLUK050_SHR_SCR_01">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM, A.GRPCD,
				A.DIVCD, ASNHR.SF_GET_COMMNAME('01', 'O3', A.DIVCD) AS DIVNM,
				A.JOBGRPH,
				A.PRTSEQ,
				A.GRPITEM,
				A.ASKITEM, E.SCRGBN,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				A.ESCR, A.GSCR, A.MSCR, A.LSCR, A.PSCR, COALESCE(E.SCR,0) SCR,
				COALESCE(E.EMPNOH,'') AS EMPNOH, COALESCE(E.EMPNO,'') AS EMPNO, COALESCE(E.EVASEQ,0) AS EVASEQ
			FROM ASNHR.T_EV_RQSHEET A
				 FULL OUTER JOIN ASNHR.T_EV_RQSCORE_DPT E ON
			    A.EVAYM = E.EVAYM
				AND A.GRPCD = E.GRPCD
				AND A.DIVCD = E.DIVCD
				AND A.PRTSEQ = E.PRTSEQ
				AND A.EVAYM = ?
				AND E.EMPNOH = ?
				AND E.EMPNO = ?
				AND E.EVASEQ = ?
             WHERE A.EVAYM = ?
             AND A.GRPCD = '4'
            ORDER BY A.DIVCD, A.PRTSEQ
            ]]>
        </query>
    </sql>


    <!-- 고과점수 정규직 및 계약직 저장 한다. -->
    <sql name="VLUK050_SAV">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_RQSCORE
                 ( EVAYM, EMPNOH, EMPNO, EVASEQ, GB_MST, GB_DTL, SCR, SCRGBN, HEAD_CD, DPT_CD, TEAM_CD, JOB_CD
                 )
            VALUES
                 ( ?, ?, ?, ?, ?,	?,	?,	?, ?, ?, ?, ?
                 )

            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 저장 한다. -->
    <sql name="VLUK050_SAV_01">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_RQSCORE_DPT
                 ( EVAYM, EMPNOH, EMPNO, EVASEQ, GB_MST, GB_DTL, SCR, SCRGBN
                 )
            VALUES
                 ( ?, ?, ?, ?, ?,	?,	?,	?
                 )

            ]]>
        </query>
    </sql>

    <!-- 고과점수 정규직 및 계약직 업데이트 한다. -->
    <sql name="VLUK050_UPT">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_RQEMP
              SET
                  [1]
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 업데이트 한다. -->
    <sql name="VLUK050_UPT_01">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_RQEMP_DPT
              SET
                  [1]
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 정규직 및 계약직삭제 한다. -->
    <sql name="VLUK050_DEL">
        <description>고과점수 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_RQSCORE
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
				AND  EVASEQ = ?
				AND  GB_MST = ?
				AND  GB_DTL = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 삭제 한다. -->
    <sql name="VLUK050_DEL_01">
        <description>고과점수 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_RQSCORE_DPT
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
				AND  EVASEQ = ?
				AND  GB_MST = ?
				AND  GB_DTL = ?
            ]]>
        </query>
    </sql>

    <!-- COMMENT 삭제 한다. -->
    <sql name="VLUK050_DEL_CMT">
        <description>COMMENT 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_COMMENT
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 고과 평가의견 저장 한다. -->
    <sql name="VLUK050_CMT">
        <description>평가의견 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_COMMENT
                 ( EVAYM, EMPNOH, EMPNO, CMMENT
                 )
            VALUES
                 ( ?, ?, ?, ?
                 )

            ]]>
        </query>
    </sql>


    <!-- 고과 평가의견 저장 한다. -->
    <sql name="VLUK050_CMT2">
        <description>평가의견 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_COMMENT
              SET CMMENT = ?
            WHERE EVAYM = ?
            	 AND EMPNOH = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>

<!-- 고과표상세입력 -->
<!--
***********************************************************************
* @UseCase     : VLUK060
* @description : 고과표상세입력
***********************************************************************
* 2013/05/10     정하나       최초작성
***********************************************************************
-->


    <!-- 고과항목 조회 한다. -->

    <sql name="VLUK060_SHR">
        <description>상세고과항목 조회</description>
        <query>
            <![CDATA[
					SELECT '' BCHK, A.EVAYM AS EVAYM ,A.GB_MST AS GB_MST, A.GB_DTL AS GB_DTL, A.ACT_ITEM AS ACT_ITEM
					FROM ASNHR.T_EV_RQSHEET A
					WHERE
						     A.EVAYM=?
						    [1]
					ORDER BY A.GB_MST
            ]]>
        </query>
    </sql>

    <sql name="VLUK060_SHR02">
        <description>상세고과항목 조회</description>
        <query>
            <![CDATA[
					SELECT '' BCHK, A.EVAYM AS EVAYM ,A.GB_MST AS GB_MST, A.GB_DTL AS GB_DTL, A.ACT_ITEM AS ACT_ITEM,
								 B.EVAYM AS D_EVAYM ,B.GB_MST AS D_GB_MST, B.GB_DTL AS D_GB_DTL,
								 B.HEAD_CD AS HEAD_CD, ASNHR.SF_GET_DPTNAME('01', 'B2',B.HEAD_CD) AS HEAD_NM,
								 B.JOB_CD AS JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'EC', B.JOB_CD) AS JOB_NM,
								 B.JIKMU_CD AS JIKMU_CD, ASNHR.SF_GET_COMMNAME('01', 'O4', B.JIKMU_CD) AS JIKMU_NM,
								 B.T_SCR AS T_SCR
					FROM ASNHR.T_EV_RQSHEET A, ASNHR.T_EV_RQGROUP B
					WHERE A.EVAYM=B.EVAYM
						AND A.GB_MST=B.GB_MST
						AND A.GB_DTL=B.GB_DTL
						AND A.EVAYM=?
						[1]
						[2]
						[3]
						[4]
            ]]>
        </query>
    </sql>



    <!-- 상세고과표 저장 한다. -->
    <sql name="VLUK060_INS">
        <description>상세고과표 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_RQGROUP
            ( 	EVAYM,     	GB_MST,    		GB_DTL,
            	HEAD_CD,  	DPT_CD,   		TEAM_CD,
              	JOB_CD,    	JIKMU_CD,  	T_SCR,
              	VG_SCR, 	G_SCR, 			N_SCR, 			B_SCR,		VB_SCR,
              	I_EMPNO,  	I_DATE,    		U_EMPNO,    	U_DATE )
            VALUES
            ( 	?,       ?,         ?,
            	?,       ?,         ?,
            	?,       ?,			 ?,
              	?,       ?,         ?,         ?,        ?,
              	?,       sysdate,    ?,        sysdate )
            ]]>
        </query>
    </sql>

     <!-- 상세고과표 저장 한다. -->
    <sql name="VLUK060_INS2">
        <description>상세고과표 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_RQSHEET
            ( 	EVAYM,     	GB_MST,    		GB_DTL,   		ACT_ITEM,
              	I_EMPNO,  	I_DATE,    		U_EMPNO,    	U_DATE )
            VALUES
            ( 	?,       ?,         	 ?,     	?,
              	?,       sysdate,    ?,        sysdate )
            ]]>
        </query>
    </sql>


    <sql name="VLUK060_DEL">
        <description>상세고과항목_마스터 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_RQSHEET
	            WHERE  EVAYM        = ?
	            AND    GB_MST        = ?
	            AND    GB_DTL        = ?
	            AND    ACT_ITEM      = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUK060_DEL2">
        <description>상세고과항목_그룹 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_RQGROUP
	            WHERE  EVAYM        = ?
	            AND    GB_MST        = ?
	            AND    GB_DTL        = ?
	            AND    HEAD_CD      = ?
            ]]>
        </query>
    </sql>



    <!-- 조회 한다. -->
    <sql name="VLUK070_SHR">
        <description>고과자지정(부서장) 조회</description>
        <query>
            <![CDATA[
				SELECT
				X.CHK, X.EVAYM, X.EMPNO, X.EMPNMK, X.DEPTCD,
				RTRIM(X.DEPTNM) DEPTNM ,
				X.PAYGRD, X.PAYGRDNM,
				MAX(X.SEQ1)SEQ1,   MAX(X.EMPNMK1)EMPNMK1,
				MAX(X.SEQ2)SEQ2,   MAX(X.EMPNMK2)EMPNMK2,
				MAX(X.SEQ3)SEQ3,   MAX(X.EMPNMK3)EMPNMK3,
				MAX(X.SEQ4)SEQ4,   MAX(X.EMPNMK4)EMPNMK4,
				MAX(X.SEQ5)SEQ5,   MAX(X.EMPNMK5)EMPNMK5,
				MAX(X.SEQ6)SEQ6,   MAX(X.EMPNMK6)EMPNMK6,
				MAX(X.SEQ7)SEQ7,   MAX(X.EMPNMK7)EMPNMK7,
				MAX(X.SEQ8)SEQ8,   MAX(X.EMPNMK8)EMPNMK8,
				MAX(X.SEQ9)SEQ9,   MAX(X.EMPNMK9)EMPNMK9,
				MAX(X.SEQ10)SEQ10, MAX(X.EMPNMK10)EMPNMK10,
				MAX(X.SEQ11)SEQ11, MAX(X.EMPNMK11)EMPNMK11,
				MAX(X.SEQ12)SEQ12, MAX(X.EMPNMK12)EMPNMK12,
				MAX(X.SEQ13)SEQ13, MAX(X.EMPNMK13)EMPNMK13,
				MAX(X.SEQ14)SEQ14, MAX(X.EMPNMK14)EMPNMK14,
				MAX(X.SEQ15)SEQ15, MAX(X.EMPNMK15)EMPNMK15
			FROM (
			SELECT
				'F' CHK,
				A.EVAYM,
				A.EMPNO, ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,

				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,

				CASE B.EVASEQ WHEN 1  THEN B.EMPNOH END AS SEQ1,
				CASE B.EVASEQ WHEN 2  THEN B.EMPNOH END AS SEQ2,
				CASE B.EVASEQ WHEN 3  THEN B.EMPNOH END AS SEQ3,
				CASE B.EVASEQ WHEN 4  THEN B.EMPNOH END AS SEQ4,
				CASE B.EVASEQ WHEN 5  THEN B.EMPNOH END AS SEQ5,
				CASE B.EVASEQ WHEN 6  THEN B.EMPNOH END AS SEQ6,
				CASE B.EVASEQ WHEN 7  THEN B.EMPNOH END AS SEQ7,
				CASE B.EVASEQ WHEN 8  THEN B.EMPNOH END AS SEQ8,
				CASE B.EVASEQ WHEN 9  THEN B.EMPNOH END AS SEQ9,
				CASE B.EVASEQ WHEN 10 THEN B.EMPNOH END AS SEQ10,
				CASE B.EVASEQ WHEN 11 THEN B.EMPNOH END AS SEQ11,
				CASE B.EVASEQ WHEN 12 THEN B.EMPNOH END AS SEQ12,
				CASE B.EVASEQ WHEN 13 THEN B.EMPNOH END AS SEQ13,
				CASE B.EVASEQ WHEN 14 THEN B.EMPNOH END AS SEQ14,
				CASE B.EVASEQ WHEN 15 THEN B.EMPNOH END AS SEQ15,
				CASE B.EVASEQ WHEN 1  THEN C.ENO_NM END AS EMPNMK1,
				CASE B.EVASEQ WHEN 2  THEN C.ENO_NM END AS EMPNMK2,
				CASE B.EVASEQ WHEN 3  THEN C.ENO_NM END AS EMPNMK3,
				CASE B.EVASEQ WHEN 4  THEN C.ENO_NM END AS EMPNMK4,
				CASE B.EVASEQ WHEN 5  THEN C.ENO_NM END AS EMPNMK5,
				CASE B.EVASEQ WHEN 6  THEN C.ENO_NM END AS EMPNMK6,
				CASE B.EVASEQ WHEN 7  THEN C.ENO_NM END AS EMPNMK7,
				CASE B.EVASEQ WHEN 8  THEN C.ENO_NM END AS EMPNMK8,
				CASE B.EVASEQ WHEN 9  THEN C.ENO_NM END AS EMPNMK9,
				CASE B.EVASEQ WHEN 10 THEN C.ENO_NM END AS EMPNMK10,
				CASE B.EVASEQ WHEN 11 THEN C.ENO_NM END AS EMPNMK11,
				CASE B.EVASEQ WHEN 12 THEN C.ENO_NM END AS EMPNMK12,
				CASE B.EVASEQ WHEN 13 THEN C.ENO_NM END AS EMPNMK13,
				CASE B.EVASEQ WHEN 14 THEN C.ENO_NM END AS EMPNMK14,
				CASE B.EVASEQ WHEN 15 THEN C.ENO_NM END AS EMPNMK15

				FROM ASNHR.T_EV_RQEMP_DPT A
				FULL OUTER JOIN ASNHR.T_EV_RQHEMP_DPT B ON A.EVAYM = B.EVAYM  AND  A.EMPNO = B.EMPNO
				FULL OUTER JOIN ASNHR.T_CM_PERSON C ON B.EMPNOH = C.ENO_NO AND (C.RET_YMD ='' OR C.RET_YMD IS NULL)
				FULL OUTER JOIN ASNHR.T_CM_PERSON D ON A.EMPNO = D.ENO_NO AND (D.RET_YMD ='' OR D.RET_YMD IS NULL)
				) X
			WHERE X.EVAYM = ?
				AND X.EMPNO LIKE '%'||?||'%'
				AND X.DEPTCD LIKE '%'||?||'%'
				AND X.PAYGRD LIKE '%'||?||'%'
				GROUP BY X.CHK, X.EVAYM, X.EMPNO, X.EMPNMK, X.DEPTCD, X.DEPTNM, X.PAYGRD, X.PAYGRDNM
				ORDER BY X.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 조회 한다. -->
    <sql name="VLUK070_SHR_01">
        <description>고과자지정(부서장) 조회</description>
        <query>
            <![CDATA[
				SELECT
				'' CHKOUT,
				A.EVAYM,
				A.EMPNOH,
				B.ENO_NM AS EMPNMKH,
				A.EMPNO ,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.EVASEQ,
				A.DEPTCD,
				DECODE(A.DEPTCD,ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.EMPNOH AS OLDEMPNOH,
				A.EVASEQ AS OLDEVASEQ
			FROM
				ASNHR.T_EV_RQHEMP_DPT A, ASNHR.T_CM_PERSON B, ASNHR.T_CM_PERSON C
			WHERE A.EMPNOH = B.ENO_NO
				AND A.EMPNO = C.ENO_NO
				AND A.EVAYM = ?
				AND A.EMPNO LIKE '%'||?||'%'
				AND B.DPT_CD LIKE '%'||?||'%'
				AND B.JOB_CD LIKE '%'||?||'%'
				AND A.EMPNOH LIKE '%'||?||'%'
				AND A.EVASEQ LIKE '%'||?||'%'

            ]]>
        </query>
    </sql>

    <!-- 부서장에 대한 고과자 저장 한다. -->
    <sql name="VLUK070_SAV">
        <description>부서장에 대한 고과자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_RQHEMP_DPT
                 ( EVAYM,EMPNOH,EMPNO,EVASEQ,DEPTCD,DEPTNM,PAYGRD
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 ?
                 )

            ]]>
        </query>
    </sql>


    <!-- 부서장 고과자 삭제 한다. -->
    <sql name="VLUK070_DEL">
        <description>부서장 고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_RQHEMP_DPT
			WHERE EVAYM = ?
				AND EMPNOH = ?
				AND EMPNO = ?
				AND EVASEQ = ?
            ]]>
        </query>
    </sql>


<!-- 고과점수조정 -->
<!--
***********************************************************************
* @UseCase     : VLUK080
* @description : 고과점수조정
***********************************************************************
* 2013/05/30      이동훈        최초작성.
***********************************************************************
-->


    <!-- 정규직 고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				B.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2',B.HEAD_CD) HEADNM,
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				--[1]
				--[2]
				--AND A.PAYGRD NOT IN ('300','700','890') 
				--AND A.JOBREF!='8' 
				--AND (A.DUTY_CD NOT IN ('07','05','20','41') OR A.DUTY_CD IS NULL)-- 정규직
				AND A.EMPNO NOT IN ('2080044','2040006','2080006')	


			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>



    <!-- 계약직 고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR_01">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				B.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2',B.HEAD_CD) HEADNM,				
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				[1]
				[2]
				AND A.PAYGRD IN ('300','700','890')
				--AND A.EMPNO NOT IN ('3170011') 
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    
    
    <!-- PJT 고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR_PJT">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				B.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2',B.HEAD_CD) HEADNM,				
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
 				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				[1]
				[2]
				AND A.PAYGRD NOT IN ('300','700','890') 
				AND A.JOBREF='8'
				AND (A.DUTY_CD !='20' OR A.DUTY_CD IS NULL )  -- PJT 이면서 현장소장이 아닌경우
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 팀장  고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR_DPT">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				B.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2',B.HEAD_CD) HEADNM,				
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
 				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				[1]
				[2]
				AND A.PAYGRD NOT IN ('300','700','890') 
				AND A.JOBREF!='8' 
				AND A.DUTY_CD IN ('05','07','41') -- 팀장
				
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    
    <!-- 현장소장   고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR_CON">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				B.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2',B.HEAD_CD) HEADNM,				
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
 				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
             
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				[1]
				[2]
				AND A.PAYGRD NOT IN ('300','700','890')  
				AND A.DUTY_CD ='20' -- 현장소장 
				AND A.EMPNO NOT IN ('2080008','2180014')
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    

    <!-- 정규직 고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR_02">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				B.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2',B.HEAD_CD) HEADNM,				
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				--AND A.PAYGRD NOT IN ('300','700','890') 
				--AND A.JOBREF!='8' 
				--AND (A.DUTY_CD NOT IN ('07','05','20','41') OR A.DUTY_CD IS NULL)-- 정규직
				--AND A.EMPNO NOT IN ('2080044','2040006','2080006')	
				--OR (A.EMPNO IN ('2080008','2180014') AND A.EVAYM = '201911') 								
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>



    <!-- 계약직 고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR_03">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE				
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,

				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO			
				AND A.PAYGRD IN ('300','700','890')
				--AND A.EMPNO NOT IN ('3170011') 
			ORDER BY A.PAYGRD,A.EMPNO			
			
            ]]>
        </query>
    </sql>
    
    
     <!-- PJT 고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR_02_PJT">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND A.PAYGRD NOT IN ('300','700','890') 
				AND A.JOBREF='8'
				AND (A.DUTY_CD !='20' OR A.DUTY_CD IS NULL )  -- PJT 이면서 현장소장이 아닌경우
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    
     <!-- 팀장  고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR_02_DPT">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND A.PAYGRD NOT IN ('300','700','890') 
				AND A.JOBREF!='8' 
				AND A.DUTY_CD IN ('05','07','41') -- 팀장			
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>
    
     <!-- 현장소장   고과점수 조정 조회 한다. -->
    <sql name="VLUK080_SHR_02_CON">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD) AS DEPTNM,
				
				RTRIM(F.EMPNOH) EMPNOH_1,	
				ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, 
				COALESCE(A.AVG1,0) AVG1,
				
				RTRIM(G.EMPNOH) EMPNOH_2,	
				ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, 
				COALESCE(A.AVG2,0) AVG2,

				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.5+COALESCE(A.SCR2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0)
				ELSE 0 END AS SCRAVG ,
				
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.5+COALESCE(A.AVG2,0)*0.5)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0)
				ELSE 0 END AS CORAVG,
				
				COALESCE(A.TOTAVG,0) TOTAVG,
				A.GRADE,  
				A.GRADE2 , 
				A.GRADE3
			FROM
                ASNHR.T_EV_RQEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2

			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND A.PAYGRD NOT IN ('300','700','890')  
				AND A.DUTY_CD ='20' -- 현장소장 
				AND A.EMPNO NOT IN ('2080008','2180014')
			ORDER BY A.PAYGRD,A.EMPNO			
			
            ]]>
        </query>
    </sql>
    
    


    <!-- 정규직 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUK080_SHR_04">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
            
			SELECT
				Y.HEAD_CD,Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'1') CNT,X.HEAD_CD, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
						A.HEAD_CD,					
			            CASE 
			            	 WHEN (A.PAYGRD >='140' AND A.PAYGRD<='210') THEN '200'
			                 WHEN (A.PAYGRD >='220' AND A.PAYGRD<='270') THEN '220'
			                 ELSE '999' END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?
				) X
			WHERE X.EVAYM =?   
			)Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2
			
            ]]>
        </query>
    </sql>


    <!-- 계약직 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUK080_SHR_05">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.HEAD_CD,Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) )AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'2') CNT, X.HEAD_CD, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
                        'A999' HEAD_CD,
                        '300' PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ? 
						AND A.PAYGRD IN ('300','700','890')
				) X
			WHERE X.EVAYM =? AND X.PAYGRD2 IN ('300','700','890')
			)Y
			ORDER BY Y.PAYGRD2
            ]]>
        </query>
    </sql>
    
     <!-- PJT 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUK080_SHR_04_PJT">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
            
			SELECT
				Y.HEAD_CD,Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'3') CNT,X.HEAD_CD, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
						A.HEAD_CD,
			            CASE WHEN (A.PAYGRD >='140' AND A.PAYGRD<='210') THEN '200'
			                 WHEN (A.PAYGRD >='220' AND A.PAYGRD<='270') THEN '200'
			            END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					AND A.PAYGRD NOT IN ('300','700','890') 
					AND A.JOBREF ='8'
					AND (A.DUTY_CD !='20' OR A.DUTY_CD IS NULL )  -- PJT 이면서 현장소장이 아닌경우
				) X
			WHERE X.EVAYM =?   
			)Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2
			
            ]]>
        </query>
    </sql>
    
    
    <!-- 팀장  직급별 등급 인원수 조회 한다. -->
    <sql name="VLUK080_SHR_04_DPT">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
            
			SELECT
				Y.HEAD_CD,
				Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*17.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*17.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*17.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*17.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'4') CNT,X.HEAD_CD, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
						'A999' HEAD_CD,
                        '200'  PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
						AND A.PAYGRD NOT IN ('300','700','890') 
						AND A.JOBREF !='8'					
						AND A.DUTY_CD IN ('05','07','17','41') -- 팀장
						OR (A.EMPNO IN ('2060005') AND A.EVAYM = '201811')
				) X
			WHERE X.EVAYM =?   
				AND X.PAYGRD2 NOT IN ('300','700','890') 
				AND X.HEAD_CD!='A600'
			)Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2
			
            ]]>
        </query>
    </sql>
    
    <!-- 현장소장  직급별 등급 인원수 조회 한다. -->
    <sql name="VLUK080_SHR_04_CON">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
            
			SELECT
				Y.HEAD_CD,Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'5') CNT,X.HEAD_CD, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
						'A999' HEAD_CD,
                        '200'  PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
						AND A.PAYGRD NOT IN ('300','700','890') 
	                    AND A.DUTY_CD ='20' -- 현장소장
		              	AND A.EMPNO NOT IN ('2050030','2080021','2050060')
		              	OR (A.EMPNO IN ('2050008','2050015','2060007','2080021','2090002') AND A.EVAYM = '201811') 	                    
				) X
			WHERE X.EVAYM =?   
				AND X.PAYGRD2 NOT IN ('300','700','890') 
				AND X.HEAD_CD!='A600'
			)Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2
			
            ]]>
        </query>
    </sql>


    <!-- 정규직 직급별 rank 조회 한다. -->
    <sql name="VLUK080_SHR_06">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, 
				Y.EMPNO, 
				Y.HEAD_CD,
				Y.PAYGRD, 
				Y.PAYGRD2,
				Y.TOTAVG, 
				Y.RNK, 
				Y.CNT, 
				''GRADE
			FROM(
				SELECT
					X.EVAYM, 
					X.EMPNO, 
					X.HEAD_CD, 
					X.PAYGRD, 
					X.PAYGRD2, 
					X.TOTAVG,
					RANK() OVER( PARTITION BY X.HEAD_CD,X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'1') CNT
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
						A.HEAD_CD,
			            CASE WHEN (A.PAYGRD >='140' AND A.PAYGRD<='210') THEN '200'
			                 WHEN (A.PAYGRD >='220' AND A.PAYGRD<='270') THEN '220'
			                 ELSE '999' END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
				) X
				WHERE X.EVAYM = ?  
			) Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>

    <!-- 계약직 직급별 rank 조회 한다. -->
    <sql name="VLUK080_SHR_07">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, 
				Y.EMPNO,
				Y.HEAD_CD, 
				Y.PAYGRD, 
				Y.PAYGRD2,
				Y.TOTAVG, 
				Y.RNK, 
				Y.CNT, 
				''GRADE
			FROM(
				SELECT
					X.EVAYM, 
					X.EMPNO, 
					X.HEAD_CD, 
					X.PAYGRD, 
					X.PAYGRD2, 
					X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'2') CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD, A.TOTAVG,
						'A999' HEAD_CD,
						'300' PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  AND A.PAYGRD IN ('300','700','890')
				) X
				WHERE X.EVAYM = ?  AND X.PAYGRD2 IN ('300','700','890')
			) Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>
    
     <!-- PJT 직급별 rank 조회 한다. -->
    <sql name="VLUK080_SHR_06_PJT">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, 
				Y.EMPNO, 
				Y.HEAD_CD,
				Y.PAYGRD, 
				Y.PAYGRD2,
				Y.TOTAVG, 
				Y.RNK, 
				Y.CNT, 
				''GRADE
			FROM(
				SELECT
					X.EVAYM, 
					X.EMPNO, 
					X.HEAD_CD, 
					X.PAYGRD, 
					X.PAYGRD2, 
					X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'3') CNT
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
						A.HEAD_CD,
			            CASE WHEN (A.PAYGRD >='140' AND A.PAYGRD<='210') THEN '200'
			                 WHEN (A.PAYGRD >='220' AND A.PAYGRD<='270') THEN '200'
			                 ELSE '999' END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					AND A.PAYGRD NOT IN ('300','700','890') 
					AND A.JOBREF='8'
					AND (A.DUTY_CD !='20' OR A.DUTY_CD IS NULL )  -- PJT 이면서 현장소장이 아닌경우
				) X
				WHERE X.EVAYM = ?  
			) Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>
    
      <!-- 팀장  직급별 rank 조회 한다. -->
    <sql name="VLUK080_SHR_06_DPT">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, 
				Y.EMPNO, 
				Y.HEAD_CD,
				Y.PAYGRD, 
				Y.PAYGRD2,
				Y.TOTAVG, 
				Y.RNK, 
				Y.CNT, 
				''GRADE
			FROM(
				SELECT
					X.EVAYM, 
					X.EMPNO, 
					X.HEAD_CD, 
					X.PAYGRD, 
					X.PAYGRD2, 
					X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'4') CNT
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
						'A999' HEAD_CD,
                        '200'  PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					AND A.PAYGRD NOT IN ('300','700','890') 
					AND A.JOBREF!='8'
					AND A.DUTY_CD IN ('05','07','17','41') -- 팀장
					OR (A.EMPNO IN ('2060005') AND A.EVAYM = '201811')					
				) X
				WHERE X.EVAYM = ?  
				AND X.PAYGRD2 NOT IN ('300','700','890') 
				AND X.HEAD_CD !='A600'
			) Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>
    
      <!-- 현장소장  직급별 rank 조회 한다. -->
    <sql name="VLUK080_SHR_06_CON">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, 
				Y.EMPNO, 
				Y.HEAD_CD,
				Y.PAYGRD, 
				Y.PAYGRD2,
				Y.TOTAVG, 
				Y.RNK, 
				Y.CNT, 
				''GRADE
			FROM(
				SELECT
					X.EVAYM, 
					X.EMPNO, 
					X.HEAD_CD, 
					X.PAYGRD, 
					X.PAYGRD2, 
					X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT2015(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'5') CNT
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
						'A999' HEAD_CD,
                        '200'  PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  
					AND A.PAYGRD NOT IN ('300','700','890') 
					AND A.DUTY_CD ='20' -- 현장소장
	              	AND A.EMPNO NOT IN ('2050030','2080021','2050060')
	              	OR (A.EMPNO IN ('2050008','2050015','2060007','2080021','2090002') AND A.EVAYM = '201811') 					
				) X
				WHERE X.EVAYM = ?  
				AND X.PAYGRD2 NOT IN ('300','700','890') 
				AND X.HEAD_CD !='A600'
			) Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>


    <!-- 등급생성 저장 한다. -->
    <sql name="VLUK080_SAV">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_RQEMP
			SET
			GRADE2 = ?,
			GRADE3 = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 실행결과 저장 한다. -->
    <sql name="VLUK080_SAV_EXE">
        <description>실행결과 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_RQEMP
			SET
			TOTAVG = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 등급생성 저장 한다. -->
    <sql name="VLUK080_SAV_GRD">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_RQEMP
			SET
			GRADE = ?,
			GRADE2 = ?,
			GRADE3 = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 정규직 종합점수 조정 조회 한다. 2014년도 버젼 -->
    <sql name="VLUK090_SHR">
        <description>종합점수 조정 조회</description>
        <query>
            <![CDATA[
		        SELECT Z.EMPNO,Z.EMPNMK, Z.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(Z.PAYGRD)) AS GRDNM, Y.DPT_CD,
		        DECODE(Y.DPT_CD,SF_GET_DPTNAME('01', 'A4',Y.DPT_CD),
		                               ASNHR.SF_GET_DPTNAME('01', 'A6',Y.DPT_CD),SF_GET_DPTNAME('01', 'A4',Y.DPT_CD)) AS DEPTNM,
		                               Z.SCR11,Z.SCR12,Z.SCR13,Z.SCR14,
		                               Z.SCR21,Z.SCR22,Z.SCR23,Z.SCR24,
                                      Z.GOG11,Z.GOG12,Z.GOG13,
                                      Z.GOG21,Z.GOG22,Z.GOG23,     		                               
		                               Z.TOTAVG1, Z.TOTAVG2,
		        CASE WHEN (Z.TOTAVG1 = '0' OR Z.TOTAVG2 = '0') THEN Z.TOTAVG1+Z.TOTAVG2 ELSE (Z.TOTAVG1+Z.TOTAVG2)/2
		        END TOTAVG_FINAL,Z.GRADE, Z.GRADE2, Z.GRADE3
		        FROM
		        (
		        SELECT X.EMPNO, X.EMPNMK, X.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(X.PAYGRD)) AS GRDNM,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.AVG1 ELSE 0 END) AS SCR11,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.AVG2 ELSE 0 END) AS SCR12,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.AVG3 ELSE 0 END) AS SCR13,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.DPTAVG*0.5 ELSE 0 END) AS SCR14,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.AVG1 ELSE 0 END) AS SCR21,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.AVG2 ELSE 0 END) AS SCR22,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.AVG3 ELSE 0 END) AS SCR23,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.DPTAVG*0.5 ELSE 0 END) AS SCR24,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.TOTAVG1 ELSE 0 END) AS TOTAVG1,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.TOTAVG1 ELSE 0 END) AS TOTAVG2,
                 MAX(CASE WHEN X.EVAYM = ('201306') THEN X.GOG1 ELSE '' END) AS GOG11,
                 MAX(CASE WHEN X.EVAYM = ('201306') THEN X.GOG2 ELSE '' END) AS GOG12,
                 MAX(CASE WHEN X.EVAYM = ('201306') THEN X.GOG3 ELSE '' END) AS GOG13,
                 MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GOG1 ELSE '' END) AS GOG21,
                 MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GOG2 ELSE '' END) AS GOG22,
                 MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GOG3 ELSE '' END) AS GOG23, 		        
		          MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GRADE ELSE '' END) AS GRADE,
		          MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GRADE2 ELSE '' END) AS GRADE2,
		          MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GRADE3 ELSE '' END) AS GRADE3
				       FROM        (
				                    SELECT
				                       A.EVAYM,
				                       A.EMPNO,
				                       ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				                       A.PAYGRD,
				                       ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				                       A.DEPTCD,
				                       DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
				                       ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
                                       A.AVG1,SF_GET_ENONAME('01', F.EMPNOH) AS GOG1,
                                       A.AVG2,SF_GET_ENONAME('01', G.EMPNOH) AS GOG2,
                                       A.AVG3,SF_GET_ENONAME('01', H.EMPNOH) AS GOG3,
				                       P.DPTAVG,
				                       COALESCE(A.TOTAVG,0) TOTAVG1,
				                       A.GRADE,  A.GRADE2 , A.GRADE3
				                FROM
				                      ASNHR.T_EV_RQEMP A
                                                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                                                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                                                FULL JOIN ASNHR.T_EV_RQHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO = H.EMPNO AND H.EVASEQ = 3
								FULL JOIN
								(
								SELECT D.EVAYM, D.EMPNO,
									ROUND(COALESCE(
									(D.AVG1+D.AVG2+D.AVG3+D.AVG4+D.AVG5
									+D.AVG6+D.AVG7+D.AVG8+D.AVG9+D.AVG10
									+D.AVG11+D.AVG12+D.AVG13+D.AVG14+D.AVG15)/V.CNT,0),4) AS DPTAVG
								FROM ASNHR.T_EV_RQEMP_DPT D
								FULL JOIN (
									SELECT EVAYM, EMPNO, COUNT(EMPNOH) CNT
									FROM ASNHR.T_EV_RQHEMP_DPT
									WHERE EVAYM LIKE '2013%'
									GROUP BY EVAYM, EMPNO
									)V ON D.EVAYM = V.EVAYM AND D.EMPNO = V.EMPNO
								)P ON P.EVAYM = A.EVAYM AND P.EMPNO = A.EMPNO


				                WHERE
				                       A.EVAYM LIKE '2013%'
				                       AND 1=1
				                       AND 2=2
				                       AND A.PAYGRD NOT IN ('300','700','890')

				                       ) X
				GROUP BY X.EMPNO, X.EMPNMK, X.PAYGRD
				) Z, ASNHR.T_CM_PERSON Y
				WHERE Z.EMPNO = Y.ENO_NO
				[1]
				[2]
				AND Z.PAYGRD NOT IN ('300','700','890')
			ORDER BY Z.PAYGRD,Z.EMPNO
            ]]>
        </query>
    </sql>


    <!-- 정규직 종합점수 조정 조회 한다. 2013년도 버젼 -->
    <sql name="VLUK090_SHR_2013">
        <description>종합점수 조정 조회</description>
        <query>
            <![CDATA[
		        SELECT Z.EMPNO,Z.EMPNMK, Z.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(Z.PAYGRD)) AS GRDNM, Y.DPT_CD,
		        DECODE(Y.DPT_CD,SF_GET_DPTNAME('01', 'A4',Y.DPT_CD),
		                               ASNHR.SF_GET_DPTNAME('01', 'A6',Y.DPT_CD),SF_GET_DPTNAME('01', 'A4',Y.DPT_CD)) AS DEPTNM,
		                               Z.SCR11,Z.SCR12,Z.SCR13,Z.SCR14,
		                               Z.SCR21,Z.SCR22,Z.SCR23,Z.SCR24,
                                      Z.GOG11,Z.GOG12,Z.GOG13,
                                      Z.GOG21,Z.GOG22,Z.GOG23,     		                               
		                               Z.TOTAVG1, Z.TOTAVG2,
		        CASE WHEN (Z.TOTAVG1 = '0' OR Z.TOTAVG2 = '0') THEN Z.TOTAVG1+Z.TOTAVG2 ELSE (Z.TOTAVG1+Z.TOTAVG2)/2
		        END TOTAVG_FINAL,Z.GRADE, Z.GRADE2, Z.GRADE3
		        FROM
		        (
		        SELECT X.EMPNO, X.EMPNMK, X.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(X.PAYGRD)) AS GRDNM,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.AVG1 ELSE 0 END) AS SCR11,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.AVG2 ELSE 0 END) AS SCR12,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.AVG3 ELSE 0 END) AS SCR13,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.DPTAVG*0.5 ELSE 0 END) AS SCR14,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.AVG1 ELSE 0 END) AS SCR21,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.AVG2 ELSE 0 END) AS SCR22,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.AVG3 ELSE 0 END) AS SCR23,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.DPTAVG*0.5 ELSE 0 END) AS SCR24,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.TOTAVG1 ELSE 0 END) AS TOTAVG1,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.TOTAVG1 ELSE 0 END) AS TOTAVG2,
                 MAX(CASE WHEN X.EVAYM = ('201306') THEN X.GOG1 ELSE '' END) AS GOG11,
                 MAX(CASE WHEN X.EVAYM = ('201306') THEN X.GOG2 ELSE '' END) AS GOG12,
                 MAX(CASE WHEN X.EVAYM = ('201306') THEN X.GOG3 ELSE '' END) AS GOG13,
                 MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GOG1 ELSE '' END) AS GOG21,
                 MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GOG2 ELSE '' END) AS GOG22,
                 MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GOG3 ELSE '' END) AS GOG23, 		        
		          MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GRADE ELSE '' END) AS GRADE,
		          MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GRADE2 ELSE '' END) AS GRADE2,
		          MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GRADE3 ELSE '' END) AS GRADE3
				       FROM        (
				                    SELECT
				                       A.EVAYM,
				                       A.EMPNO,
				                       ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				                       A.PAYGRD,
				                       ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				                       A.DEPTCD,
				                       DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
				                       ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
                                              A.AVG1,SF_GET_ENONAME('01', F.EMPNOH) AS GOG1,
                                              A.AVG2,SF_GET_ENONAME('01', G.EMPNOH) AS GOG2,
                                              A.AVG3,SF_GET_ENONAME('01', H.EMPNOH) AS GOG3,
				                       P.DPTAVG,
				                       COALESCE(A.TOTAVG,0) TOTAVG1,
				                       A.GRADE,  A.GRADE2 , A.GRADE3
				                FROM
				                      ASNHR.T_EV_RQEMP A
                                                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                                                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                                                FULL JOIN ASNHR.T_EV_RQHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO = H.EMPNO AND H.EVASEQ = 3
								FULL JOIN
								(
								SELECT D.EVAYM, D.EMPNO,
									ROUND(COALESCE(
									(D.AVG1+D.AVG2+D.AVG3+D.AVG4+D.AVG5
									+D.AVG6+D.AVG7+D.AVG8+D.AVG9+D.AVG10
									+D.AVG11+D.AVG12+D.AVG13+D.AVG14+D.AVG15)/V.CNT,0),4) AS DPTAVG
								FROM ASNHR.T_EV_RQEMP_DPT D
								FULL JOIN (
									SELECT EVAYM, EMPNO, COUNT(EMPNOH) CNT
									FROM ASNHR.T_EV_RQHEMP_DPT
									WHERE EVAYM LIKE '2013%'
									GROUP BY EVAYM, EMPNO
									)V ON D.EVAYM = V.EVAYM AND D.EMPNO = V.EMPNO
								)P ON P.EVAYM = A.EVAYM AND P.EMPNO = A.EMPNO


				                WHERE
				                       A.EVAYM LIKE '2013%'
				                       AND 1=1
				                       AND 2=2
				                       AND A.PAYGRD NOT IN ('300','700','890')

				                       ) X
				GROUP BY X.EMPNO, X.EMPNMK, X.PAYGRD
				) Z, ASNHR.T_CM_PERSON Y
				WHERE Z.EMPNO = Y.ENO_NO
				[1]
				[2]
				AND Z.PAYGRD NOT IN ('300','700','890')
			ORDER BY Z.PAYGRD,Z.EMPNO
            ]]>
        </query>
    </sql>


    <!--  종합점수 조정 조회 한다. -->
    <sql name="VLUK090_SHR_01">
        <description>종합점수 조정 조회</description>
        <query>
            <![CDATA[
		        SELECT Z.EMPNO,Z.EMPNMK, Z.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(Z.PAYGRD)) AS GRDNM, Y.DPT_CD,
		        DECODE(Y.DPT_CD,SF_GET_DPTNAME('01', 'A4',Y.DPT_CD),
		                               ASNHR.SF_GET_DPTNAME('01', 'A6',Y.DPT_CD),SF_GET_DPTNAME('01', 'A4',Y.DPT_CD)) AS DEPTNM,
		                               Z.SCR11,Z.SCR12,Z.SCR13,
		                               Z.SCR21,Z.SCR22,Z.SCR23,
                                      Z.GOG11,Z.GOG12,Z.GOG13,
                                      Z.GOG21,Z.GOG22,Z.GOG23,   		                               
		                               Z.TOTAVG1, Z.TOTAVG2,
		        CASE WHEN (Z.TOTAVG1 = '0' OR Z.TOTAVG2 = '0') THEN Z.TOTAVG1+Z.TOTAVG2 ELSE (Z.TOTAVG1+Z.TOTAVG2)/2
		        END TOTAVG_FINAL,Z.GRADE, Z.GRADE2, Z.GRADE3
		        FROM
		        (
		        SELECT X.EMPNO, X.EMPNMK, X.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(X.PAYGRD)) AS GRDNM,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.AVG1 ELSE 0 END) AS SCR11,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.AVG2 ELSE 0 END) AS SCR12,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.AVG3 ELSE 0 END) AS SCR13,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.AVG1 ELSE 0 END) AS SCR21,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.AVG2 ELSE 0 END) AS SCR22,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.AVG3 ELSE 0 END) AS SCR23,
		        SUM(CASE WHEN X.EVAYM = ('201306') THEN X.TOTAVG1 ELSE 0 END) AS TOTAVG1,
		        SUM(CASE WHEN X.EVAYM = ('201311') THEN X.TOTAVG1 ELSE 0 END) AS TOTAVG2,
                 MAX(CASE WHEN X.EVAYM = ('201306') THEN X.GOG1 ELSE '' END) AS GOG11,
                 MAX(CASE WHEN X.EVAYM = ('201306') THEN X.GOG2 ELSE '' END) AS GOG12,
                 MAX(CASE WHEN X.EVAYM = ('201306') THEN X.GOG3 ELSE '' END) AS GOG13,
                 MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GOG1 ELSE '' END) AS GOG21,
                 MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GOG2 ELSE '' END) AS GOG22,
                 MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GOG3 ELSE '' END) AS GOG23, 			        
		          MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GRADE ELSE '' END) AS GRADE,
		          MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GRADE2 ELSE '' END) AS GRADE2,
		          MAX(CASE WHEN X.EVAYM = ('201311') THEN X.GRADE3 ELSE '' END) AS GRADE3
				       FROM        (
				                    SELECT
				                       A.EVAYM,
				                       A.EMPNO,
				                       ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				                       A.PAYGRD,
				                       ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				                       A.DEPTCD,
				                       DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
				                       ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
                                              A.AVG1,SF_GET_ENONAME('01', F.EMPNOH) AS GOG1,
                                              A.AVG2,SF_GET_ENONAME('01', G.EMPNOH) AS GOG2,
                                              A.AVG3,SF_GET_ENONAME('01', H.EMPNOH) AS GOG3,
				                       COALESCE(A.TOTAVG,0) TOTAVG1,
				                       A.GRADE,  A.GRADE2 , A.GRADE3
				                FROM
				                      ASNHR.T_EV_RQEMP A
                                                FULL JOIN ASNHR.T_EV_RQHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                                                FULL JOIN ASNHR.T_EV_RQHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                                                FULL JOIN ASNHR.T_EV_RQHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO = H.EMPNO AND H.EVASEQ = 3
				                      
				                WHERE
				                       A.EVAYM LIKE '2013%'
				                       AND 1=1
				                       AND 2=2
				                       AND A.PAYGRD  IN ('300','700','890')

				                       ) X
				GROUP BY X.EMPNO, X.EMPNMK, X.PAYGRD
				) Z, ASNHR.T_CM_PERSON Y
				WHERE Z.EMPNO = Y.ENO_NO
				[1]
				[2]
				AND Z.PAYGRD  IN ('300','700','890')
			ORDER BY Z.PAYGRD,Z.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 정규직 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUK090_SHR_04">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.PAYGRD2,
				CAST(ROUND(Y.CNT*5.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*20.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*5.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*20.00/100.00,0)AS INTEGER )
				+ CAST(ROUND(Y.CNT*13.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*2.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*13.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*2.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT(X.EVAYM, X.PAYGRD2) CNT, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD, A.TOTAVG,

						CASE WHEN (B.DUTY_CD IN ('17','29','34') OR  			--//2013년 상반기에는 부서장을  제외 조재균 차장님이 부서장이라서
						--CASE WHEN (B.DUTY_CD IN ('05','17','29','34') OR  	--//2012년 상반기에는 부서장 대행 제외
						-- CASE WHEN (B.DUTY_CD IN ('05','17','29') OR  //2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
						(B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR (A.PAYGRD >='140' AND A.PAYGRD<='170') ) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  AND A.PAYGRD NOT IN ('300','700','890')
				) X
			WHERE X.EVAYM =?   AND X.PAYGRD2 NOT IN ('300','700','890')
			)Y
			ORDER BY Y.PAYGRD2
            ]]>
        </query>
    </sql>


    <!-- 계약직 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUK090_SHR_05">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.PAYGRD2,
				CAST(ROUND(Y.CNT*5.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*20.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*5.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*20.00/100.00,0)AS INTEGER )
				+ CAST(ROUND(Y.CNT*13.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*2.00 /100.00,0)AS INTEGER ) )AS B,
				CAST(ROUND(Y.CNT*13.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*2.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT2(X.EVAYM, X.PAYGRD2) CNT, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD, A.TOTAVG,

						CASE WHEN (B.DUTY_CD IN ('17','29','34') OR  			--//2013년 상반기에는 부서장을  제외 조재균 차장님이 부서장이라서
						--CASE WHEN (B.DUTY_CD IN ('05','17','29','34') OR  	--//2012년 상반기에는 부서장 대행 제외
						--CASE WHEN (B.DUTY_CD IN ('05','17','29') OR  //2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
 						(B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR (A.PAYGRD >='140' AND A.PAYGRD<='170') ) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ? AND A.PAYGRD IN ('300','700','890')
				) X
			WHERE X.EVAYM =? AND X.PAYGRD2 IN ('300','700','890')
			)Y
			ORDER BY Y.PAYGRD2
            ]]>
        </query>
    </sql>


    <!-- 정규직 직급별 rank 조회 한다. -->
    <sql name="VLUK090_SHR_06">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, Y.EMPNO, Y.PAYGRD, Y.PAYGRD2,
				Y.TOTAVG, Y.RNK, Y.CNT, ''GRADE
			FROM(
				SELECT
					X.EVAYM, X.EMPNO, X.PAYGRD, X.PAYGRD2, X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT(X.EVAYM, X.PAYGRD2) CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD,
						NVL(A.TOTAVG,0)/2 + NVL( (SELECT K.TOTAVG FROM ASNHR.T_EV_RQEMP K
								WHERE K.EVAYM = '201306'  AND K.EMPNO = A.EMPNO),A.TOTAVG)/2 TOTAVG,

						CASE WHEN (B.DUTY_CD IN ('17','29','34') OR  			--//2013년 상반기에는 부서장을  제외 조재균 차장님이 부서장이라서
						--CASE WHEN (B.DUTY_CD IN ('05','17','29','34') OR  	--//2012년 상반기에는 부서장 대행 제외
						-- CASE WHEN (B.DUTY_CD IN ('05','17','29') OR		//2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
						(B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR  (A.PAYGRD >='140' AND A.PAYGRD<='170')) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  AND A.PAYGRD NOT IN ('300','700','890')
				) X
				WHERE X.EVAYM = ?  AND X.PAYGRD2 NOT IN ('300','700','890')
			) Y
			ORDER BY Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>

    <!-- 계약직 직급별 rank 조회 한다. -->
    <sql name="VLUK090_SHR_07">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, Y.EMPNO, Y.PAYGRD, Y.PAYGRD2,
				Y.TOTAVG, Y.RNK, Y.CNT, ''GRADE
			FROM(
				SELECT
					X.EVAYM, X.EMPNO, X.PAYGRD, X.PAYGRD2, X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT2(X.EVAYM, X.PAYGRD2) CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD,
						NVL(A.TOTAVG,0)/2 + NVL( (SELECT K.TOTAVG FROM ASNHR.T_EV_RQEMP K
								WHERE K.EVAYM = '201306'  AND K.EMPNO = A.EMPNO),A.TOTAVG)/2 TOTAVG,

						CASE WHEN (B.DUTY_CD IN ('17','29','34') OR  			--//2013년 상반기에는 부서장을  제외 조재균 차장님이 부서장이라서
						--CASE WHEN (B.DUTY_CD IN ('05','17','29','34') OR  	--//2012년 상반기에는 부서장 대행 제외
						-- CASE WHEN (B.DUTY_CD IN ('05','17','29') OR  //2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
						(B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR  (A.PAYGRD >='140' AND A.PAYGRD<='170')) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  AND A.PAYGRD IN ('300','700','890')
				) X
				WHERE X.EVAYM = ?  AND X.PAYGRD2 IN ('300','700','890')
			) Y
			ORDER BY Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>


    <!-- 등급생성 저장 한다. -->
    <sql name="VLUK090_SAV">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_RQEMP
			SET
			GRADE2 = ?,
			GRADE3 = ?
			WHERE EVAYM = '201311' and EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 등급생성 저장 한다. -->
    <sql name="VLUK090_SAV_GRD">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_RQEMP
			SET
			GRADE = ?,
			GRADE2 = ?,
			GRADE3 = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>

<!-- 평가기준정보 -->
<!--
***********************************************************************
* @UseCase     : VLUA010
* @description : 평가구조설정
***********************************************************************
* 2006/09/21      오대성        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도에 따른 평가 기준 정보를 조회 한다. -->
    <sql name="VLUA010_SHR">
        <description>평가 기준 정보 설정 조회</description>
        <query>
            <![CDATA[
            SELECT  GUBUN, EVL_YY, ABL_CNT, DOWN_YN, DOWN_CNT, UP_YN, UP_CNT, ACH_CNT,
                    HEAD_YN, UP_RATE1, UP_RATE2, UP_RATE3, DOWN_RATE1, DOWN_RATE2, DOWN_RATE3,
                    ACH_RATE1, ACH_RATE2, ACH_RATE3
            FROM    ASNHR.T_EV_TYPE
            WHERE   GUBUN  = ?
            AND     EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 새로 추가된 평가 기준 정보를 저장한다. -->
    <sql name="VLUA010_INS">
        <description>평가 기준 정보 설정 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_TYPE
            ( GUBUN,     EVL_YY,    ABL_CNT,   DOWN_YN,  DOWN_CNT,   UP_YN,      UP_CNT,    ACH_CNT,
              HEAD_YN,   UP_RATE1,  UP_RATE2,  UP_RATE3, DOWN_RATE1, DOWN_RATE2, DOWN_RATE3,
              ACH_RATE1, ACH_RATE2, ACH_RATE3, IPT_MAN,  IPT_YMD,    UPT_MAN,    UPT_YMD )
            VALUES
            ( ?,         ?,         ?,         ?,        ?,          ?,          ?,         ?,
              ?,         ?,         ?,         ?,        ?,          ?,          ?,
              ?,         ?,         ?,         ?,        sysdate,    ?,          sysdate )
            ]]>
        </query>
    </sql>

    <!-- 이미 설정된 해당년도의 평가 기준 정보를 수정한다. -->
    <sql name="VLUA010_UPT">
        <description>평가 기준 정보 설정 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_TYPE
            SET     ABL_CNT     = ?,        -- 역량 평가회수
                    DOWN_YN     = ?,        -- 역량 하향평가여부
                    DOWN_CNT    = ?,        -- 역량 하향평가차수
                    UP_YN       = ?,        -- 역량 상향평가여부
                    UP_CNT      = ?,        -- 역량 상향평가차수
                    ACH_CNT     = ?,        -- 업적 평가회수
                    HEAD_YN     = ?,        -- 본부/부서 목표입력 여부
                    UP_RATE1    = ?,        -- 상향 평정비율 1차
                    UP_RATE2    = ?,        -- 상향 평정비율 2차
                    UP_RATE3    = ?,        -- 상향 평정비율 3차
                    DOWN_RATE1  = ?,        -- 하향 평정비율 1차
                    DOWN_RATE2  = ?,        -- 하향 평정비율 2차
                    DOWN_RATE3  = ?,        -- 하향 평정비율 3차
                    ACH_RATE1   = ?,        -- 업적 평정비율 1차
                    ACH_RATE2   = ?,        -- 업적 평정비율 2차
                    ACH_RATE3   = ?,        -- 업적 평정비율 3차
                    UPT_MAN     = ?,        -- 최종 수정자
                    UPT_YMD     = sysdate   -- 최종 수정일시
            WHERE   GUBUN       = ?
            AND     EVL_YY      = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUA020
* @description : KPI Pool 설정
***********************************************************************
* 2006/09/20      오대성        최초작성.
***********************************************************************
-->

    <!-- KPI POOL 설정 내용을 조회 한다.(코드나 코드명으로 조회가능) -->
    <sql name="VLUA020_SHR">
        <description>KPI POOL 설정 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN, KPI_CD, KPI_NM, KPI_DEC, KPI_GB, GAUGE_GB, FORMULAS, STR_YMD, END_YMD, VALUE_STG
            FROM ( SELECT GUBUN, KPI_CD, KPI_NM, KPI_DEC, KPI_GB, GAUGE_GB, FORMULAS,
                          TO_CHAR(STR_YMD,'YYYY-MM-DD') STR_YMD, TO_CHAR(END_YMD,'YYYY-MM-DD') END_YMD,
                          DECODE(END_YMD, '', 'T', ?) AS VALUE_STG
                   FROM   ASNHR.T_EV_KPIPOOL
                   WHERE  GUBUN  = ?
                   AND   (KPI_CD LIKE '%'||?||'%'
                   OR     KPI_NM LIKE '%'||?||'%')
                   AND    KPI_GB LIKE '%'||?||'%' )
            WHERE  VALUE_STG = 'T'
            ORDER BY KPI_CD
            ]]>
        </query>
    </sql>

    <!-- 새로 추가된 KPI_POOL 정보를 저장한다. -->
    <sql name="VLUA020_INS">
        <description>KPI POOL 설정 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_KPIPOOL
            ( GUBUN,    KPI_CD,   KPI_NM,  KPI_DEC,  KPI_GB,
              GAUGE_GB, FORMULAS, STR_YMD, END_YMD,
              IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
            ( ?,        ?,        ?,       ?,        ?,
              ?,        ?,        ?,       ?,
              ?,        sysdate,  ?,       sysdate)
            ]]>
        </query>
    </sql>

    <!-- 이미 설정된 KPI POOL 정보를 수정한다. -->
    <sql name="VLUA020_UPT">
        <description>KPI POOL 설정 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_KPIPOOL
            SET     KPI_NM    = ?,        -- KPI 명
                    KPI_DEC   = ?,        -- KPI 요약
                    KPI_GB    = ?,        -- KPI 구분
                    GAUGE_GB  = ?,        -- 계량구분
                    FORMULAS  = ?,        -- 산출식
                    STR_YMD   = ?,        -- 코드사용기간(시작)
                    END_YMD   = ?,        -- 코드사용기간(종료, 폐지)
                    UPT_MAN   = ?,        -- 최종 수정자
                    UPT_YMD   = sysdate   -- 최종 수정일시
            WHERE   GUBUN     = ?         -- 업무구분
            AND     KPI_CD    = ?         -- KPI 코드
            ]]>
        </query>
    </sql>

    <!-- KPI POOL에서 해당 내용을 삭제한다. -->
    <sql name="VLUA020_DEL">
        <description>KPI POOL 설정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_KPIPOOL
            WHERE  GUBUN  = ?
            AND    KPI_CD = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUA030
* @description : 평가반영비율설정
***********************************************************************
* 2006/09/22      오대성        최초작성.
* 2007/03/15      박인이        직무평가관련내용 추가
***********************************************************************
-->

    <!-- 해당년도의 설정된 역량평가회수와 업적평가회수를 조회 한다. -->
    <sql name="VLUA030_SHR_01">
        <description>평가 기준 정보 설정 조회</description>
        <query>
            <![CDATA[
            SELECT  ABL_CNT, ACH_CNT
            FROM    ASNHR.T_EV_TYPE
            WHERE   GUBUN  = ?
            AND     EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- ASNHR.T_CM_COMMON테이블의 평가그룹과 조인하여 평가반영비율정보를 조회한다. -->
    <sql name="VLUA030_SHR_02">
        <description>평가 반영 비율 정보 조회 (인사평가)</description>
        <query>
            <![CDATA[
            SELECT  B.GUBUN, B.EVL_YY, A.CD_GBN COMM_CD, A.COMM_CD GROUP_CD, A.COMM_NM, B.EVL_YY YEAR_FLAG,
                    NVL(B.ACH_01, 0) ACH_01, NVL(B.ACH_02, 0) ACH_02, NVL(B.ACH_03, 0) ACH_03,
                    NVL(B.ACH_04, 0) ACH_04, NVL(B.ABL_01, 0) ABL_01, NVL(B.ABL_02, 0) ABL_02,
                    NVL(B.ABL_03, 0) ABL_03, NVL(B.ABL_04, 0) ABL_04, NVL(B.TOTAL, 0) TOTAL
            FROM    ASNHR.T_CM_COMMON A,
                   (SELECT GUBUN, EVL_YY, COMM_CD, GROUP_CD, ACH_01, ACH_02, ACH_03, ACH_04,
                           ABL_01, ABL_02, ABL_03, ABL_04,
                           SUM(ACH_01+ACH_02+ACH_03+ACH_04+ABL_01+ABL_02+ABL_03+ABL_04) TOTAL
                    FROM   ASNHR.T_EV_ADJRATE
                    WHERE  GUBUN  = ?
                    AND    EVL_YY = ?
                    GROUP BY GUBUN, EVL_YY, COMM_CD, GROUP_CD, ACH_01, ACH_02, ACH_03, ACH_04,
                    ABL_01, ABL_02, ABL_03, ABL_04
                   ) B
            WHERE   A.CD_GBN  = B.COMM_CD(+)
            AND     A.COMM_CD = B.GROUP_CD(+)
            AND     A.CD_GBN  = 'EG'
            AND    (A.END_YMD IS NULL OR A.END_YMD >= SYSDATE)
            ORDER BY SORT_NO
            ]]>
        </query>
    </sql>

    <!-- ASNHR.T_CM_DUTYMST 테이블의 직무코드와 조인하여 평가반영비율정보를 조회한다. -->
    <sql name="VLUA030_SHR_03">
        <description>평가 반영 비율 정보 조회 (CDP평가) </description>
        <query>
            <![CDATA[
            SELECT  B.GUBUN, B.EVL_YY, A.DUTY_LBL COMM_CD, A.DUTY_CD GROUP_CD, A.DUTY_NM AS COMM_NM, B.EVL_YY YEAR_FLAG,
                    NVL(B.ACH_01, 0) ACH_01, NVL(B.ACH_02, 0) ACH_02, NVL(B.ACH_03, 0) ACH_03,
                    NVL(B.ACH_04, 0) ACH_04, NVL(B.ABL_01, 0) ABL_01, NVL(B.ABL_02, 0) ABL_02,
                    NVL(B.ABL_03, 0) ABL_03, NVL(B.ABL_04, 0) ABL_04, NVL(B.TOTAL, 0) TOTAL
            FROM    ASNHR.T_CM_DUTYMST A,
                   (SELECT GUBUN, EVL_YY, COMM_CD, GROUP_CD, ACH_01, ACH_02, ACH_03, ACH_04,
                           ABL_01, ABL_02, ABL_03, ABL_04,
                           SUM(ACH_01+ACH_02+ACH_03+ACH_04+ABL_01+ABL_02+ABL_03+ABL_04) TOTAL
                    FROM   ASNHR.T_EV_ADJRATE
                    WHERE  GUBUN  = ?
                    AND    EVL_YY = ?
                    GROUP BY GUBUN, EVL_YY, COMM_CD, GROUP_CD, ACH_01, ACH_02, ACH_03, ACH_04,
                    ABL_01, ABL_02, ABL_03, ABL_04
                   ) B
            WHERE   A.DUTY_CD  = B.GROUP_CD(+)
            AND     A.DUTY_LBL = B.COMM_CD(+)
            AND     A.DUTY_LBL = '4'
            ORDER BY COUNT_REM
            ]]>
        </query>
    </sql>

    <!-- 해당년도의 평가반영비율정보가 없을시 저장한다. -->
    <sql name="VLUA030_INS">
        <description>평가 반영 비율 정보 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_ADJRATE
            ( GUBUN,  EVL_YY, COMM_CD, GROUP_CD, ACH_01,  ACH_02,  ACH_03,  ACH_04,
              ABL_01, ABL_02, ABL_03,  ABL_04,   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
            VALUES
            ( ?,      ?,      ?,       ?,        ?,       ?,       ?,       ?,
              ?,      ?,      ?,       ?,        ?,       sysdate, ?,       sysdate)
            ]]>
        </query>
    </sql>

    <!-- 해당녀도의 평가반영비율정보를 수정한다. -->
    <sql name="VLUA030_UPT">
        <description>평가 반영 비율 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_ADJRATE
            SET     ACH_01    = ?,        -- 업적 1회
                    ACH_02    = ?,        -- 업적 2회
                    ACH_03    = ?,        -- 업적 3회
                    ACH_04    = ?,        -- 업적 4회
                    ABL_01    = ?,        -- 역량 1회
                    ABL_02    = ?,        -- 역량 2회
                    ABL_03    = ?,        -- 역량 3회
                    ABL_04    = ?,        -- 역량 4회
                    UPT_MAN   = ?,        -- 최종 수정자
                    UPT_YMD   = sysdate   -- 최종 수정일시
            WHERE   GUBUN     = ?         -- 업무구분
            AND     EVL_YY    = ?         -- 해당년도
            AND     COMM_CD   = ?         -- 공통구분코드(직무레벨)
            AND     GROUP_CD  = ?         -- 공통세부코드(직무코드)
            ]]>
        </query>
    </sql>


    <!-- 평가 반영 비율 데이터 유무 조회(인사평가, CDP평가 공통)) -->
    <sql name="VLUA030_SHR_04">
        <description>평가 반영 비율 데이터 유무 조회(인사평가, CDP평가 공통))</description>
        <query>
            <![CDATA[
		    SELECT GUBUN, EVL_YY, COMM_CD, GROUP_CD, ACH_01, ACH_02, ACH_03, ACH_04,
		           ABL_01, ABL_02, ABL_03, ABL_04,
		           SUM(ACH_01+ACH_02+ACH_03+ACH_04+ABL_01+ABL_02+ABL_03+ABL_04) TOTAL
		    FROM   ASNHR.T_EV_ADJRATE
		    WHERE  GUBUN  = ?
		    AND    EVL_YY = ?
		    GROUP BY GUBUN, EVL_YY, COMM_CD, GROUP_CD, ACH_01, ACH_02, ACH_03, ACH_04,
		    ABL_01, ABL_02, ABL_03, ABL_04
            ]]>
        </query>
    </sql>

    <!-- 평가 반영 비율 삭제 -->
    <sql name="VLUA030_DEL_01">
        <description>평가 반영 비율 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_ADJRATE
		    WHERE  GUBUN  = ?
		    AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 평가 반영 비율 복사 -->
    <sql name="VLUA030_INS_01">
        <description>평가 반영 비율 복사</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_ADJRATE
			(GUBUN,EVL_YY,COMM_CD,GROUP_CD,
			 ACH_01,ACH_02,ACH_03,ACH_04,ABL_01,ABL_02,ABL_03,ABL_04,
			 IPT_MAN,IPT_YMD,UPT_MAN,UPT_YMD)
			SELECT GUBUN,?,COMM_CD,GROUP_CD,
			       ACH_01,ACH_02,ACH_03,ACH_04,ABL_01,ABL_02,ABL_03,ABL_04,
			       ?,SYSDATE,?,SYSDATE
			FROM   ASNHR.T_EV_ADJRATE
			WHERE  GUBUN  = ?
			AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUA040
* @description : 등급별배분율설정
***********************************************************************
* 2006/09/20      안준성        최초작성.
***********************************************************************
-->
    <!--업무구분, 해당년도에 따른 등급별 배분율 설정 정보를 조회 -->
    <sql name="VLUA040_SHR">
        <description>등급별배분률설정 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN, EVL_YY, GBN_CD, S_RATE, A_RATE, B_RATE, C_RATE, D_RATE
            FROM   ASNHR.T_EV_GRDRATE
            WHERE  GUBUN = ?
            AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!--등급별 배분율 설정 정보를 등록 -->
    <sql name="VLUA040_INS">
        <description>등급별배분률설정 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_GRDRATE
                 ( GUBUN, EVL_YY, GBN_CD, S_RATE, A_RATE, B_RATE, C_RATE, D_RATE, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,     ?,      ?,      ?,      ?,      ?,      ?,      ?,      ?,       sysdate, ?,       sysdate )
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 구분코드에 따른 등급별 배분율 설정 정보를 수정 -->
    <sql name="VLUA040_UPT">
        <description>등급별배분률설정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_GRDRATE
            SET    S_RATE  = ?,            --S 등급 배분율
                   A_RATE  = ?,            --A 등급 배분율
                   B_RATE  = ?,            --B 등급 배분율
                   C_RATE  = ?,            --C 등급 배분율
                   D_RATE  = ?,            --D 등급 배분율
                   UPT_MAN = ?,            --최종 수정자
                   UPT_YMD = sysdate       --최종 수정일시
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    GBN_CD  = ?
            ]]>
        </query>
    </sql>

    <!-- 등급별 배분율 삭제 -->
    <sql name="VLUA040_DEL_01">
        <description>등급별 배분율 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_GRDRATE
		    WHERE  GUBUN  = ?
		    AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 등급별 배분율 복사 -->
    <sql name="VLUA040_INS_01">
        <description>등급별 배분율 복사</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_GRDRATE
			(GUBUN, EVL_YY, GBN_CD, S_RATE, A_RATE, B_RATE, C_RATE, D_RATE,
			 IPT_MAN,IPT_YMD,UPT_MAN,UPT_YMD)
			SELECT GUBUN,?, GBN_CD, S_RATE, A_RATE, B_RATE, C_RATE, D_RATE,
			       ?,SYSDATE,?,SYSDATE
			FROM   ASNHR.T_EV_GRDRATE
			WHERE  GUBUN  = ?
			AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUA050
* @description : 역량평가항목설정
***********************************************************************
* 2006/09/21      안준성        최초작성.
***********************************************************************
-->

    <!--해당년도, 회차, 평가그룹, 역량평가지표에 따른 역량평가항목설정 조회 -->
    <sql name="VLUA050_SHR">
        <description>역량평가항목설정 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN, EVL_YY, EVL_FRQ, COMM_CD1, GROUP_CD, COMM_CD2, EST_CD,
                   ABL_CD, ABL_NM, ABL_NM_SUB, SUBITEM_01, SUBITEM_02, SUBITEM_03, SUBITEM_04
            FROM   ASNHR.T_EV_ESTITEM
            WHERE  GUBUN    = ?
            AND    EVL_YY   = ?
            AND    EVL_FRQ  = ?
            AND    GROUP_CD = ?
            AND    EST_CD   = ?
            ORDER BY ABL_CD
            ]]>
        </query>
    </sql>

    <!--역량평가항목설정 등록 -->
    <sql name="VLUA050_INS">
        <description>역량평가항목설정 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_ESTITEM
                 ( GUBUN,  EVL_YY,     EVL_FRQ,    COMM_CD1,   GROUP_CD, COMM_CD2, EST_CD,  ABL_CD, ABL_NM,ABL_NM_SUB,
                    SUBITEM_01, SUBITEM_02, SUBITEM_03, SUBITEM_04, WEIGHT, IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,      ?,          ?,          ?,          ?,           ?,        ?,       ?,      ?,      ?,
                   ?,      ?,          ?,          ?,          1,			  ?, 		sysdate,        ?,    	sysdate )
            ]]>
        </query>
    </sql>

    <!--해당년도, 회차, 평가그룹, 역량평가지표, 역량코드에 따른 역량평가항목설정 수정 -->
    <sql name="VLUA050_UPT">
        <description>역량평가항목설정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_ESTITEM
            SET ABL_NM         = ?,        --역량 명칭
                   ABL_NM_SUB = ?,        --역량 명칭
                   WEIGHT     = 1,        --가중치
                   SUBITEM_01 = ?,        --행동지표1
                   SUBITEM_02 = ?,        --행동지표2
                   SUBITEM_03 = ?,        --행동지표3
                   SUBITEM_04 = ?,        --행동지표4
                   UPT_MAN    = ?,        --최종 수정자
                   UPT_YMD    = sysdate   --최종 수정일시
            WHERE GUBUN       = ?
            AND   EVL_YY      = ?
            AND   EVL_FRQ     = ?
            AND   COMM_CD1    = ?
            AND   GROUP_CD    = ?
            AND   COMM_CD2    = ?
            AND   EST_CD      = ?
            AND   ABL_CD      = ?
            ]]>
        </query>
    </sql>

    <!--해당년도, 회차, 평가그룹, 역량평가지표, 역량코드에 따른 역량평가항목설정 삭제 -->
    <sql name="VLUA050_DEL">
        <description>역량평가항목설정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_ESTITEM
            WHERE  GUBUN    = ?
            AND    EVL_YY   = ?
            AND    EVL_FRQ  = ?
            AND    COMM_CD1 = ?
            AND    GROUP_CD = ?
            AND    COMM_CD2 = ?
            AND    EST_CD   = ?
            AND    ABL_CD   = ?
            ]]>
        </query>
    </sql>

    <!-- 역량평가항목 데이터 유무 조회 -->
    <sql name="VLUA050_SHR_01">
        <description>역량평가항목 데이터 유무 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN, EVL_YY, EVL_FRQ, COMM_CD1, GROUP_CD, COMM_CD2, EST_CD,
                   ABL_CD, ABL_NM, WEIGHT, SUBITEM_01, SUBITEM_02, SUBITEM_03
            FROM   ASNHR.T_EV_ESTITEM
            WHERE  GUBUN    = ?
            AND    EVL_YY   = ?
            ORDER BY ABL_CD
            ]]>
        </query>
    </sql>

    <!-- 역량평가항목 삭제 -->
    <sql name="VLUA050_DEL_01">
        <description>역량평가항목 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_ESTITEM
		    WHERE  GUBUN  = ?
		    AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 역량평가항목 복사 -->
    <sql name="VLUA050_INS_01">
        <description>역량평가항목 복사</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_ESTITEM
			(GUBUN,EVL_YY,EVL_FRQ,COMM_CD1,GROUP_CD,COMM_CD2,EST_CD,ABL_CD,
                         ABL_NM,WEIGHT,SUBITEM_01,SUBITEM_02,SUBITEM_03,SUBITEM_04,
                         IPT_MAN,IPT_YMD,UPT_MAN,UPT_YMD)
			SELECT GUBUN,?,EVL_FRQ,COMM_CD1,GROUP_CD,COMM_CD2,EST_CD,ABL_CD,
			       ABL_NM,WEIGHT,SUBITEM_01,SUBITEM_02,SUBITEM_03,SUBITEM_04,
			       ?,SYSDATE,?,SYSDATE
			FROM   ASNHR.T_EV_ESTITEM
			WHERE  GUBUN  = ?
			AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUA060
* @description : 평가회차관리
***********************************************************************
* 2006/09/21      안준성       최초작성.
***********************************************************************
-->

    <!--업무구분, 해당년도에 따른 평가회차관리 조회 -->
    <sql name="VLUA060_SHR">
        <description>평가회차관리 조회</description>
        <query>
            <![CDATA[
                SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, EVL_NM,
                       TO_CHAR(EVL_STDT,'YYYY-MM-DD')  AS EVL_STDT,
                       TO_CHAR(EVL_ENDT,'YYYY-MM-DD')  AS EVL_ENDT,
                       TO_CHAR(IPT_STDT,'YYYY-MM-DD')  AS IPT_STDT,
                       TO_CHAR(IPT_ENDT,'YYYY-MM-DD')  AS IPT_ENDT,
                       TO_CHAR(PROT_STDT,'YYYY-MM-DD') AS PROT_STDT,
                       TO_CHAR(PROT_ENDT,'YYYY-MM-DD') AS PROT_ENDT,
                       TO_CHAR(OBJ_STDT,'YYYY-MM-DD')  AS OBJ_STDT,
                       TO_CHAR(OBJ_ENDT,'YYYY-MM-DD')  AS OBJ_ENDT,
                       TO_CHAR(SELF_STDT,'YYYY-MM-DD') AS SELF_STDT,
                       TO_CHAR(SELF_ENDT,'YYYY-MM-DD') AS SELF_ENDT
                FROM   ASNHR.T_EV_ESTINFO
                WHERE  GUBUN = ?
                AND  ( EVL_YY >= ? AND EVL_YY <= ? )
            ]]>
        </query>
    </sql>

    <!--업무구분, 해당년도에 따른 평가구조설정정보 조회(VLUC120과 공통, VLUE010과 공통) -->
    <sql name="VLUA060_SHR_01">
        <description>평가구조설정정보 조회</description>
        <query>
            <![CDATA[
                SELECT ABL_CNT, ACH_CNT
                FROM   ASNHR.T_EV_TYPE
                WHERE  GUBUN  = ?
                AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!--평가회차관리 등록 -->
    <sql name="VLUA060_INS">
        <description>평가회차관리 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_ESTINFO
                 ( GUBUN,     EVL_YY,    EVL_GBN,   EVL_FRQ,  EVL_NM,    EVL_STDT,  EVL_ENDT, IPT_STDT, IPT_ENDT,
                   PROT_STDT, PROT_ENDT, OBJ_STDT,  OBJ_ENDT, SELF_STDT, SELF_ENDT, JOB_ENDT, IPT_MAN,  IPT_YMD,  UPT_MAN,  UPT_YMD )
            VALUES
                 ( ?,         ?,         ?,         ?,        ?,         ?,         ?,        ?,        ?,
                   ?,         ?,         ?,         ?,        ?,         ?,         ?,        ?,        sysdate,  ?,        sysdate)
            ]]>
        </query>
    </sql>

    <!--업무구분, 해당년도,구분,회차에 따른 평가회차관리 수정 -->
    <sql name="VLUA060_UPT">
        <description>평가회차관리 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_ESTINFO
            SET    EVL_NM    = ?,                --평가명칭
                   EVL_STDT  = ?,                --평가적용기간(시작)
                   EVL_ENDT  = ?,                --평가적용기간(종료)
                   IPT_STDT  = ?,                --평가입력기간(시작)
                   IPT_ENDT  = ?,                --평가입력기간(종료)
                   PROT_STDT = ?,                --이의신청기간(시작)
                   PROT_ENDT = ?,                --이의신청기간(종료)
                   OBJ_STDT  = ?,                --목표입력기간(시작)
                   OBJ_ENDT  = ?,                --목표입력기간(종료)
                   SELF_STDT = ?,                --본인평가기간(시작)
                   SELF_ENDT = ?,                --본인평가기간(종료)
                   UPT_MAN   = ?,                --최종수정자
                   UPT_YMD   = sysdate           --최종수정일시
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_GBN   = ?
            AND    EVL_FRQ   = ?
            ]]>
        </query>
    </sql>

    <!--업무구분, 해당년도, 구분, 회차에 따른 평가회차관리 삭제 -->
    <sql name="VLUA060_DEL">
        <description>평가회차관리 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_ESTINFO
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = ?
            AND    EVL_FRQ = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUA070
* @description : 평가대상설정
***********************************************************************
* 2006/09/21      박인이        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 년도에 해당하는 역량평가의 하향평가차수를 조회 한다. -->
    <sql name="VLUA070_SHR_00">
        <description>평가구조설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN,                                         -- 업무구분
                   EVL_YY,                                        -- 년도
                   ABL_CNT,                                       -- 역량평가회차수
                   ACH_CNT,                                       -- 업적평가회차수
                   NVL(DOWN_CNT, 1)     AS DOWN_CNT,              -- 하향평가차수
                   NVL(DOWN_RATE1, 0)   AS DOWN_RATE1,            -- 하향 평정비율 1차
                   NVL(DOWN_RATE2, 0)   AS DOWN_RATE2,            -- 하향 평정비율 2차
                   NVL(DOWN_RATE3, 0)   AS DOWN_RATE3,            -- 하향 평정비율 3차
                   NVL(ACH_RATE1,  0)   AS ACH_RATE1              -- 업적 평정비율
            FROM   ASNHR.T_EV_TYPE
            WHERE  GUBUN  = ?
            AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 년도, 구분(역량/업적), 회차에 따른 평가대상자를 조회 한다. -->
    <sql name="VLUA070_SHR_01">
        <description>평가대상설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN,                                             -- 업무구분
                   EVL_YY,                                            -- 해당년도
                   EVL_GBN,                                           -- 구분(역량/업적)
                   EVL_FRQ,                                           -- 회차
                   ENO_NO,                                            -- 사번
                   COMM_CD,                                           -- 공통코드('EG')
                   GROUP_CD,                                          -- 공통세부코드(평가그룹)
                   GROUP_NM,
                   EXCEPT_YN,                                         -- 평가제외
                   HEAD_NM,                                           -- 본부명
                   HEAD_SEQ,                                          -- 본부SEQ
                   DPT_NM,                                            -- 부서
                   DPT_SEQ,                                           -- 부서SEQ
                   JOB_NM,                                            -- 직위
                   JOB_SEQ,                                           -- 직위SEQ
                   ENO_NM,                                            -- 성명
                   TO_CHAR(HIRG_YMD, 'YYYY-MM-DD') AS HIRG_YMD,       -- 입사일
                   TO_CHAR(DPA_YMD, 'YYYY-MM-DD')  AS DPA_YMD,        -- 현소속발령일
                   EVLENO_NO11,                                       -- (역량)1차평가자
                   EVLENO_NO12,                                       -- (역량)2차평가자
                   EVLENO_NO13,                                       -- (역량)3차평가자
                   EVLENO_NO20,                                       -- (업적)참조평가자
                   EVLENO_NO21,                                       -- (업적)1차평가자
                   CNT,                                               -- 평가자존재여부
                   '' AS IEVLENO_NO11,                                      -- (역량)1차평가자 사번 입력컬럼
                   '' AS IEVLENO_NM11,                                      -- (역량)1차평가자 성명 입력컬럼
                   '' AS IEVLENO_NO12,                                      -- (역량)2차평가자 사번 입력컬럼
                   '' AS IEVLENO_NM12,                                      -- (역량)2차평가자 성명 입력컬럼
                   '' AS IEVLENO_NO13,                                      -- (역량)3차평가자 사번 입력컬럼
                   '' AS IEVLENO_NM13,                                      -- (역량)3차평가자 성명 입력컬럼
                   '' AS IEVLENO_NO20,                                      -- (업적)참조평가자 사번 입력컬럼
                   '' AS IEVLENO_NM20,                                      -- (업적)참조평가자 성명 입력컬럼
                   '' AS IEVLENO_NO21,                                      -- (업적)1차평가자 사번 입력컬럼
                   '' AS IEVLENO_NM21                                       -- (업적)1차평가자 성명 입력컬럼
            FROM ( SELECT /*+ INDEX (T_EV_EVLIST_HD_IDX) */
                          GUBUN,
                          EVL_YY,
                          EVL_GBN,
                          EVL_FRQ,
                          ENO_NO,
                          COMM_CD,
                          GROUP_CD,
                          CASE WHEN GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'EG', GROUP_CD)
                               WHEN GUBUN = '02' THEN
                                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = A.GROUP_CD AND DUTY_LBL = A.COMM_CD)
                          END                                                            AS GROUP_NM,       -- 평가그룹명
                          EXCEPT_YN,
                          ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)                           AS HEAD_NM,
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD)                            AS HEAD_SEQ,
                          ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)                              AS DPT_NM,
                          ASNHR.SF_GET_DPTSEQ('01', 'A4',DPT_CD)                               AS DPT_SEQ,
                          ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)                            AS JOB_NM,
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD)                             AS JOB_SEQ,
                          ASNHR.SF_GET_COMMSEQ('01', 'A3', HOB_CD)                             AS HOB_SEQ,
                          HIRG_YMD,
                          DPA_YMD,
                          ASNHR.SF_GET_ENONAME('01', ENO_NO)         AS ENO_NM,
                          ASNHR.SF_GET_EVLIST(GUBUN, EVL_YY, '1', EVL_FRQ, ENO_NO, '1')     AS EVLENO_NO11, -- (역량)1차평가자
                          ASNHR.SF_GET_EVLIST(GUBUN, EVL_YY, '1', EVL_FRQ, ENO_NO, '2')     AS EVLENO_NO12, -- (역량)2차평가자
                          ASNHR.SF_GET_EVLIST(GUBUN, EVL_YY, '1', EVL_FRQ, ENO_NO, '3')     AS EVLENO_NO13, -- (역량)3차평가자
                        ( SELECT ASNHR.SF_GET_ENONAME('01', REFENO_NO1)||DECODE(REFENO_NO2,NULL,'',', '||SF_GET_ENONAME('01', REFENO_NO2))||DECODE(REFENO_NO3,NULL,'',', '||SF_GET_ENONAME('01', REFENO_NO3))
                           FROM   ASNHR.T_EV_EVLIST_DT
                           WHERE  GUBUN   = A.GUBUN
                           AND    EVL_YY  = A.EVL_YY
                           AND    EVL_GBN = '2'
                           AND    EVL_FRQ = A.EVL_FRQ
                           AND    ENO_NO  = A.ENO_NO
                           AND    DEGREE_GBN = '1'
                           AND    ROWNUM  = 1 )                AS EVLENO_NO20, -- (업적)참조평가자
                           ASNHR.SF_GET_EVLIST(GUBUN, EVL_YY, '2', EVL_FRQ, ENO_NO, '1')     AS EVLENO_NO21, -- (업적)1차평가자
                         ( SELECT COUNT(*)
                           FROM   ASNHR.T_EV_EVLIST_DT
                           WHERE  GUBUN   = A.GUBUN
                           AND    EVL_YY  = A.EVL_YY
                           AND    EVL_GBN = '2'
                           AND    EVL_FRQ = A.EVL_FRQ
                           AND    ENO_NO  = A.ENO_NO
                           AND    DEGREE_GBN = '1'
                           AND    ROWNUM  = 1 )                AS CNT          -- 평가자 존재여부
                   FROM   ASNHR.T_EV_EVLIST_HD A
                   WHERE  GUBUN   = ?
                   AND    EVL_YY  = ?
                   AND    EVL_GBN = ?
                   AND    EVL_FRQ = ?
                   AND    ENO_NO  LIKE ?||'%'
                   AND    DPT_CD  LIKE ?||'%'
            )
            ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ , HIRG_YMD, ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 해당년도, 역량/업적구분, 회차에 해당하는 평가대상설정 데이터 존재여부 체크한다. -->
    <sql name="VLUA070_SHR_02">
        <description>평가대상설정 존재여부 체크 </description>
        <query>
            <![CDATA[
            SELECT '1' CHK
            FROM   ASNHR.T_EV_EVLIST_HD
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = ?
            AND    EVL_FRQ = ?
            AND    ROWNUM  = 1
            ]]>
        </query>
    </sql>

    <!-- 인사정보에서 사번을 읽어들여 평가대상설정 데이터를 일괄 생성한다. -->
    <sql name="VLUA070_INS">
        <description>평가대상설정 데이터 생성 (차후 삭제) </description>
        <query>
            <![CDATA[
            INSERT  INTO ASNHR.T_EV_EVLIST_HD
                  ( GUBUN,     EVL_YY,  EVL_GBN,   EVL_FRQ,  ENO_NO,  OCC_CD,  HEAD_CD,
                    DPT_CD,    DPA_YMD, JOB_CD,  HOB_CD,    HIRG_YMD, COMM_CD, GROUP_CD,
                    EXCEPT_YN, IPT_MAN, IPT_YMD,   UPT_MAN,  UPT_YMD )
            SELECT  ?,         ?,       ?,         ?,        ENO_NO,  OCC_CD,  HEAD_CD,
                    DPT_CD,    DPA_YMD, JOB_CD,  HOB_CD,    HIRG_YMD, 'EG',
                    CASE WHEN JOB_CD IN ('1C', '1D', '1N', 1E')              THEN '01'        -- 부서장
                         WHEN JOB_CD IN ('1E', '20', '2A', '2B')             THEN '03'        -- 차과장
                         WHEN JOB_CD IN ('30', '3A', '3B', '40', '4A', '4B') THEN '04'        -- 대리/4사
                         WHEN JOB_CD IN ('50', '5A', '5B', 'E1', 'Z1')       THEN '05'        -- 5사이하
                         WHEN JOB_CD IN ('8D')                               THEN '06'        -- 영업사원
                    ELSE ' ' END GROUP_CD,
                    'F',       ?,       sysdate,   ?,       sysdate
            FROM    ASNHR.T_CM_PERSON
            WHERE ( RET_YMD IS NULL
            OR      RET_YMD >= sysdate )
            AND   (('2' = ?                                                                   -- 업적대상
            AND     OCC_CD = 'A'
            AND     JOB_CD IN ('AB', 'A4', 'A5', '1C', '1D', '1N', '1E', '20', '2A', '2B', '30', '3A', '3B', '40', '4A', '4B')
                   )
            OR     ('1' = ?)                                                                  -- 역량대상
                  )
            AND     JOB_CD NOT IN ('GS', '7B', '7C')
            ]]>
        </query>
    </sql>

    <!-- 이미 설정된 평가대상자 정보를 수정 한다. -->
    <sql name="VLUA070_UPT">
        <description>평가대상설정 데이터 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EVLIST_HD
            SET    COMM_CD      = ?,
                   GROUP_CD     = ?,
                   EXCEPT_YN    = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            ]]>
        </query>
    </sql>

    <!-- 이미 설정된 평가대상자 정보를 삭제 한다. -->
    <sql name="VLUA070_DEL_01">
        <description>평가대상설정 데이터 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_EVLIST_HD
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            ]]>
        </query>
    </sql>

    <!-- 이미 설정된 평가대상자(세부) 정보를 삭제 한다. -->
    <sql name="VLUA070_DEL_02">
        <description>평가대상설정(세부) 데이터 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_EVLIST_DT
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            ]]>
        </query>
    </sql>

    <!-- 역량평가 대상자 삭제 -->
    <sql name="VLUA070_DEL_03">
        <description>역량평가 대상자 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_EVLIST_DT
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            AND    DEGREE_GBN   = ?
            ]]>
        </query>
    </sql>

    <!-- 역량평가 대상자 등록 -->
    <sql name="VLUA070_INS_03">
        <description>역량평가 대상자 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EVLIST_DT
                 ( GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, DEGREE_GBN, EVLENO_NO, SEQ_NO, APPLY_RATE, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,     ?,      ?,       ?,       ?,      ?,          ?,         ?,      ?,          ?,       sysdate, ?,       sysdate )
            ]]>
        </query>
    </sql>

    <!-- 업적평가 대상자 조회 -->
    <sql name="VLUA070_SHR_03">
        <description>업적평가 대상자 조회</description>
        <query>
            <![CDATA[
            SELECT *
            FROM   ASNHR.T_EV_EVLIST_DT
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            AND    DEGREE_GBN   = ?
            ]]>
        </query>
    </sql>

    <!-- 업적평가 참조평가자 저장 -->
    <sql name="VLUA070_UPT_01">
        <description>업적평가 참조평가자 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EVLIST_DT
            SET    REFENO_NO1   = ?,
                   REFENO_NO2   = ?,
                   REFENO_NO3   = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            AND    DEGREE_GBN   = ?
            AND    SEQ_NO       = ?

            ]]>
        </query>
    </sql>

    <!-- 업적평가 1차평가자 저장 -->
    <sql name="VLUA070_UPT_02">
        <description>업적평가 1차평가자 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EVLIST_DT
            SET    EVLENO_NO   = ?,
                   APPLY_RATE   = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            AND    DEGREE_GBN   = ?
            AND    SEQ_NO       = ?

            ]]>
        </query>
    </sql>

    <!-- 업적평가 참조평가자 등록 -->
    <sql name="VLUA070_INS_04">
        <description>역량평가 대상자 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EVLIST_DT
                 ( GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, DEGREE_GBN, EVLENO_NO, SEQ_NO, APPLY_RATE, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,     ?,      ?,       ?,       ?,      ?,          ?,         ?,      ?,          ?,       sysdate, ?,       sysdate )
            ]]>
        </query>
    </sql>
<!--
***********************************************************************
* @UseCase     : VLUA071
* @description : 개입별역량평가대상자설정
***********************************************************************
* 2006/09/22      박인이        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 년도, 구분(역량), 회차, 차수에 따른 피평가자 설정구조를 조회 한다. -->
    <sql name="VLUA071_SHR_00">
        <description>개인별역량평가자설정 데이터 조회 (VLUA072와 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT GUBUN,
                   EVL_YY,                                                -- 해당년도
                   EVL_GBN,                                               -- 구분(역량/업적)
                   EVL_FRQ,                                               -- 회차
                   ENO_NO,                                                -- 피평가자사번
                   ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)       AS DPT_NM,     -- 피평가자부서
                   GROUP_CD                                AS GROUP_CD,   -- 평가그룹
                   ASNHR.SF_GET_ENONAME('01', ENO_NO)            AS ENO_NM      -- 피평가자성명
            FROM   ASNHR.T_EV_EVLIST_HD
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_GBN    = ?
            AND    EVL_FRQ    = ?
            AND    ENO_NO     = ?
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 년도, 구분(역량), 회차, 차수에 따른 피평가자에 대한 역량평가대상자를 조회 한다. -->
    <sql name="VLUA071_SHR_01">
        <description>개인별역량평가자설정 세부 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT A.GUBUN,                                                 -- 업무구분
                   A.EVL_YY,                                                -- 해당년도
                   A.EVL_GBN,                                               -- 구분(역량/업적)
                   A.EVL_FRQ,                                               -- 회차
                   A.ENO_NO,                                                -- 피평가자사번
                   A.DEGREE_GBN,                                            -- 차수구분
                   A.EVLENO_NO,                                             -- 평가자사번
                   A.SEQ_NO,                                                -- 일련번호(순번)
                   A.APPLY_RATE,                                            -- 평가자반영비율
                   ASNHR.SF_GET_DPTNAME('01', 'B2', B.HEAD_CD)    AS HEAD_NM,    -- 본부
                   ASNHR.SF_GET_DPTNAME('01', 'A4',B.DPT_CD)       AS DPT_NM,     -- 평가자부서
                   ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD)     AS JOB_NM,     -- 평가자직위
                   ASNHR.SF_GET_ENONAME('01', A.EVLENO_NO)         AS EVlENO_NM   -- 평가자성명
            FROM   ASNHR.T_EV_EVLIST_DT A,
                   ASNHR.T_EV_EVLIST_HD B
            WHERE  A.GUBUN      = ?
            AND    A.EVL_YY     = ?
            AND    A.EVL_GBN    = ?
            AND    A.EVL_FRQ    = ?
            AND    A.ENO_NO     = ?
            AND    A.DEGREE_GBN = ?
            AND    A.GUBUN      = B.GUBUN
            AND    A.EVL_YY     = B.EVL_YY
            AND    A.EVL_GBN    = B.EVL_GBN
            AND    A.EVL_FRQ    = B.EVL_FRQ
            AND    A.ENO_NO     = B.ENO_NO
            ORDER  BY A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.ENO_NO, A.SEQ_NO
            ]]>
        </query>
    </sql>

    <!-- 새로 입력된 피평가자에 대한 역량평가대상자 정보를 등록한다. -->
    <sql name="VLUA071_INS">
        <description>개인별역량평가자설정 데이터 입력</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EVLIST_DT
                 ( GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, DEGREE_GBN, EVLENO_NO, SEQ_NO, APPLY_RATE, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,     ?,      ?,       ?,       ?,      ?,          ?,         ?,      ?,          ?,       sysdate, ?,       sysdate )
            ]]>
        </query>
    </sql>

    <sql name="VLUA071_UPT_00">
        <description>개인별역량평가자설정 데이터 수정 (VLUA072와 공통으로 사용) </description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EVLIST_HD
            SET    -- COMM_CD      = x,
                   GROUP_CD     = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            ]]>
        </query>
    </sql>

    <!-- 이미 설정된 역량평가대상자 정보를 수정 한다. -->
    <sql name="VLUA071_UPT_01">
        <description>개인별역량평가자설정 세부 데이터 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EVLIST_DT
            SET    SEQ_NO       = ?,
                   APPLY_RATE   = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            AND    DEGREE_GBN   = ?
            AND    EVLENO_NO    = ?
            ]]>
        </query>
    </sql>

    <!-- 기존재하는 역량평가대상자 정보를 삭제한다. -->
    <sql name="VLUA071_DEL">
        <description>개인별역량평가자설정 데이터 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_EVLIST_DT
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            AND    DEGREE_GBN   = ?
            AND    EVLENO_NO    = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUA072
* @description : 개입별업적평가대상자설정
***********************************************************************
* 2006/09/22      박인이        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 년도, 구분(역량), 회차, 차수에 따른 피평가자에 대한 업적평가대상자를 조회 한다. -->
    <sql name="VLUA072_SHR_01">
        <description>개인별업적평가자설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT C.GUBUN,
                   C.EVL_YY,                                                 -- 해당년도
                   C.EVL_GBN,                                                -- 구분(역량/업적)
                   C.EVL_FRQ,                                                -- 회차
                   C.ENO_NO,                                                 -- 피평가자사번
                   C.DEGREE_GBN,                                             -- 차수구분
                   C.EVLENO_NO,                                              -- 1차평가자사번
                   C.SEQ_NO,                                                 -- 일련번호(순번)
                   C.REFENO_NO1,                                             -- 참조평가자사번1(업적평가할 때)
                   C.REFENO_NO2,                                             -- 참조평가자사번2(업적평가할 때)
                   C.REFENO_NO3,                                             -- 참조평가자사번3(업적평가할 때)
                   C.APPLY_RATE,                                             -- 평가자반영비율
                   ''   AS EVLDPT_NM,
                   ''   AS EVLJOB_NM,
                   ASNHR.SF_GET_ENONAME('01', C.EVLENO_NO)  AS EVLENO_NM,
                   ''   AS REFDPT_NM1,
                   ''   AS REFJOB_NM1,
                   ASNHR.SF_GET_ENONAME('01', C.REFENO_NO1) AS REFENO_NM1,
                   ''   AS REFDPT_NM2,
                   ''   AS REFJOB_NM2,
                   ASNHR.SF_GET_ENONAME('01', C.REFENO_NO2) AS REFENO_NM2,
                   ''   AS REFDPT_NM3,
                   ''   AS REFJOB_NM3,
                   ASNHR.SF_GET_ENONAME('01', C.REFENO_NO3) AS REFENO_NM3,
                   ''   AS EVLHEAD_NM,
                   ''   AS REFHEAD_NM1,
                   ''   AS REFHEAD_NM2,
                   ''   AS REFHEAD_NM3

   /*                ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD )      AS EVLDPT_NM,   -- 1차평가자부서
                   ASNHR.SF_GET_COMMNAME('01', 'A2', C.JOB_CD )    AS EVLJOB_NM,   -- 1차평가자직위
                   ASNHR.SF_GET_ENONAME('01', C.EVLENO_NO)         AS EVLENO_NM,   -- 1차평가자성명
                   ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD1)      AS REFDPT_NM1,  -- 참조평가자부서1
                   ASNHR.SF_GET_COMMNAME('01', 'A2', C.JOB_CD1)    AS REFJOB_NM1,  -- 참조평가자직위1
                   ASNHR.SF_GET_ENONAME('01', C.REFENO_NO1)        AS REFENO_NM1,  -- 참조평가자성명1
                   ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD2)      AS REFDPT_NM2,  -- 참조평가자부서2
                   ASNHR.SF_GET_COMMNAME('01', 'A2', C.JOB_CD2)    AS REFJOB_NM2,  -- 참조평가자직위2
                   ASNHR.SF_GET_ENONAME('01', C.REFENO_NO2)        AS REFENO_NM2,  -- 참조평가자성명2
                   ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD3)      AS REFDPT_NM3,  -- 참조평가자부서3
                   ASNHR.SF_GET_COMMNAME('01', 'A2', C.JOB_CD3)    AS REFJOB_NM3,  -- 참조평가자직위3
                   ASNHR.SF_GET_ENONAME('01', C.REFENO_NO3)        AS REFENO_NM3,  -- 참조평가자성명3

                 ( SELECT ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  ENO_NO  = C.EVLENO_NO )            AS EVLHEAD_NM,  -- 평가자 소속본부
                 ( SELECT ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  ENO_NO = C.REFENO_NO1 )            AS REFHEAD_NM1, -- 참조평가자1 소속본부
                 ( SELECT ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  ENO_NO = C.REFENO_NO2 )            AS REFHEAD_NM2, -- 참조평가자2 소속본부
                 ( SELECT ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  ENO_NO = C.REFENO_NO3 )            AS REFHEAD_NM3  -- 참조평가자3 소속본부

                 ( SELECT ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)
                   FROM   ASNHR.T_EV_EVLIST_HD
                   WHERE  GUBUN   = C.GUBUN
                   AND    EVL_YY  = C.EVL_YY
                   AND    EVL_GBN = C.EVL_GBN
                   AND    EVL_FRQ = C.EVL_FRQ
                   AND    ENO_NO  = C.EVLENO_NO )            AS EVLHEAD_NM,  -- 평가자 소속본부
                 ( SELECT ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)
                   FROM   ASNHR.T_EV_EVLIST_HD
                   WHERE  GUBUN   = C.GUBUN
                   AND    EVL_YY  = C.EVL_YY
                   AND    EVL_GBN = C.EVL_GBN
                   AND    EVL_FRQ = C.EVL_FRQ
                   AND    ENO_NO = C.REFENO_NO1 )            AS REFHEAD_NM1, -- 참조평가자1 소속본부
                 ( SELECT ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)
                   FROM   ASNHR.T_EV_EVLIST_HD
                   WHERE  GUBUN   = C.GUBUN
                   AND    EVL_YY  = C.EVL_YY
                   AND    EVL_GBN = C.EVL_GBN
                   AND    EVL_FRQ = C.EVL_FRQ
                   AND    ENO_NO = C.REFENO_NO2 )            AS REFHEAD_NM2, -- 참조평가자2 소속본부
                 ( SELECT ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)
                   FROM   ASNHR.T_EV_EVLIST_HD
                   WHERE  GUBUN   = C.GUBUN
                   AND    EVL_YY  = C.EVL_YY
                   AND    EVL_GBN = C.EVL_GBN
                   AND    EVL_FRQ = C.EVL_FRQ
                   AND    ENO_NO = C.REFENO_NO3 )            AS REFHEAD_NM3  -- 참조평가자3 소속본부 */

            FROM ( SELECT A.GUBUN,     A.EVL_YY,    A.EVL_GBN,   A.EVL_FRQ,   A.ENO_NO,    A.DEGREE_GBN,
                          A.EVLENO_NO, A.SEQ_NO,    A.REFENO_NO1,A.REFENO_NO2,A.REFENO_NO3,A.APPLY_RATE,
                          MAX(DECODE(B.ENO_NO, A.EVLENO_NO,  B.DPT_CD)) AS DPT_CD ,
                          MAX(DECODE(B.ENO_NO, A.EVLENO_NO,  B.JOB_CD)) AS JOB_CD ,
                          MAX(DECODE(B.ENO_NO, A.REFENO_NO1, B.DPT_CD)) AS DPT_CD1,
                          MAX(DECODE(B.ENO_NO, A.REFENO_NO1, B.JOB_CD)) AS JOB_CD1,
                          MAX(DECODE(B.ENO_NO, A.REFENO_NO2, B.DPT_CD)) AS DPT_CD2,
                          MAX(DECODE(B.ENO_NO, A.REFENO_NO2, B.JOB_CD)) AS JOB_CD2,
                          MAX(DECODE(B.ENO_NO, A.REFENO_NO3, B.DPT_CD)) AS DPT_CD3,
                          MAX(DECODE(B.ENO_NO, A.REFENO_NO3, B.JOB_CD)) AS JOB_CD3
                   FROM   ASNHR.T_EV_EVLIST_DT A,
                          ASNHR.T_EV_EVLIST_HD B
                   WHERE  A.GUBUN      = ?
                   AND    A.EVL_YY     = ?
                   AND    A.EVL_GBN    = ?
                   AND    A.EVL_FRQ    = ?
                   AND    A.ENO_NO     = ?
                   AND    A.DEGREE_GBN = ?
                   AND    A.GUBUN      = B.GUBUN
                   AND    A.EVL_YY     = B.EVL_YY
                   AND    A.EVL_GBN    = B.EVL_GBN
                   AND    A.EVL_FRQ    = B.EVL_FRQ
                   AND    A.ENO_NO     = B.ENO_NO
              --     AND  ( A.EVLENO_NO  = B.ENO_NO
              --     OR     A.REFENO_NO1 = B.ENO_NO
              --    OR     A.REFENO_NO2 = B.ENO_NO
              --     OR     A.REFENO_NO3 = B.ENO_NO )
                   GROUP BY A.GUBUN,     A.EVL_YY,    A.EVL_GBN,   A.EVL_FRQ,   A.ENO_NO,    A.DEGREE_GBN,
                            A.EVLENO_NO, A.SEQ_NO,    A.REFENO_NO1,A.REFENO_NO2,A.REFENO_NO3,A.APPLY_RATE
                 ) C
            ORDER BY C.EVL_YY, C.EVL_GBN, C.EVL_FRQ, C.ENO_NO, C.SEQ_NO
            ]]>
        </query>
    </sql>

    <!-- 새로 입력된 피평가자에 대한 업적평가대상자 정보를 등록한다. -->
    <sql name="VLUA072_INS">
        <description>개인별업적평가자설정 데이터 입력</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EVLIST_DT
                 ( GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, DEGREE_GBN, EVLENO_NO, SEQ_NO, REFENO_NO1, REFENO_NO2, REFENO_NO3, APPLY_RATE, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,     ?,      ?,       ?,       ?,      ?,          ?,         ?,      ?,          ?,          ?,          ?,          ?,       sysdate, ?,       sysdate )
            ]]>
        </query>
    </sql>

    <!-- 이미 설정된 업적평가대상자 정보를 수정 한다. -->
    <sql name="VLUA072_UPT_01">
        <description>개인별성과평가자설정 데이터 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EVLIST_DT
            SET    SEQ_NO       = ?,
                   REFENO_NO1   = ?,
                   REFENO_NO2   = ?,
                   REFENO_NO3   = ?,
                   APPLY_RATE   = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            AND    DEGREE_GBN   = ?
            AND    EVLENO_NO    = ?
            ]]>
        </query>
    </sql>

    <!-- 기존재하는 성과평가대상자 정보를 삭제한다. -->
    <sql name="VLUA072_DEL">
        <description>개인별성과평가자설정 데이터 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_EVLIST_DT
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            AND    DEGREE_GBN   = ?
            AND    EVLENO_NO    = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUA073
* @description : 평가대상자등록및수정
***********************************************************************
* 2006/09/20      박인이        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도, 구분(역량/성과), 회차에 따른 평가대상자를 조회 한다. -->
    <sql name="VLUA073_SHR">
        <description>평가대상설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN,                                                    -- 업무구분
                   EVL_YY,                                                   -- 해당년도
                   EVL_GBN,                                                  -- 구분
                   EVL_FRQ,                                                  -- 회차
                   ENO_NO,                                                   -- 사번
                   ASNHR.SF_GET_ENONAME(GUBUN, ENO_NO)          AS ENO_NM,         -- 성명
                   COMM_CD,                                                  -- 공통코드
                   GROUP_CD,                                                 -- 평가그룹코드
                   CASE WHEN GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'EG', GROUP_CD)
                        WHEN GUBUN = '02' THEN
                            (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = A.GROUP_CD AND DUTY_LBL = A.COMM_CD)
                   END                                    AS GROUP_NM,       -- 평가그룹명
                   TO_CHAR(HIRG_YMD, 'YYYY-MM-DD')        AS HIRG_YMD,       -- 입사일
                   TO_CHAR(DPA_YMD, 'YYYY-MM-DD')         AS DPA_YMD,        -- 현소속발령일
                   OCC_CD,                                                   -- 직종코드
                   ASNHR.SF_GET_COMMNAME('01', 'A1', OCC_CD)   AS OCC_NM,          -- 직종명
                   HEAD_CD,                                                  -- 본부코드
                   ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)  AS HEAD_NM,         -- 본부명
                   DPT_CD,                                                   -- 부서코드
                   ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)     AS DPT_NM,          -- 부서명
                   JOB_CD,                                                   -- 직위코드
                   ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)   AS JOB_NM,          -- 직위명
                   HOB_CD,                                                   -- 호봉코드
                   ASNHR.SF_GET_COMMNAME('01', 'A3', HOB_CD)   AS HOB_NM           -- 호봉명
            FROM   ASNHR.T_EV_EVLIST_HD A
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = ?
            AND    EVL_FRQ = ?
            AND    ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 평가대상설정 데이터를 생성한다. -->
    <sql name="VLUA073_INS">
        <description>평가대상설정 데이터 생성</description>
        <query>
            <![CDATA[
            INSERT  INTO ASNHR.T_EV_EVLIST_HD
                  ( GUBUN,     EVL_YY,  EVL_GBN,   EVL_FRQ,  ENO_NO,   OCC_CD,  HEAD_CD,
                    DPT_CD,    DPA_YMD, JOB_CD,    HOB_CD,   HIRG_YMD, COMM_CD, GROUP_CD,
                    EXCEPT_YN, IPT_MAN, IPT_YMD,   UPT_MAN,  UPT_YMD )
            VALUES
                  ( ?,         ?,       ?,         ?,        ?,        ?,       ?,
                    ?,         ?,       ?,         ?,        ?,        ?,       ?,
                    'F',       ?,       SYSDATE,   ?,        SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 이미 설정된 평가대상자 정보를 수정 한다. -->
    <sql name="VLUA073_UPT">
        <description>평가대상설정 데이터 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EVLIST_HD
            SET    OCC_CD   = ?,
                   HEAD_CD  = ?,
                   DPT_CD   = ?,
                   DPA_YMD  = ?,
                   JOB_CD   = ?,
                   HOB_CD   = ?,
                   HIRG_YMD = ?,
                   COMM_CD  = ?,
                   GROUP_CD = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = sysdate
            WHERE  GUBUN    = ?
            AND    EVL_YY   = ?
            AND    EVL_GBN  = ?
            AND    EVL_FRQ  = ?
            AND    ENO_NO   = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUA080
* @description : 달성도배점설정
***********************************************************************
* 2006/09/20      박인이        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 년도에 해당하는 달성도배점설정 데이터를 조회 한다. -->
    <sql name="VLUA080_SHR">
        <description>달성도배점설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN       ,                   -- 업무구분
                   EVL_YY      ,                   -- 해당년도
                   RATE_OVER   ,                   -- 달성율(이상)
                   RATE_UNDER  ,                   -- 달성율(미만)
                   ACH_PNT     ,                   -- 배점
                   GAUGE_THM   ,                   -- 계량지표
                   NONGAUGE_THM                    -- 비계량지표
            FROM   ASNHR.T_EV_ACHPNT
            WHERE  GUBUN  = ?
            AND    EVL_YY = ?
            ORDER BY RATE_OVER DESC
            ]]>
        </query>
    </sql>

    <!-- 새로 입력된 달성도배점설정 정보를 등록한다. -->
    <sql name="VLUA080_INS">
        <description>달성도배점설정 데이터 입력</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_ACHPNT
                 ( GUBUN, EVL_YY, RATE_OVER, RATE_UNDER, ACH_PNT, GAUGE_THM, NONGAUGE_THM, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,     ?,      ?,         ?,          ?,       ?,         ?,            ?,       sysdate, ?,       sysdate )
            ]]>
        </query>
    </sql>

    <!-- 이미 설정된 달성도배점설정 정보를 수정 한다. -->
    <sql name="VLUA080_UPT">
        <description>달성도배점설정 데이터 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_ACHPNT
            SET    RATE_UNDER   = ?,
                   ACH_PNT      = ?,
                   GAUGE_THM    = ?,
                   NONGAUGE_THM = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    RATE_OVER    = ?
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 년도, 달성율에 해당하는 달성도배점설정 정보를 삭제한다. -->
    <sql name="VLUA080_DEL">
        <description>달성도배점설정 데이터 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_ACHPNT
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    RATE_OVER    = ?
            ]]>
        </query>
    </sql>


    <!-- 달성도배점설정 삭제 -->
    <sql name="VLUA080_DEL_01">
        <description>달성도배점설정 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_ACHPNT
		    WHERE  GUBUN  = ?
		    AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 달성도배점설정 복사 -->
    <sql name="VLUA080_INS_01">
        <description>달성도배점설정 복사</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_ACHPNT
			(GUBUN,EVL_YY,RATE_OVER,RATE_UNDER,ACH_PNT,GAUGE_THM,NONGAUGE_THM,
                         IPT_MAN,IPT_YMD,UPT_MAN,UPT_YMD)
			SELECT GUBUN,?,RATE_OVER,RATE_UNDER,ACH_PNT,GAUGE_THM,NONGAUGE_THM,
			       ?,SYSDATE,?,SYSDATE
			FROM   ASNHR.T_EV_ACHPNT
			WHERE  GUBUN  = ?
			AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

<!-- 역량평가 -->
<!--
***********************************************************************
* @UseCase     : VLUB010
* @description : 자기평가진행정보
***********************************************************************
* 2006/09/28      오대성        최초작성.
***********************************************************************
-->

    <!-- 현재년도, 회차 및 개인정보와 평가정보를 가져온다. -->
    <sql name="VLUB010_SHR_01">
        <description>자기 평가 진행 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  A.GUBUN, A.EVL_YY, A.EVL_FRQ, A.DPT_NM, A.JIK_NM, A.ENO_NO, A.ENO_NM,
                    C.CHIEP_GRD, D.IPT_STDT, D.IPT_ENDT, D.OBJ_STDT, D.OBJ_ENDT,
                    D.SELF_STDT, D.SELF_ENDT, D.PROT_STDT, D.PROT_ENDT,
                    C.CHIEP_GRD as FINAL_GRD
            FROM  ( SELECT INFO.GUBUN, INFO.EVL_YY, INFO.EVL_GBN, INFO.EVL_FRQ, EMP.ENO_NO, EMP.ENO_NM, EMP.DPT_NM, EMP.JIK_NM
                    FROM ( SELECT  GUBUN, EVL_YY, EVL_GBN, EVL_FRQ
                           FROM    ASNHR.T_EV_ESTINFO
                           WHERE   GUBUN   = ?
                           AND     EVL_YY  = TO_CHAR(SYSDATE, 'YYYY')
                           AND     EVL_GBN = ?
                           AND     EVL_FRQ = ?
                           AND     ROWNUM = 1
                         ) INFO,
                         ( SELECT  ENO_NO, NAME AS ENO_NM,
                                   ASNHR.SF_GET_DPTNAME(GUBUN, 'A4',DPT_CD) AS DPT_NM,
                                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A2', JOB_CD) AS JIK_NM
                           FROM    ASNHR.T_CM_EMPLIST
                           WHERE   ENO_NO = ?
                         ) EMP
                  ) A,
                  ( SELECT  GUBUN, ENO_NO,
                            DECODE(FEEDBK_GBN,'T',DECODE(FINAL_GRD, '', CHIEP_GRD, FINAL_GRD),'') AS CHIEP_GRD,
                           FINAL_GRD
                    FROM    ASNHR.T_EV_ABLRST
                    WHERE   GUBUN   = ?
                    AND     EVL_YY  = ?
                    AND     EVL_GBN = ?
                    AND     EVL_FRQ = ?
                  ) C,
                  ( SELECT '1'                              AS PRI_NO,
                           GUBUN, EVL_YY, EVL_GBN, EVL_FRQ,
                           TO_CHAR(IPT_STDT, 'YYYY-MM-DD')  AS IPT_STDT,
                           TO_CHAR(IPT_ENDT, 'YYYY-MM-DD')  AS IPT_ENDT,
                           TO_CHAR(OBJ_STDT, 'YYYY-MM-DD')  AS OBJ_STDT,
                           TO_CHAR(OBJ_ENDT, 'YYYY-MM-DD')  AS OBJ_ENDT,
                           TO_CHAR(SELF_STDT, 'YYYY-MM-DD') AS SELF_STDT,
                           TO_CHAR(SELF_ENDT, 'YYYY-MM-DD') AS SELF_ENDT,
                           TO_CHAR(PROT_STDT, 'YYYY-MM-DD') AS PROT_STDT,
                           TO_CHAR(PROT_ENDT, 'YYYY-MM-DD') AS PROT_ENDT
                    FROM   ASNHR.T_EV_SCHCHG
                    WHERE  ENO_NO  = ?
                    UNION ALL
                    SELECT '2'                              AS PRI_NO,
                           GUBUN, EVL_YY, EVL_GBN, EVL_FRQ,
                           TO_CHAR(IPT_STDT, 'YYYY-MM-DD')  AS IPT_STDT,
                           TO_CHAR(IPT_ENDT, 'YYYY-MM-DD')  AS IPT_ENDT,
                           TO_CHAR(OBJ_STDT, 'YYYY-MM-DD')  AS OBJ_STDT,
                           TO_CHAR(OBJ_ENDT, 'YYYY-MM-DD')  AS OBJ_ENDT,
                           TO_CHAR(SELF_STDT, 'YYYY-MM-DD') AS SELF_STDT,
                           TO_CHAR(SELF_ENDT, 'YYYY-MM-DD') AS SELF_ENDT,
                           TO_CHAR(PROT_STDT, 'YYYY-MM-DD') AS PROT_STDT,
                           TO_CHAR(PROT_ENDT, 'YYYY-MM-DD') AS PROT_ENDT
                    FROM   ASNHR.T_EV_ESTINFO
                  ) D
            WHERE   A.GUBUN   = C.GUBUN(+)
            AND     A.ENO_NO  = C.ENO_NO(+)
            AND     A.GUBUN   = D.GUBUN
            AND     A.EVL_YY  = D.EVL_YY
            AND     A.EVL_GBN = D.EVL_GBN
            AND     A.EVL_FRQ = D.EVL_FRQ
            ORDER BY IPT_ENDT DESC
            ]]>
        </query>
    </sql>

    <!-- 평가 기준 구조 설정 정보 및 피평가자에 대한 평가자 설정정보를 가져온다. by ksd-->
    <sql name="VLUB010_SHR_02">
        <description>평가 진행 세부 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  TAR.UPDN_GBN, TAR.DEGREE_GBN, TAR.ENO_NO,
                    DECODE(RST.ENO_NO,NULL,'['||TAR.ENO_NM||']','[완료]') AS ENO_NO1,
                    DECODE(RST.ENO_NO,NULL,'[완료]','['||TAR.ENO_NM||']') AS ENO_NO2,
                    ETY.UP_YN,ETY.UP_CNT,ETY.DOWN_YN,ETY.DOWN_CNT
             FROM  (SELECT 1                                       AS UPDN_GBN,
                           A.DEGREE_GBN                            AS DEGREE_GBN,
                           A.EVLENO_NO                             AS ENO_NO,
                           ASNHR.SF_GET_ENONAME('01', A.EVLENO_NO)    AS ENO_NM,
                           ASNHR.SF_GET_DPTSEQ( '01', 'A4',B.DPT_CD)  AS DPT_SEQ,
                           ASNHR.SF_GET_COMMSEQ('01', 'A2', B.JOB_CD) AS JOB_SEQ,
                           ASNHR.SF_GET_COMMSEQ('01', 'A3', B.HOB_CD) AS HOB_SEQ,
                           GROUP_CD,
                           B.HIRG_YMD
                    FROM   ASNHR.T_EV_EVLIST_DT A, ASNHR.T_EV_EVLIST_HD B
                    WHERE  A.GUBUN     = B.GUBUN      AND
                           A.EVL_YY    = B.EVL_YY     AND
                           A.EVL_GBN   = B.EVL_GBN    AND
                           A.EVL_FRQ   = B.EVL_FRQ    AND
                           A.EVLENO_NO = B.ENO_NO     AND
                           B.EXCEPT_YN = 'F'          AND
                           A.GUBUN     = ?            AND
                           A.EVL_YY    = ?            AND
                           A.EVL_GBN   = ?            AND
                           A.EVL_FRQ   = ?            AND
                           A.ENO_NO    = ?
                    UNION ALL
                    SELECT 2                                       AS UPDN_GBN,
                           A.DEGREE_GBN                            AS DEGREE_GBN,
                           A.ENO_NO                                AS ENO_NO,
                           ASNHR.SF_GET_ENONAME('01', A.ENO_NO)       AS ENO_NM,
                           ASNHR.SF_GET_DPTSEQ( '01', 'A4',B.DPT_CD)  AS DPT_SEQ,
                           ASNHR.SF_GET_COMMSEQ('01', 'A2', B.JOB_CD) AS JOB_SEQ,
                           ASNHR.SF_GET_COMMSEQ('01', 'A3', B.HOB_CD) AS HOB_SEQ,
                           GROUP_CD,
                           B.HIRG_YMD
                      FROM ASNHR.T_EV_EVLIST_DT A, ASNHR.T_EV_EVLIST_HD B
                     WHERE A.GUBUN     = B.GUBUN      AND
                           A.EVL_YY    = B.EVL_YY     AND
                           A.EVL_GBN   = B.EVL_GBN    AND
                           A.EVL_FRQ   = B.EVL_FRQ    AND
                           A.ENO_NO    = B.ENO_NO     AND
                           B.EXCEPT_YN = 'F'          AND
                           A.GUBUN     = ?            AND
                           A.EVL_YY    = ?            AND
                           A.EVL_GBN   = ?            AND
                           A.EVL_FRQ   = ?            AND
                           A.EVLENO_NO = ?
                   ) TAR,
                   (SELECT UPDN_GBN, DEGREE_GBN, ENO_NO
                    FROM   ASNHR.T_EV_ABLTBL A
                    WHERE  GUBUN     = ?             AND
                           EVL_YY    = ?             AND
                           EVL_FRQ   = ?             AND
                           EVLENO_NO = ?
                    GROUP BY GUBUN, UPDN_GBN, DEGREE_GBN, ENO_NO
                   ) RST,
                   (SELECT UP_YN,UP_CNT,DOWN_YN,DOWN_CNT
                    FROM   ASNHR.T_EV_TYPE
                    WHERE  GUBUN = ?
                    AND    EVL_YY = ?
                   ) ETY
            WHERE   TAR.UPDN_GBN   = RST.UPDN_GBN(+)   AND
                    TAR.DEGREE_GBN = RST.DEGREE_GBN(+) AND
                    TAR.ENO_NO     = RST.ENO_NO(+)
            ORDER BY TAR.UPDN_GBN, TAR.DEGREE_GBN, TAR.UPDN_GBN, GROUP_CD, TAR.DPT_SEQ, TAR.JOB_SEQ, TAR.HOB_SEQ DESC, TAR.HIRG_YMD, TAR.ENO_NO
            ]]>
        </query>
    </sql>

        <!-- 이의신청정보를 가져온다. -->
    <sql name="VLUB010_SHR_03">
        <description>이의신청 정보 조회</description>
        <query>
            <![CDATA[
            SELECT ( CASE WHEN ANSWER_YMD IS NOT NULL THEN '답변완료'
                    ELSE DECODE(ACCEPT_GBN, 'Y', '접수완료', '접수대기') END) AS STSTUS
            FROM   ASNHR.T_EV_PROTEST
            WHERE  GUBUN     = ? AND
                   EVL_YY    = ? AND
                   EVL_GBN   = ? AND
                   EVL_FRQ   = ? AND
                   ENO_NO    = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB020
* @description : 개인별평가일정조정
***********************************************************************
* 2006/09/26      오대성        최초작성.
***********************************************************************
-->

    <!-- ASNHR.T_EV_EVLIST_HD 테이블의 사번과 조인하여 개인별평가일정정보를 조회한다. -->
    <sql name="VLUB020_SHR_02">
        <description>개인별 평가 일정 조정 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.ENO_NO,
                    B.ENO_NM, B.DPT_NM, B.JOB_NM, B.HEAD_NM,
                    CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', A.GROUP_CD)
                         WHEN A.GUBUN = '02' THEN
                             (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = A.GROUP_CD AND DUTY_LBL = A.COMM_CD)
                    END                             AS GROUP_NM,       -- 평가그룹명
                    TO_CHAR(C.IPT_STDT,'YYYYMMDD')  AS IPT_STDT,
                    TO_CHAR(C.IPT_ENDT,'YYYYMMDD')  AS IPT_ENDT,
                    TO_CHAR(C.OBJ_STDT,'YYYYMMDD')  AS OBJ_STDT,
                    TO_CHAR(C.OBJ_ENDT,'YYYYMMDD')  AS OBJ_ENDT,
                    TO_CHAR(C.SELF_STDT,'YYYYMMDD') AS SELF_STDT,
                    TO_CHAR(C.SELF_ENDT,'YYYYMMDD') AS SELF_ENDT,
                    TO_CHAR(C.PROT_STDT,'YYYYMMDD') AS PROT_STDT,
                    TO_CHAR(C.PROT_ENDT,'YYYYMMDD') AS PROT_ENDT, C.ENO_NO AS FLAG
            FROM   (SELECT  GUBUN, EVL_YY, COMM_CD, EVL_GBN, EVL_FRQ, ENO_NO, GROUP_CD
                    FROM    ASNHR.T_EV_EVLIST_HD
                    WHERE   GUBUN   = ?
                    AND     EVL_YY  = ?
                    AND     EVL_GBN = ?
                    AND     EVL_FRQ = ?
                    AND     ENO_NO LIKE '%'||?||'%'
                    AND     DPT_CD LIKE '%'||?||'%'
                    AND     GROUP_CD LIKE '%'||?||'%') A,
                   (SELECT  GUBUN, ENO_NO, ENO_NM, DPT_NM, JOB_NM, HEAD_NM,
                            HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ, HIRG_YMD
                    FROM    VI_T_CM_PERSON
                   ) B,
                    ASNHR.T_EV_SCHCHG C
            WHERE   A.ENO_NO  = B.ENO_NO
            AND     A.GUBUN   = C.GUBUN(+)
            AND     A.EVL_YY  = C.EVL_YY(+)
            AND     A.EVL_GBN = C.EVL_GBN(+)
            AND     A.EVL_FRQ = C.EVL_FRQ(+)
            AND     A.ENO_NO  = C.ENO_NO(+)
            ORDER BY B.HEAD_SEQ, B.DPT_SEQ, B.JOB_SEQ, B.HOB_SEQ DESC, B.HIRG_YMD
            ]]>
        </query>
    </sql>

    <!-- 개인별 평가 일정 정보를 저장한다. -->
    <sql name="VLUB020_INS">
        <description>개인별 평가 일정 조정 정보 저장(성과)</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_SCHCHG
            ( GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, IPT_STDT, IPT_ENDT, OBJ_STDT,
              OBJ_ENDT, SELF_STDT, SELF_ENDT, PROT_STDT, PROT_ENDT, IPT_MAN, IPT_YMD,
              UPT_MAN, UPT_YMD )
            VALUES
            ( ?    , ?     , ?      , ?      , ?     , ?       , ?       , ?       ,
              ?       , ?        , ?        , ?        , ?        , ?      , sysdate,
              ?      , sysdate )
            ]]>
        </query>
    </sql>

    <!-- 개인별 평가 일정 조정 정보를 수정한다. -->
    <sql name="VLUB020_UPT">
        <description>개인별 평가 일정 조정 정보 수정(성과)</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_SCHCHG
            SET     IPT_STDT = ?,                -- 평가입력기간(시작)
                    IPT_ENDT = ?,                -- 평가입력기간(종료)
                    OBJ_STDT = ?,                -- 목표입력기간(시작)
                    OBJ_ENDT = ?,                -- 목표입력기간(종료)
                    SELF_STDT = ?,               -- 본인평가기간(시작)
                    SELF_ENDT = ?,               -- 본인평가기간(종료)
                    PROT_STDT = ?,               -- 이의신청기간(시작)
                    PROT_ENDT = ?,               -- 이의신청기간(종료)
                    UPT_MAN = ?,                 -- 최종수정자
                    UPT_YMD = sysdate
            WHERE   GUBUN = ?
            AND     EVL_YY = ?
            AND     EVL_GBN = ?
            AND     EVL_FRQ = ?
            AND     ENO_NO = ?

            ]]>
        </query>
    </sql>

    <!-- 개인별 평가 일정 조정 정보를 삭제한다. -->
    <sql name="VLUB020_DEL">
        <description>개인별 평가 일정 조정 정보 삭제</description>
        <query>
            <![CDATA[
            DELETE    ASNHR.T_EV_SCHCHG
            WHERE    GUBUN = ?
            AND     EVL_YY = ?
            AND     EVL_GBN = ?
            AND     EVL_FRQ = ?
            AND     ENO_NO = ?

            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB030
* @description : 상향평가
***********************************************************************
* 2006/09/26      박인이        최초작성.
***********************************************************************
-->

    <!-- 해당년도, 회차에 해당하는 역량상향평가 대상자 정보를 조회한다. -->
    <sql name="VLUB030_SHR_02">
        <description>평가자설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT C.GUBUN,
                   C.EVL_YY                                                            AS EVL_YY,
                   C.EVL_GBN                                                           AS EVL_GBN,
                   C.EVL_FRQ                                                           AS EVL_FRQ,
                   C.EVLENO_NO                                                         AS EVLENO_NO,
                   C.DEGREE_GBN                                                        AS DEGREE_GBN,
                   NVL(D.UPDN_GBN, '1')                                                AS UPDN_GBN,
                   C.ENO_NO                                                            AS ENO_NO,
                   DECODE(D.PNT, NULL, '미평가', 0, '미평가', TO_CHAR(D.PNT, 999.99))  AS EVL_PNT,
                   ASNHR.SF_GET_ENONAME('01', C.ENO_NO)                                      AS ENO_NM,
                   ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD)                                 AS DPT_NM,
                   C.GROUP_CD                                                          AS GROUP_CD,
                   CASE WHEN C.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', C.GROUP_CD)
                        WHEN C.GUBUN = '02' THEN
                            (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = C.GROUP_CD AND DUTY_LBL = C.COMM_CD)
                   END                                                                 AS GROUP_NM,       -- 평가그룹명
                   ASNHR.SF_GET_DPTNAME('01',  'B2', C.HEAD_CD)                             AS HEAD_NM,
                   ASNHR.SF_GET_COMMNAME('01', 'A2', C.JOB_CD)                               AS JOB_NM,
                   TO_CHAR(HIRG_YMD, 'YYYY-MM-DD')                                     AS HIRG_YMD,
                   TO_CHAR(DPA_YMD, 'YYYY-MM-DD')                                      AS DPA_YMD
            FROM ( SELECT A.GUBUN,   A.EVL_YY,  A.EVL_GBN,  A.EVL_FRQ, B.ENO_NO EVLENO_NO,
                          A.HEAD_CD, A.DPT_CD,  A.JOB_CD,   A.COMM_CD, A.GROUP_CD,  B.DEGREE_GBN, B.EVLENO_NO ENO_NO,
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', A.HEAD_CD) AS HEAD_SEQ,
                          ASNHR.SF_GET_DPTSEQ( '01', 'A4',A.DPT_CD)   AS DPT_SEQ,
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', A.JOB_CD)  AS JOB_SEQ,
                          ASNHR.SF_GET_COMMSEQ('01', 'A3', A.HOB_CD)  AS HOB_SEQ,
                          HIRG_YMD,
                          DPA_YMD
                   FROM   ASNHR.T_EV_EVLIST_HD A,
                          ASNHR.T_EV_EVLIST_DT B
                   WHERE  A.GUBUN      = ?
                   AND    A.EVL_YY     = ?
                   AND    A.EVL_GBN    = '1'
                   AND    A.EVL_FRQ    = ?
                   AND    B.ENO_NO     = ?                          -- 상향평가시 로그인사번 (평가자정보를 추출)
                   AND    A.EXCEPT_YN  = 'F'                        -- 평가제외가 아닌 대상 추출
                   AND    A.GUBUN      = B.GUBUN
                   AND    A.EVL_YY     = B.EVL_YY
                   AND    A.EVL_GBN    = B.EVL_GBN
                   AND    A.EVL_FRQ    = B.EVL_FRQ
                   AND    A.ENO_NO     = B.EVLENO_NO
                 ) C,
                 ( SELECT GUBUN, EVL_YY, EVl_FRQ, UPDN_GBN, DEGREE_GBN, ENO_NO, EVLENO_NO, SUM(NVL(SUBPNT_AVG, 0)) AS PNT
                   FROM   ASNHR.T_EV_ABLTBL
                   WHERE  GUBUN     = ?
                   AND    EVL_YY    = ?
                   AND    EVL_FRQ   = ?
                   AND    UPDN_GBN  = '1'                           -- 상향이면 1, 하향이면 2
                   AND    EVLENO_NO = ?                             -- 로그인사번
                   GROUP BY GUBUN, EVL_YY, EVl_FRQ, UPDN_GBN, DEGREE_GBN, ENO_NO, EVLENO_NO
                 ) D
            WHERE  C.GUBUN      = D.GUBUN(+)
            AND    C.EVL_YY     = D.EVL_YY(+)
            AND    C.EVL_FRQ    = D.EVL_FRQ(+)
            AND    C.DEGREE_GBN = D.DEGREE_GBN(+)
            AND    C.ENO_NO     = D.ENO_NO(+)
            AND    C.EVLENO_NO  = D.EVLENO_NO(+)
            ORDER BY  C.GROUP_CD, C.HEAD_SEQ, C.DPT_SEQ, C.JOB_SEQ, C.HOB_SEQ DESC, HIRG_YMD, C.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 해당년도, 회차에 해당하는 역량상향평가 대상자 정보를 조회한다. -->
    <sql name="VLUB030_SHR">
        <description>평가자설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT '01'                                                              AS GUBUN,
                    A.EVL_YY                                                         AS EVL_YY,
                    A.EVL_GBN                                                        AS EVL_GBN,
                    A.EVL_FRQ                                                        AS EVL_FRQ,
                    A.UPDN_GBN                                                       AS UPDN_GBN,
                    ASNHR.SF_GET_DPTNAME('01','B2', C.HEAD_CD)                             AS HEAD_NM,
                    ASNHR.SF_GET_DPTNAME('01','A4', C.DPT_CD)                              AS DPT_NM,
                    ASNHR.SF_GET_COMMNAME('01','A2', C.JOB_CD)                             AS JOB_NM,
                    C.ENO_NO                                                         AS ENO_NO,
                    C.ENO_NM                                                         AS ENO_NM,
                    DECODE(B.PNT, NULL, '미평가', 0, '미평가', TO_CHAR(B.PNT, 999.99))  AS EVL_PNT,
                   '01'                                                              AS GROUP_CD,
                   '1'                                                               AS DEGREE_GBN,
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A7', DUTY_CD)        AS DUTY_NM              -- 직책명
              FROM (SELECT '3' UPDN_GBN, ENO_NO, ? EVL_YY, '1' EVL_GBN, ? EVL_FRQ
                      FROM ASNHR.T_EV_DEPTVAL
                     WHERE EVL_YY = ? AND EVL_FRQ = ?
                       AND (EVLENO_NO1 = ? OR EVLENO_NO2 = ? OR EVLENO_NO3 = ? )
                --       AND DPT_CD  IN (SELECT DPT_CD FROM ASNHR.T_CM_PERSON WHERE ENO_NO = #)
                 --      AND 'L4' = (SELECT DUTY_CD FROM ASNHR.T_CM_PERSON WHERE ENO_NO = #)
                     UNION
                    SELECT '1' UPDN_GBN, EVLENO_NO ENO_NO, EVL_YY, EVL_GBN, TO_CHAR(EVL_FRQ)
                      FROM ASNHR.T_EV_EVLIST_DT
                     WHERE EVL_YY = ? AND EVL_GBN = '1' AND EVL_FRQ = ?
                       AND EVLENO_NO IN (SELECT ENO_NO FROM ASNHR.T_CM_PERSON WHERE GBN_CD = '1' AND (RET_YMD IS NULL OR RET_YMD >= SYSDATE))  -- AND DUTY_CD = 'L4'
                       AND ENO_NO IN (SELECT ENO_NO FROM ASNHR.T_EV_EVLIST_HD WHERE EVL_YY = ? AND EVL_GBN = '1' AND EVL_FRQ = ? AND EXCEPT_YN = 'F')
                       AND ENO_NO = ?) A,
                   (SELECT EVL_YY, EVl_FRQ, UPDN_GBN, ENO_NO, EVLENO_NO, SUM(NVL(SUBPNT_AVG, 0)) AS PNT
                      FROM ASNHR.T_EV_ABLTBL
                     WHERE EVL_YY    = ?
                       AND EVL_FRQ   = ?
                       AND UPDN_GBN  IN ('1','3')
                       AND EVLENO_NO = ?
                  GROUP BY EVL_YY, EVl_FRQ, UPDN_GBN, ENO_NO, EVLENO_NO) B,
                  ASNHR.T_CM_PERSON C
             WHERE A.ENO_NO = B.ENO_NO(+)
               AND A.UPDN_GBN = B.UPDN_GBN(+)
               AND A.ENO_NO = C.ENO_NO
          ORDER BY ASNHR.SF_GET_DPTSEQ('01','B2', C.HEAD_CD), ASNHR.SF_GET_COMMSEQ('01','A2', C.JOB_CD), C.HOB_CD DESC
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB031
* @description : 역량평가표작성(상향)
***********************************************************************
* 2006/09/XX      XXX        최초작성.
***********************************************************************
-->

<!--
***********************************************************************
* @UseCase     : VLUB040
* @description : 하향평가
***********************************************************************
* 2006/09/26      박인이        최초작성.
***********************************************************************
-->
    <!-- 시스템일자가 평가적용기간사이에 있는 평가회차설정 정보를 조회한다. -->
    <sql name="VLUB040_SHR_01">
        <description>평가회차설정 데이터 조회 (VLUB030, VLUC130, VLUC140, VLUC150 과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT GUBUN,
                   TO_CHAR(IPT_STDT,  'YYYY-MM-DD') AS IPT_STDT,   -- 평가입력기간(시작)
                   TO_CHAR(IPT_ENDT,  'YYYY-MM-DD') AS IPT_ENDT,   -- 평가입력기간(종료)
                   TO_CHAR(SELF_STDT, 'YYYY-MM-DD') AS SELF_STDT,  -- 본인평가입력기간(시작)
                   TO_CHAR(SELF_ENDT, 'YYYY-MM-DD') AS SELF_ENDT   -- 본인평가입력기간(종료)
            FROM   ASNHR.T_EV_SCHCHG
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = ?
            AND    EVL_FRQ = ?
            AND    ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 해당년도, 회차에 해당하는 역량하향평가 대상자 정보를 조회한다. -->
    <sql name="VLUB040_SHR_02">
        <description>평가자설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT C.GUBUN,
                   C.EVL_YY                                                            AS EVL_YY,
                   C.EVL_GBN                                                           AS EVL_GBN,
                   C.EVL_FRQ                                                           AS EVL_FRQ,
                   C.EVLENO_NO                                                         AS EVLENO_NO,
                   C.DEGREE_GBN                                                        AS DEGREE_GBN,
                   NVL(D.UPDN_GBN, '2')                                                AS UPDN_GBN,
                   C.ENO_NO                                                            AS ENO_NO,
                   DECODE(D.PNT, NULL, '미평가', 0, '미평가', TO_CHAR(D.PNT, 999.99))  AS EVL_PNT,
                   ASNHR.SF_GET_ENONAME('01', C.ENO_NO)                                      AS ENO_NM,
                   ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD)                                 AS DPT_NM,
                   C.GROUP_CD                                                          AS GROUP_CD,
                   CASE WHEN C.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', C.GROUP_CD)
                        WHEN C.GUBUN = '02' THEN
                            (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = C.GROUP_CD AND DUTY_LBL = C.COMM_CD)
                   END                                                                 AS GROUP_NM,       -- 평가그룹명
                   ASNHR.SF_GET_DPTNAME('01', 'B2', C.HEAD_CD)                              AS HEAD_NM,
                   ASNHR.SF_GET_COMMNAME('01', 'A2', C.JOB_CD)                               AS JOB_NM,
                   TO_CHAR(C.HIRG_YMD, 'YYYY-MM-DD')                                   AS HIRG_YMD,
                   TO_CHAR(C.DPA_YMD, 'YYYY-MM-DD')                                    AS DPA_YMD
            FROM ( SELECT A.GUBUN,  A.EVL_YY,  A.EVL_GBN,  A.EVL_FRQ,    B.ENO_NO,  A.HEAD_CD, A.JOB_CD,
                          A.DPT_CD, A.COMM_CD, A.GROUP_CD, B.DEGREE_GBN, B.EVLENO_NO,
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', A.HEAD_CD) AS HEAD_SEQ,
                          ASNHR.SF_GET_DPTSEQ( '01', 'A4',A.DPT_CD)   AS DPT_SEQ,
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', A.JOB_CD)  AS JOB_SEQ,
                          ASNHR.SF_GET_COMMSEQ('01', 'A3', A.HOB_CD)  AS HOB_SEQ,
                          A.HIRG_YMD,
                          A.DPA_YMD
                   FROM   ASNHR.T_EV_EVLIST_HD A,
                          ASNHR.T_EV_EVLIST_DT B
                   WHERE  A.GUBUN      = ?
                   AND    A.EVL_YY     = ?
                   AND    A.EVL_GBN    = '1'
                   AND    A.EVL_FRQ    = ?
                   AND    B.EVLENO_NO  = ?                            -- 하향평가시 로그인사번 (피평가자정보를 추출)
                   AND    A.EXCEPT_YN  = 'F'                          -- 평가제외가 아닌 대상 추출
                   AND    A.GUBUN      = B.GUBUN
                   AND    A.EVL_YY     = B.EVL_YY
                   AND    A.EVL_GBN    = B.EVL_GBN
                   AND    A.EVL_FRQ    = B.EVL_FRQ
                   AND    A.ENO_NO     = B.ENO_NO
                 ) C,
                 ( SELECT GUBUN, EVL_YY, EVl_FRQ, UPDN_GBN, DEGREE_GBN, ENO_NO, EVLENO_NO, SUM(NVL(SUBPNT_AVG, 0)) AS PNT
                   FROM   ASNHR.T_EV_ABLTBL
                   WHERE  GUBUN     = ?
                   AND    EVL_YY    = ?
                   AND    EVL_FRQ   = ?
                   AND    UPDN_GBN  = '2'                             -- 상향이면 1, 하향이면 2
                   AND    EVLENO_NO = ?                               -- 로그인사번
                   GROUP BY GUBUN, EVL_YY, EVl_FRQ, UPDN_GBN, DEGREE_GBN, ENO_NO, EVLENO_NO
                 ) D
            WHERE  C.GUBUN      = D.GUBUN(+)
            AND    C.EVL_YY     = D.EVL_YY(+)
            AND    C.EVL_FRQ    = D.EVL_FRQ(+)
            AND    C.DEGREE_GBN = D.DEGREE_GBN(+)
            AND    C.ENO_NO     = D.ENO_NO(+)
            AND    C.EVLENO_NO  = D.EVLENO_NO(+)
            ORDER BY  C.HEAD_SEQ, C.DPT_SEQ, GROUP_CD, C.DEGREE_GBN, C.JOB_SEQ, C.HOB_SEQ DESC, C.HIRG_YMD, C.ENO_NO --정렬순서 변경 : 임규종대리(20071123)
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUB041
* @description : 역량평가표작성(하향)
***********************************************************************
* 2006/09/27      박인이        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 년도, 구분(역량), 회차, 차수에 따른 피평가자 설정구조를 조회 한다. (햐향평가 및 성과평가) -->
    <sql name="VLUB041_SHR_00">
        <description>개인별역량평가자설정 데이터 조회 (VLUC141, VLUC151과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT A.GUBUN,
                   A.EVL_YY,                                                    -- 해당년도
                   A.EVL_GBN,                                                   -- 구분(역량/성과)
                   A.EVL_FRQ,                                                   -- 회차
                   A.ENO_NO,                                                    -- 피평가자사번
                   ASNHR.SF_GET_DPTNAME('01', 'A4',A.DPT_CD)           AS DPT_NM,     -- 피평가자부서
                   A.GROUP_CD                                    AS GROUP_CD,   -- 평가그룹
                   ASNHR.SF_GET_ENONAME('01', A.ENO_NO)                AS ENO_NM,     -- 피평가자성명
                   B.DEGREE_GBN,
                   B.EVLENO_NO,
                   B.REFENO_NO1,
                   B.REFENO_NO2,
                   B.REFENO_NO3,
                   ASNHR.SF_GET_ENONAME('01', B.EVLENO_NO)             AS EVLENO_NM,  -- 평가자성명
                   ASNHR.SF_GET_ENONAME('01', B.REFENO_NO1)            AS REFENO_NM1, -- 참조평가자성명1
                   ASNHR.SF_GET_ENONAME('01', B.REFENO_NO2)            AS REFENO_NM2, -- 참조평가자성명2
                   ASNHR.SF_GET_ENONAME('01', B.REFENO_NO3)            AS REFENO_NM3  -- 참조평가자성명3
            FROM   ASNHR.T_EV_EVLIST_HD A,
                   ASNHR.T_EV_EVLIST_DT B
            WHERE  A.GUBUN      = ?
            AND    A.EVL_YY     = ?
            AND    A.EVL_GBN    = ?
            AND    A.EVL_FRQ    = ?
            AND    A.ENO_NO     = ?
            AND    A.GUBUN      = B.GUBUN
            AND    A.EVL_YY     = B.EVL_YY
            AND    A.EVL_GBN    = B.EVL_GBN
            AND    A.EVL_FRQ    = B.EVL_FRQ
            AND    A.ENO_NO     = B.ENO_NO
            AND    B.DEGREE_GBN = ?
            AND    B.EVLENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 년도, 구분(역량), 회차, 차수에 따른 피평가자 설정구조를 조회 한다. (상향평가) -->
    <sql name="VLUB041_SHR_01">
        <description>개인별역량평가자설정 데이터 조회 </description>
        <query>
            <![CDATA[
            SELECT A.GUBUN,
                   A.EVL_YY,                                                    -- 해당년도
                   A.EVL_GBN,                                                   -- 구분(역량/성과)
                   A.EVL_FRQ,                                                   -- 회차
                   A.ENO_NO,                                                    -- 피평가자사번
                   ASNHR.SF_GET_DPTNAME('01', 'A4',A.DPT_CD)           AS DPT_NM,     -- 피평가자부서
                   A.GROUP_CD                                    AS GROUP_CD,   -- 평가그룹
                   ASNHR.SF_GET_ENONAME('01', A.ENO_NO)                AS ENO_NM,     -- 피평가자성명
                   B.DEGREE_GBN,
                   B.EVLENO_NO,
                   B.REFENO_NO1,
                   B.REFENO_NO2,
                   B.REFENO_NO3,
                   ASNHR.SF_GET_ENONAME('01', B.ENO_NO)                AS EVLENO_NM   -- 평가자성명
            FROM   ASNHR.T_EV_EVLIST_HD A,
                   ASNHR.T_EV_EVLIST_DT B
            WHERE  A.GUBUN      = ?
            AND    A.EVL_YY     = ?
            AND    A.EVL_GBN    = ?
            AND    A.EVL_FRQ    = ?
            AND    A.ENO_NO     = ?                                             -- 피평가자사번
            AND    A.GUBUN      = B.GUBUN
            AND    A.EVL_YY     = B.EVL_YY
            AND    A.EVL_GBN    = B.EVL_GBN
            AND    A.EVL_FRQ    = B.EVL_FRQ
            AND    A.ENO_NO     = B.EVLENO_NO
            AND    B.DEGREE_GBN = ?
            AND    B.ENO_NO     = ?                                             -- 평가자사번
            ]]>
        </query>
    </sql>

    <!-- 해당년도, 회차에 해당하는 피평가자의 역량평가표 정보를 조회해온다. -->
    <sql name="VLUB041_SHR">
        <description>역량평가표 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT C.GUBUN,     C.EVL_YY     EVL_YY,     C.EVL_FRQ    EVL_FRQ,    C.ENO_NO     ENO_NO,     C.COMM_CD2  COMM_CD2,
                   C.EST_CD     EST_CD,     ASNHR.SF_GET_COMMNAME('01', 'EA', C.EST_CD)  EST_NM,
                   C.ABL_CD     ABL_CD,     C.ABL_NM     ABL_NM, C.ABL_NM_SUB   ABL_NM_SUB,     C.WEIGHT    WEIGHT,
                   C.SUBITEM_01 SUBITEM_01, C.SUBITEM_02 SUBITEM_02, C.SUBITEM_03 SUBITEM_03, C.SUBITEM_04 SUBITEM_04,
                   D.SUBPNT_01  SUBPNT_01,  D.SUBPNT_02  SUBPNT_02,  D.SUBPNT_03  SUBPNT_03,
                   NVL(D.SUBPNT_AVG, 0) SUBPNT_AVG, D.IPT_MAN    IPT_MAN,    D.IPT_YMD    IPT_YMD
            FROM ( SELECT A.GUBUN    GUBUN,  A.EVL_YY   EVL_YY,   A.EVL_FRQ EVL_FRQ,
                          B.ENO_NO   ENO_NO, A.COMM_CD2 COMM_CD2, A.EST_CD  EST_CD,
                          A.ABL_CD   ABL_CD, A.ABL_NM   ABL_NM, A.ABL_NM_SUB   ABL_NM_SUB,   A.WEIGHT  WEIGHT,
                          A.SUBITEM_01 SUBITEM_01, A.SUBITEM_02 SUBITEM_02, A.SUBITEM_03 SUBITEM_03, A.SUBITEM_04 SUBITEM_04
                   FROM   ASNHR.T_EV_ESTITEM A,
                          ASNHR.T_EV_EVLIST_HD B
                   WHERE  B.GUBUN     = ?
                   AND    B.EVL_YY    = ?
                   AND    B.EVL_GBN   = '1'
                   AND    B.EVL_FRQ   = ?
                   AND    B.EXCEPT_YN = 'F'
                   AND    A.GUBUN     = B.GUBUN
                   AND    A.EVL_YY    = B.EVL_YY
                   AND    A.EVL_FRQ   = B.EVL_FRQ
                   AND    A.COMM_CD1  = B.COMM_CD
                   AND    A.GROUP_CD  = B.GROUP_CD
                   AND    B.ENO_NO    = ?               -- 피평가자사번
                 ) C,
                   ASNHR.T_EV_ABLTBL D
            WHERE  C.GUBUN    = D.GUBUN(+)
            AND    C.EVL_YY   = D.EVL_YY(+)
            AND    C.EVL_FRQ  = D.EVL_FRQ(+)
            AND    C.ENO_NO   = D.ENO_NO(+)
            AND    C.COMM_CD2 = D.COMM_CD2(+)
            AND    C.EST_CD   = D.EST_CD(+)
            AND    C.ABL_CD   = D.ABL_CD(+)
            AND    ?          = D.UPDN_GBN(+)           -- 상향이면 1, 하향이면 2
            AND    ?          = D.DEGREE_GBN(+)         -- 평가차수
            AND    ?          = D.EVLENO_NO(+)          -- 로그인사번
            ORDER BY  C.ABL_CD
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 년도, 구분(역량), 회차, 차수에 따른 피평가자 설정구조를 조회 한다. (동료평가) -->
    <sql name="VLUB041_SHR_03">
        <description>개인별역량평가자설정 데이터 조회 </description>
        <query>
            <![CDATA[
            SELECT ?                          AS  GUBUN,
                   ?                          AS  EVL_YY,       -- 해당년도
                   ?                          AS  EVL_GBN,      -- 구분(역량/성과)
                   ?                          AS  EVL_FRQ,      -- 회차
                   ?                          AS  ENO_NO,       -- 피평가자사번
                   ASNHR.SF_GET_ENODPT(?)           AS  DPT_NM,       -- 피평가자부서
                   '01'                       AS  GROUP_CD,     -- 평가그룹
                   ASNHR.SF_GET_ENONAME('01',?)     AS  ENO_NM,       -- 피평가자성명
                   ?                          AS  DEGREE_GBN,
                   ?                          AS  EVLENO_NO,
                   ''                         AS  REFENO_NO1,
                   ''                         AS  REFENO_NO2,
                   ''                         AS  REFENO_NO3,
                   ASNHR.SF_GET_ENONAME('01', ?)    AS EVLENO_NM   -- 평가자성명
            FROM   DUAL
            ]]>
        </query>
    </sql>

    <!-- 해당년도, 회차에 해당하는 피평가자의 다면평가표 정보를 조회해온다. -->
    <sql name="VLUB041_SHR_04">
        <description>다면평가표 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT C.GUBUN,     C.EVL_YY     EVL_YY,     C.EVL_FRQ    EVL_FRQ,    C.ENO_NO     ENO_NO,     C.COMM_CD2  COMM_CD2,
                   C.EST_CD     EST_CD,     ASNHR.SF_GET_COMMNAME('01', 'EA', C.EST_CD)  EST_NM,
                   C.ABL_CD     ABL_CD,     C.ABL_NM     ABL_NM, C.ABL_NM_SUB   ABL_NM_SUB,     C.WEIGHT    WEIGHT,
                   C.SUBITEM_01 SUBITEM_01, C.SUBITEM_02 SUBITEM_02, C.SUBITEM_03 SUBITEM_03, C.SUBITEM_04 SUBITEM_04,
                   D.SUBPNT_01  SUBPNT_01,  D.SUBPNT_02  SUBPNT_02,  D.SUBPNT_03  SUBPNT_03,
                   NVL(D.SUBPNT_AVG, 0) SUBPNT_AVG, D.IPT_MAN    IPT_MAN,    D.IPT_YMD    IPT_YMD
            FROM ( SELECT A.GUBUN    GUBUN,  A.EVL_YY   EVL_YY,   A.EVL_FRQ EVL_FRQ,
                          B.ENO_NO   ENO_NO, A.COMM_CD2 COMM_CD2, A.EST_CD  EST_CD,
                          A.ABL_CD   ABL_CD, A.ABL_NM   ABL_NM, A.ABL_NM_SUB   ABL_NM_SUB,   A.WEIGHT  WEIGHT,
                          A.SUBITEM_01 SUBITEM_01, A.SUBITEM_02 SUBITEM_02, A.SUBITEM_03 SUBITEM_03, A.SUBITEM_04 SUBITEM_04
                   FROM   ASNHR.T_EV_ESTITEM A,
                          ASNHR.T_EV_EVLIST_HD B
                   WHERE  B.GUBUN     = ?
                   AND    B.EVL_YY    = ?
                   AND    B.EVL_GBN   = '1'
                   AND    B.EVL_FRQ   = ?
                --   AND    B.EXCEPT_YN = 'F'
                   AND    A.GUBUN     = B.GUBUN
                   AND    A.EVL_YY    = B.EVL_YY
                   AND    A.EVL_FRQ   = B.EVL_FRQ
                   AND    A.COMM_CD1  = B.COMM_CD
                   AND    A.GROUP_CD  = B.GROUP_CD
                   AND    B.ENO_NO    = ?               -- 피평가자사번
                 ) C,
                   ASNHR.T_EV_ABLTBL D
            WHERE  C.GUBUN    = D.GUBUN(+)
            AND    C.EVL_YY   = D.EVL_YY(+)
            AND    C.EVL_FRQ  = D.EVL_FRQ(+)
            AND    C.ENO_NO   = D.ENO_NO(+)
            AND    C.COMM_CD2 = D.COMM_CD2(+)
            AND    C.EST_CD   = D.EST_CD(+)
            AND    C.ABL_CD   = D.ABL_CD(+)
            AND    ?          = D.UPDN_GBN(+)           -- 상향이면 1, 하향이면 2
            AND    ?          = D.DEGREE_GBN(+)         -- 평가차수
            AND    ?          = D.EVLENO_NO(+)          -- 로그인사번
            ORDER BY  C.ABL_CD
            ]]>
        </query>
    </sql>
    <!-- 입력된 역량평가표 정보를 등록한다. -->
    <sql name="VLUB041_INS">
        <description>역량평가표 데이터 입력</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_ABLTBL
                 ( GUBUN,  EVL_YY,    EVL_FRQ,   UPDN_GBN,  DEGREE_GBN, ENO_NO,   EVLENO_NO, COMM_CD2, EST_CD,  ABL_CD,
                   WEIGHT, SUBPNT_01, SUBPNT_02, SUBPNT_03, SUBPNT_AVG, IPT_MAN,  IPT_YMD,   UPT_MAN,  UPT_YMD )
            VALUES
                 ( ?,      ?,         ?,         ?,         ?,          ?,        ?,         ?,        ?,       ?,
                   ?,      ?,         ?,         ?,         ?,          ?,        sysdate,   ?,        sysdate )
            ]]>
        </query>
    </sql>

    <!-- 이미 존재하는 역량평가표 정보를 수정 한다. -->
    <sql name="VLUB041_UPT">
        <description>역량평가표 데이터 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_ABLTBL
            SET    SUBPNT_01    = ?,
                   SUBPNT_02    = ?,
                   SUBPNT_03    = ?,
                   SUBPNT_AVG   = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_FRQ      = ?
            AND    UPDN_GBN     = ?
            AND    DEGREE_GBN   = ?
            AND    ENO_NO       = ?
            AND    EVLENO_NO    = ?
            AND    COMM_CD2     = ?
            AND    EST_CD       = ?
            AND    ABL_CD       = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB050
* @description : 등급조정(표준편차)
***********************************************************************
* 2006/09/28      박인이        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 년도에 해당하는 역량평가의 상/하향평가차수를 조회 한다. -->
    <sql name="VLUB050_SHR_00">
        <description>평가구조설정 데이터 조회 (VLUC170, VLUD020과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT GUBUN,
                   EVL_YY,
                   ABL_CNT,                                      -- 역량평가회차수
                   ACH_CNT,                                      -- 성과평가회차수
                   NVL(UP_CNT, 1)     AS UP_CNT,                 -- 상향평가차수
                   UP_YN,                                        -- 상향평가여부
                   NVL(DOWN_CNT, 1)   AS DOWN_CNT,               -- 하향평가차수
                   DOWN_YN                                       -- 하향평가여부
            FROM   ASNHR.T_EV_TYPE
            WHERE  GUBUN  = ?
            AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 해당년도, 회차 및 평가그룹에 해당하는 역량평가적용결과정보를 조회해온다. -->
    <sql name="VLUB050_SHR_01">
        <description>역량평가적용결과정보 데이터 조회 (VLUC170과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT A.GUBUN,
                   A.EVL_YY,                                                                     -- 해당년도
                   A.EVL_GBN,                                                                    -- 구분
                   A.EVL_FRQ,                                                                    -- 회차
                   A.ENO_NO,                                                                     -- 사원번호
                   ROUND(B.UPPNT_01,2)                                            AS UPPNT_01,   -- 상향1차원점수
                   ROUND(B.UPPNT_02,2)                                            AS UPPNT_02,   -- 상향2차원점수
                   ROUND(B.UPPNT_03,2)                                            AS UPPNT_03,   -- 상향3차원점수
                   TO_CHAR(DECODE(C.DN1, 0, NULL, ROUND(B.DNPNT_01,2)), '999.99') AS DNPNT_01,   -- 하향1차원점수
                   TO_CHAR(DECODE(C.DN2, 0, NULL, ROUND(B.DNPNT_02,2)), '999.99') AS DNPNT_02,   -- 하향2차원점수
                   TO_CHAR(DECODE(C.DN3, 0, NULL, ROUND(B.DNPNT_03,2)), '999.99') AS DNPNT_03,   -- 하향3차원점수
                   ROUND(B.UPCVT_01,2)                                            AS UPCVT_01,   -- 상향1차환산점수
                   ROUND(B.UPCVT_02,2)                                            AS UPCVT_02,   -- 상향2차환산점수
                   ROUND(B.UPCVT_03,2)                                            AS UPCVT_03,   -- 상향3차환산점수
                   TO_CHAR(DECODE(C.DN1, 0, NULL, ROUND(B.DNCVT_01,2)), '999.99') AS DNCVT_01,   -- 하향1차환산점수
                   TO_CHAR(DECODE(C.DN2, 0, NULL, ROUND(B.DNCVT_02,2)), '999.99') AS DNCVT_02,   -- 하향2차환산점수
                   TO_CHAR(DECODE(C.DN3, 0, NULL, ROUND(B.DNCVT_03,2)), '999.99') AS DNCVT_03,   -- 하향3차환산점수
                   ROUND(B.FINAL_PNT,2)                                           AS FINAL_PNT,  -- 최종점수
                   B.ORIGINAL_GRD,                                                               -- 등급
                   B.CHANGE_GRD,                                                                 -- 조정등급
                   B.CHIEP_GRD,                                                                  -- 본부장조정등급
                   CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', A.GROUP_CD)
                        WHEN A.GUBUN = '02' THEN
                            (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = A.GROUP_CD AND DUTY_LBL = A.COMM_CD)
                   END                                                            AS GROUP_NM,   -- 평가그룹명
                   A.ENO_NM,                                                                     -- 성명
                   A.DPT_NM,                                                                     -- 부서명
                   A.HEAD_NM,                                                                    -- 본부명
                   A.JOB_NM,                                                                     -- 직위명
                   B.RNUM,                                                                       -- 순위
                   B.FEEDBK_GBN                                                                  -- 피드백
            FROM ( SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, HEAD_CD, DPT_CD, JOB_CD, COMM_CD, GROUP_CD, ENO_NO,
                          ASNHR.SF_GET_ENONAME('01', ENO_NO)               AS ENO_NM,         -- 성명
                          ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)       AS HEAD_NM,        -- 본부명
                          ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)          AS DPT_NM,         -- 부서명
                          ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)        AS JOB_NM,         -- 직위명
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD)        AS HEAD_SEQ,       -- 본부명SEQ
                          ASNHR.SF_GET_DPTSEQ('01', 'A4',DPT_CD)           AS DPT_SEQ,        -- 부서명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD)         AS JOB_SEQ,        -- 직위명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A3', HOB_CD)         AS HOB_SEQ,        -- 직위명SEQ
                          HIRG_YMD
                   FROM   ASNHR.T_EV_EVLIST_HD HD
                   WHERE  GUBUN   = ?
                   AND    EVL_YY  = ?
                   AND    EVL_GBN = ?
                   AND    EVL_FRQ = ?
                   AND    ENO_NO   LIKE ? || '%'
                   AND    HEAD_CD  LIKE ? || '%'
                   AND    GROUP_CD LIKE ? || '%'
                   AND    DPT_CD   LIKE ? || '%'
                 ) A,
                   ASNHR.T_EV_ABLRST B,
                 ( SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO,
                          MAX(DECODE(DEGREE_GBN, 1, CNT, 0)) DN1,
                          MAX(DECODE(DEGREE_GBN, 2, CNT, 0)) DN2,
                          MAX(DECODE(DEGREE_GBN, 3, CNT, 0)) DN3
                   FROM (
                          SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, DEGREE_GBN, ENO_NO, COUNT(*) CNT
                          FROM   ASNHR.T_EV_ABLTBL_TOT
                          WHERE  GUBUN    = ?
                          AND    EVL_YY   = ?
                          AND    EVL_GBN  = ?
                          AND    EVL_FRQ  = ?
                          AND    UPDN_GBN = '2'
                          GROUP BY GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, DEGREE_GBN, ENO_NO
                        )
                   GROUP BY GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO
                 ) C
            WHERE  B.GUBUN   = ?
            AND    B.EVL_YY  = ?
            AND    B.EVL_GBN = ?
            AND    B.EVL_FRQ = ?
            AND    B.GUBUN   = A.GUBUN
            AND    B.EVL_YY  = A.EVL_YY
            AND    B.EVL_GBN = A.EVL_GBN
            AND    B.EVL_FRQ = A.EVL_FRQ
            AND    B.ENO_NO  = A.ENO_NO
            AND    B.GUBUN   = C.GUBUN
            AND    B.EVL_YY  = C.EVL_YY
            AND    B.EVL_GBN = C.EVL_GBN
            AND    B.EVL_FRQ = C.EVL_FRQ
            AND    B.ENO_NO  = C.ENO_NO
            AND (( ? = '1'                                          -- 조정인원인 경우
            AND    B.ORIGINAL_GRD <> B.CHANGE_GRD)
            OR   ( ? = '0')                                         -- 전체인원
                )
            ORDER BY A.GUBUN, A.HEAD_SEQ, A.GROUP_CD, B.FINAL_PNT DESC, B.RNUM, A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ DESC, A.HIRG_YMD, A.ENO_NO, A.COMM_CD
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도에 해당하는 등급별비율 및 평가표정보를 조회 한다. -->
    <sql name="VLUB050_SHR_02">
        <description>본부별배분율, 등급별비율 및 평가표정보를 조회 </description>
        <query>
            <![CDATA[
            SELECT '1' GBN, TO_CHAR(COUNT(*)) VAL
            FROM   ASNHR.T_EV_GRDRATE
            WHERE  GUBUN  = ?
            AND    EVL_YY = ?
            AND    GBN_CD = '1'                                    -- 구분 '1'는 비율에 대한 등급별비율 데이터가 존재하는지 확인
            UNION ALL
            SELECT '2' GBN, TO_CHAR(COUNT(*)) VAL
            FROM   ASNHR.T_EV_ABLTBL
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_FRQ    = ?
            AND    ROWNUM     = 1                                  -- 구분 '2'는 평가결과표(역량)에 최종등급이 존재하는지 확인
            ]]>
        </query>
    </sql>

    <!-- 이미 존재하는 역량평가적용결과정보를 수정 한다. -->
    <sql name="VLUB050_UPT">
        <description>역량평가적용결과정보 데이터 수정 (VLUC170과 공통으로 사용) </description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_ABLRST
            SET    CHANGE_GRD   = ?,
                   UPT_MAN      = ?,
                   UPT_YMD      = sysdate
            WHERE  GUBUN        = ?
            AND    EVL_YY       = ?
            AND    EVL_GBN      = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB060
* @description : 본부장조정
***********************************************************************
* 2006/09/28      안준성           최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가구분, 회차, 사원번호, 부서, 평가그룹에 따른 본부장조정 조회 -->
    <sql name="VLUB060_SHR">
        <description>본부장조정 조회</description>
        <query>
            <![CDATA[
            SELECT A.GUBUN,
                   A.EVL_YY,                                         -- 해당년도
                   A.EVL_GBN,                                        -- 구분
                   A.EVL_FRQ,                                        -- 회차
                   A.ENO_NO,                                         -- 사원번호
                   A.ENO_NM,                                         -- 성명
                   A.GROUP_NM,                                       -- 평가그룹
                   A.HEAD_NM,                                        -- 본부명
                   A.DPT_NM,                                         -- 부서명
                   A.JOB_NM,                                         -- 직위명
                   B.CHANGE_GRD,                                     -- 조정등급
                   B.CHIEP_GRD,                                      -- 본부장조정등급
                   B.FEEDBK_GBN,                                     -- 피드백구분
                   B.RNUM                                            -- 순위
            FROM ( SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, HEAD_CD, DPT_CD, JOB_CD, COMM_CD, GROUP_CD, ENO_NO,
                          CASE WHEN AA.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', AA.GROUP_CD)
                               WHEN AA.GUBUN = '02' THEN
                                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = AA.GROUP_CD AND DUTY_LBL = AA.COMM_CD)
                          END                                        AS GROUP_NM,       -- 평가그룹명
                          ASNHR.SF_GET_ENONAME('01', ENO_NO)               AS ENO_NM,         -- 성명
                          ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)       AS HEAD_NM,        -- 본부명
                          ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)          AS DPT_NM,         -- 부서명
                          ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)        AS JOB_NM,         -- 직위명
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD)        AS HEAD_SEQ,       -- 본부명SEQ
                          ASNHR.SF_GET_DPTSEQ('01', 'A4',DPT_CD)           AS DPT_SEQ,        -- 부서명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD)         AS JOB_SEQ,        -- 직위명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A3', HOB_CD)         AS HOB_SEQ,        -- 직위명SEQ
                          HIRG_YMD
                   FROM   ASNHR.T_EV_EVLIST_HD AA
                   WHERE  GUBUN   = ?
                   AND    EVL_YY  = ?
                   AND    EVL_GBN = '1'
                   AND    EVL_FRQ = ?
                   AND    ENO_NO   LIKE ? || '%'
                   AND    HEAD_CD  LIKE ? || '%'
                   AND    GROUP_CD LIKE ? || '%'
                 ) A,
                   ASNHR.T_EV_ABLRST B
            WHERE  B.GUBUN   = A.GUBUN
            AND    B.EVL_YY  = A.EVL_YY
            AND    B.EVL_GBN = A.EVL_GBN
            AND    B.EVL_FRQ = A.EVL_FRQ
            AND    B.ENO_NO  = A.ENO_NO
            AND (( ? = '1'                                          -- 조정인원인 경우
            AND    B.CHANGE_GRD <> B.CHIEP_GRD)
            OR   ( ? = '0')                                         -- 전체인원
                )
            ORDER BY A.GUBUN, A.HEAD_SEQ, A.GROUP_CD, B.RNUM, A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ DESC, A.HIRG_YMD, A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 본부장조정 수정 및 일괄생성 가능 여부 확인 -->
    <sql name="VLUB060_SHR_01">
        <description>본부장조정 수정 및 일괄생성 가능 여부 확인 (VLUC180과 공통으로 사용)</description>
        <query>
            <![CDATA[
            SELECT COUNT(*) AS CNT
            FROM   ASNHR.T_EV_ABLRST
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = ?
            AND    EVL_FRQ = ?
            AND    ROWNUM  = 1               -- 수정가능여부
            UNION ALL
            SELECT COUNT(*) AS CNT
            FROM   ASNHR.T_EV_ABLRST
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_GBN    = ?
            AND    EVL_FRQ    = ?
            AND    FEEDBK_GBN = 'T'
            AND    ROWNUM     = 1            -- FEED BACK 여부에 따라 일괄생성 가능여부
            ]]>
        </query>
    </sql>


    <!-- 본부장조정 정보 조정등급 수정 -->
    <sql name="VLUB060_UPT">
        <description>본부장조정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_ABLRST
            SET    CHIEP_GRD = ?,            --본부장조정등급
                   UPT_MAN   = ?,                --최종수정자
                   UPT_YMD   = sysdate   --최종수정일시
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_GBN   = ?
            AND    EVL_FRQ   = ?
            AND    ENO_NO    = ?
            ]]>
        </query>
    </sql>

    <!-- 본부장조정 정보 조정등급 수정(일괄반영 by DS)-->
    <sql name="VLUB060_UPT_01">
        <description>본부장조정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_ABLRST
            SET    CHIEP_GRD = CHANGE_GRD,   --본부장조정등급
                   UPT_MAN   = ?,                --최종수정자
                   UPT_YMD   = sysdate           --최종수정일시
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_GBN   = ?
            AND    EVL_FRQ   = ?
            ]]>
        </query>
    </sql>

    <!-- 본부장조정 정보 삭제 -->
    <sql name="VLUB060_DEL">
        <description>본부장조정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_ABLRST
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = ?
            AND    EVL_FRQ = ?
            AND    ENO_NO  = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB070
* @description : 본부장조정확정(Feed Back)
***********************************************************************
* 2006/09/28      안준성        최초작성.
***********************************************************************
-->

   <!-- 본부장조정 확정일자 조회 -->
   <sql name="VLUB070_SHR">
        <description>본부장조정 확정 수정</description>
        <query>
            <![CDATA[
            SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, FEEDBK_GBN, FEDDBK_YMD
            FROM   ASNHR.T_EV_ABLRST
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_GBN    = ?
            AND    EVL_FRQ    = ?
            AND    ROWNUM     = 1
            ]]>
        </query>
    </sql>


   <!-- 본부장조정 확정 수정 -->
    <sql name="VLUB070_UPT">
        <description>본부장조정 확정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_ABLRST
            SET    FEEDBK_GBN = ?,        --피드백여부
                   FEDDBK_YMD = ?,        --피드백일자
                   UPT_MAN    = ?,        --최종수정자
                   UPT_YMD    = sysdate   --최종수정일시
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_GBN    = ?
            AND    EVL_FRQ    = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB080
* @description : 이의신청(개인)
***********************************************************************
* 2006/09/26      안준성        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 해당년도, 평가구분, 회차, 사원번호에 따른 이의신청(개인) 조회 -->
    <sql name="VLUB080_SHR">
        <description>이의신청(개인) 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO,
                   TO_CHAR(PROTEST_YMD,'YYYY-MM-DD') PROTEST_YMD, PROTEST_TIT, PROTEST_DEC,
                   DECODE(ACCEPT_GBN,'','N',ACCEPT_GBN) AS ACCEPT_GBN, TO_CHAR(ANSWER_YMD,'YYYY-MM-DD') ANSWER_YMD, ANSWER_DEC,
                   FILE_NAME, FILE_URL
            FROM   ASNHR.T_EV_PROTEST
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN =?
            AND    EVL_FRQ = ?
            AND    ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 이의신청기간여부 체크( VLUC200-이의신청(개인)(성과) 과 공통 ) -->
    <sql name="VLUB080_SHR_01">
        <description>이의신청기간여부 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN, PROT_STDT, PROT_ENDT, DATA_DIV
            FROM ( SELECT GUBUN, PROT_STDT, PROT_ENDT, '개인별평가일정' DATA_DIV
                   FROM   ASNHR.T_EV_SCHCHG
                   WHERE  GUBUN   = ?
                   AND    EVL_YY  = ?
                   AND    EVL_GBN = ?
                   AND    EVL_FRQ = ?
                   AND    ENO_NO  = ?
                   UNION ALL
                   SELECT GUBUN, PROT_STDT, PROT_ENDT, '연도별회차' DATA_DIV
                   FROM   ASNHR.T_EV_ESTINFO
                   WHERE  GUBUN   = ?
                   AND    EVL_YY  = ?
                   AND    EVL_GBN = ?
                   AND    EVL_FRQ = ?
                   AND    ( PROT_STDT <= TO_CHAR(SYSDATE,'YYYY-MM-DD') AND PROT_ENDT >= TO_CHAR(SYSDATE,'YYYY-MM-DD') )
                   AND    NOT EXISTS  ( SELECT PROT_STDT
                                        FROM   ASNHR.T_EV_SCHCHG
                                        WHERE  GUBUN   = ?
                                        AND    EVL_YY  = ?
                                        AND    EVL_GBN = ?
                                        AND    EVL_FRQ = ?
                                        AND    ENO_NO  = ?
                                        AND    PROT_STDT IS NOT NULL
                                        AND    PROT_ENDT IS NOT NULL )
                 )
            WHERE ( PROT_STDT <= TO_CHAR(SYSDATE,'YYYY-MM-DD') AND PROT_ENDT >= TO_CHAR(SYSDATE,'YYYY-MM-DD') )
            ]]>
        </query>
    </sql>

    <!-- 이의신청(개인) 정보 등록 -->
    <sql name="VLUB080_INS">
        <description>이의신청(개인) 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_PROTEST
                ( GUBUN, EVL_YY, EVL_GBN,  EVL_FRQ,  ENO_NO,  PROTEST_YMD, PROTEST_TIT, PROTEST_DEC,
                  ACCEPT_GBN,    FILE_NAME,FILE_URL, IPT_MAN, IPT_YMD,     UPT_MAN,     UPT_YMD )
            VALUES
                ( ?,     ?,      ?,        ?,        ?,       ?,           ?,           ?,
                  ?,             ?,        ?,        ?,       sysdate,     ?,           sysdate)
            ]]>
        </query>
    </sql>

    <!-- 이의신청(개인) 정보 이의신청관련 내용 수정 -->
    <sql name="VLUB080_UPT">
        <description>이의신청(개인) 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_PROTEST
            SET    PROTEST_YMD = ?,        --이의신청일자
                   PROTEST_TIT = ?,        --이의신청제목
                   PROTEST_DEC = ?,        --이의신청내용
                   FILE_NAME   = ?,
                   FILE_URL    = ?,
                   UPT_MAN     = ?,        --최종수정자
                   UPT_YMD     = sysdate   --최종수정일시
            WHERE  GUBUN       = ?
            AND    EVL_YY      = ?
            AND    EVL_GBN     = ?
            AND    EVL_FRQ     = ?
            AND    ENO_NO      = ?
            ]]>
        </query>
    </sql>

    <!-- 이의신청(개인) 정보 이의신청관련 내용 삭제 -->
    <sql name="VLUB080_DEL">
        <description>이의신청(개인) 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_PROTEST
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = ?
            AND    EVL_FRQ = ?
            AND    ENO_NO  = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB090
* @description : 이의신청(접수)
***********************************************************************
* 2006/09/27      안준성        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 사원번호, 평가그룹에 따른 이의신청(접수) 조회 -->
    <sql name="VLUB090_SHR">
        <description>이의신청(접수) 조회</description>
        <query>
            <![CDATA[
            SELECT  A.GUBUN, A.EVL_YY AS EVL_YY,
                    A.EVL_GBN AS EVL_GBN,
                    A.EVL_FRQ AS EVL_FRQ,
                    A.ENO_NO AS ENO_NO,
                    ASNHR.SF_GET_ENONAME('01',A.ENO_NO) AS ENO_NAME,
                    B.COMM_CD AS COMM_CD,
                    CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', B.GROUP_CD)
                         WHEN A.GUBUN = '02' THEN
                             (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = B.GROUP_CD AND DUTY_LBL = B.COMM_CD)
                    END                                        AS GROUP_NM,       -- 평가그룹명
                    C.HEAD_NM       AS HEAD_NM,
                    C.DPT_NM         AS DPT_NM,
                    C.JOB_NM AS JOB_NM,
                    A.PROTEST_TIT AS PROTEST_TIT,
                    TO_CHAR(A.PROTEST_YMD,'YYYY-MM-DD') AS PROTEST_YMD,
                    TO_CHAR(A.ACCEPT_YMD,'YYYYMMDD') AS ACCEPT_YMD,
                    DECODE(A.ACCEPT_GBN,'Y','T','N','F','') AS ACCEPT_GBN,
                    A.ACCEPT_DEC AS ACCEPT_DEC,
                    A.ANSWER_YMD AS ANSWER_YMD,
                    A.FILE_NAME,
                    A.FILE_URL,
                  ( SELECT CHIEP_GRD
                    FROM   ASNHR.T_EV_ABLRST
                    WHERE  GUBUN   = A.GUBUN
                    AND    EVL_YY  = A.EVL_YY
                    AND    EVL_GBN = A.EVL_GBN
                    AND    EVL_FRQ = A.EVL_FRQ
                    AND    ENO_NO  = A.ENO_NO
                  ) AS CHIEP_GRD
            FROM    ASNHR.T_EV_PROTEST A,
                    ASNHR.T_EV_EVLIST_HD B,
                    VI_T_CM_PERSON C
            WHERE   A.GUBUN   = ?
            AND     A.EVL_YY  = ?
            AND     A.EVL_GBN = ?
            AND     A.EVL_FRQ = ?
            AND     A.ENO_NO LIKE '%'||?||'%'
            AND     NVL(B.DPT_CD,' ')  LIKE '%'||?||'%'
            AND     NVL(B.HEAD_CD,' ') LIKE '%'||?||'%'
            AND     A.GUBUN   = B.GUBUN(+)
            AND     A.EVL_YY  = B.EVL_YY(+)
            AND     A.EVL_GBN = B.EVL_GBN(+)
            AND     A.EVL_FRQ = B.EVL_FRQ(+)
            AND     A.ENO_NO  = B.ENO_NO(+)
            AND     A.ENO_NO  = C.ENO_NO
            ORDER BY C.HEAD_SEQ, C.DPT_SEQ, C.JOB_SEQ, C.HOB_SEQ, C.HIRG_YMD
            ]]>
        </query>
    </sql>

    <!-- 접수관련 정보 수정 -->
    <sql name="VLUB090_UPT">
        <description>이의신청(접수) 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_PROTEST
            SET    ACCEPT_GBN = DECODE(?,'T','Y','F','N',''),        --접수여부
                   ACCEPT_YMD = ?,                                   --접수일자
                   ACCEPT_DEC = ?,                                   --접수내용
                   ACCEPT_MAN = DECODE(?,'T',?,'F','',''),           --접수담당자
                   UPT_MAN    = ?,                                   --최종수정자
                   UPT_YMD    = sysdate                              --최종수정일시
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_GBN    = ?
            AND    EVL_FRQ    = ?
            AND    ENO_NO     = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB100
* @description : 이의신청(답변)
***********************************************************************
* 2006/09/27      안준성        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 사원번호, 평가그룹에 따른 이의신청(접수) 조회 -->
    <sql name="VLUB100_SHR">
        <description>이의신청(답변) 조회</description>
        <query>
            <![CDATA[
            SELECT A.GUBUN,
                   A.EVL_YY                                   AS EVL_YY,
                   A.EVL_GBN                                  AS EVL_GBN,
                   A.EVL_FRQ                                  AS EVL_FRQ,
                   A.ENO_NO                                   AS ENO_NO,
                   ASNHR.SF_GET_ENONAME('01',A.ENO_NO)              AS ENO_NAME,
                   B.COMM_CD AS COMM_CD,
                   CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', B.GROUP_CD)
                        WHEN A.GUBUN = '02' THEN
                            (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = B.GROUP_CD AND DUTY_LBL = B.COMM_CD)
                   END                                        AS GROUP_NM,       -- 평가그룹명
                   C.HEAD_NM                                  AS HEAD_NM,
                   C.DPT_NM         							  AS DPT_NM,
                   C.JOB_NM                                   AS JOB_NM,
                   A.PROTEST_TIT                              AS PROTEST_TIT,
                   TO_CHAR(A.PROTEST_YMD,'YYYY-MM-DD')        AS PROTEST_YMD,
                   A.PROTEST_DEC                              AS PROTEST_DEC,
                   TO_CHAR(A.ACCEPT_YMD,'YYYY-MM-DD')         AS ACCEPT_YMD,
                   A.ACCEPT_DEC                               AS ACCEPT_DEC,
                   TO_CHAR(A.ANSWER_YMD,'YYYY-MM-DD')         AS ANSWER_YMD,
                   A.ANSWER_DEC                               AS ANSWER_DEC,
                   ( SELECT CHIEP_GRD
                     FROM   ASNHR.T_EV_ABLRST
                     WHERE  GUBUN   = A.GUBUN
                     AND    EVL_YY  = A.EVL_YY
                     AND    EVL_GBN = A.EVL_GBN
                     AND    EVL_FRQ = A.EVL_FRQ
                     AND    ENO_NO  = A.ENO_NO
                   ) AS CHIEP_GRD,
                   DECODE(A.ACCEPT_GBN,'Y','T','N','F','')    AS ACCEPT_GBN,
                   CASE WHEN LENGTH(A.ANSWER_DEC) > 0 THEN 'T'
                   ELSE 'F' END                               AS ANSWER_GBN,
                   A.FILE_NAME,
                   A.FILE_URL
            FROM   ASNHR.T_EV_PROTEST A,
                   ASNHR.T_EV_EVLIST_HD B,
                   VI_T_CM_PERSON C
            WHERE  A.GUBUN   = ?
            AND    A.EVL_YY  = ?
            AND    A.EVL_GBN = ?
            AND    A.EVL_FRQ = ?
            AND    A.ENO_NO LIKE '%'||?||'%'
            AND    NVL(B.DPT_CD,' ') LIKE '%'||?||'%'
            AND    NVL(B.COMM_CD,' ') LIKE '%'||?||'%'
            AND    NVL(B.GROUP_CD,' ') LIKE '%'||?||'%'
            AND    A.GUBUN   = B.GUBUN(+)
            AND    A.EVL_YY  = B.EVL_YY(+)
            AND    A.EVL_GBN = B.EVL_GBN(+)
            AND    A.EVL_FRQ = B.EVL_FRQ(+)
            AND    A.ENO_NO  = B.ENO_NO(+)
            AND    A.ENO_NO  = C.ENO_NO
            ORDER BY C.HEAD_SEQ, C.DPT_SEQ, C.JOB_SEQ, C.HOB_SEQ, C.HIRG_YMD
            ]]>
        </query>
    </sql>

    <!-- 답변관련 정보 수정 -->
    <sql name="VLUB100_UPT">
        <description>이의신청(답변) 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_PROTEST
            SET    ANSWER_YMD = ?,                     --답변일자
                   ANSWER_DEC = ?,                     --답변내용
                   ANSWER_MAN = DECODE(?,'','',?),     --답변담당자
                   UPT_MAN    = ?,                     --최종수정자
                   UPT_YMD    = sysdate                --최종수정일시
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_GBN    = ?
            AND    EVL_FRQ    = ?
            AND    ENO_NO     = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB110
* @description : 등급확정
***********************************************************************
* 2006/09/27      오대성        최초작성.
***********************************************************************
-->

    <!-- 역량 평가 적용 결과를 조회한다. -->
    <sql name="VLUB110_SHR">
        <description>역량 평가 적용 결과 정보 조회</description>
        <query>
            <![CDATA[
            SELECT A.GUBUN,
                   A.EVL_YY,                                         -- 해당년도
                   A.EVL_GBN,                                        -- 구분
                   A.EVL_FRQ,                                        -- 회차
                   A.ENO_NO,                                         -- 사원번호
                   A.ENO_NM,                                         -- 성명
                   A.DPT_NM,                                         -- 부서명
                   A.JOB_NM,                                         -- 직위명
                   A.HEAD_NM,                                        -- 본부명
                   A.GROUP_NM,                                       -- 평가그룹
                   ROUND(B.FINAL_PNT,2)    AS CVT,                   -- 최종점수
                   B.CHANGE_GRD,                                     -- 조정등급
                   B.CHIEP_GRD,                                      -- 본부장조정등급
                   B.FINAL_GRD,                                      -- 확정등급
                   B.RNUM                                            -- 순위
            FROM ( SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, HEAD_CD, DPT_CD, JOB_CD, COMM_CD, GROUP_CD, ENO_NO,
                          CASE WHEN AA.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', AA.GROUP_CD)
                               WHEN AA.GUBUN = '02' THEN
                                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = AA.GROUP_CD AND DUTY_LBL = AA.COMM_CD)
                          END                                         AS GROUP_NM,       -- 평가그룹명
                          ASNHR.SF_GET_ENONAME('01', ENO_NO)                AS ENO_NM,         -- 성명
                          ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)        AS HEAD_NM,        -- 본부명
                          ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)           AS DPT_NM,         -- 부서명
                          ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)         AS JOB_NM,         -- 직위명
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD)         AS HEAD_SEQ,       -- 본부명SEQ
                          ASNHR.SF_GET_DPTSEQ('01', 'A4',DPT_CD)            AS DPT_SEQ,        -- 부서명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD)          AS JOB_SEQ,        -- 직위명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A3', HOB_CD)          AS HOB_SEQ,        -- 직위명SEQ
                          HIRG_YMD
                   FROM   ASNHR.T_EV_EVLIST_HD AA
                   WHERE  GUBUN   = ?
                   AND    EVL_YY  = ?
                   AND    EVL_GBN = ?
                   AND    EVL_FRQ = ?
                   AND    ENO_NO   LIKE ? || '%'
                   AND    DPT_CD   LIKE ? || '%'
                   AND    GROUP_CD LIKE ? || '%'
                 ) A,
                   ASNHR.T_EV_ABLRST B
            WHERE  B.GUBUN   = A.GUBUN
            AND    B.EVL_YY  = A.EVL_YY
            AND    B.EVL_GBN = A.EVL_GBN
            AND    B.EVL_FRQ = A.EVL_FRQ
            AND    B.ENO_NO  = A.ENO_NO
            AND (( ? = '1'                                          -- 조정인원인 경우
            AND    B.CHIEP_GRD <> B.FINAL_GRD)
            OR   ( ? = '0')                                         -- 전체인원
                )
            ORDER BY A.HEAD_SEQ, ASNHR.SF_GET_COMMSEQ('01','EG',A.GROUP_CD), B.RNUM, A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ DESC, A.HIRG_YMD, A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 역량 평가 적용 결과 정보에 최종 확정 등급을 일괄적용한다. -->
    <sql name="VLUB110_UPT_01">
        <description>역량 평가 적용 결과 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_ABLRST
            SET     FINAL_GRD = CHIEP_GRD,
                    UPT_MAN = ?,
                    UPT_YMD = sysdate
            WHERE   GUBUN = ?
            AND     EVL_YY = ?
            AND     EVL_GBN = ?
            AND     EVL_FRQ = ?
            ]]>
        </query>
    </sql>

    <!-- 역량 평가 적용 결과 정보에 최종 확정 등급을 적용한다. -->
    <sql name="VLUB110_UPT_02">
        <description>역량 평가 적용 결과 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_ABLRST
            SET     FINAL_GRD = ?,
                    UPT_MAN = ?,
                    UPT_YMD = sysdate
            WHERE   GUBUN  = ?
            AND     EVL_YY = ?
            AND     EVL_GBN = ?
            AND     EVL_FRQ = ?
            AND     ENO_NO = ?

            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUB120
* @description : 평가진행현황
***********************************************************************
* 2006/09/27      오대성        최초작성.
***********************************************************************
-->

    <!-- 현재년도, 회차 및 그에 해당하는 역량평가의 상,하향차수를 조회한다. -->
    <sql name="VLUB120_SHR_01">
        <description>평가 기준 구조 설정 정보 조회</description>
        <query>
            <![CDATA[
            SELECT DOWN_YN,
                   DOWN_CNT,
                   UP_YN,
                   UP_CNT
            FROM   ASNHR.T_EV_TYPE
            WHERE  GUBUN  = ?
            AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 평가진행현황을 조회한다. -->
    <sql name="VLUB120_SHR_02">
        <description>평가 진행 현황 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  GUBUN,
                    ENO_NO,
                    ENO_NM,
                    GROUP_NM,
                    HEAD_NM,
                    DPT_NM,
                    JOB_NM,
                    HEAD_SEQ,
                    DPT_SEQ,
                    JOB_SEQ,
                    HOB_SEQ,
                    HIRG_YMD,
                    DOWN_01,
                    DOWN_02,
                    DOWN_03,
                    UP_01,
                    UP_02,
                    UP_03
            FROM (  SELECT  GUBUN,
                            ENO_NO,
                            ENO_NM,
                            GROUP_NM,
                            HEAD_NM,
                            DPT_NM,
                            JOB_NM,
                            HEAD_SEQ,
                            DPT_SEQ,
                            JOB_SEQ,
                            HOB_SEQ,
                            HIRG_YMD,
                            MAX(DOWN_01) DOWN_01,
                            MAX(DOWN_02) DOWN_02,
                            MAX(DOWN_03) DOWN_03,
                            MAX(UP_01)   UP_01,
                            MAX(UP_02)   UP_02,
                            MAX(UP_03)   UP_03
                    FROM (  SELECT  A.GUBUN,
                                    A.ENO_NO,
                                    ASNHR.SF_GET_ENONAME('01', A.ENO_NO)               AS ENO_NM,
                                    CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', A.GROUP_CD)
                                         WHEN A.GUBUN = '02' THEN
                                             (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = A.GROUP_CD AND DUTY_LBL = A.COMM_CD)
                                    END                                          AS GROUP_NM,       -- 평가그룹명
                                    ASNHR.SF_GET_DPTNAME('01', 'B2', A.HEAD_CD)       AS HEAD_NM,
                                    ASNHR.SF_GET_DPTNAME('01', 'A4',A.DPT_CD)          AS DPT_NM,
                                    ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD)        AS JOB_NM,
                                    ASNHR.SF_GET_DPTSEQ('01', 'B2', A.HEAD_CD)        AS HEAD_SEQ,
                                    ASNHR.SF_GET_DPTSEQ('01', 'A4',A.DPT_CD)           AS DPT_SEQ,
                                    ASNHR.SF_GET_COMMSEQ('01', 'A2', A.JOB_CD)         AS JOB_SEQ,
                                    ASNHR.SF_GET_COMMSEQ('01', 'A3', A.HOB_CD)         AS HOB_SEQ,
                                    A.HIRG_YMD,
                                    ASNHR.SF_GET_EVLRST(A.GUBUN, A.EVL_YY, '1', A.EVL_FRQ, '2', '1', A.ENO_NO) AS DOWN_01,
                                    ASNHR.SF_GET_EVLRST(A.GUBUN, A.EVL_YY, '1', A.EVL_FRQ, '2', '2', A.ENO_NO) AS DOWN_02,
                                    ASNHR.SF_GET_EVLRST(A.GUBUN, A.EVL_YY, '1', A.EVL_FRQ, '2', '3', A.ENO_NO) AS DOWN_03,
                                    ASNHR.SF_GET_EVLRST(A.GUBUN, A.EVL_YY, '1', A.EVL_FRQ, '1', '1', A.ENO_NO) AS UP_01,
                                    ASNHR.SF_GET_EVLRST(A.GUBUN, A.EVL_YY, '1', A.EVL_FRQ, '1', '2', A.ENO_NO) AS UP_02,
                                    ASNHR.SF_GET_EVLRST(A.GUBUN, A.EVL_YY, '1', A.EVL_FRQ, '1', '3', A.ENO_NO) AS UP_03
                            FROM    ASNHR.T_EV_EVLIST_HD A
                            WHERE   A.GUBUN    = ?
                            AND     A.EVL_YY   = ?
                            AND     A.EVL_GBN  = ?
                            AND     A.EVL_FRQ  = ?
                            AND     A.ENO_NO   LIKE '%'||?||'%'
                            AND     A.DPT_CD   LIKE '%'||?||'%'
                            AND     A.GROUP_CD LIKE '%'||?||'%'
                            AND     A.ENO_NO   = (SELECT DISTINCT EVLENO_NO
                                                  FROM   ASNHR.T_EV_EVLIST_DT
                                                  WHERE  GUBUN     = A.GUBUN
                                                  AND    EVL_YY    = A.EVL_YY
                                                  AND    EVL_GBN   = A.EVL_GBN
                                                  AND    EVL_FRQ   = A.EVL_FRQ
                                                  AND    EVLENO_NO = A.ENO_NO)
                        )
                    GROUP BY GUBUN, ENO_NO, ENO_NM, GROUP_NM, HEAD_NM, DPT_NM, JOB_NM, HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ, HIRG_YMD
                 )
            WHERE (  (  ? = 'T'                          -- 미완료자가 존재하는 경우
                        AND ( DOWN_01 != '완료')
                        OR  ( DOWN_02 != '완료')
                        OR  ( DOWN_03 != '완료')  )
                     OR ? = 'F' )                        -- 완료/미완료 전체
            ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO
            ]]>
        </query>
    </sql>

<!-- 성과평가 -->
<!--
***********************************************************************
* @UseCase     : VLUC010
* @description : 자기평가진행정보
***********************************************************************
* 2006/10/25      오대성        최초작성.
***********************************************************************
-->

    <!--자기 평가진행현황을 조회한다.(목표입력, 목표수정, 본인평가) by ksd-->
    <sql name="VLUC010_SHR_02">
        <description>평가 진행 세부 정보 조회</description>
        <query>
            <![CDATA[
            SELECT TAG.EVLENO_NO                                                      AS ENO_NO,     --평가자 사번
                   '['||TAG.EVLENO_NM||']'                                            AS ENO_NM,     --평가자 명
                   DECODE(OBJ.EVLENO_NO,  NULL,    '['||TAG.EVLENO_NM||']','완료')    AS IPT_GBN,    --목표입력여부
                   DECODE(OBJ.ACCEPT_GBN, NULL,    '['||TAG.EVLENO_NM||']',
                     DECODE(OBJ.ACCEPT_GBN,1,'승인','['||TAG.EVLENO_NM||']'))         AS ACCEPT_STA, --목표승인상태
                   DECODE(MOD.EVLENO_NO, NULL,'미입력','['||MOD.EVLENO_NM||']')       AS MOD_NM, --수정목표입력여부
                   DECODE(MOD.EVLENO_NO, NULL,'미입력',
                     DECODE(MOD.ACCEPT_GBN,1,'승인','['||MOD.EVLENO_NM||']'))         AS MOD_STA,--수정목표승인여부
                   DECODE(SLF.EVLENO_NO,NULL,'['||TAG.EVLENO_NM||']',
                     DECODE(SLF.MY_PNT,0,'['||TAG.EVLENO_NM||']','완료'))             AS SLF_STA     --본인평가여부
             FROM
                  (
                   SELECT ORG_01.EVLENO_NO  AS EVLENO_NO,   --평가자 ID
                          ORG_01.EVLENO_NM  AS EVLENO_NM,   --평가자 NAME
                          ORG_01.DPT_SEQ    AS DPT_SEQ,     --부서 정렬 순서
                          ORG_01.JOB_SEQ    AS JOB_SEQ,     --직급 정렬 순서
                          ORG_01.HOB_SEQ    AS HOB_SEQ,     --호봉 정렬 순서
                          ORG_01.GROUP_CD   AS GROUP_CD,
                          ORG_01.HIRG_YMD   AS HIRG_YMD     --그룹 입사일
                    FROM
                         (
                          SELECT A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.ENO_NO,
                                 A.EVLENO_NO                               AS EVLENO_NO,    --평가자 ID
                                 ASNHR.SF_GET_ENONAME('01',  EVLENO_NO)          AS EVLENO_NM,    --평가자 NAME
                                 ASNHR.SF_GET_DPTSEQ( '01', 'A4',B.DPT_CD)       AS DPT_SEQ,
                                 ASNHR.SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)      AS JOB_SEQ,
                                 ASNHR.SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)      AS HOB_SEQ,
                                 GROUP_CD,
                                 B.HIRG_YMD
                            FROM ASNHR.T_EV_EVLIST_DT A,
                                 ASNHR.T_EV_EVLIST_HD B
                           WHERE A.GUBUN       = B.GUBUN        AND
                                 A.EVL_YY      = B.EVL_YY       AND
                                 A.EVL_GBN     = B.EVL_GBN      AND
                                 A.EVL_FRQ     = B.EVL_FRQ      AND
                                 A.EVLENO_NO   = B.ENO_NO       AND
                                 A.GUBUN       = ?              AND             --업무구분
                                 A.EVL_YY      = ?              AND             --해당 년도
                                 A.EVL_GBN     = '2'            AND             --평가 구분(2:성과)
                                 A.EVL_FRQ     = ?              AND             --평가 회차
                                 A.DEGREE_GBN  = '1'            AND             --차수구분
                                 A.ENO_NO      = ?                              --피평가자 사번
                         ) ORG_01,
                           ASNHR.T_EV_EVLIST_HD ORG_02
                    WHERE  ORG_02.EXCEPT_YN      = 'F' AND
                           ORG_01.GUBUN          = ORG_02.GUBUN   AND
                           ORG_01.EVL_YY         = ORG_02.EVL_YY  AND
                           ORG_01.EVL_GBN        = ORG_02.EVL_GBN AND
                           ORG_01.EVL_FRQ        = ORG_02.EVL_FRQ AND
                           ORG_01.ENO_NO         = ORG_02.ENO_NO
                  ) TAG,    -- ************* 평가 대상자 List ************************************************
                  (
                   SELECT A.GUBUN,
                          A.EVLENO_NO                                          AS EVLENO_NO,   --목표 입력자 ID
                          ASNHR.SF_GET_ENONAME('01', EVLENO_NO)                      AS EVLENO_NM,   --목표 입력자 NAME
                          A.ACCEPT_GBN                                         AS ACCEPT_GBN   --목표 승인 상태
                     FROM ASNHR.T_EV_AIMLST A
                    WHERE A.GUBUN     = ?                                AND             --업무구분
                          A.EVL_YY    = ?                                AND             --해당 년도
                          A.EVL_FRQ   = 1                                AND             --평가 회차
                          A.AIM_YMD   = TO_DATE('19000101','YYYY-MM-DD') AND             --목표 설정
                          A.ENO_NO    = ?                                                --피평가자 사번
                    GROUP BY A.GUBUN, A.EVLENO_NO, A.ACCEPT_GBN
                  ) OBJ,    -- ************* 목표 입력자 현황 ************************************************
                  (
                   SELECT EVLENO_NO,
                          EVLENO_NM,
                          ACCEPT_GBN
                     FROM (
                           SELECT A.GUBUN,
                                  A.EVLENO_NO                                AS EVLENO_NO,     --목표 입력자 ID
                                  ASNHR.SF_GET_ENONAME('01', EVLENO_NO)         AS EVLENO_NM,     --목표 입력자 NAME
                                  A.ACCEPT_GBN                               AS ACCEPT_GBN ,   --목표 승인 상태
                                  A.AIM_YMD, ROW_NUMBER() OVER(PARTITION BY A.EVLENO_NO ORDER BY A.AIM_YMD DESC) RNUM
                             FROM ASNHR.T_EV_AIMLST A
                            WHERE A.GUBUN     = ?                                       AND          --업무구분
                                  A.EVL_YY    = ?                                       AND          --해당 년도
                                  A.EVL_FRQ   = ?                                       AND          --평가 회차
                                  A.AIM_YMD  != TO_DATE('19000101','YYYY-MM-DD')        AND          --목표 설정
                                  A.ENO_NO    = ?                                                   --피평가자 사번
                            GROUP BY A.GUBUN, A.EVLENO_NO, A.ACCEPT_GBN, A.AIM_YMD
                          )
                    WHERE RNUM = 1
                  ) MOD,    -- ************* 수정 목표 입력자 현황 ************************************************
                  (
                   SELECT A.GUBUN,
                          A.EVLENO_NO                                          AS EVLENO_NO,   --본인 평가 사원 번호
                          ASNHR.SF_GET_ENONAME('01',EVLENO_NO)                    AS EVLENO_NM,   --본인 평가 사원 명
                          NVL((SUM(SELF_ACHCVT+ SELF_DIFCVT)),0)               AS MY_PNT       --본인 평가 점수
                     FROM ASNHR.T_EV_ACHTBL A
                    WHERE A.GUBUN     = ?                         AND             --업무구분
                          A.EVL_YY    = ?                         AND             --해당 년도
                          A.EVL_FRQ   = ?                         AND             --평가 회차
                          A.ENO_NO    = ?                                         --피평가자 사번
                    GROUP BY A.GUBUN, A.EVLENO_NO
                  ) SLF    -- ************* 본인 평가 처리 자 LIST ************************************************
            WHERE TAG.EVLENO_NO = OBJ.EVLENO_NO(+) AND
                  TAG.EVLENO_NO = MOD.EVLENO_NO(+) AND
                  TAG.EVLENO_NO = SLF.EVLENO_NO(+)
            ORDER BY TAG.GROUP_CD,TAG.DPT_SEQ,TAG.JOB_SEQ,TAG.HOB_SEQ DESC,TAG.HIRG_YMD,TAG.EVLENO_NO
            ]]>
        </query>
    </sql>

    <!--자기 평가진행현황을 조회한다.(이의신청) by ksd-->
    <sql name="VLUC010_SHR_03">
        <description>평가 진행 세부 정보 조회</description>
        <query>
            <![CDATA[
            SELECT ( CASE WHEN ANSWER_YMD IS NOT NULL THEN '답변완료'
                        ELSE DECODE(ACCEPT_GBN, 'Y', '접수완료', '접수대기') END) AS STSTUS
            FROM    ASNHR.T_EV_PROTEST
            WHERE    GUBUN     = ?            AND     --업무구분
                    EVL_YY    = ?            AND     --해당 년도
                    EVL_GBN   = '2'         AND     --역량/성과 구분
                    EVL_FRQ   = ?            AND     --평가 회차
                    ENO_NO    = ?                    --피평가자 사번
            ]]>
        </query>
    </sql>

    <!--자기 평가진행현황을 조회한다.(목표승인, 목표수정, 1차평가 조회) by ksd-->
    <sql name="VLUC010_SHR_04">
        <description>평가 진행 세부 정보 조회</description>
        <query>
            <![CDATA[
            SELECT TAG.ENO_NO                                                    AS ENO_NO,     --평가자 사번
                    '['||TAG.ENO_NM||']'                                         AS ENO_NM,     --평가자 명
                    DECODE(OBJ.ENO_NO,  NULL, '['||TAG.ENO_NM||']','완료')       AS IPT_GBN,    --목표 입력 여부
                    DECODE(OBJ.ENO_NO,  NULL, '미대상',
                      DECODE(OBJ.ACCEPT_GBN, NULL, '['||TAG.ENO_NM||']',
                      DECODE(OBJ.ACCEPT_GBN,1,'승인','['||TAG.ENO_NM||']')))     AS ACCEPT_STA, --목표 승인 상태
                    DECODE(MOD.ENO_NO, NULL,'미입력','['||MOD.ENO_NM||']')       AS MOD_NM,   --수정 목표 입력 여부
                      DECODE(MOD.ENO_NO, NULL,'미입력',
                      DECODE(MOD.ACCEPT_GBN,1,'승인','['||MOD.ENO_NM||']'))      AS MOD_STA,   --수정 목표 승인여부
                    DECODE(SLF.ENO_NO,NULL,'['||TAG.ENO_NM||']',
                      DECODE(SLF.MY_PNT,0,'['||TAG.ENO_NM||']','완료'))          AS MY_STA,     --본인 평가 여부
                    DECODE(SLF.ENO_NO,NULL,'['||TAG.ENO_NM||']',
                      DECODE(SLF.EVL_PNT,0,'['||TAG.ENO_NM||']','완료'))         AS EVL_STA      --평가자 평가 여부
              FROM
                   (
                    SELECT A.ENO_NO                                  AS ENO_NO,       --피평가자 ID
                           ASNHR.SF_GET_ENONAME('01',A.ENO_NO)             AS ENO_NM,     --피평가자 NAME
                           ASNHR.SF_GET_DPTSEQ( '01', 'A4',B.DPT_CD)       AS DPT_SEQ,
                           ASNHR.SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)      AS JOB_SEQ,
                           ASNHR.SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)      AS HOB_SEQ,
                           GROUP_CD,
                           B.HIRG_YMD
                      FROM ASNHR.T_EV_EVLIST_DT A, ASNHR.T_EV_EVLIST_HD B
                     WHERE A.GUBUN       = B.GUBUN                 AND
                           A.EVL_YY      = B.EVL_YY                AND
                           A.EVL_GBN     = B.EVL_GBN               AND
                           A.EVL_FRQ     = B.EVL_FRQ               AND
                           A.ENO_NO      = B.ENO_NO                AND
                           B.EXCEPT_YN   = 'F'                     AND
                           A.GUBUN       = ?                       AND             --업무구분
                           A.EVL_YY      = ?                       AND             --해당 년도
                           A.EVL_GBN     = '2'                     AND             --평가 구분(2:성과)
                           A.EVL_FRQ     = ?                       AND             --평가 회차
                           A.DEGREE_GBN  = '1'                     AND             --차수구분
                           A.EVLENO_NO   = ?                                       --평가자 사번
                   ) TAG,    -- ************* 피평가 대상자 List ************************************************
                   (
                    SELECT A.ENO_NO                                AS ENO_NO,        --목표 입력자 ID
                           ASNHR.SF_GET_ENONAME('01',ENO_NO)          AS ENO_NM,        --목표 입력자 NAME
                           A.ACCEPT_GBN                            AS ACCEPT_GBN     --목표 승인 상태
                      FROM ASNHR.T_EV_AIMLST A
                     WHERE A.GUBUN       = ?                       AND              --업무구분
                           A.EVL_YY      = ?                       AND              --해당 년도
                           A.EVL_FRQ     = ?                       AND              --평가 회차
                           A.AIM_YMD     = TO_DATE('19000101','YYYY-MM-DD')         --목표 설정
                     GROUP BY A.GUBUN, A.ENO_NO, A.ACCEPT_GBN
                   ) OBJ,   -- ************* 목표 입력자 현황 ************************************************
                   (
                    SELECT ENO_NO,                                                              --피평가자 사번
                           ENO_NM,                                                              --피평가자 명
                           ACCEPT_GBN                                                           --승인 상태
                      FROM (
                            SELECT A.ENO_NO,
                                   ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM,
                                   A.ACCEPT_GBN, A.AIM_YMD,
                                   ROW_NUMBER() OVER(PARTITION BY A.ENO_NO ORDER BY A.AIM_YMD DESC) RNUM
                              FROM ASNHR.T_EV_AIMLST A
                             WHERE A.GUBUN          = ?                                   AND      --업무구분
                                   A.EVL_YY         = ?                                   AND      --해당 년도
                                   A.EVL_FRQ        = ?                                   AND      --평가 회차
                                   A.AIM_YMD       != TO_DATE('19000101','YYYY-MM-DD')             --목표 설정
                             GROUP BY A.GUBUN, A.ENO_NO, A.ACCEPT_GBN, A.AIM_YMD
                           )
                     WHERE RNUM = 1
                   ) MOD,     -- ************* 수정 목표 입력자 현황 ************************************************
                   (
                    SELECT A.ENO_NO                                             AS ENO_NO,      --피평가자 사번
                           ASNHR.SF_GET_ENONAME('01',ENO_NO)                       AS ENO_NM,      --피평가자 명
                           NVL((SUM(EVL_ACHCVT+ EVL_DIFCVT)),0)                 AS EVL_PNT,     --평가자 평가 점수
                           NVL((SUM(SELF_ACHCVT+ SELF_DIFCVT)),0)               AS MY_PNT       --본인 평가 점수
                      FROM ASNHR.T_EV_ACHTBL A
                     WHERE A.GUBUN       = ?                                 AND             --업무구분
                           A.EVL_YY      = ?                                 AND             --해당 년도
                           A.EVL_FRQ     = ?                                                 --평가 회차
                     GROUP BY A.GUBUN, A.ENO_NO
                   ) SLF    -- ************* 본인/평가자 평가 처리 자 LIST ******************************************
            WHERE TAG.ENO_NO = OBJ.ENO_NO(+) AND
                  TAG.ENO_NO = MOD.ENO_NO(+) AND
                  TAG.ENO_NO = SLF.ENO_NO(+)
            ORDER BY TAG.GROUP_CD, TAG.DPT_SEQ, TAG.JOB_SEQ, TAG.HOB_SEQ DESC, TAG.HIRG_YMD
            ]]>
        </query>
    </sql>

    <!--자기 평가진행현황을 조회한다.(참조 평가 여부 조회) by ksd-->
    <sql name="VLUC010_SHR_05">
        <description>평가 진행 세부 정보 조회</description>
        <query>
            <![CDATA[
SELECT TAG.DRG,                                                                --평가 차수
     TAG.ENO_NO,                                                             --피평가자 사번
     TAG.EVLENO_NO,
     '['||TAG.ENO_NM||']'                                    AS ENO_NM,      --피평가자 명
     DECODE(RST.ENO_NO, NULL, '['||TAG.ENO_NM||']',
       DECODE(RST.PNT,NULL,'['||TAG.ENO_NM||']',
       DECODE(RST.PNT,0,'['||TAG.ENO_NM||']','완료')))       AS STS,         --참조평가 상태
     DECODE(SLF.ENO_NO, NULL, '['||TAG.ENO_NM||']',
       DECODE(SLF.PNT,NULL,'['||TAG.ENO_NM||']',
       DECODE(SLF.PNT,0,'['||TAG.ENO_NM||']','완료')))       AS SEL          --본인평가 상태
FROM
       (
        SELECT 1                                        AS DRG,        --1차 참조 평가
               A.ENO_NO                                 AS ENO_NO,     --피평가자 사번
               A.EVLENO_NO                              AS EVLENO_NO,  --평가자 사번
               ASNHR.SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM,     --피평가자 명
               ASNHR.SF_GET_DPTSEQ( '01', 'A4',B.DPT_CD)      AS DPT_SEQ,
               ASNHR.SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)     AS JOB_SEQ,
               ASNHR.SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)     AS HOB_SEQ,
               GROUP_CD,
               B.HIRG_YMD
          FROM ASNHR.T_EV_EVLIST_DT A, ASNHR.T_EV_EVLIST_HD B
         WHERE A.GUBUN       = B.GUBUN                 AND
               A.EVL_YY      = B.EVL_YY                AND
               A.EVL_GBN     = B.EVL_GBN               AND
               A.EVL_FRQ     = B.EVL_FRQ               AND
               A.ENO_NO      = B.ENO_NO                AND
               B.EXCEPT_YN   = 'F'                     AND
               A.GUBUN        = ?                      AND             --업무구분
               A.EVL_YY       = ?                      AND             --해당 년도
               A.EVL_GBN      = '2'                    AND             --평가 구분(2:성과)
               A.EVL_FRQ      = ?                      AND             --평가 회차
               A.DEGREE_GBN   = '1'                    AND             --차수 구분
               A.REFENO_NO1   = ?                                      --1차 참조 평가자 사번
         UNION ALL
        SELECT 2                                        AS DRG,        --2차 참조 평가
               A.ENO_NO                                 AS ENO_NO,     --피평가자 사번
               A.EVLENO_NO                              AS EVLENO_NO,  --평가자 사번
               ASNHR.SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM,     --피평가자 명
               ASNHR.SF_GET_DPTSEQ( '01', 'A4',B.DPT_CD)      AS DPT_SEQ,
               ASNHR.SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)     AS JOB_SEQ,
               ASNHR.SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)     AS HOB_SEQ,
               GROUP_CD,
               B.HIRG_YMD
          FROM ASNHR.T_EV_EVLIST_DT A, ASNHR.T_EV_EVLIST_HD B
         WHERE A.GUBUN       = B.GUBUN                 AND
               A.EVL_YY      = B.EVL_YY                AND
               A.EVL_GBN     = B.EVL_GBN               AND
               A.EVL_FRQ     = B.EVL_FRQ               AND
               A.ENO_NO      = B.ENO_NO                AND
               B.EXCEPT_YN   = 'F'                     AND
               A.GUBUN        = ?                      AND             --업무구분
               A.EVL_YY       = ?                      AND             --해당 년도
               A.EVL_GBN      = '2'                    AND             --평가 구분(2:성과)
               A.EVL_FRQ      = ?                      AND             --평가 회차
               A.DEGREE_GBN   = '1'                    AND             --차수 구분
               A.REFENO_NO2   = ?                                      --1차 참조 평가자 사번
         UNION ALL
        SELECT 3                                        AS DRG,        --3차 참조 평가
               A.ENO_NO                                 AS ENO_NO,     --피평가자 사
               A.EVLENO_NO                              AS EVLENO_NO,  --평가자 사번
               ASNHR.SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM,     --피평가자 명
               ASNHR.SF_GET_DPTSEQ( '01', 'A4',B.DPT_CD)      AS DPT_SEQ,
               ASNHR.SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)     AS JOB_SEQ,
               ASNHR.SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)     AS HOB_SEQ,
               GROUP_CD,
               B.HIRG_YMD
          FROM ASNHR.T_EV_EVLIST_DT A,
               ASNHR.T_EV_EVLIST_HD B
         WHERE A.GUBUN       = B.GUBUN                 AND
               A.EVL_YY      = B.EVL_YY                AND
               A.EVL_GBN     = B.EVL_GBN               AND
               A.EVL_FRQ     = B.EVL_FRQ               AND
               A.ENO_NO      = B.ENO_NO                AND
               B.EXCEPT_YN   = 'F'                     AND
               A.GUBUN        = ?                      AND             --업무구분
               A.EVL_YY       = ?                      AND             --해당 년도
               A.EVL_GBN      = '2'                    AND             --평가 구분(2:성과)
               A.EVL_FRQ      = ?                      AND             --평가 회차
               A.DEGREE_GBN   = '1'                    AND             --차수 구분
               A.REFENO_NO3   = ?                                      --1차 참조 평가자 사번
       ) TAG,    -- ************* 참조평가(1,2,3차) 대상자 List ************************************************
       (
        SELECT 1                                                    AS DRG,         --참조 평가 차수
               A.ENO_NO                                             AS ENO_NO,      --피평가자 사번
               A.EVLENO_NO                                          AS EVLENO_NO,   --평가자 사번
               NVL(SUM(A.REF1_ACHCVT+A.REF1_DIFCVT),0)              AS PNT          --참조 평가 점수
          FROM ASNHR.T_EV_ACHTBL A
         WHERE A.GUBUN        = ?                                   AND             --업무구분
               A.EVL_YY       = ?                                   AND             --해당 년도
               A.EVL_FRQ      = ?                                   AND             --평가 회차
               A.REFENO_NO1   = ?                                                   --1차 참조 평가자 사번
         GROUP BY A.ENO_NO, A.EVLENO_NO
         UNION ALL
        SELECT 2                                                     AS DRG,         --참조 평가자 차수
               A.ENO_NO                                              AS ENO_NO,      --피평가자 사번
               A.EVLENO_NO                                           AS EVLENO_NO,   --평가자 사번
               SUM(A.REF2_ACHCVT+A.REF2_DIFCVT)                      AS PNT          --참조 평가 점수
          FROM ASNHR.T_EV_ACHTBL A
         WHERE A.GUBUN         = ?                                   AND             --업무구분
               A.EVL_YY        = ?                                   AND             --해당 년도
               A.EVL_FRQ       = ?                                   AND             --평가 회차
               A.REFENO_NO2    = ?                                                   --2차 참조 평가자 사번
         GROUP BY A.ENO_NO, A.EVLENO_NO
         UNION ALL
        SELECT 3                                                     AS DRG,         --참조 평가자 차수
               A.ENO_NO                                              AS ENO_NO,      --피평가자 사번
               A.EVLENO_NO                                           AS EVLENO_NO,   --평가자 사번
               SUM(A.REF3_ACHCVT+A.REF3_DIFCVT)                      AS PNT          --참조 평가 점수
          FROM ASNHR.T_EV_ACHTBL A
         WHERE A.GUBUN         = ?                                   AND             --업무구분
               A.EVL_YY        = ?                                   AND             --해당 년도
               A.EVL_FRQ       = ?                                   AND             --평가 회차
               A.REFENO_NO3    = ?                                                   --3차 참조 평가자 사번
         GROUP BY A.ENO_NO, A.EVLENO_NO
       ) RST,    -- ************* 참조평가여부(1,2,3차) ******************************************************************
       (
        SELECT 1                                                    AS DRG,         --참조 평가 차수
               A.ENO_NO                                             AS ENO_NO,      --피평가자 사번
               A.EVLENO_NO                                          AS EVLENO_NO,   --평가자 사번
               NVL(SUM(A.SELF_ACHCVT+A.SELF_DIFCVT),0)              AS PNT          --본인 평가 점수
          FROM ASNHR.T_EV_ACHTBL A
         WHERE A.GUBUN        = ?                                   AND             --업무구분
               A.EVL_YY       = ?                                   AND             --해당 년도
               A.EVL_FRQ      = ?                                   AND             --평가 회차
               A.REFENO_NO1   = ?                                                   --1차 참조 평가자 사번
         GROUP BY A.ENO_NO, A.EVLENO_NO
         UNION ALL
        SELECT 2                                                    AS DRG,         --참조 평가자 차수
               A.ENO_NO                                             AS ENO_NO,      --피평가자 사번
               A.EVLENO_NO                                          AS EVLENO_NO,   --평가자 사번
               NVL(SUM(A.SELF_ACHCVT+A.SELF_DIFCVT),0)              AS PNT          --본인 평가 점수
          FROM ASNHR.T_EV_ACHTBL A
         WHERE A.GUBUN         = ?                                  AND             --업무구분
               A.EVL_YY        = ?                                  AND             --해당 년도
               A.EVL_FRQ       = ?                                  AND             --평가 회차
               A.REFENO_NO2    = ?                                                  --2차 참조 평가자 사번
         GROUP BY A.ENO_NO, A.EVLENO_NO
         UNION ALL
        SELECT 3                                                    AS DRG,         --참조 평가자 차수
               A.ENO_NO                                             AS ENO_NO,      --피평가자 사번
               A.EVLENO_NO                                          AS EVLENO_NO,   --평가자 사번
               NVL(SUM(A.SELF_ACHCVT+A.SELF_DIFCVT),0)              AS PNT          --본인 평가 점수
          FROM ASNHR.T_EV_ACHTBL A
         WHERE A.GUBUN         = ?                                  AND             --업무구분
               A.EVL_YY        = ?                                  AND             --해당 년도
               A.EVL_FRQ       = ?                                  AND             --평가 회차
               A.REFENO_NO3    = ?                                                  --3차 참조 평가자 사번
         GROUP BY A.ENO_NO, A.EVLENO_NO
       ) SLF    -- ************* 본인평가여부(1,2,3차) ******************************************************************
WHERE TAG.DRG       = RST.DRG(+)          AND
      TAG.ENO_NO    = RST.ENO_NO(+)       AND
      TAG.EVLENO_NO = RST.EVLENO_NO(+)    AND
      TAG.DRG       = SLF.DRG(+)          AND
      TAG.ENO_NO    = SLF.ENO_NO(+)       AND
      TAG.EVLENO_NO = SLF.EVLENO_NO(+)
ORDER BY TAG.GROUP_CD, TAG.DPT_SEQ, TAG.JOB_SEQ, TAG.HOB_SEQ DESC, TAG.HIRG_YMD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC020
* @description : 개인별평가일정조정
***********************************************************************
* 2006/09/29      오대성        최초작성.
***********************************************************************
-->

<!-- VLUB020의 내용과 동일하므로 VLUB020의 SQL문을 그대로 사용한다. -->


<!--
***********************************************************************
* @UseCase     : VLUC030
* @description : 목표설정
***********************************************************************
* 2006/10/10      안준성        최초작성.
* 2006/12/07      박인이        수정.
***********************************************************************
-->

    <!-- 개인별평가일정 정보를 조회한다. -->
    <sql name="VLUC030_SHR_00">
        <description>개인별평가일정 데이터 조회 </description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(OBJ_STDT,  'YYYY-MM-DD') AS OBJ_STDT,   -- 목표입력기간(시작)
                   TO_CHAR(OBJ_ENDT,  'YYYY-MM-DD') AS OBJ_ENDT    -- 목표입력기간(종료)
            FROM   ASNHR.T_EV_SCHCHG
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = ?
            AND    EVL_FRQ = ?
            AND    ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정/세부추진계획 정보를 조회 -->
    <sql name="VLUC030_SHR_01">
        <description>목표설정/세부추진계획 조회</description>
        <query>
            <![CDATA[
            SELECT DECODE(B.ITEM_SEQ, NULL, 'L', 1, 'L', 'S')    AS AIM_GBN,
                       A.EVL_YY,
                       A.EVL_FRQ,
                       TO_CHAR(A.AIM_YMD,'YYYY-MM-DD')           AS AIM_YMD,
                       A.ENO_NO,
                       A.EVLENO_NO,
                       A.AIM_SEQ,
                       A.TASK_AIM,
                       A.TASK_CSF,
                       A.BASIC_PAR,
                       A.GAUGE_GB,
                       A.AIM_LEVEL,
                       A.ADDING_PCT,
                       A.ACCEPT_GBN,
                       A.RETURN_DEC,
                       A.MODIFY_DEC, A.ACT_TIM, A.HLP_REQ,
                       B.ITEM_SEQ,
                       B.ITEM_DEC,
                       B.CRITR_S, B.CRITR_A, B.CRITR_B, B.CRITR_C, B.CRITR_D
                FROM   ASNHR.T_EV_AIMLST A,
                       ASNHR.T_EV_AIMSUB B
                WHERE  A.GUBUN     = ?
                AND    A.EVL_YY    = ?
                AND    A.EVL_FRQ   = ?
                AND    A.AIM_YMD   = ?
                AND    A.ENO_NO    = ?
                AND    A.GUBUN     = B.GUBUN
                AND    A.EVL_YY    = B.EVL_YY
                AND    A.EVL_FRQ   = B.EVL_FRQ
                AND    A.AIM_YMD   = B.AIM_YMD
                AND    A.ENO_NO    = B.ENO_NO
                AND    A.EVLENO_NO = B.EVLENO_NO
                AND    A.AIM_SEQ   = B.AIM_SEQ
                ORDER BY A.AIM_SEQ, B.ITEM_SEQ
            ]]>
        </query>
    </sql>

    <!-- 신규자료를 위한 목표순번 최대값을  조회 -->
    <sql name="VLUC030_SHR_01_OLD">
        <description>목표순번 조회 (차후 삭제)</description>
        <query>
            <![CDATA[
                SELECT DECODE(MAX(AIM_SEQ),'',0,MAX(AIM_SEQ)) AS AIM_SEQ
                FROM ASNHR.T_EV_AIMLST
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND ENO_NO = ?
                    AND EVLENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 신규자료를 위한 목표승인여부  조회( 세부추진계획(VLUC040) 과 공통) )  -->
    <sql name="VLUC030_SHR_02">
        <description>목표승인여부 조회</description>
        <query>
            <![CDATA[
            SELECT ACCEPT_GBN, RETURN_DEC
            FROM   ASNHR.T_EV_AIMLST A
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_FRQ   = ?
            AND    AIM_YMD   = ?
            AND    ENO_NO    = ?
            AND    ACCEPT_GBN = (SELECT MAX(ACCEPT_GBN) AS ACCEPT_GBN
                                 FROM   ASNHR.T_EV_AIMLST
                                 WHERE  GUBUN     = A.GUBUN
                                 AND    EVL_YY    = A.EVL_YY
                                 AND    EVL_FRQ   = A.EVL_FRQ
                                 AND    AIM_YMD   = A.AIM_YMD
                                 AND    ENO_NO    = A.ENO_NO
                                 AND    EVLENO_NO = A.EVLENO_NO)
            ]]>
        </query>
    </sql>

    <!-- 목표입력 기간 여부 체크( VLUC040-세부추진계획 과 공통 ) -->
    <sql name="VLUC030_SHR_03">
        <description>목표입력 기간 여부 조회 (차후 삭제)</description>
        <query>
            <![CDATA[
                SELECT OBJ_STDT, OBJ_ENDT, DATA_DIV
                FROM
                (
                        SELECT OBJ_STDT, OBJ_ENDT, '개인별평가일정' DATA_DIV
                        FROM ASNHR.T_EV_SCHCHG
                        WHERE GUBUN = ?
                                AND EVL_YY = ?
                                AND EVL_GBN = ?
                                AND EVL_FRQ = ?
                                AND ENO_NO = ?
                        UNION ALL
                        SELECT OBJ_STDT, OBJ_ENDT, '연도별회차' DATA_DIV
                        FROM ASNHR.T_EV_ESTINFO
                        WHERE GUBUN = ?
                                AND EVL_YY = ?
                                AND EVL_GBN = ?
                                AND EVL_FRQ = ?
                                AND ( EVL_STDT <= TO_CHAR(SYSDATE,'YYYY-MM-DD') AND EVL_ENDT >= TO_CHAR(SYSDATE,'YYYY-MM-DD') )
                                AND NOT EXISTS ( SELECT OBJ_STDT
                                                  FROM ASNHR.T_EV_SCHCHG
                                                  WHERE GUBUN = ?
                                                          AND EVL_YY = ?
                                                          AND EVL_GBN = ?
                                                          AND EVL_FRQ = ?
                                                          AND ENO_NO = ?
                                                          AND OBJ_STDT IS NOT NULL
                                                          AND OBJ_ENDT IS NOT NULL )
                ) WHERE ( OBJ_STDT <= TO_CHAR(SYSDATE,'YYYY-MM-DD') AND OBJ_ENDT >= TO_CHAR(SYSDATE,'YYYY-MM-DD') )
            ]]>
        </query>
    </sql>

    <!-- 목표설정 등록 -->
    <sql name="VLUC030_LST_INS">
        <description>목표설정 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_AIMLST
                ( GUBUN, EVL_YY, EVL_FRQ, AIM_YMD, ENO_NO, EVLENO_NO, AIM_SEQ, TASK_AIM, BASIC_PAR, GAUGE_GB, AIM_LEVEL, ADDING_PCT, TASK_CSF, ACT_TIM, HLP_REQ, ACCEPT_GBN, RETURN_DEC, MODIFY_DEC, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,sysdate)
            ]]>
        </query>
    </sql>

    <!-- 새로운 세부추진계획 등록 -->
    <sql name="VLUC030_SUB_INS">
        <description>세부추진계획 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_AIMSUB
                ( GUBUN,     EVL_YY,  EVL_FRQ,  AIM_YMD,  ENO_NO,
                  EVLENO_NO, AIM_SEQ, ITEM_SEQ, ITEM_DEC, CRITR_S,
                  CRITR_A,    CRITR_B,  CRITR_C,   CRITR_D,   IPT_MAN,  IPT_YMD,  UPT_MAN,   UPT_YMD )
            VALUES
                (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,sysdate)
            ]]>
        </query>
    </sql>

    <!-- 목표설정 정보 내용 수정 -->
    <sql name="VLUC030_LST_UPT">
        <description>목표설정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_AIMLST
            SET    TASK_AIM      = ?,             -- 주요업무목표
                   BASIC_PAR     = ?,             -- 성과평가기준
                   GAUGE_GB      = ?,             -- 계량구분
                   AIM_LEVEL     = ?,             -- 목표수준
                   ADDING_PCT    = ?,             -- 가중치
                   DIFFICULT_PNT = ?,             -- 난이도
                   UPT_MAN       = ?,             -- 최종수정자
                   UPT_YMD       = SYSDATE        -- 최종수정일시
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_FRQ   = ?
            AND    AIM_YMD   = ?
            AND    ENO_NO    = ?
            AND    EVLENO_NO = ?
            AND    AIM_SEQ   = ?
            ]]>
        </query>
    </sql>

    <!-- 세부추진계획 정보 내용 수정 -->
    <sql name="VLUC030_SUB_UPT">
        <description>세부추진계획 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_AIMSUB
            SET    ITEM_DEC = ?,                   -- 주요추진항목
                   CRITR_S   = ?,                   -- 01월 상반기
                   CRITR_A   = ?,                   -- 01월 하반기
                   CRITR_B   = ?,                   -- 02월 하반기
                   CRITR_C   = ?,                   -- 02월 하반기
                   CRITR_D   = ?,                   -- 03월 하반기
                   HLP_REQ   = ?,                   -- 03월 하반기
                   APR_UP   = ?,                   -- 04월 하반기
                   APR_DN   = ?,                   -- 04월 하반기
                   MAY_UP   = ?,                   -- 05월 하반기
                   MAY_DN   = ?,                   -- 05월 하반기
                   JUN_UP   = ?,                   -- 06월 하반기
                   JUN_DN   = ?,                   -- 06월 하반기
                   JUL_UP   = ?,                   -- 07월 하반기
                   JUL_DN   = ?,                   -- 07월 하반기
                   AUG_UP   = ?,                   -- 08월 하반기
                   AUG_DN   = ?,                   -- 08월 하반기
                   SEP_UP   = ?,                   -- 09월 하반기
                   SEP_DN   = ?,                   -- 09월 하반기
                   OCT_UP   = ?,                   -- 10월 하반기
                   OCT_DN   = ?,                   -- 10월 하반기
                   NOV_UP   = ?,                   -- 11월 하반기
                   NOV_DN   = ?,                   -- 11월 하반기
                   DEC_UP   = ?,                   -- 12월 하반기
                   DEC_DN   = ?,                   -- 12월 하반기
                   UPT_MAN  = ?,                   -- 최종수정자
                   UPT_YMD  = SYSDATE              -- 최종수정일시
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_FRQ   = ?
            AND    AIM_YMD   = ?
            AND    ENO_NO    = ?
            AND    EVLENO_NO = ?
            AND    AIM_SEQ   = ?
            AND    ITEM_SEQ  = ?
            ]]>
        </query>
    </sql>

    <!-- 목표설정 정보 내용 삭제 -->
    <sql name="VLUC030_LST_DEL">
        <description>목표설정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_AIMLST
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_FRQ   = ?
            AND    AIM_YMD   = ?
            AND    ENO_NO    = ?
            AND    EVLENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 세부추진계획 삭제 -->
    <sql name="VLUC030_SUB_DEL">
        <description>세부추진계획 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_AIMSUB
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_FRQ   = ?
            AND    AIM_YMD   = ?
            AND    ENO_NO    = ?
            AND    EVLENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 목표설정 정보 내용 삭제 -->
    <sql name="VLUC030_DEL_01_OLD">
        <description>목표설정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_AIMLST
            WHERE  GUBUN = ?
                   AND EVL_YY = ?
                AND EVL_FRQ = ?
                AND AIM_YMD = ?
                AND ENO_NO = ?
                AND EVLENO_NO = ?
                AND AIM_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 세부추진계획 정보 내용 삭제 -->
    <sql name="VLUC030_DEL_01_OLD">
        <description>세부추진계획 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_AIMSUB
            WHERE  GUBUN = ?
                   AND EVL_YY = ?
                AND EVL_FRQ = ?
                AND AIM_YMD = ?
                AND ENO_NO = ?
                AND EVLENO_NO = ?
                AND AIM_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 세부추진계획 정보 내용 삭제 -->
    <sql name="VLUC030_DEL_02_OLD">
        <description>세부추진계획 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_AIMSUB
            WHERE  GUBUN = ?
                   AND EVL_YY = ?
                AND EVL_FRQ = ?
                AND AIM_YMD = ?
                AND ENO_NO = ?
                AND EVLENO_NO = ?
                AND AIM_SEQ = ?
                AND ITEM_SEQ = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUC040
* @description : 세부추진계획
***********************************************************************
* 2006/10/10      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정 정보를 조회 -->
    <sql name="VLUC040_SHR">
        <description>목표설정 조회</description>
        <query>
            <![CDATA[
            SELECT     A.EVL_YY,
                       A.EVL_FRQ,
                       TO_CHAR(A.AIM_YMD,'YYYY-MM-DD')       AS AIM_YMD,
                       A.ENO_NO,
                       A.EVLENO_NO,
                       A.AIM_SEQ,
                       A.TASK_AIM,
                       A.BASIC_PAR,
                       A.GAUGE_GB,
                       A.AIM_LEVEL,
                       A.ADDING_PCT,
                       A.DIFFICULT_PNT,
                       A.ACCEPT_GBN,
                       A.RETURN_DEC
                FROM   ASNHR.T_EV_AIMLST A
                WHERE  A.GUBUN     = ?
                AND    A.EVL_YY    = ?
                AND    A.EVL_FRQ   = ?
                AND    A.AIM_YMD   = ?
                AND    A.ENO_NO    = ?
                AND    A.EVLENO_NO = ?
                ORDER BY A.AIM_SEQ
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 세부추진계획 정보를 조회 -->
    <sql name="VLUC040_SHR_01">
        <description>세부추진계획 조회</description>
        <query>
            <![CDATA[
                SELECT EVL_YY, EVL_FRQ, TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD, ENO_NO, EVLENO_NO,
                        AIM_SEQ, ITEM_SEQ, ITEM_DEC, 'F' ASNHR.T_CHECK, CRITR_S, CRITR_A,
                        CRITR_B, CRITR_C, CRITR_D, HLP_REQ, APR_UP,
                        APR_DN, MAY_UP, MAY_DN, JUN_UP, JUN_DN,
                        JUL_UP, JUL_DN, AUG_UP, AUG_DN, SEP_UP,
                        SEP_DN, OCT_UP, OCT_DN, NOV_UP, NOV_DN,
                        DEC_UP, DEC_DN
                FROM ASNHR.T_EV_AIMSUB
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND AIM_YMD = ?
                    AND ENO_NO = ?
                    AND EVLENO_NO = ?
                    AND AIM_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 신규자료를 위한 추진항목순번 최대값을  조회(VLUC100과 공통) -->
    <sql name="VLUC040_SHR_02">
        <description>추진항목순번 조회</description>
        <query>
            <![CDATA[
                SELECT DECODE(MAX(ITEM_SEQ),'',0,MAX(ITEM_SEQ)) AS ITEM_SEQ
                FROM ASNHR.T_EV_AIMSUB
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND AIM_YMD = ?
                    AND ENO_NO = ?
                    AND EVLENO_NO = ?
                    AND AIM_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 새로운 세부추진계획 등록 -->
    <sql name="VLUC040_INS">
        <description>세부추진계획 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_AIMSUB
                ( GUBUN, EVL_YY, EVL_FRQ, AIM_YMD, ENO_NO,
                    EVLENO_NO, AIM_SEQ, ITEM_SEQ, ITEM_DEC, CRITR_S,
                    CRITR_A, CRITR_B, CRITR_C, CRITR_D, HLP_REQ,
                    APR_UP, APR_DN, MAY_UP, MAY_DN, JUN_UP,
                    JUN_DN, JUL_UP, JUL_DN, AUG_UP, AUG_DN,
                    SEP_UP, SEP_DN, OCT_UP, OCT_DN, NOV_UP,
                    NOV_DN, DEC_UP, DEC_DN, IPT_MAN, IPT_YMD,
                    UPT_MAN, UPT_YMD )
            VALUES
                (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,sysdate)
            ]]>
        </query>
    </sql>

    <!-- 세부추진계획 정보 내용 수정 -->
    <sql name="VLUC040_UPT">
        <description>세부추진계획 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_AIMSUB
                  SET ITEM_DEC = ?,                    --주요추진항목
                         CRITR_S = ?,                        --01월 상반기
                         CRITR_A = ?,                        --01월 하반기
                         CRITR_B = ?,                        --02월 하반기
                         CRITR_C = ?,                        --02월 하반기
                         CRITR_D = ?,                        --03월 하반기
                         HLP_REQ = ?,                        --03월 하반기
                         APR_UP = ?,                        --04월 하반기
                         APR_DN = ?,                        --04월 하반기
                         MAY_UP = ?,                        --05월 하반기
                         MAY_DN = ?,                        --05월 하반기
                         JUN_UP = ?,                        --06월 하반기
                         JUN_DN = ?,                        --06월 하반기
                         JUL_UP = ?,                        --07월 하반기
                         JUL_DN = ?,                        --07월 하반기
                         AUG_UP = ?,                        --08월 하반기
                         AUG_DN = ?,                        --08월 하반기
                         SEP_UP = ?,                        --09월 하반기
                         SEP_DN = ?,                        --09월 하반기
                         OCT_UP = ?,                        --10월 하반기
                         OCT_DN = ?,                        --10월 하반기
                         NOV_UP = ?,                        --11월 하반기
                         NOV_DN = ?,                        --11월 하반기
                         DEC_UP = ?,                            --12월 하반기
                         DEC_DN = ?,                        --12월 하반기
                         UPT_MAN = ?,                        --최종수정자
                         UPT_YMD = SYSDATE            --최종수정일시
                  WHERE GUBUN = ?
                          AND EVL_YY = ?
                        AND EVL_FRQ = ?
                        AND AIM_YMD = ?
                        AND ENO_NO = ?
                        AND EVLENO_NO = ?
                        AND AIM_SEQ = ?
                        AND ITEM_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 세부추진계획 정보 내용 삭제 -->
    <sql name="VLUC040_DEL">
        <description>세부추진계획 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_AIMSUB
            WHERE  GUBUN = ?
                   AND EVL_YY = ?
                AND EVL_FRQ = ?
                AND AIM_YMD = ?
                AND ENO_NO = ?
                AND EVLENO_NO = ?
                AND AIM_SEQ = ?
                AND ITEM_SEQ = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC050
* @description : 목표승인
***********************************************************************
* 2006/10/11      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 평가자사번에 따른 목표승인 정보를 조회 -->
    <sql name="VLUC050_SHR">
        <description>목표승인 조회</description>
        <query>
            <![CDATA[
                SELECT C.EVL_YY                                                            AS EVL_YY,
                       C.EVL_GBN                                                           AS EVL_GBN,
                       C.EVL_FRQ                                                           AS EVL_FRQ,
                       C.EVLENO_NO                                                         AS EVLENO_NO,
                       C.ENO_NO                                                            AS ENO_NO,
                       ASNHR.SF_GET_ENONAME('01', C.ENO_NO)                                      AS ENO_NM,
                       ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD)                                 AS DPT_NM,
                       C.GROUP_CD                                                          AS GROUP_CD,
                       CASE WHEN C.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', C.GROUP_CD)
                            WHEN C.GUBUN = '02' THEN
                                (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = C.GROUP_CD AND DUTY_LBL = C.COMM_CD)
                       END                                                                 AS GROUP_NM,       -- 평가그룹명
                       ASNHR.SF_GET_DPTNAME('01', 'B2', C.HEAD_CD)                              AS HEAD_NM,
                       ASNHR.SF_GET_COMMNAME('01', 'A2', C.JOB_CD)                               AS JOB_NM,
                       TO_CHAR(C.HIRG_YMD, 'YYYY-MM-DD')                                   AS HIRG_YMD,
                       TO_CHAR(C.DPA_YMD, 'YYYY-MM-DD')                                    AS DPA_YMD,
                       DECODE(D.ENO_NO,NULL,'미입력','입력')                               AS AIM_INPUT_GBN,
                       DECODE(D.ACCEPT_GBN,NULL,'0',D.ACCEPT_GBN)                          AS ACCEPT_GBN
                FROM ( SELECT A.GUBUN,  A.EVL_YY,  A.EVL_GBN,  A.EVL_FRQ,    B.ENO_NO,  A.HEAD_CD, A.JOB_CD,
                              A.DPT_CD, A.COMM_CD, A.GROUP_CD, B.DEGREE_GBN, B.EVLENO_NO,
                              ASNHR.SF_GET_DPTSEQ('01', 'B2', A.HEAD_CD) AS HEAD_SEQ,
                              ASNHR.SF_GET_DPTSEQ('01', 'A4',A.DPT_CD)    AS DPT_SEQ,
                              ASNHR.SF_GET_COMMSEQ('01', 'A2', A.JOB_CD)  AS JOB_SEQ,
                              ASNHR.SF_GET_COMMSEQ('01', 'A3', A.HOB_CD)  AS HOB_SEQ,
                              A.HIRG_YMD,
                              A.DPA_YMD
                       FROM   ASNHR.T_EV_EVLIST_HD A,
                              ASNHR.T_EV_EVLIST_DT B
                       WHERE  A.GUBUN      = ?
                       AND    A.EVL_YY     = ?
                       AND    A.EVL_GBN    = '2'
                       AND    A.EVL_FRQ    = ?
                       AND    B.EVLENO_NO  = ?
                       AND    A.EXCEPT_YN  = 'F'
                       AND    A.GUBUN      = B.GUBUN
                       AND    A.EVL_YY     = B.EVL_YY
                       AND    A.EVL_GBN    = B.EVL_GBN
                       AND    A.EVL_FRQ    = B.EVL_FRQ
                       AND    A.ENO_NO     = B.ENO_NO
                     ) C,
                     ( SELECT LST.GUBUN, LST.EVL_YY, LST.EVL_FRQ, LST.ENO_NO, LST.EVLENO_NO, MAX(LST.ACCEPT_GBN) AS ACCEPT_GBN
                       FROM   ASNHR.T_EV_AIMLST LST,
                              ASNHR.T_EV_AIMSUB SUB
                       WHERE  LST.GUBUN     = ?
                       AND    LST.EVL_YY    = ?
                       AND    LST.EVL_FRQ   = ?
                       AND    LST.AIM_YMD   = ?
                       AND    LST.GUBUN     = SUB.GUBUN     (+)
                       AND    LST.EVL_YY    = SUB.EVL_YY    (+)
                       AND    LST.EVL_FRQ   = SUB.EVL_FRQ   (+)
                       AND    LST.AIM_YMD   = SUB.AIM_YMD   (+)
                       AND    LST.ENO_NO    = SUB.ENO_NO    (+)
                       AND    LST.EVLENO_NO = SUB.EVLENO_NO (+)
                       AND    LST.AIM_SEQ   = SUB.AIM_SEQ   (+)
                       GROUP BY LST.GUBUN, LST.EVL_YY, LST.EVL_FRQ, LST.ENO_NO, LST.EVLENO_NO
                     ) D
                WHERE  C.GUBUN      = D.GUBUN    (+)
                AND    C.EVL_YY     = D.EVL_YY   (+)
                AND    C.EVL_FRQ    = D.EVL_FRQ  (+)
                AND    C.ENO_NO     = D.ENO_NO   (+)
                ORDER BY  C.HEAD_SEQ, C.DPT_SEQ, C.JOB_SEQ, C.HOB_SEQ DESC, HIRG_YMD, C.ENO_NO
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC051
* @description : 목표승인처리
***********************************************************************
* 2006/10/12      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 목표설정일자, 피평가자사번, 평가자사번에 따른 처리할 목표설정 정보를 조회 -->
    <sql name="VLUC051_SHR">
        <description>목표승인 조회</description>
        <query>
            <![CDATA[
                SELECT  A.GUBUN, A.EVL_YY AS EVL_YY,
                        A.EVL_FRQ AS EVL_FRQ,
                        TO_CHAR(A.AIM_YMD,'YYYY-MM-DD') AS AIM_YMD,
                        A.ENO_NO AS ENO_NO,
                        A.EVLENO_NO AS EVLENO_NO,
                        B.ITEM_SEQ AS ITEM_SEQ,
                        A.TASK_AIM AS TASK_AIM,
                        A.TASK_CSF AS TASK_CSF,
                        A.ACT_TIM AS ACT_TIM,
                        A.BASIC_PAR AS BASIC_PAR,
                        A.GAUGE_GB AS GAUGE_GB,
                        A.AIM_LEVEL AS AIM_LEVEL,
                        A.ADDING_PCT AS ADDING_PCT,
                        A.DIFFICULT_PNT AS DIFFICULT_PNT,
                        B.ITEM_DEC AS ITEM_DEC,
                        B.CRITR_S AS CRITR_S,
                        B.CRITR_A AS CRITR_A,
                        B.CRITR_B AS CRITR_B,
                        B.CRITR_C AS CRITR_C,
                        B.CRITR_D AS CRITR_D,
                        A.HLP_REQ AS HLP_REQ
                FROM    ASNHR.T_EV_AIMLST A,
                        ASNHR.T_EV_AIMSUB B
                WHERE   A.GUBUN     = ?
                AND     A.EVL_YY    = ?
                AND     A.EVL_FRQ   = ?
                AND     A.AIM_YMD   = ?
                AND     A.ENO_NO    = ?
                AND     A.GUBUN     = B.GUBUN (+)
                AND     A.EVL_YY    = B.EVL_YY (+)
                AND     A.EVL_FRQ   = B.EVL_FRQ (+)
                AND     A.AIM_YMD   = B.AIM_YMD (+)
                AND     A.ENO_NO    = B.ENO_NO (+)
                AND     A.AIM_SEQ   = B.AIM_SEQ (+)
            ]]>
        </query>
    </sql>

    <!-- 목표설정 정보 승인처리 -->
    <sql name="VLUC051_UPT">
        <description>목표설정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_AIMLST
            SET    ACCEPT_GBN = ?,              --목표승인여부
                   ACCEPT_YMD = SYSDATE,        --목표승인일자
                   RETURN_DEC = ?,              --반려사유
                   UPT_MAN    = ?,              --최종수정자
                   UPT_YMD    = SYSDATE         --최종수정일시
             WHERE GUBUN      = ?
             AND   EVL_YY     = ?
             AND   EVL_FRQ    = ?
             AND   AIM_YMD    = ?
             AND   ENO_NO     = ?
             AND   EVLENO_NO  = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC060
* @description : 면담내용입력
***********************************************************************
* 2006/10/16      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 면담자사번에 따른 최종목표승인내용 정보를 조회 -->
    <sql name="VLUC060_SHR">
        <description>면담내용입력 조회</description>
        <query>
            <![CDATA[
                SELECT MAX(A.EVL_YY)                               AS EVL_YY,
                       MAX(A.EVL_FRQ)                              AS EVL_FRQ,
                       MAX(A.EVLENO_NO)                            AS EVLENO_NO,
                       MAX(SF_GET_ENONAME( '01',C.EVLENO_NO))      AS EVLENO_NM,
                       MAX(CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', C.GROUP_CD)
                                WHEN A.GUBUN = '02' THEN
                                (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = C.GROUP_CD AND DUTY_LBL = C.COMM_CD)
                       END)                                        AS GROUP_NM,       -- 평가그룹명
                       MAX(SF_GET_DPTNAME('01', 'B2', C.HEAD_CD)) AS HEAD_NM,
                       MAX(SF_GET_DPTNAME('01', 'A4', C.DPT_CD))   AS DPT_NM,
                       MAX(SF_GET_COMMNAME('01', 'A2', C.JOB_CD))  AS JOB_NM,
                       A.ENO_NO                                    AS ENO_NO,
                       MAX(SF_GET_ENONAME('01',A.ENO_NO))          AS ENO_NM,
                       MAX(C.GROUP_CD)
                FROM   ASNHR.T_EV_AIMLST A,
                      (SELECT B.EVLENO_NO, B.GUBUN, B.EVL_YY, B.EVL_GBN, B.EVL_FRQ, B.ENO_NO,
                              A.GROUP_CD, A.COMM_CD, A.HEAD_CD, A.DPT_CD, A.JOB_CD,A.HOB_CD,A.HIRG_YMD
                       FROM   ASNHR.T_EV_EVLIST_HD A,
                              ASNHR.T_EV_EVLIST_DT B
                       WHERE  A.GUBUN      = B.GUBUN
                       AND    A.EVL_YY     = B.EVL_YY
                       AND    A.EVL_GBN    = B.EVL_GBN
                       AND    A.EVL_FRQ    = B.EVL_FRQ
                       AND    A.ENO_NO     = B.ENO_NO
                       ) C
                WHERE  A.GUBUN      = ?
                AND    A.EVL_YY     = ?
                AND    A.EVL_FRQ    = ?
                AND    A.AIM_YMD    = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND ENO_NO=C.ENO_NO AND ACCEPT_GBN = '1' )
                AND    C.EVLENO_NO  = ?
                AND    A.ACCEPT_GBN = '1'
                AND    A.GUBUN      = C.GUBUN
                AND    A.EVL_YY     = C.EVL_YY
                AND    C.EVL_GBN    = '2'
                AND    A.EVL_FRQ    = C.EVL_FRQ
                AND    A.ENO_NO     = C.ENO_NO
                GROUP BY A.ENO_NO
                ORDER BY MAX(C.GROUP_CD), MAX(SF_GET_DPTSEQ('01', 'B2', C.HEAD_CD)), MAX(SF_GET_DPTSEQ('01', 'A4', C.DPT_CD)), MAX(SF_GET_COMMSEQ('01', 'A2', C.JOB_CD)), MAX(SF_GET_COMMSEQ('01', 'A3', C.HOB_CD)), MAX(C.HIRG_YMD)
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 피면담자사번, 면담자사번에 따른 면담일자 정보를 조회 -->
    <sql name="VLUC060_SHR_01">
        <description>면담일자 조회</description>
        <query>
            <![CDATA[
                SELECT TO_CHAR(INTERVIEW_YMD,'YYYY-MM-DD') AS INTERVIEW_YMD,
                            TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD
                FROM ASNHR.T_EV_INTERVIEW
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND ENO_NO = ?
                    AND EVLENO_NO = ?
                GROUP BY INTERVIEW_YMD, AIM_YMD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC061
* @description : 면담상세관리
***********************************************************************
* 2006/10/16      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 피면담자사번, 면담자사번에 따른 최종목표승인내용 정보를 조회(입력,수정모드시) -->
    <sql name="VLUC061_SHR">
        <description>면담상세관리 조회</description>
        <query>
            <![CDATA[
              SELECT A.GUBUN,
                     A.EVL_YY                              AS EVL_YY,
                     A.EVL_FRQ                             AS EVL_FRQ,
                     A.ENO_NO                              AS ENO_NO,
                     A.EVLENO_NO                           AS EVLENO_NO,
                     TO_CHAR(C.INTERVIEW_YMD,'YYYY-MM-DD') AS INTERVIEW_YMD,
                     A.AIM_SEQ                             AS AIM_SEQ,
                     B.ITEM_SEQ                            AS ITEM_SEQ,
                     TO_CHAR(A.AIM_YMD,'YYYY-MM-DD')       AS AIM_YMD,
                     A.BASIC_PAR                           AS BASIC_PAR,
                     A.TASK_AIM                            AS TASK_AIM,
                     C.RESULT_WRT                          AS RESULT_WRT,
                     C.CUR_LEVEL                           AS CUR_LEVEL,
                     C.CAUSE_CTS                           AS CAUSE_CTS,
                     C.ADVICE_CTS                          AS ADVICE_CTS,
                     ''                                    AS DATA_STATUS
              FROM   ASNHR.T_EV_AIMLST A,
                     ASNHR.T_EV_AIMSUB B,
                     ASNHR.T_EV_INTERVIEW C
              WHERE  A.GUBUN      = ?
              AND    A.EVL_YY     = ?
              AND    A.EVL_FRQ    = ?
              AND    A.ENO_NO     = ?
              AND    A.EVLENO_NO  = ?
              AND    A.ACCEPT_GBN = '1'
              AND    A.AIM_YMD    = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND ENO_NO=? AND ACCEPT_GBN = '1' AND TO_CHAR(AIM_YMD,'YYYY-MM-DD') LIKE '%'||?||'%'  )
              AND    C.INTERVIEW_YMD(+) = ?
              AND    A.GUBUN      = B.GUBUN
              AND    A.EVL_YY     = B.EVL_YY
              AND    A.EVL_FRQ    = B.EVL_FRQ
              AND    A.AIM_YMD    = B.AIM_YMD
              AND    A.ENO_NO     = B.ENO_NO
              AND    A.EVLENO_NO  = B.EVLENO_NO
              AND    A.AIM_SEQ    = B.AIM_SEQ
              AND    B.GUBUN      = C.GUBUN(+)
              AND    B.EVL_YY     = C.EVL_YY(+)
              AND    B.EVL_FRQ    = C.EVL_FRQ(+)
              AND    B.ENO_NO     = C.ENO_NO(+)
              AND    B.EVLENO_NO  = C.EVLENO_NO(+)
              AND    B.AIM_SEQ    = C.AIM_SEQ(+)
              AND    B.AIM_YMD    = C.AIM_YMD(+)
              AND    B.ITEM_SEQ   = C.ITEM_SEQ(+)
            ]]>
        </query>
    </sql>

    <!-- 새로운 면담내용 등록 -->
    <sql name="VLUC061_INS">
        <description>면담상세관리 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_INTERVIEW
                ( GUBUN, EVL_YY, EVL_FRQ, ENO_NO, EVLENO_NO,
                  INTERVIEW_YMD, AIM_SEQ, ITEM_SEQ, AIM_YMD, RESULT_WRT, CUR_LEVEL,
                  CAUSE_CTS, ADVICE_CTS, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD  )
            VALUES
                (?,?,?,?,?,?,?,?,?,?,?,?,?,?,SYSDATE,?,SYSDATE)
            ]]>
        </query>
    </sql>

    <!-- 면담상세관리  정보 내용 수정 -->
    <sql name="VLUC061_UPT">
        <description>면담상세관리 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_INTERVIEW
            SET    RESULT_WRT    = ?,                    --성과기록
                   CUR_LEVEL     = ?,                    --현수준
                   CAUSE_CTS     = ?,                    --사유/원인 내용
                   ADVICE_CTS    = ?,                    --지도/조언 내용
                   UPT_MAN       = ?,                    --최종수정자
                   UPT_YMD       = SYSDATE               --최종수정일시
             WHERE GUBUN         = ?
             AND   EVL_YY        = ?
             AND   EVL_FRQ       = ?
             AND   ENO_NO        = ?
             AND   EVLENO_NO     = ?
             AND   AIM_YMD       = ?
             AND   INTERVIEW_YMD = ?
             AND   AIM_SEQ       = ?
             AND   ITEM_SEQ      = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC070
* @description : 면담내용현황(개인)
***********************************************************************
* 2006/10/16      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 피면담자사번, 면담자사번에 따른 면담일자,목표설정일자,면담자 정보를 조회 -->
    <sql name="VLUC070_SHR">
        <description>면담일자 조회</description>
        <query>
            <![CDATA[
                SELECT MAX(A.EVL_YY)                         AS EVL_YY,
                       MAX(A.EVL_FRQ)                        AS EVL_FRQ,
                       MAX(A.ENO_NO)                         AS ENO_NO,
                       MAX(A.EVLENO_NO)                      AS EVLENO_NO,
                       TO_CHAR(A.INTERVIEW_YMD,'YYYY-MM-DD') AS INTERVIEW_YMD,
                       TO_CHAR(A.AIM_YMD,'YYYY-MM-DD')       AS AIM_YMD,
                       ASNHR.SF_GET_ENONAME('01',B.EVLENO_NO)      AS EVLENO_NM
                FROM   ASNHR.T_EV_INTERVIEW A, ASNHR.T_EV_EVLIST_DT B
                WHERE  A.GUBUN   = ?
                AND    A.EVL_YY  = ?
                AND    A.EVL_FRQ = ?
                AND    A.ENO_NO  = ?
                AND    A.GUBUN   = B.GUBUN
                AND    B.EVL_GBN = '2'
                and    A.ENO_NO  = B.ENO_NO
                and    A.EVL_FRQ = B.EVL_FRQ
                and    A.EVL_YY  = B.EVL_YY

                GROUP BY A.INTERVIEW_YMD, A.AIM_YMD, B.EVLENO_NO

            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 피면담자사번, 면담일자에 따른 면담내용현황(개인) 정보를 조회 -->
    <sql name="VLUC070_SHR_01">
        <description>면담내용현황(개인) 조회</description>
        <query>
            <![CDATA[
              SELECT A.EVL_YY                              AS EVL_YY,
                     A.EVL_FRQ                             AS EVL_FRQ,
                     A.ENO_NO                              AS ENO_NO,
                     A.EVLENO_NO                           AS EVLENO_NO,
                     TO_CHAR(C.INTERVIEW_YMD,'YYYY-MM-DD') AS INTERVIEW_YMD,
                     A.AIM_SEQ                             AS AIM_SEQ,
                     B.ITEM_SEQ                            AS ITEM_SEQ,
                     A.BASIC_PAR                           AS BASIC_PAR,
                     A.TASK_AIM                            AS TASK_AIM,
                     C.RESULT_WRT                          AS RESULT_WRT,
                     C.CUR_LEVEL                           AS CUR_LEVEL,
                     C.CAUSE_CTS                           AS CAUSE_CTS,
                     C.ADVICE_CTS                          AS ADVICE_CTS
              FROM   ASNHR.T_EV_AIMLST A,
                     ASNHR.T_EV_AIMSUB B,
                     ASNHR.T_EV_INTERVIEW C
              WHERE  A.GUBUN         = ?
              AND    A.EVL_YY        = ?
              AND    A.EVL_FRQ       = ?
              AND    A.AIM_YMD       = ?
              AND    A.ENO_NO        = ?
              AND    A.EVLENO_NO     = ?
              AND    A.ACCEPT_GBN    = '1'
              AND    C.INTERVIEW_YMD = ?
              AND    A.GUBUN         = B.GUBUN
              AND    A.EVL_YY        = B.EVL_YY
              AND    A.EVL_FRQ       = B.EVL_FRQ
              AND    A.AIM_YMD       = B.AIM_YMD
              AND    A.ENO_NO        = B.ENO_NO
              AND    A.EVLENO_NO     = B.EVLENO_NO
              AND    A.AIM_SEQ       = B.AIM_SEQ
              AND    B.GUBUN         = C.GUBUN
              AND    B.EVL_YY        = C.EVL_YY
              AND    B.EVL_FRQ       = C.EVL_FRQ
              AND    B.ENO_NO        = C.ENO_NO
              AND    B.EVLENO_NO     = C.EVLENO_NO
              AND    B.AIM_SEQ       = C.AIM_SEQ
              AND    B.AIM_YMD       = C.AIM_YMD
              AND    B.ITEM_SEQ      = C.ITEM_SEQ
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC080
* @description : 면담내용현황(관리자)
***********************************************************************
* 2006/10/17      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 사번, 부서정보, 직위그룹에 따른 면담대상자 정보를 조회 -->
    <sql name="VLUC080_SHR">
        <description>면담내용현황 조회</description>
        <query>
            <![CDATA[
                SELECT EVL_YY,
                       EVL_FRQ,
                       ENO_NO,
                       ENO_NM,
                       GROUP_NM,
                       HEAD_NM,
                       DPT_NM,
                       JOB_NM
                FROM ( SELECT MAX(A.GUBUN)                                AS GUBUN,
                              MAX(A.EVL_YY)                               AS EVL_YY,
                              MAX(A.EVL_FRQ)                              AS EVL_FRQ,
                              A.ENO_NO                                    AS ENO_NO,
                              MAX(SF_GET_ENONAME('01',A.ENO_NO))          AS ENO_NM,
                              MAX(D.GROUP_CD)                             AS GROUP_CD,
                              MAX(CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', D.GROUP_CD)
                                       WHEN A.GUBUN = '02' THEN
                                       (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = D.GROUP_CD AND DUTY_LBL = D.COMM_CD)
                              END)                                        AS GROUP_NM,       -- 평가그룹명
                              MAX(SF_GET_DPTNAME('01', 'B2', D.HEAD_CD)) AS HEAD_NM,
                              MAX(SF_GET_DPTNAME('01', 'A4', D.DPT_CD))   AS DPT_NM,
                              MAX(SF_GET_COMMNAME('01', 'A2', D.JOB_CD))  AS JOB_NM
                       FROM   ASNHR.T_EV_INTERVIEW A,
                              ASNHR.T_EV_AIMLST B,
                              ASNHR.T_EV_EVLIST_HD D
                       WHERE  A.GUBUN     = ?
                       AND    A.EVL_YY    = ?
                       AND    A.EVL_FRQ   = ?
                       AND    A.ENO_NO    LIKE '%'||?||'%'
                       AND    D.DPT_CD    LIKE '%'||?||'%'
                       AND    A.GUBUN     = B.GUBUN
                       AND    A.EVL_YY    = B.EVL_YY
                       AND    A.ENO_NO    = B.ENO_NO
                       AND    A.EVLENO_NO = B.EVLENO_NO
                       AND    A.AIM_SEQ   = B.AIM_SEQ
                       AND    A.AIM_YMD   = B.AIM_YMD
                       AND    A.GUBUN     = D.GUBUN
                       AND    A.EVL_YY    = D.EVL_YY
                       AND    D.EVL_GBN   = '2'
                       AND    A.EVL_FRQ   = D.EVL_FRQ
                       AND    A.ENO_NO    = D.ENO_NO
                       GROUP BY A.ENO_NO
                       ORDER BY MAX(D.GROUP_CD), MAX(SF_GET_DPTSEQ('01', 'B2', D.HEAD_CD)), MAX(SF_GET_DPTSEQ('01', 'A4', D.DPT_CD)), MAX(SF_GET_COMMSEQ('01', 'A2', D.JOB_CD)), MAX(SF_GET_COMMSEQ('01', 'A3', D.HOB_CD)), MAX(D.HIRG_YMD)
                     )
                WHERE NVL(GROUP_CD,' ') LIKE '%'||?||'%'
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 피면담자사번, 면담자사번에 따른 면담일자 정보를 조회 -->
    <sql name="VLUC080_SHR_01">
        <description>면담일자 조회</description>
        <query>
            <![CDATA[
                SELECT MAX(A.EVL_YY)                         AS EVL_YY,
                       MAX(A.EVL_FRQ)                        AS EVL_FRQ,
                       MAX(A.ENO_NO)                         AS ENO_NO,
                       MAX(A.EVLENO_NO)                      AS EVLENO_NO,
                       TO_CHAR(A.INTERVIEW_YMD,'YYYY-MM-DD') AS INTERVIEW_YMD,
                       TO_CHAR(A.AIM_YMD,'YYYY-MM-DD')       AS AIM_YMD,
                       ASNHR.SF_GET_ENONAME('01',B.EVLENO_NO)      AS EVLENO_NM
                FROM   ASNHR.T_EV_INTERVIEW A, ASNHR.T_EV_EVLIST_DT B
                WHERE  A.GUBUN   = ?
                AND    A.EVL_YY  = ?
                AND    A.EVL_FRQ = ?
                AND    A.ENO_NO  = ?
                AND    A.GUBUN   = B.GUBUN
                AND    B.EVL_GBN = '2'
                and    A.ENO_NO  = B.ENO_NO
                and    A.EVL_FRQ = B.EVL_FRQ
                and    A.EVL_YY  = B.EVL_YY

                GROUP BY A.INTERVIEW_YMD, A.AIM_YMD, B.EVLENO_NO
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC090
* @description : 목표수정
***********************************************************************
* 2006/10/12      안준성        최초작성.
* 2006/12/13      박인이        수정.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정/세부추진계획 정보를 조회 -->
    <sql name="VLUC090_SHR">
        <description>목표설정/세부추진계획 조회(목표설정일자가 최대인거하고 승인된것)</description>
        <query>
            <![CDATA[
            SELECT DECODE(B.ITEM_SEQ, NULL, 'L', 1, 'L', 'S')    AS AIM_GBN,
                   A.EVL_YY,
                   A.EVL_FRQ,
                   TO_CHAR(A.AIM_YMD,'YYYY-MM-DD')           AS AIM_YMD,
                   A.ENO_NO,
                   A.EVLENO_NO,
                   A.AIM_SEQ,
                   A.TASK_AIM,
                   A.TASK_CSF AS TASK_CSF,
                   A.ACT_TIM AS ACT_TIM,
                   A.BASIC_PAR,
                   A.GAUGE_GB,
                   A.AIM_LEVEL,
                   A.ADDING_PCT,
                   A.DIFFICULT_PNT,
                   A.ACCEPT_GBN,
                   A.RETURN_DEC,
                   A.MODIFY_DEC,
                   B.ITEM_SEQ,
                   B.ITEM_DEC,
                   'F'                                       AS ASNHR.T_CHECK,
                   B.CRITR_S, B.CRITR_A, B.CRITR_B, B.CRITR_C, B.CRITR_D, A.HLP_REQ
            FROM   ASNHR.T_EV_AIMLST A,
                   ASNHR.T_EV_AIMSUB B
            WHERE  A.GUBUN     = ?
            AND    A.EVL_YY    = ?
            AND    A.EVL_FRQ   = ?
            AND    A.AIM_YMD   = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=A.GUBUN AND EVL_YY=A.EVL_YY AND EVL_FRQ=A.EVL_FRQ AND ENO_NO=A.ENO_NO AND ACCEPT_GBN='1')
            AND    A.ENO_NO    = ?
            AND    A.GUBUN     = B.GUBUN
            AND    A.EVL_YY    = B.EVL_YY
            AND    A.EVL_FRQ   = B.EVL_FRQ
            AND    A.AIM_YMD   = B.AIM_YMD
            AND    A.ENO_NO    = B.ENO_NO
            AND    A.EVLENO_NO = B.EVLENO_NO
            AND    A.AIM_SEQ   = B.AIM_SEQ
            ORDER BY A.AIM_SEQ, B.ITEM_SEQ
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 목표설정일자, 피평가자사번, 평가자사번에 따른 목표수정(목표설정일자 최대인거 조회) 정보를 조회 -->
    <sql name="VLUC090_SHR_OLD">
        <description>목표수정 조회(목표설정일자 최대인거 조회) (차후 삭제)</description>
        <query>
            <![CDATA[
                SELECT EVL_YY, EVL_FRQ, TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD, ENO_NO, EVLENO_NO,
                        AIM_SEQ, TASK_AIM, BASIC_PAR, GAUGE_GB, AIM_LEVEL,
                        ADDING_PCT, DIFFICULT_PNT, ACCEPT_GBN, MODIFY_DEC
                FROM ASNHR.T_EV_AIMLST
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND AIM_YMD = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND ENO_NO=? AND EVLENO_NO=? )
                    AND ENO_NO = ?
                    AND EVLENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 신규자료를 위한 목표승인과 평가여부  조회 (VLUC100 세부추진계획 수정과 공통) -->
    <sql name="VLUC090_SHR_01">
        <description>목표승인과 평가여부 조회 (차후 삭제)</description>
        <query>
            <![CDATA[
                SELECT MAX(ACCEPT_GBN) AS ACCEPT_GBN, TO_CHAR(MAX(AIM_YMD),'YYYY-MM-DD') AS AIM_YMD, MAX('1') DATA_GUBUN
                FROM ASNHR.T_EV_AIMLST
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND AIM_YMD = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND ENO_NO=? AND EVLENO_NO=? )
                    AND ENO_NO = ?
                    AND EVLENO_NO = ?
                UNION ALL
                SELECT MAX('') AS ACCEPT_GBN, TO_CHAR(MAX(AIM_YMD),'YYYY-MM-DD') AS AIM_YMD, MAX('2') DATA_GUBUN
                FROM ASNHR.T_EV_ACHTBL
                WHERE GUBUN = ?
                  AND EVL_YY = ?
                  AND EVL_FRQ = ?
                  AND ENO_NO = ?
                  AND EVLENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 신규자료를 위한 평가여부 조회 -->
    <sql name="VLUC090_SHR_02">
        <description>평가여부 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD
            FROM   ASNHR.T_EV_ACHTBL
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_FRQ   = ?
            AND    ENO_NO    = ?
            AND    EVLENO_NO = ?
            AND    ROWNUM    = 1
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 목표설정일자, 피평가자사번, 평가자사번에 따른 목표수정(목표설정일자가 최대인거하고 승인된것 조회) 정보를 조회 -->
    <sql name="VLUC090_SHR_02_OLD">
        <description>목표수정 조회(목표설정일자가 최대인거하고 승인된것)</description>
        <query>
            <![CDATA[
                SELECT EVL_YY, EVL_FRQ, TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD, ENO_NO, EVLENO_NO,
                        AIM_SEQ, TASK_AIM, BASIC_PAR, GAUGE_GB, AIM_LEVEL,
                        ADDING_PCT, DIFFICULT_PNT, ACCEPT_GBN, MODIFY_DEC
                FROM ASNHR.T_EV_AIMLST
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND AIM_YMD = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND ENO_NO=? AND EVLENO_NO=? AND ACCEPT_GBN=? )
                    AND ENO_NO = ?
                    AND EVLENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정/세부추진계획 정보를 조회 -->
    <sql name="VLUC090_SHR_03">
        <description>목표설정/세부추진계획 조회(목표설정일자가 최대이면서 승인되지 않은 건 조회)</description>
        <query>
            <![CDATA[
            SELECT DECODE(B.ITEM_SEQ, NULL, 'L', 1, 'L', 'S')    AS AIM_GBN,
                   A.EVL_YY,
                   A.EVL_FRQ,
                   TO_CHAR(A.AIM_YMD,'YYYY-MM-DD')           AS AIM_YMD,
                   A.ENO_NO,
                   A.EVLENO_NO,
                   A.AIM_SEQ,
                   A.TASK_AIM,
                   A.TASK_CSF AS TASK_CSF,
                   A.ACT_TIM AS ACT_TIM,
                   A.BASIC_PAR,
                   A.GAUGE_GB,
                   A.AIM_LEVEL,
                   A.ADDING_PCT,
                   A.DIFFICULT_PNT,
                   A.ACCEPT_GBN,
                   A.RETURN_DEC,
                   A.MODIFY_DEC,
                   B.ITEM_SEQ,
                   B.ITEM_DEC,
                   'F'                                       AS ASNHR.T_CHECK,
                   B.CRITR_S, B.CRITR_A, B.CRITR_B, B.CRITR_C, B.CRITR_D, A.HLP_REQ
            FROM   ASNHR.T_EV_AIMLST A,
                   ASNHR.T_EV_AIMSUB B
            WHERE  A.GUBUN     = ?
            AND    A.EVL_YY    = ?
            AND    A.EVL_FRQ   = ?
            AND    A.AIM_YMD   = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=A.GUBUN AND EVL_YY=A.EVL_YY AND EVL_FRQ=A.EVL_FRQ AND ENO_NO=A.ENO_NO AND EVLENO_NO=A.EVLENO_NO AND ACCEPT_GBN<>'1' AND AIM_YMD > TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS'))
            AND    A.ENO_NO    = ?
            AND    A.GUBUN     = B.GUBUN
            AND    A.EVL_YY    = B.EVL_YY
            AND    A.EVL_FRQ   = B.EVL_FRQ
            AND    A.AIM_YMD   = B.AIM_YMD
            AND    A.ENO_NO    = B.ENO_NO
            AND    A.EVLENO_NO = B.EVLENO_NO
            AND    A.AIM_SEQ   = B.AIM_SEQ
            ORDER BY A.AIM_SEQ, B.ITEM_SEQ
            ]]>
        </query>
    </sql>

    <!-- 목표수정 등록 -->
    <sql name="VLUC090_INS">
        <description>목표수정 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_AIMLST
                ( GUBUN, EVL_YY, EVL_FRQ, AIM_YMD, ENO_NO,
                    EVLENO_NO, AIM_SEQ, TASK_AIM, BASIC_PAR, GAUGE_GB,
                    AIM_LEVEL, ADDING_PCT, DIFFICULT_PNT, ACCEPT_GBN, MODIFY_DEC, IPT_MAN,
                    IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,sysdate)
            ]]>
        </query>
    </sql>

    <!-- 일괄반영(목표수정) 등록 -->
    <sql name="VLUC090_INS_01">
        <description>일괄반영(목표수정) 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_AIMLST
                ( GUBUN, EVL_YY, EVL_FRQ, AIM_YMD, ENO_NO,
                    EVLENO_NO, AIM_SEQ, TASK_AIM, BASIC_PAR, GAUGE_GB,
                    AIM_LEVEL, ADDING_PCT, DIFFICULT_PNT, ACCEPT_GBN, MODIFY_DEC, IPT_MAN,
                    IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,sysdate)
            ]]>
        </query>
    </sql>

    <!-- 일괄반영(세부추진계획수정) 등록 -->
    <sql name="VLUC090_INS_02">
        <description>일괄반영(세부추진계획수정) 등록</description>
        <query>
            <![CDATA[
                INSERT INTO ASNHR.T_EV_AIMSUB ( GUBUN, EVL_YY, EVL_FRQ, AIM_YMD, ENO_NO,
                      EVLENO_NO, AIM_SEQ, ITEM_SEQ, ITEM_DEC, CRITR_S,
                      CRITR_A, CRITR_B, CRITR_C, CRITR_D, HLP_REQ,
                      APR_UP, APR_DN, MAY_UP, MAY_DN, JUN_UP,
                      JUN_DN, JUL_UP, JUL_DN, AUG_UP, AUG_DN,
                      SEP_UP, SEP_DN, OCT_UP, OCT_DN, NOV_UP,
                      NOV_DN, DEC_UP, DEC_DN, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                      )
                SELECT GUBUN, EVL_YY, EVL_FRQ, ?, ENO_NO,
                      EVLENO_NO, AIM_SEQ, ITEM_SEQ, ITEM_DEC, CRITR_S,
                      CRITR_A, CRITR_B, CRITR_C, CRITR_D, HLP_REQ,
                      APR_UP, APR_DN, MAY_UP, MAY_DN, JUN_UP,
                      JUN_DN, JUL_UP, JUL_DN, AUG_UP, AUG_DN,
                      SEP_UP, SEP_DN, OCT_UP, OCT_DN, NOV_UP,
                      NOV_DN, DEC_UP, DEC_DN, ? IPT_MAN, SYSDATE IPT_YMD, ? UPT_MAN, SYSDATE UPT_YMD
                FROM ASNHR.T_EV_AIMSUB
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND AIM_YMD = ?
                    AND ENO_NO = ?
                    AND EVLENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 목표수정 정보 내용 수정 -->
    <sql name="VLUC090_UPT">
        <description>목표수정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_AIMLST
                  SET TASK_AIM = ?,                    --주요업무목표
                         BASIC_PAR = ?,                --성과평가기준
                         GAUGE_GB = ?,                --계량구분
                         AIM_LEVEL = ?,                --목표수준
                         ADDING_PCT = ?,                --가중치
                         DIFFICULT_PNT = ?,            --난이도
                         MODIFY_DEC = ?,                --목표수정사유
                         UPT_MAN = ?,                    --최종수정자
                         UPT_YMD = SYSDATE        --최종수정일시
                  WHERE GUBUN = ?
                          AND EVL_YY = ?
                        AND EVL_FRQ = ?
                        AND AIM_YMD = ?
                        AND ENO_NO = ?
                        AND EVLENO_NO = ?
                        AND AIM_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 목표수정 정보 내용 삭제 -->
    <sql name="VLUC090_DEL">
        <description>목표수정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_AIMLST
            WHERE  GUBUN = ?
                   AND EVL_YY = ?
                AND EVL_FRQ = ?
                AND AIM_YMD = ?
                AND ENO_NO = ?
                AND EVLENO_NO = ?
                AND AIM_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 세부추진계획수정 정보 내용 삭제 -->
    <sql name="VLUC090_DEL_01">
        <description>세부추진계획수정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_AIMSUB
            WHERE  GUBUN = ?
                   AND EVL_YY = ?
                AND EVL_FRQ = ?
                AND AIM_YMD = ?
                AND ENO_NO = ?
                AND EVLENO_NO = ?
                AND AIM_SEQ = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC100
* @description : 세부추진계획수정
***********************************************************************
* 2006/10/12      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 목표수정일자, 피평가자사번, 평가자사번에 따른 목표수정 정보를 조회 -->
    <sql name="VLUC100_SHR">
        <description>목표수정 조회</description>
        <query>
            <![CDATA[
                SELECT EVL_YY, EVL_FRQ, TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD, ENO_NO, EVLENO_NO,
                        AIM_SEQ, TASK_AIM, BASIC_PAR, GAUGE_GB, AIM_LEVEL,
                        ADDING_PCT, DIFFICULT_PNT, ACCEPT_GBN
                FROM ASNHR.T_EV_AIMLST
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND AIM_YMD = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND AIM_YMD <> '1900-01-01'  AND ENO_NO=? AND EVLENO_NO=? )
                    AND ENO_NO = ?
                    AND EVLENO_NO =  ?
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 목표설정일자, 피평가자사번, 평가자사번, 목표순번에 따른 세부추진계획수정 정보를 조회 -->
    <sql name="VLUC100_SHR_01">
        <description>세부추진계획수정 조회</description>
        <query>
            <![CDATA[
                SELECT EVL_YY, EVL_FRQ, TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD, ENO_NO, EVLENO_NO,
                        AIM_SEQ, ITEM_SEQ, ITEM_DEC, 'F' ASNHR.T_CHECK, CRITR_S, CRITR_A,
                        CRITR_B, CRITR_C, CRITR_D, HLP_REQ, APR_UP,
                        APR_DN, MAY_UP, MAY_DN, JUN_UP, JUN_DN,
                        JUL_UP, JUL_DN, AUG_UP, AUG_DN, SEP_UP,
                        SEP_DN, OCT_UP, OCT_DN, NOV_UP, NOV_DN,
                        DEC_UP, DEC_DN
                FROM ASNHR.T_EV_AIMSUB
                WHERE GUBUN = ?
                    AND EVL_YY = ?
                    AND EVL_FRQ = ?
                    AND AIM_YMD = ?
                    AND ENO_NO = ?
                    AND EVLENO_NO = ?
                    AND AIM_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 신규자료를 위한 목표승인여부  조회( VLUC111(수정목표승인처리) 과 공통)  -->
    <sql name="VLUC100_SHR_02">
        <description>목표승인여부 조회</description>
        <query>
            <![CDATA[
            SELECT ACCEPT_GBN, TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD, RETURN_DEC
            FROM   ASNHR.T_EV_AIMLST A
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_FRQ   = ?
            AND    AIM_YMD   = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND AIM_YMD <> '1900-01-01' AND ENO_NO=? AND EVLENO_NO=? )
            AND    ENO_NO    = ?
            AND    EVLENO_NO = ?
            AND    ACCEPT_GBN = (SELECT MAX(ACCEPT_GBN) AS ACCEPT_GBN
                                 FROM   ASNHR.T_EV_AIMLST
                                 WHERE  GUBUN     = A.GUBUN
                                 AND    EVL_YY    = A.EVL_YY
                                 AND    EVL_FRQ   = A.EVL_FRQ
                                 AND    AIM_YMD   = A.AIM_YMD
                                 AND    ENO_NO    = A.ENO_NO
                                 AND    EVLENO_NO = A.EVLENO_NO)
            ]]>
        </query>
    </sql>

    <!-- 새로운 세부추진계획수정 등록 -->
    <sql name="VLUC100_INS">
        <description>세부추진계획수정 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_AIMSUB
                ( GUBUN, EVL_YY, EVL_FRQ, AIM_YMD, ENO_NO,
                    EVLENO_NO, AIM_SEQ, ITEM_SEQ, ITEM_DEC, CRITR_S,
                    CRITR_A, CRITR_B, CRITR_C, CRITR_D, HLP_REQ,
                    APR_UP, APR_DN, MAY_UP, MAY_DN, JUN_UP,
                    JUN_DN, JUL_UP, JUL_DN, AUG_UP, AUG_DN,
                    SEP_UP, SEP_DN, OCT_UP, OCT_DN, NOV_UP,
                    NOV_DN, DEC_UP, DEC_DN, IPT_MAN, IPT_YMD,
                    UPT_MAN, UPT_YMD )
            VALUES
                (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,sysdate)
            ]]>
        </query>
    </sql>

    <!-- 세부추진계획수정 정보 내용 수정 -->
    <sql name="VLUC100_UPT">
        <description>세부추진계획수정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_AIMSUB
                  SET ITEM_DEC = ?,                    --주요추진항목
                         CRITR_S = ?,                        --01월 상반기
                         CRITR_A = ?,                        --01월 하반기
                         CRITR_B = ?,                        --02월 하반기
                         CRITR_C = ?,                        --02월 하반기
                         CRITR_D = ?,                    --03월 하반기
                         HLP_REQ = ?,                    --03월 하반기
                         APR_UP = ?,                    --04월 하반기
                         APR_DN = ?,                    --04월 하반기
                         MAY_UP = ?,                    --05월 하반기
                         MAY_DN = ?,                    --05월 하반기
                         JUN_UP = ?,                        --06월 하반기
                         JUN_DN = ?,                        --06월 하반기
                         JUL_UP = ?,                        --07월 하반기
                         JUL_DN = ?,                        --07월 하반기
                         AUG_UP = ?,                    --08월 하반기
                         AUG_DN = ?,                    --08월 하반기
                         SEP_UP = ?,                    --09월 하반기
                         SEP_DN = ?,                    --09월 하반기
                         OCT_UP = ?,                    --10월 하반기
                         OCT_DN = ?,                    --10월 하반기
                         NOV_UP = ?,                    --11월 하반기
                         NOV_DN = ?,                    --11월 하반기
                         DEC_UP = ?,                    --12월 하반기
                         DEC_DN = ?,                    --12월 하반기
                         UPT_MAN = ?,                    --최종수정자
                         UPT_YMD = SYSDATE        --최종수정일시
                  WHERE GUBUN = ?
                          AND EVL_YY = ?
                        AND EVL_FRQ = ?
                        AND AIM_YMD = ?
                        AND ENO_NO = ?
                        AND EVLENO_NO = ?
                        AND AIM_SEQ = ?
                        AND ITEM_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 세부추진계획수정 정보 내용 삭제 -->
    <sql name="VLUC100_DEL">
        <description>세부추진계획수정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_AIMSUB
            WHERE  GUBUN = ?
                   AND EVL_YY = ?
                AND EVL_FRQ = ?
                AND AIM_YMD = ?
                AND ENO_NO = ?
                AND EVLENO_NO = ?
                AND AIM_SEQ = ?
                AND ITEM_SEQ = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC110
* @description : 수정목표승인
***********************************************************************
* 2006/10/23      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 평가자사번에 따른 수정목표승인 정보를 조회 -->
    <sql name="VLUC110_SHR">
        <description>수정목표승인 조회</description>
        <query>
            <![CDATA[
                SELECT MAX(TO_CHAR(AIM_YMD,'YYYY-MM-DD'))          AS AIM_YMD,
                       MAX(A.EVL_YY)                               AS EVL_YY,
                       MAX(A.EVL_FRQ)                              AS EVL_FRQ,
                       MAX(SF_GET_DPTNAME('01', 'A4', B.DPT_CD))   AS DPT_NM,
                       MAX(SF_GET_COMMNAME('01', 'A2', B.JOB_CD))  AS JOB_NM,
                       A.ENO_NO AS ENO_NO,
                       MAX(SF_GET_ENONAME('01',A.ENO_NO))          AS ENO_NM,
                       MAX(B.GROUP_CD)                             AS GROUP_CD,
                       MAX(CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', B.GROUP_CD)
                                WHEN A.GUBUN = '02' THEN
                                (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = B.GROUP_CD AND DUTY_LBL = B.COMM_CD)
                       END)                                        AS GROUP_NM,       -- 평가그룹명
                       MAX(SF_GET_DPTNAME('01', 'B2', B.HEAD_CD)) AS HEAD_NM,
                       MAX('입력')                                 AS AIM_INPUT_GBN,
                       MAX(A.ACCEPT_GBN)                           AS ACCEPT_GBN
                  FROM  ASNHR.T_EV_AIMLST A,
                        ASNHR.T_EV_EVLIST_HD B
                  WHERE A.GUBUN     = ?
                    AND A.EVL_YY    = ?
                    AND A.EVL_FRQ   = ?
                    AND A.AIM_YMD   = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND AIM_YMD <> '1900-01-01' AND ENO_NO=A.ENO_NO )
                    AND A.EVLENO_NO = ?
                    AND A.GUBUN     = B.GUBUN
                    AND A.EVL_YY    = B.EVL_YY
                    AND B.EVL_GBN   = '2'
                    AND A.EVL_FRQ   = B.EVL_FRQ
                    AND A.ENO_NO    = B.ENO_NO
                GROUP BY A.ENO_NO
                ORDER BY MAX(SF_GET_DPTSEQ('01', 'B2', B.HEAD_CD)), MAX(SF_GET_DPTSEQ('01', 'A4', B.DPT_CD)), MAX(SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)), MAX(SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)), MAX(B.HIRG_YMD)
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC111
* @description : 수정목표승인처리
***********************************************************************
* 2006/10/23      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 평가자사번에 따른 수정목표승인 정보를 조회 -->
    <sql name="VLUC111_SHR">
        <description>수정목표승인 조회</description>
        <query>
            <![CDATA[
                SELECT A.GUBUN,
                       A.EVL_YY                        AS EVL_YY,
                       A.EVL_FRQ                       AS EVL_FRQ,
                       TO_CHAR(A.AIM_YMD,'YYYY-MM-DD') AS AIM_YMD,
                       A.ENO_NO                        AS ENO_NO,
                       A.EVLENO_NO                     AS EVLENO_NO,
                       B.ITEM_SEQ                      AS ITEM_SEQ,
                       A.TASK_AIM                      AS TASK_AIM,
                       A.TASK_CSF AS TASK_CSF,
                       A.ACT_TIM AS ACT_TIM,
                       A.BASIC_PAR                     AS BASIC_PAR,
                       A.GAUGE_GB                      AS GAUGE_GB,
                       A.AIM_LEVEL                     AS AIM_LEVEL,
                       A.ADDING_PCT                    AS ADDING_PCT,
                       A.DIFFICULT_PNT                 AS DIFFICULT_PNT,
                       B.ITEM_DEC                      AS ITEM_DEC,
                       B.CRITR_S                        AS CRITR_S,
                       B.CRITR_A                        AS CRITR_A,
                       B.CRITR_B                        AS CRITR_B,
                       B.CRITR_C                        AS CRITR_C,
                       B.CRITR_D                        AS CRITR_D,
                       A.HLP_REQ                        AS HLP_REQ
                FROM   ASNHR.T_EV_AIMLST A,
                       ASNHR.T_EV_AIMSUB B
                WHERE  A.GUBUN     = ?
                AND    A.EVL_YY    = ?
                AND    A.EVL_FRQ   = ?
                AND    A.AIM_YMD   = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND AIM_YMD <> '1900-01-01' AND ENO_NO=? AND EVLENO_NO=? )
                AND    A.ENO_NO    = ?
                AND    A.EVLENO_NO = ?
                AND    A.GUBUN     = B.GUBUN (+)
                AND    A.EVL_YY    = B.EVL_YY (+)
                AND    A.EVL_FRQ   = B.EVL_FRQ (+)
                AND    A.AIM_YMD   = B.AIM_YMD (+)
                AND    A.ENO_NO    = B.ENO_NO (+)
                AND    A.EVLENO_NO = B.EVLENO_NO (+)
                AND    A.AIM_SEQ   = B.AIM_SEQ (+)
            ]]>
        </query>
    </sql>

    <!-- 신규자료를 위한 목표승인여부  조회  -->
    <sql name="VLUC111_SHR_02">
        <description>목표승인여부 조회</description>
        <query>
            <![CDATA[
            SELECT ACCEPT_GBN, TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD, RETURN_DEC
            FROM   ASNHR.T_EV_AIMLST A
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_FRQ   = ?
            AND    AIM_YMD   = (SELECT MAX(AIM_YMD) FROM ASNHR.T_EV_AIMLST WHERE GUBUN=? AND EVL_YY=? AND EVL_FRQ=? AND AIM_YMD <> '1900-01-01' AND ENO_NO=? AND EVLENO_NO=? )
            AND    ENO_NO    = ?
            AND    EVLENO_NO = ?
            AND    ACCEPT_GBN = (SELECT MAX(ACCEPT_GBN) AS ACCEPT_GBN
                                 FROM   ASNHR.T_EV_AIMLST
                                 WHERE  GUBUN     = A.GUBUN
                                 AND    EVL_YY    = A.EVL_YY
                                 AND    EVL_FRQ   = A.EVL_FRQ
                                 AND    AIM_YMD   = A.AIM_YMD
                                 AND    ENO_NO    = A.ENO_NO
                                 AND    EVLENO_NO = A.EVLENO_NO)
            ]]>
        </query>
    </sql>

    <!-- 수정목표 정보 승인처리 -->
    <sql name="VLUC111_UPT">
        <description>수정목표 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_AIMLST
            SET    ACCEPT_GBN = ?,              --목표승인여부
                   ACCEPT_YMD = SYSDATE,        --목표승인일자
                   RETURN_DEC = ?,              --반려사유
                   UPT_MAN    = ?,              --최종수정자
                   UPT_YMD    = SYSDATE         --최종수정일시
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_FRQ    = ?
            AND    AIM_YMD    = ?
            AND    ENO_NO     = ?
            AND    EVLENO_NO  = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC120
* @description : 목표현황
***********************************************************************
* 2006/10/19      안준성        최초작성.
***********************************************************************
-->

    <!-- 목표현황 정보를 조회한다. -->
    <sql name="VLUC120_SHR">
        <description>목표현황 데이터 조회 </description>
        <query>
            <![CDATA[
            SELECT MAX(A.EVL_YY)    AS EVL_YY,
                   MAX(A.EVL_FRQ)   AS EVL_FRQ,
                   MAX(A.EVLENO_NO) AS EVLENO_NO,
                   MAX(SF_GET_DPTNAME('01', 'A4',B.DPT_CD))          AS DPT_NM,         -- 부서명
                   MAX(SF_GET_COMMNAME('01', 'A2', B.JOB_CD))        AS JOB_NM,         -- 직위명
                   A.ENO_NO                                          AS ENO_NO,
                   MAX(SF_GET_ENONAME('01',A.ENO_NO))                AS ENO_NM,
                   MAX(CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', B.GROUP_CD)
                            WHEN A.GUBUN = '02' THEN
                                (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = B.GROUP_CD AND DUTY_LBL = B.COMM_CD)
                       END)                                          AS GROUP_NM,       -- 평가그룹명
                   MAX(SF_GET_DPTNAME('01', 'B2', B.HEAD_CD))       AS HEAD_NM,        -- 본부명
                   MAX(SF_GET_ENONAME('01',A.EVLENO_NO)) AS EVLENO_NM
            FROM   ASNHR.T_EV_AIMLST A, ASNHR.T_EV_EVLIST_HD B
            WHERE  A.GUBUN = ?
            AND    A.EVL_YY  LIKE '%'||?||'%'
            AND    A.EVL_FRQ LIKE '%'||?||'%'
            AND    A.ENO_NO  LIKE '%'||?||'%'
            AND    NVL(B.COMM_CD,' ')  LIKE '%'||?||'%'
            AND    NVL(B.GROUP_CD,' ') LIKE '%'||?||'%'
            AND    B.DPT_CD LIKE '%'||?||'%'
            AND    A.GUBUN  = B.GUBUN(+)
            AND    A.EVL_YY = B.EVL_YY(+)
            AND    B.EVL_GBN(+) = '2'
            AND    A.EVL_FRQ = B.EVL_FRQ(+)
            AND    A.ENO_NO = B.ENO_NO(+)
            GROUP BY A.ENO_NO, A.EVLENO_NO
            ORDER BY MAX(SF_GET_DPTSEQ('01', 'B2', B.HEAD_CD)), MAX(SF_GET_DPTSEQ('01', 'A4', B.DPT_CD)), MAX(SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)), MAX(SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)) DESC, MAX(B.HIRG_YMD)
            ]]>
        </query>
    </sql>

    <!-- 작성일자,승인일자 정보를 조회한다. -->
    <sql name="VLUC120_SHR_01">
        <description>작성일자,승인일자 데이터 조회 </description>
        <query>
            <![CDATA[
                SELECT DECODE(TO_CHAR(AIM_YMD,'YYYY-MM-DD'),'1900-01-01',MAX(TO_CHAR(IPT_YMD,'YYYY-MM-DD')),TO_CHAR(AIM_YMD,'YYYY-MM-DD')) AS AIM_YMD_VIEW,
                       TO_CHAR(AIM_YMD,'YYYY-MM-DD') AS AIM_YMD,
                       TO_CHAR(ACCEPT_YMD,'YYYY-MM-DD') AS ACCEPT_YMD
                FROM   ASNHR.T_EV_AIMLST
                WHERE  GUBUN     = ?
                AND    EVL_YY    = ?
                AND    EVL_FRQ   = ?
                AND    ENO_NO    = ?
                AND    EVLENO_NO = ?
                GROUP BY AIM_YMD, ACCEPT_YMD
                ORDER BY AIM_YMD_VIEW, ACCEPT_YMD
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUC121
* @description : 목표현황상세
***********************************************************************
* 2006/10/23      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 평가자사번에 따른 수정목표승인 정보를 조회 -->
    <sql name="VLUC121_SHR">
        <description>수정목표승인 조회</description>
        <query>
            <![CDATA[
                SELECT A.EVL_YY AS EVL_YY,
                        A.EVL_FRQ AS EVL_FRQ,
                        TO_CHAR(A.AIM_YMD,'YYYY-MM-DD') AS AIM_YMD,
                        A.ENO_NO AS ENO_NO,
                        A.EVLENO_NO AS EVLENO_NO,
                        B.ITEM_SEQ AS ITEM_SEQ,
                        A.TASK_AIM AS TASK_AIM,
                        A.TASK_CSF AS TASK_CSF,
                        A.ACT_TIM AS ACT_TIM,
                        A.BASIC_PAR AS BASIC_PAR,
                        A.GAUGE_GB AS GAUGE_GB,
                        A.AIM_LEVEL AS AIM_LEVEL,
                        A.ADDING_PCT AS ADDING_PCT,
                        A.DIFFICULT_PNT AS DIFFICULT_PNT,
                        B.ITEM_DEC AS ITEM_DEC,
                        B.CRITR_S AS CRITR_S,
                        B.CRITR_A AS CRITR_A,
                        B.CRITR_B AS CRITR_B,
                        B.CRITR_C AS CRITR_C,
                        B.CRITR_D AS CRITR_D,
                        A.HLP_REQ AS HLP_REQ,
                        A.ACCEPT_GBN AS ACCEPT_GBN
                FROM ASNHR.T_EV_AIMLST A, ASNHR.T_EV_AIMSUB B
                WHERE A.GUBUN = ?
                      AND A.EVL_YY = ?
                      AND A.EVL_FRQ = ?
                      AND A.AIM_YMD = ?
                      AND A.ENO_NO = ?
                      AND A.EVLENO_NO = ?
                      AND DECODE(?,'',' ',A.ACCEPT_YMD) LIKE '%'||DECODE(?,'',' ',TO_DATE(?))||'%'
                      AND A.GUBUN = B.GUBUN (+)
                      AND A.EVL_YY = B.EVL_YY (+)
                      AND A.EVL_FRQ = B.EVL_FRQ (+)
                      AND A.AIM_YMD = B.AIM_YMD (+)
                      AND A.ENO_NO = B.ENO_NO (+)
                      AND A.EVLENO_NO = B.EVLENO_NO (+)
                      AND A.AIM_SEQ = B.AIM_SEQ (+)
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC130
* @description : 본인평가
***********************************************************************
* 2006/10/11      박인이        최초작성.
***********************************************************************
-->

    <!-- 해당년도, 회차, 피평가자에 대한 데이터가 존재하는지 조회한다. -->
    <sql name="VLUC130_SHR_00">
        <description>평가대상설정 조회 (VLUC030, VLUC090 과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT GUBUN,
                   EVL_YY,                                        -- 해당년도
                   EVL_GBN,                                       -- 성과구분
                   EVL_FRQ,                                       -- 회차
                   ENO_NO                                         -- 피평가자사번
            FROM   ASNHR.T_EV_EVLIST_HD
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = ?
            AND    EVL_FRQ = ?
            AND    ENO_NO  = ?
            AND    EXCEPT_YN = 'F'
            ]]>
        </query>
    </sql>

    <!-- 해당년도, 회차, 피평가자에 대한 평가자를 한건씩 조회한다. -->
    <sql name="VLUC130_SHR_01">
        <description>피평가자에 대한 평가자 조회 (VLUC030, VLUC090 과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT GUBUN,
                   EVL_YY,                                        -- 해당년도
                   EVL_FRQ,                                       -- 회차
                   ENO_NO,                                        -- 피평가자사번
                   EVLENO_NO,                                     -- 평가자사번
                   ASNHR.SF_GET_ENONAME('01', EVLENO_NO)  AS EVLENO_NM  -- 평가자성명
            FROM   ASNHR.T_EV_EVLIST_DT
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = '2'
            AND    EVL_FRQ = ?
            AND    ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 해당년도에 해당하는 달성도 배점 설정 정보를 조회한다. -->
    <sql name="VLUC130_SHR_02">
        <description>달성도 배점 설정 데이터 조회 (VLUC141, VLUC151 과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT GUBUN,
                   EVL_YY,                                          -- 해당년도
                   RATE_OVER,                                       -- 달성율구간(이상)
                   RATE_UNDER,                                      -- 달성율구간(미만)
                   ACH_PNT                                          -- 달성도배점
            FROM   ASNHR.T_EV_ACHPNT
            WHERE  GUBUN  = ?
            AND    EVL_YY = ?
            ORDER BY EVL_YY, RATE_OVER
            ]]>
        </query>
    </sql>


    <!-- 해당년도, 회차, 참조/평가자에 대한 평가자의 성과 평가표 정보를 조회한다. -->
    <sql name="VLUC130_SHR_03">
        <description>성과 평가표 정보 데이터 조회 (VLUC141, VLUC151 과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT D.GUBUN,
                   D.EVL_YY,                                        -- 해당년도
                   D.EVL_FRQ,                                       -- 회차
                   D.AIM_YMD,                                       -- (최종)목표설정일자
                   D.ENO_NO,                                        -- 피평가자사번
                   D.EVLENO_NO,                                     -- 평가자사번
                   D.AIM_SEQ,                                       -- 목표순번
                   D.TASK_AIM,                                      -- 주요업무목표
                   D.TASK_CSF,                                      -- 주요업무목표
                   D.BASIC_PAR,                                     -- 성과평가기준
                   D.AIM_LEVEL,                                     -- 목표수준
                   D.ADDING_PCT,                                    -- 가중치
                   D.DIFFICULT_PNT,                                 -- 난이도
                   D.REFENO_NO1,                                    -- 참조평가자사번1
                   D.REFENO_NO2,                                    -- 참조평가자사번2
                   D.REFENO_NO3,                                    -- 참조평가자사번3
                   E.SELF_ACHDEC,                                   -- 본인평가_달성도
                   TO_CHAR(E.SELF_ACHRAT)   AS SELF_ACHRAT,         -- 본인평가_달성율
                   E.SELF_ACHPNT,                                   -- 본인평가_달성도점수
                   E.SELF_ACHCVT,                                   -- 본인평가_달성도환산점수
                   E.SELF_DIFPNT,                                   -- 본인평가_난이도점수
                   E.SELF_DIFCVT,                                   -- 본인평가_난이도환산점수
                   E.EVL_ACHDEC,                                    -- 평가자평가_달성도
                   TO_CHAR(E.EVL_ACHRAT)    AS EVL_ACHRAT,          -- 평가자평가_달성율
                   E.EVL_ACHPNT,                                    -- 평가자평가_달성도점수
                   E.EVL_ACHCVT,                                    -- 평가자평가_달성도환산점수
                   E.EVL_DIFPNT,                                    -- 평가자평가_난이도점수
                   E.EVL_DIFCVT,                                    -- 평가자평가_난이도환산점수
                   E.REF1_ACHDEC,                                   -- 참조평가01_달성도
                   TO_CHAR(E.REF1_ACHRAT)   AS REF1_ACHRAT,         -- 참조평가01_달성율
                   E.REF1_ACHPNT,                                   -- 참조평가01_달성도점수
                   E.REF1_ACHCVT,                                   -- 참조평가01_달성도환산점수
                   E.REF1_DIFPNT,                                   -- 참조평가01_난이도점수
                   E.REF1_DIFCVT,                                   -- 참조평가01_난이도환산점수
                   E.REF2_ACHDEC,                                   -- 참조평가02_달성도
                   TO_CHAR(E.REF2_ACHRAT)   AS REF2_ACHRAT,         -- 참조평가02_달성율
                   E.REF2_ACHPNT,                                   -- 참조평가02_달성도점수
                   E.REF2_ACHCVT,                                   -- 참조평가02_달성도환산점수
                   E.REF2_DIFPNT,                                   -- 참조평가02_난이도점수
                   E.REF2_DIFCVT,                                   -- 참조평가02_난이도환산점수
                   E.REF3_ACHDEC,                                   -- 참조평가03_달성도
                   TO_CHAR(E.REF3_ACHRAT)   AS REF3_ACHRAT,         -- 참조평가03_달성율
                   E.REF3_ACHPNT,                                   -- 참조평가03_달성도점수
                   E.REF3_ACHCVT,                                   -- 참조평가03_달성도환산점수
                   E.REF3_DIFPNT,                                   -- 참조평가03_난이도점수
                   E.REF3_DIFCVT,                                   -- 참조평가03_난이도환산점수
                   E.IPT_MAN,                                       -- 최초등록자
                   ASNHR.SF_GET_AIMSUBLIST(D.GUBUN,D.EVL_YY,D.EVL_FRQ,D.AIM_YMD,D.ENO_NO,D.EVLENO_NO,D.AIM_SEQ) DEC
            FROM ( SELECT B.GUBUN,     B.EVL_YY,    B.EVL_FRQ,    B.AIM_YMD,       B.ENO_NO,     B.EVLENO_NO,  B.AIM_SEQ, B.TASK_AIM,B.TASK_CSF,
                          B.BASIC_PAR, B.AIM_LEVEL, B.ADDING_PCT, B.DIFFICULT_PNT, C.REFENO_NO1, C.REFENO_NO2, C.REFENO_NO3
                   FROM ( SELECT A.GUBUN, A.EVL_YY, A.EVL_FRQ,  A.AIM_YMD, A.ENO_NO, A.EVLENO_NO, A.AIM_SEQ,
                                 A.TASK_AIM,A.TASK_CSF, A.BASIC_PAR, A.AIM_LEVEL, A.ADDING_PCT, A.DIFFICULT_PNT
                          FROM   ASNHR.T_EV_AIMLST A
                          WHERE  A.GUBUN      = ?
                          AND    A.EVL_YY     = ?
                          AND    A.EVL_FRQ    = ?
                          AND    A.ENO_NO     = ?
                          -- AND    A.EVLENO_NO  = '' -- 중간에 평가자 바뀌는 문제때문에 제외(평가자는 1명이다), 임규종 대리(20071123)
                          AND    A.AIM_YMD    = (SELECT MAX(AIM_YMD)
                                                 FROM   ASNHR.T_EV_AIMLST
                                                 WHERE  GUBUN     = ?
                                                 AND    EVL_YY    = ?
                                                 AND    EVL_FRQ   = ?
                                                 AND    ENO_NO    = ?
                                                 -- AND    EVLENO_NO = '' -- 중간에 평가자 바뀌는 문제때문에 제외(평가자는 1명이다), 임규종 대리(20071123)
                                                 AND    ACCEPT_GBN = '1')
                        ) B,
                        ( SELECT GUBUN, EVL_YY, EVL_FRQ, ENO_NO, EVLENO_NO, REFENO_NO1, REFENO_NO2, REFENO_NO3
                          FROM ( SELECT GUBUN, EVL_YY, EVL_FRQ, ENO_NO, EVLENO_NO, REFENO_NO1, REFENO_NO2, REFENO_NO3
                                 FROM   ASNHR.T_EV_EVLIST_DT
                                 WHERE  GUBUN      = ?
                                 AND    EVL_YY     = ?
                                 AND    EVL_GBN    = '2'
                                 AND    EVL_FRQ    = ?
                                 AND    ENO_NO     = ?
                                 AND    EVLENO_NO  = ?
                                )
                          WHERE ('1'          = ?                          -- 참조자평가에서 조건 값이 '1'이면 참조평가자 조회
                          AND    (REFENO_NO1  = ?
                          OR      REFENO_NO2  = ?
                          OR      REFENO_NO3  = ? ))
                          OR     '2'          = ?                          -- 본인/평가자평가에서 조건 값이 '2'이면 본인/평가자 조회
                        ) C
                   WHERE  B.GUBUN       = C.GUBUN
                   AND    B.EVL_YY      = C.EVL_YY
                   AND    B.EVL_FRQ     = C.EVL_FRQ
                   AND    B.ENO_NO      = C.ENO_NO
                   -- AND    B.EVLENO_NO   = C.EVLENO_NO -- 중간에 평가자 바뀌는 문제때문에 제외(평가자는 1명이다), 임규종 대리(20071123)
                 ) D,
                   ASNHR.T_EV_ACHTBL E
            WHERE  D.GUBUN      = E.GUBUN      (+)
            AND    D.EVL_YY     = E.EVL_YY     (+)
            AND    D.EVL_FRQ    = E.EVL_FRQ    (+)
            AND    D.AIM_YMD    = E.AIM_YMD    (+)
            AND    D.ENO_NO     = E.ENO_NO     (+)
            -- AND    D.EVLENO_NO  = E.EVLENO_NO  (+) -- 중간에 평가자 바뀌는 문제때문에 제외(평가자는 1명이다), 임규종 대리(20071123)
            AND    D.AIM_SEQ    = E.AIM_SEQ    (+)
            ORDER BY D.ENO_NO, D.AIM_SEQ
            ]]>
        </query>
    </sql>


    <!-- 업무구분, 해당년도, 평가회차, 목표설정일자, 피평가자사번, 평가자사번에 따른 목표세부계획 정보를 조회 -->
    <sql name="VLUC130_SHR_04">
        <description>목표세부계획 정보를 조회 (VLUC141, VLUC151 과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT GUBUN,
                   EVL_YY,             EVL_FRQ,        AIM_YMD,      ENO_NO,            EVLENO_NO,        ITEM_SEQ,           ITEM_DEC,
                   CRITR_S,   CRITR_A,    CRITR_B,  CRITR_C,    CRITR_D
            FROM   ASNHR.T_EV_AIMSUB
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    EVL_FRQ   = ?
            AND    AIM_YMD   = TO_DATE(SUBSTR(?, 1, 19), 'YYYY-MM-DD HH24:MI:SS')
            AND    ENO_NO    = ?
            --AND    EVLENO_NO = '' -- 중간에 평가자 바뀌는 문제때문에 제외(평가자는 1명이다)    ==> 목표세부계획 정보를 조회
            AND    AIM_SEQ   = ?
            ORDER BY ITEM_SEQ
            ]]>
        </query>
    </sql>

    <!-- 입력된 성과 평가표 정보를 등록한다. -->
    <sql name="VLUC130_INS">
        <description>성과 평가표 정보 데이터 입력 (VLUC141, VLUC151 과 공통으로 사용) </description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_ACHTBL
                 ( GUBUN,       EVL_YY,      EVL_FRQ,     AIM_YMD,     ENO_NO,      EVLENO_NO,   AIM_SEQ,
                   SELF_ACHDEC, SELF_ACHRAT, SELF_ACHPNT, SELF_ACHCVT, SELF_DIFPNT, SELF_DIFCVT,
                   EVL_ACHDEC,  EVL_ACHRAT,  EVL_ACHPNT,  EVL_ACHCVT,  EVL_DIFPNT,  EVL_DIFCVT,
                   REFENO_NO1,  REF1_ACHDEC, REF1_ACHRAT, REF1_ACHPNT, REF1_ACHCVT, REF1_DIFPNT, REF1_DIFCVT,
                   REFENO_NO2,  REF2_ACHDEC, REF2_ACHRAT, REF2_ACHPNT, REF2_ACHCVT, REF2_DIFPNT, REF2_DIFCVT,
                   REFENO_NO3,  REF3_ACHDEC, REF3_ACHRAT, REF3_ACHPNT, REF3_ACHCVT, REF3_DIFPNT, REF3_DIFCVT,
                   IPT_MAN,     IPT_YMD,     UPT_MAN,     UPT_YMD      )
            VALUES
                 ( ?,           ?,           ?,           TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS'),    ?,           ?,           ?,
                   ?,           ?,           ?,           ?,           ?,           ?,
                   ?,           ?,           ?,           ?,           ?,           ?,
                   ?,           ?,           ?,           ?,           ?,           ?,           ?,
                   ?,           ?,           ?,           ?,           ?,           ?,           ?,
                   ?,           ?,           ?,           ?,           ?,           ?,           ?,
                   ?,           sysdate,     ?,           sysdate      )
            ]]>
        </query>
    </sql>

    <!-- 이미 존재하는 성과 평가표 정보를 수정 한다. -->
    <sql name="VLUC130_UPT">
        <description>성과 평가표 정보 데이터 수정 (VLUC141, VLUC151 과 공통으로 사용) </description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_ACHTBL
            SET    SELF_ACHDEC  = ?,                                    -- 본인평가_달성도
                   SELF_ACHRAT  = ?,                                    -- 본인평가_달성율
                   SELF_ACHPNT  = ?,                                    -- 본인평가_달성도점수
                   SELF_ACHCVT  = ?,                                    -- 본인평가_달성도환산점수
                   SELF_DIFPNT  = ?,                                    -- 본인평가_난이도점수
                   SELF_DIFCVT  = ?,                                    -- 본인평가_난이도환산점수
                   EVL_ACHDEC   = ?,                                    -- 평가자평가_달성도
                   EVL_ACHRAT   = ?,                                    -- 평가자평가_달성율
                   EVL_ACHPNT   = ?,                                    -- 평가자평가_달성도점수
                   EVL_ACHCVT   = ?,                                    -- 평가자평가_달성도환산점수
                   EVL_DIFPNT   = ?,                                    -- 평가자평가_난이도점수
                   EVL_DIFCVT   = ?,                                    -- 평가자평가_난이도환산점수
                   REFENO_NO1   = ?,                                    -- 참조평가01_ID
                   REF1_ACHDEC  = ?,                                    -- 참조평가01_달성도
                   REF1_ACHRAT  = ?,                                    -- 참조평가01_달성율
                   REF1_ACHPNT  = ?,                                    -- 참조평가01_달성도점수
                   REF1_ACHCVT  = ?,                                    -- 참조평가01_달성도환산점수
                   REF1_DIFPNT  = ?,                                    -- 참조평가01_난이도점수
                   REF1_DIFCVT  = ?,                                    -- 참조평가01_난이도환산점수
                   REFENO_NO2   = ?,                                    -- 참조평가02_ID
                   REF2_ACHDEC  = ?,                                    -- 참조평가02_달성도
                   REF2_ACHRAT  = ?,                                    -- 참조평가02_달성율
                   REF2_ACHPNT  = ?,                                    -- 참조평가02_달성도점수
                   REF2_ACHCVT  = ?,                                    -- 참조평가02_달성도환산점수
                   REF2_DIFPNT  = ?,                                    -- 참조평가02_난이도점수
                   REF2_DIFCVT  = ?,                                    -- 참조평가02_난이도환산점수
                   REFENO_NO3   = ?,                                    -- 참조평가03_ID
                   REF3_ACHDEC  = ?,                                    -- 참조평가03_달성도
                   REF3_ACHRAT  = ?,                                    -- 참조평가03_달성율
                   REF3_ACHPNT  = ?,                                    -- 참조평가03_달성도점수
                   REF3_ACHCVT  = ?,                                    -- 참조평가03_달성도환산점수
                   REF3_DIFPNT  = ?,                                    -- 참조평가03_난이도점수
                   REF3_DIFCVT  = ?,                                    -- 참조평가03_난이도환산점수
                   UPT_MAN      = ?,                                    -- 최종수정자
                   UPT_YMD      = sysdate                               -- 최종수정일자
            WHERE  GUBUN        = ?                                     -- 구분
            AND    EVL_YY       = ?                                     -- 해당년도
            AND    EVL_FRQ      = ?                                     -- 회차
            AND    AIM_YMD      = TO_DATE(SUBSTR(?, 1, 19), 'YYYY-MM-DD HH24:MI:SS')   -- (최종)목표설정일자
            AND    ENO_NO       = ?                                     -- 피평가자사번
            AND    EVLENO_NO    = ?                                     -- 평가자사번
            AND    AIM_SEQ      = ?                                     -- 목표순번
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUC140
* @description : 참조평가자평가
***********************************************************************
* 2006/10/11      박인이        최초작성.
***********************************************************************
-->
    <!-- 해당년도, 회차, 평가자에 해당하는 피평가자 성과 평가표 정보를 조회한다. -->
    <sql name="VLUC140_SHR_01">
        <description>성과 평가표 정보 데이터 조회 (VLUC150 과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT C.EVL_YY,                                                       -- 해당년도
                   C.EVL_FRQ,                                                      -- 회차
                   C.ENO_NO,                                                       -- 사번
                   C.ENO_NM,                                                       -- 성명
                   C.HEAD_NM,                                                      -- 본부
                   C.DPT_NM,                                                       -- 부서
                   C.JOB_NM,                                                       -- 직위
                   C.GROUP_NM,                                                     -- 평가그룹
                   TO_CHAR(C.HIRG_YMD, 'YYYY-MM-DD')   AS HIRG_YMD,                -- 입사일
                   TO_CHAR(C.DPA_YMD, 'YYYY-MM-DD')    AS DPA_YMD,                 -- 현소속발령일
                   C.EVLENO_NM,                                                    -- 평가자성명
                   C.EVLENO_NO,                                                    -- 평가자사번
                   C.REFENO_NO1,                                                   -- 참조평가자사번1
                   C.REFENO_NO2,                                                   -- 참조평가자사번2
                   C.REFENO_NO3,                                                   -- 참조평가자사번3
                   DECODE(C.SELF_ACHCVT + C.SELF_DIFCVT, 0, '미평가', TO_CHAR(C.SELF_ACHCVT + C.SELF_DIFCVT, 999.99)) AS SELF_PNT,  -- 본인점수
                   DECODE(C.EVL_ACHCVT  + C.EVL_DIFCVT,  0, '미평가', TO_CHAR(C.EVL_ACHCVT  + C.EVL_DIFCVT, 999.99)) AS EVL_PNT,    -- 평가점수
                   CASE WHEN C.REFENO_NO1 = ? THEN DECODE(C.REF1_ACHCVT + C.REF1_DIFCVT, 0, '미평가', TO_CHAR(C.REF1_ACHCVT + C.REF1_DIFCVT, 999.99))  -- 참조평가점수1
                        WHEN C.REFENO_NO2 = ? THEN DECODE(C.REF2_ACHCVT + C.REF2_DIFCVT, 0, '미평가', TO_CHAR(C.REF2_ACHCVT + C.REF2_DIFCVT, 999.99))  -- 참조평가점수2
                        WHEN C.REFENO_NO3 = ? THEN DECODE(C.REF3_ACHCVT + C.REF3_DIFCVT, 0, '미평가', TO_CHAR(C.REF3_ACHCVT + C.REF3_DIFCVT, 999.99))  -- 참조평가점수3
                   END AS REF_PNT
            FROM ( SELECT A.GUBUN,     A.EVL_YY,     A.EVL_GBN,    A.EVL_FRQ,    A.ENO_NO,     A.ENO_NM,
                          A.HEAD_NM,   A.DPT_NM,     A.JOB_NM,     A.GROUP_NM,   A.HEAD_SEQ,   A.DPT_SEQ,
                          A.JOB_SEQ,   A.HOB_SEQ,    A.HIRG_YMD,   A.DPA_YMD,    A.DPT_CD,     A.JOB_CD,
                          A.COMM_CD,   A.GROUP_CD,   A.EVLENO_NM,  A.EVLENO_NO,  A.REFENO_NO1, A.REFENO_NO2, A.REFENO_NO3,
                          NVL(B.SELF_ACHCVT, 0)            AS SELF_ACHCVT,
                          NVL(B.SELF_DIFCVT, 0)            AS SELF_DIFCVT,
                          NVL(B.EVL_ACHCVT , 0)            AS EVL_ACHCVT ,
                          NVL(B.EVL_DIFCVT , 0)            AS EVL_DIFCVT ,
                          NVL(B.REF1_ACHCVT, 0)            AS REF1_ACHCVT,
                          NVL(B.REF1_DIFCVT, 0)            AS REF1_DIFCVT,
                          NVL(B.REF2_ACHCVT, 0)            AS REF2_ACHCVT,
                          NVL(B.REF2_DIFCVT, 0)            AS REF2_DIFCVT,
                          NVL(B.REF3_ACHCVT, 0)            AS REF3_ACHCVT,
                          NVL(B.REF3_DIFCVT, 0)            AS REF3_DIFCVT
                   FROM ( SELECT HD.GUBUN,     HD.EVL_YY,     HD.EVL_GBN,    HD.EVL_FRQ,  HD.ENO_NO,
                                 HD.DPT_CD,    HD.JOB_CD,     HD.COMM_CD,    HD.GROUP_CD,
                                 ASNHR.SF_GET_ENONAME('01', HD.ENO_NO)                AS ENO_NM,      -- 성명
                                 ASNHR.SF_GET_DPTNAME('01', 'B2', HD.HEAD_CD)        AS HEAD_NM,     -- 본부
                                 ASNHR.SF_GET_DPTNAME('01', 'A4',HD.DPT_CD)           AS DPT_NM,      -- 부서
                                 ASNHR.SF_GET_COMMNAME('01', 'A2', HD.JOB_CD)         AS JOB_NM,      -- 직위
                                 CASE WHEN HD.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', HD.GROUP_CD)
                                      WHEN HD.GUBUN = '02' THEN
                                          (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = HD.GROUP_CD AND DUTY_LBL = HD.COMM_CD)
                                 END                                            AS GROUP_NM,    -- 평가그룹명
                                 ASNHR.SF_GET_DPTSEQ('01', 'B2', HD.HEAD_CD)         AS HEAD_SEQ,    -- 본부SEQ
                                 ASNHR.SF_GET_DPTSEQ('01', 'A4',HD.DPT_CD)            AS DPT_SEQ,     -- 부서SEQ
                                 ASNHR.SF_GET_COMMSEQ('01', 'A2', HD.JOB_CD)          AS JOB_SEQ,     -- 직위SEQ
                                 ASNHR.SF_GET_COMMSEQ('01', 'A3', HD.HOB_CD)          AS HOB_SEQ,     -- 호봉SEQ
                                 HD.HIRG_YMD, HD.DPA_YMD,
                                 DT.EVLENO_NO, DT.REFENO_NO1, DT.REFENO_NO2, DT.REFENO_NO3,
                                 ASNHR.SF_GET_ENONAME('01', DT.EVLENO_NO)             AS EVLENO_NM    -- 평가자성명
                          FROM   ASNHR.T_EV_EVLIST_HD HD,
                                 ASNHR.T_EV_EVLIST_DT DT
                          WHERE  HD.GUBUN        = ?
                          AND    HD.EVL_YY       = ?
                          AND    HD.EVL_GBN      = '2'
                          AND    HD.EVL_FRQ      = ?
                          AND    HD.GUBUN        = DT.GUBUN
                          AND    HD.EVL_YY       = DT.EVL_YY
                          AND    HD.EVL_GBN      = DT.EVL_GBN
                          AND    HD.EVL_FRQ      = DT.EVL_FRQ
                          AND    HD.ENO_NO       = DT.ENO_NO
                          AND    HD.EXCEPT_YN    = 'F'
                          AND (( '1'             = ?                                 -- 조건이 '1'인 경우는 평가자 조회
                          AND    DT.EVLENO_NO    = ?
                               )
                          OR   ( '2'             = ?                                 -- 조건이 '2'인 경우는 참조평가자 조회
                          AND    ( DT.REFENO_NO1 = ?
                          OR       DT.REFENO_NO2 = ?
                          OR       DT.REFENO_NO3 = ?
                                 )
                               ))
                        ) A,
                        ( SELECT GUBUN,
                                 EVL_YY,
                                 EVL_FRQ,
                                 ENO_NO,
                                 EVLENO_NO,
                                 REFENO_NO1,
                                 REFENO_NO2,
                                 REFENO_NO3,
                                 SUM(NVL(SELF_ACHCVT, 0))   AS  SELF_ACHCVT,
                                 SUM(NVL(SELF_DIFCVT, 0))   AS  SELF_DIFCVT,
                                 SUM(NVL(EVL_ACHCVT , 0))   AS  EVL_ACHCVT ,
                                 SUM(NVL(EVL_DIFCVT , 0))   AS  EVL_DIFCVT ,
                                 SUM(NVL(REF1_ACHCVT, 0))   AS  REF1_ACHCVT,
                                 SUM(NVL(REF1_DIFCVT, 0))   AS  REF1_DIFCVT,
                                 SUM(NVL(REF2_ACHCVT, 0))   AS  REF2_ACHCVT,
                                 SUM(NVL(REF2_DIFCVT, 0))   AS  REF2_DIFCVT,
                                 SUM(NVL(REF3_ACHCVT, 0))   AS  REF3_ACHCVT,
                                 SUM(NVL(REF3_DIFCVT, 0))   AS  REF3_DIFCVT
                          FROM   ASNHR.T_EV_ACHTBL
                          WHERE  GUBUN        = ?
                          AND    EVL_YY       = ?
                          AND    EVL_FRQ      = ?
                          AND (( '1'          = ?                                    -- 조건이 '1'인 경우는 평가자 조회
                          --AND    EVLENO_NO    = '' -- 중간에 평가자 바뀌는 문제때문에 제외(평가자는 1명이다), 임규종 대리(20071123)
                               )
                          OR   ( '2'          = ?                                    -- 조건이 '2'인 경우는 참조평가자 조회
                          AND    ( REFENO_NO1 = ?
                          OR       REFENO_NO2 = ?
                          OR       REFENO_NO3 = ?
                                 )
                               ))
                          GROUP BY GUBUN, EVL_YY, EVL_FRQ, ENO_NO, EVLENO_NO, REFENO_NO1, REFENO_NO2, REFENO_NO3
                        ) B
                   WHERE  A.GUBUN        = B.GUBUN      (+)
                   AND    A.EVL_YY       = B.EVL_YY     (+)
                   AND    A.EVL_FRQ      = B.EVL_FRQ    (+)
                   AND    A.ENO_NO       = B.ENO_NO     (+)
                 ) C
            ORDER BY C.HEAD_SEQ, C.DPT_SEQ, C.JOB_SEQ, C.HOB_SEQ DESC, C.HIRG_YMD, C.ENO_NO
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUC141
* @description : 참조평가
***********************************************************************
* 2006/10/11      박인이        최초작성.
***********************************************************************
-->
<!-- VLUC130과 동일한 쿼리 사용함으로 VLUC130 참조 -->

<!--
***********************************************************************
* @UseCase     : VLUC150
* @description : 평가자평가
***********************************************************************
* 2006/10/11      박인이        최초작성.
***********************************************************************
-->
<!-- VLUC140과 동일한 쿼리 사용함으로 VLUC140 참조 -->

<!--
***********************************************************************
* @UseCase     : VLUC151
* @description : 평가자평가
***********************************************************************
* 2006/10/11      박인이        최초작성.
***********************************************************************
-->
<!-- VLUC130과 동일한 쿼리 사용함으로 VLUC130 참조 -->

<!--
***********************************************************************
* @UseCase     : VLUC160
* @description : 본부별배분율입력
***********************************************************************
* 2006/10/11      오대성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 부서코드에 따른 본부별배분율정보 조회 -->
    <sql name="VLUC160_SHR">
        <description>본부별배분율정보 조회</description>
        <query>
            <![CDATA[
            SELECT  GUBUN, EVL_YY, EVL_FRQ, HEAD_CD,
                    ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD) AS HEAD_NM,
                    RATE_S, RATE_A, RATE_B, RATE_C, RATE_D, RATE_RST, OTH_DEC
            FROM    ASNHR.T_EV_DEPTRATE
            WHERE   GUBUN = ?
            AND     EVL_YY = ?
            AND     EVL_FRQ = ?
            AND     HEAD_CD LIKE '%'||?||'%'
            ]]>
        </query>
    </sql>

    <!-- 본부별배분율정보 테이블에 새로운 내용을 저장한다. -->
    <sql name="VLUC160_INS">
        <description>본부별배분율정보 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_DEPTRATE
                ( GUBUN, EVL_YY, EVL_FRQ, HEAD_CD, RATE_S, RATE_A, RATE_B, RATE_C,
                  RATE_D, RATE_RST, OTH_DEC, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                ( ?    , ?     , ?      , ?     , ?     , ?     , ?     , ?     ,
                  ?     , ?       , ?      , ?      , sysdate, ?      , sysdate )
            ]]>
        </query>
    </sql>

    <!-- 본부별배분율정보 테이블에 저장된 내용을 수정한다. -->
    <sql name="VLUC160_UPT">
        <description>본부별배분율정보 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_DEPTRATE
            SET     RATE_S = ?,        --배분비율S
                    RATE_A = ?,        --배분비율A
                    RATE_B = ?,        --배분비율B
                    RATE_C = ?,        --배분비율C
                    RATE_D = ?,        --배분비율D
                    RATE_RST = ?,      --성과급지급율
                    OTH_DEC = ?,       --비고
                    UPT_MAN = ?,       --최종수정자
                    UPT_YMD = sysdate  --최종수정일시
            WHERE   GUBUN = ?
            AND     EVL_YY = ?
            AND     EVL_FRQ = ?
            AND     HEAD_CD = ?
            ]]>
        </query>
    </sql>

    <!-- 본부별배분율정보 테이블에 저장된 내용을 삭제한다. -->
    <sql name="VLUC160_DEL">
        <description>본부별배분율정보 삭제</description>
        <query>
            <![CDATA[
            DELETE  ASNHR.T_EV_DEPTRATE
            WHERE   GUBUN = ?
            AND     EVL_YY = ?
            AND     EVL_FRQ = ?
            AND     HEAD_CD = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC170
* @description : 등급조정(표준편차)
***********************************************************************
* 2006/10/13      박인이        최초작성.
***********************************************************************
-->
<!-- VLUB050과 동일한 쿼리 사용함으로 VLUB050 참조 -->

    <!-- 업무구분, 해당년도에 해당하는 본부별배분율 및 평가표정보를 조회 한다. -->
    <sql name="VLUC170_SHR_01">
        <description>본부별배분율, 등급별비율 및 평가표정보를 조회 </description>
        <query>
            <![CDATA[
            SELECT DISTINCT '1' GBN, HEAD_CD AS VAL
            FROM   ASNHR.T_EV_EVLIST_HD A
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = '2'
            AND    EXCEPT_YN = 'F'
            AND    HEAD_CD NOT IN (SELECT HEAD_CD
                                   FROM   ASNHR.T_EV_DEPTRATE
                                   WHERE  GUBUN   = A.GUBUN
                                   AND    EVL_YY  = A.EVL_YY
                                   AND    EVL_FRQ = EVL_FRQ
                                  )                                -- 구분 '1'은 평가대상자설정에 본부별배분율에 없는 본부코드가 존재하는지 확인
            UNION ALL
            SELECT '2' GBN, TO_CHAR(COUNT(*)) VAL
            FROM   ASNHR.T_EV_ACHTBL
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_FRQ    = ?
            AND    ROWNUM     = 1                                  -- 구분 '2'는 평가결과표(성과)에 최종등급이 존재하는지 확인
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC180
* @description : 본부장조정
***********************************************************************
* 2006/10/11      오대성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가구분, 회차, 사원번호, 부서, 평가그룹에 따른 본부장조정 조회 -->
    <sql name="VLUC180_SHR">
        <description>본부장조정 조회</description>
        <query>
            <![CDATA[
            SELECT A.GUBUN,
                   A.EVL_YY,                                         -- 해당년도
                   A.EVL_GBN,                                        -- 구분
                   A.EVL_FRQ,                                        -- 회차
                   A.ENO_NO,                                         -- 사원번호
                   A.ENO_NM,                                         -- 성명
                   A.GROUP_NM,                                       -- 평가그룹
                   A.HEAD_NM,                                        -- 본부명
                   A.DPT_NM,                                         -- 부서명
                   A.JOB_NM,                                         -- 직위명
                   B.CHANGE_GRD,                                     -- 조정등급
                   B.CHIEP_GRD,                                      -- 본부장조정등급
                   B.FEEDBK_GBN,                                     -- 피드백구분
                   B.RNUM                                            -- 순위
            FROM ( SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, HEAD_CD, DPT_CD, JOB_CD, COMM_CD, GROUP_CD, ENO_NO,
                          CASE WHEN HD.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', HD.GROUP_CD)
                               WHEN HD.GUBUN = '02' THEN
                                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = HD.GROUP_CD AND DUTY_LBL = HD.COMM_CD)
                          END                                        AS GROUP_NM,       -- 평가그룹명
                          ASNHR.SF_GET_ENONAME('01', ENO_NO)               AS ENO_NM,         -- 성명
                          ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)       AS HEAD_NM,        -- 본부명
                          ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)          AS DPT_NM,         -- 부서명
                          ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)        AS JOB_NM,         -- 직위명
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD)        AS HEAD_SEQ,       -- 본부명SEQ
                          ASNHR.SF_GET_DPTSEQ('01', 'A4',DPT_CD)           AS DPT_SEQ,        -- 부서명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD)         AS JOB_SEQ,        -- 직위명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A3', HOB_CD)         AS HOB_SEQ,        -- 직위명SEQ
                          HIRG_YMD
                   FROM   ASNHR.T_EV_EVLIST_HD HD
                   WHERE  GUBUN   = ?
                   AND    EVL_YY  = ?
                   AND    EVL_GBN = ?
                   AND    EVL_FRQ = ?
                   AND    ENO_NO   LIKE ? || '%'
                   AND    HEAD_CD  LIKE ? || '%'
                   AND    GROUP_CD LIKE ? || '%'
                 ) A,
                   ASNHR.T_EV_ABLRST B
            WHERE  B.GUBUN   = A.GUBUN
            AND    B.EVL_YY  = A.EVL_YY
            AND    B.EVL_GBN = A.EVL_GBN
            AND    B.EVL_FRQ = A.EVL_FRQ
            AND    B.ENO_NO  = A.ENO_NO
            AND (( ? = '1'                                          -- 조정인원인 경우
            AND    B.CHANGE_GRD <> B.CHIEP_GRD)
            OR   ( ? = '0')                                         -- 전체인원
                )
            ORDER BY A.HEAD_SEQ, A.GROUP_CD, B.RNUM, A.DPT_SEQ, A.JOB_SEQ, A.HOB_SEQ DESC, A.HIRG_YMD, A.ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 본부장조정 정보 조정등급 수정 -->
    <sql name="VLUC180_UPT">
        <description>본부장조정 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_ABLRST
            SET     CHIEP_GRD = ?,        --본부장조정등급
                    UPT_MAN = ?,          --최종수정자
                    UPT_YMD = sysdate     --최종수정일시
            WHERE   GUBUN = ?
            AND     EVL_YY = ?
            AND     EVL_GBN= ?
            AND     EVL_FRQ= ?
            AND     ENO_NO= ?
            ]]>
        </query>
    </sql>

    <!-- 본부장조정 정보 조정등급 수정(일괄반영) -->
    <sql name="VLUC180_UPT_01">
        <description>본부장조정 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_ABLRST
            SET     CHIEP_GRD = CHANGE_GRD,   --본부장조정등급
                    UPT_MAN = ?,                                --최종수정자
                    UPT_YMD = sysdate                       --최종수정일시
            WHERE   GUBUN = ?
            AND     EVL_YY = ?
            AND     EVL_GBN= ?
            AND     EVL_FRQ= ?
            ]]>
        </query>
    </sql>

    <!-- 본부장조정 정보 삭제 -->
    <sql name="VLUC180_DEL">
        <description>본부장조정 삭제</description>
        <query>
            <![CDATA[
            DELETE  ASNHR.T_EV_ABLRST
            WHERE   GUBUN = ?
            AND     EVL_YY = ?
            AND     EVL_GBN= ?
            AND     EVL_FRQ= ?
            AND     ENO_NO= ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUC190
* @description : 본부장조정확정(Feed Back)
***********************************************************************
* 2006/10/13      오대성        최초작성.
***********************************************************************
-->

    <!-- 현재 날짜에 해당하는 년도, 회차 및 평가기간에 대한 정보를 조회한다. -->
    <sql name="VLUC190_SHR">
        <description>연도별 평가 회차 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  GUBUN,EVL_YY, EVL_FRQ, TO_CHAR(EVL_STDT, 'YYYYMMDD') AS EVL_STDT,
                    TO_CHAR(EVL_ENDT, 'YYYYMMDD') AS EVL_ENDT
            FROM    ASNHR.T_EV_ESTINFO
            WHERE   GUBUN   = ?
            AND     EVL_GBN = '2'
            AND     TO_CHAR(EVL_STDT, 'YYYY-MM-DD') <= TO_CHAR(sysdate, 'YYYY-MM-DD')
            AND     TO_CHAR(EVL_ENDT, 'YYYY-MM-DD') >= TO_CHAR(sysdate, 'YYYY-MM-DD')
            ]]>
        </query>
    </sql>

   <!-- 본부장조정 확정일자 조회 -->
   <sql name="VLUC190_SHR_02">
        <description>본부장조정 확정 수정</description>
        <query>
            <![CDATA[
            SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, FEEDBK_GBN, FEDDBK_YMD
            FROM   ASNHR.T_EV_ABLRST
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_GBN    = ?
            AND    EVL_FRQ    = ?
            AND    ROWNUM     = 1
            ]]>
        </query>
    </sql>

    <!-- 본부장조정 확정 수정 -->
    <sql name="VLUC190_UPT">
        <description>본부장조정 확정 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_ABLRST
            SET     FEEDBK_GBN = ?,        --피드백여부
                    FEDDBK_YMD = ?,        --피드백일자
                    CHIEP_GRD  = DECODE(?,'T',CHIEP_GRD, CHIEP_GRD),
                    UPT_MAN    = ?,           --최종수정자
                    UPT_YMD    = sysdate      --최종수정일시
            WHERE   GUBUN      = ?
            AND     EVL_YY     = ?
            AND     EVL_GBN    = ?
            AND     EVL_FRQ    = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC200
* @description : 이의신청(개인)
***********************************************************************
* 2006/10/24      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가구분, 회차, 사원번호에 따른 이의신청(개인) 조회 -->
    <sql name="VLUC200_SHR">
        <description>이의신청(개인) 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO,
                   TO_CHAR(PROTEST_YMD,'YYYY-MM-DD') PROTEST_YMD, PROTEST_TIT, PROTEST_DEC,
                   DECODE(ACCEPT_GBN,'','N',ACCEPT_GBN) AS ACCEPT_GBN, TO_CHAR(ANSWER_YMD,'YYYY-MM-DD') ANSWER_YMD, ANSWER_DEC,
                   FILE_NAME, FILE_URL
            FROM   ASNHR.T_EV_PROTEST
            WHERE  GUBUN = ?
                AND EVL_YY = ?
                AND EVL_GBN =?
                AND EVL_FRQ = ?
                AND ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 이의신청(개인) 정보 등록 -->
    <sql name="VLUC200_INS">
        <description>이의신청(개인) 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_PROTEST
                ( GUBUN,  EVL_YY,  EVL_GBN, EVL_FRQ, ENO_NO, PROTEST_YMD, PROTEST_TIT, PROTEST_DEC, ACCEPT_GBN, FILE_NAME, FILE_URL,
                 IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                (?,?,?,?,?,?,?,?,?,?,?,?,sysdate,?,sysdate)
            ]]>
        </query>
    </sql>

    <!-- 이의신청(개인) 정보 이의신청관련 내용 수정 -->
    <sql name="VLUC200_UPT">
        <description>이의신청(개인) 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_PROTEST
                  SET PROTEST_YMD = ?,        --이의신청일자
                         PROTEST_TIT = ?,        --이의신청제목
                         PROTEST_DEC = ?,        --이의신청내용
                         FILE_NAME = ?,
                         FILE_URL = ?,
                         UPT_MAN = ?,        --최종수정자
                         UPT_YMD = sysdate        --최종수정일시
                  WHERE GUBUN = ?
                      AND EVL_YY = ?
                      AND EVL_GBN= ?
                      AND EVL_FRQ= ?
                      AND ENO_NO= ?
            ]]>
        </query>
    </sql>

    <!-- 이의신청(개인) 정보 이의신청관련 내용 삭제 -->
    <sql name="VLUC200_DEL">
        <description>이의신청(개인) 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_PROTEST
            WHERE  GUBUN = ?
                  AND EVL_YY = ?
                  AND EVL_GBN= ?
                  AND EVL_FRQ= ?
                  AND ENO_NO= ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUC210
* @description : 이의신청(접수)
***********************************************************************
* 2006/10/24      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 사원번호, 평가그룹에 따른 이의신청(접수) 조회 -->
    <sql name="VLUC210_SHR">
        <description>이의신청(접수) 조회</description>
        <query>
            <![CDATA[
            SELECT A.GUBUN, A.EVL_YY AS EVL_YY,
                    A.EVL_GBN AS EVL_GBN,
                    A.EVL_FRQ AS EVL_FRQ,
                    A.ENO_NO AS ENO_NO,
                    ASNHR.SF_GET_ENONAME('01',A.ENO_NO) AS ENO_NAME,
                    B.COMM_CD AS COMM_CD,
                    CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', B.GROUP_CD)
                         WHEN A.GUBUN = '02' THEN
                             (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = B.GROUP_CD AND DUTY_LBL = B.COMM_CD)
                    END                                        AS GROUP_NM,       -- 평가그룹명
                    C.HEAD_NM AS HEAD_NM,
                    ASNHR.SF_GET_DPTNAME('01','A4',B.DPT_CD) AS DPT_NM,
                    C.JOB_NM AS JOB_NM,
                    A.PROTEST_TIT AS PROTEST_TIT,
                    TO_CHAR(A.PROTEST_YMD,'YYYY-MM-DD') AS PROTEST_YMD,
                    TO_CHAR(A.ACCEPT_YMD,'YYYYMMDD') AS ACCEPT_YMD,
                    DECODE(A.ACCEPT_GBN,'Y','T','N','F','') AS ACCEPT_GBN,
                    A.ACCEPT_DEC AS ACCEPT_DEC,
                    A.ANSWER_YMD AS ANSWER_YMD,
                    A.FILE_NAME,
                    A.FILE_URL,
                  ( SELECT CHIEP_GRD
                     FROM ASNHR.T_EV_ABLRST
                     WHERE GUBUN = A.GUBUN
                         AND EVL_YY = A.EVL_YY
                         AND EVL_GBN = A.EVL_GBN
                         AND EVL_FRQ = A.EVL_FRQ
                         AND ENO_NO = A.ENO_NO
                   ) AS CHIEP_GRD
            FROM ASNHR.T_EV_PROTEST A, ASNHR.T_EV_EVLIST_HD B, VI_T_CM_PERSON C
            WHERE A.GUBUN = ?
                AND A.EVL_YY = ?
                AND A.EVL_GBN = ?
                AND A.EVL_FRQ = ?
                AND A.ENO_NO LIKE '%'||?||'%'
                AND NVL(B.DPT_CD,' ') LIKE '%'||?||'%'
                AND NVL(B.HEAD_CD,' ') LIKE '%'||?||'%'
                AND A.GUBUN = B.GUBUN(+)
                AND A.EVL_YY = B.EVL_YY(+)
                AND A.EVL_GBN = B.EVL_GBN(+)
                AND A.EVL_FRQ = B.EVL_FRQ(+)
                AND A.ENO_NO = B.ENO_NO(+)
                AND A.ENO_NO = C.ENO_NO
            ORDER BY C.HEAD_SEQ, C.DPT_SEQ, C.JOB_SEQ, C.HOB_SEQ, C.HIRG_YMD
            ]]>
        </query>
    </sql>

    <!-- 접수관련 정보 수정 -->
    <sql name="VLUC210_UPT">
        <description>이의신청(접수) 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_PROTEST
                  SET ACCEPT_GBN = DECODE(?,'T','Y','F','N',''),        --접수여부
                         ACCEPT_YMD = ?,                                                --접수일자
                         ACCEPT_DEC = ?,                                                --접수내용
                         ACCEPT_MAN = DECODE(?,'T',?,'F','',''),                --접수담당자
                         UPT_MAN = ?,                                                        --최종수정자
                         UPT_YMD = sysdate                                            --최종수정일시
                  WHERE GUBUN = ?
                      AND EVL_YY = ?
                      AND EVL_GBN= ?
                      AND EVL_FRQ= ?
                      AND ENO_NO= ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC220
* @description : 이의신청(답변)
***********************************************************************
* 2006/10/24      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 사원번호, 평가그룹에 따른 이의신청(접수) 조회 -->
    <sql name="VLUC220_SHR">
        <description>이의신청(답변) 조회</description>
        <query>
            <![CDATA[
            SELECT A.GUBUN, A.EVL_YY AS EVL_YY,
                    A.EVL_GBN AS EVL_GBN,
                    A.EVL_FRQ AS EVL_FRQ,
                    A.ENO_NO AS ENO_NO,
                    ASNHR.SF_GET_ENONAME('01',A.ENO_NO) AS ENO_NAME,
                    B.COMM_CD AS COMM_CD,
                    CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', B.GROUP_CD)
                         WHEN A.GUBUN = '02' THEN
                             (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = B.GROUP_CD AND DUTY_LBL = B.COMM_CD)
                    END                                        AS GROUP_NM,       -- 평가그룹명
                    C.HEAD_NM AS HEAD_NM,
                    ASNHR.SF_GET_DPTNAME('01','A4',B.DPT_CD) AS DPT_NM,
                    C.JOB_NM AS JOB_NM,
                    A.PROTEST_TIT AS PROTEST_TIT,
                    TO_CHAR(A.PROTEST_YMD,'YYYY-MM-DD') AS PROTEST_YMD,
                    A.PROTEST_DEC AS PROTEST_DEC,
                    TO_CHAR(A.ACCEPT_YMD,'YYYY-MM-DD') AS ACCEPT_YMD,
                    A.ACCEPT_DEC AS ACCEPT_DEC,
                    TO_CHAR(A.ANSWER_YMD,'YYYY-MM-DD') AS ANSWER_YMD,
                    A.ANSWER_DEC AS ANSWER_DEC,
                    (    SELECT CHIEP_GRD
                        FROM ASNHR.T_EV_ABLRST
                        WHERE GUBUN = A.GUBUN
                            AND EVL_YY = A.EVL_YY
                            AND EVL_GBN = A.EVL_GBN
                            AND EVL_FRQ = A.EVL_FRQ
                            AND ENO_NO = A.ENO_NO
                    ) AS CHIEP_GRD,
                    DECODE(A.ACCEPT_GBN,'Y','T','N','F','') AS ACCEPT_GBN,
                    CASE WHEN LENGTH(A.ANSWER_DEC) > 0 THEN 'T' ELSE 'F' END AS ANSWER_GBN,
                    A.FILE_NAME,
                    A.FILE_URL
            FROM ASNHR.T_EV_PROTEST A, ASNHR.T_EV_EVLIST_HD B, VI_T_CM_PERSON C
            WHERE A.GUBUN = ?
                   AND A.EVL_YY = ?
                   AND A.EVL_GBN = ?
                   AND A.EVL_FRQ = ?
                   AND A.ENO_NO LIKE '%'||?||'%'
                   AND NVL(B.DPT_CD,' ') LIKE '%'||?||'%'
                   AND NVL(B.COMM_CD,' ') LIKE '%'||?||'%'
                   AND NVL(B.GROUP_CD,' ') LIKE '%'||?||'%'
                   AND A.GUBUN = B.GUBUN(+)
                  AND A.EVL_YY = B.EVL_YY(+)
                  AND A.EVL_GBN = B.EVL_GBN(+)
                  AND A.EVL_FRQ = B.EVL_FRQ(+)
                  AND A.ENO_NO = B.ENO_NO(+)
                  AND A.ENO_NO = C.ENO_NO
              ORDER BY C.HEAD_SEQ, C.DPT_SEQ, C.JOB_SEQ, C.HOB_SEQ, C.HIRG_YMD
            ]]>
        </query>
    </sql>

    <!-- 답변관련 정보 수정 -->
    <sql name="VLUC220_UPT">
        <description>이의신청(답변) 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_PROTEST
                  SET ANSWER_YMD = ?,            --답변일자
                         ANSWER_DEC = ?,            --답변내용
                         ANSWER_MAN = DECODE(?,'','',?),            --답변담당자
                         UPT_MAN = ?,                    --최종수정자
                         UPT_YMD = sysdate        --최종수정일시
                  WHERE GUBUN = ?
                      AND EVL_YY = ?
                      AND EVL_GBN= ?
                      AND EVL_FRQ= ?
                      AND ENO_NO= ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUC230
* @description : 등급확정
***********************************************************************
* 2006/10/09      오대성        최초작성.
***********************************************************************
-->

<!-- VLUB110의 내용과 동일하므로 VLUB110의 SQL문을 그대로 사용한다. -->

<!--
***********************************************************************
* @UseCase     : VLUC240
* @description : 평가진행현황
***********************************************************************
* 2006/10/23      박인이        최초작성.
***********************************************************************
-->

    <!-- 성과평가에 대한 평가진행현황을 조회한다. -->
    <sql name="VLUC240_SHR_01">
        <description>성과평가진행현황 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN,
                   ENO_NO,                           -- 사번
                   ENO_NM,                           -- 성명
                   GROUP_NM,                         -- 평가그룹
                   HEAD_NM,                          -- 본부명
                   JOB_NM,                           -- 직위명
                   DPT_NM,                           -- 부서명
                   AIM_01,                           -- 목표입력
                   ACT_01,                           -- 목표입력(승인)
                   AIM_02,                           -- 목표수정
                   ACT_02,                           -- 목표수정(승인)
                   SELF_YN,                          -- 성과평가결과(달성도)
                   EVL_YN                            -- 성과평가결과(1차평가)
           FROM (  SELECT A.GUBUN,
                          A.ENO_NO,
                          ASNHR.SF_GET_ENONAME('01', A.ENO_NO)                                          AS ENO_NM,    -- 성명
                          CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', A.GROUP_CD)
                               WHEN A.GUBUN = '02' THEN
                                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = A.GROUP_CD AND DUTY_LBL = A.COMM_CD)
                          END                                                                     AS GROUP_NM,  -- 본부명
                          ASNHR.SF_GET_DPTNAME('01', 'B2',A.HEAD_CD)                                    AS HEAD_NM,   -- 부서명
                          ASNHR.SF_GET_DPTNAME('01', 'A4',A.DPT_CD)                                     AS DPT_NM,    -- 부서명
                          ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD)                                   AS JOB_NM,    -- 직위명
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', A.HEAD_CD)                                   AS HEAD_SEQ,  -- 본부명SEQ
                          ASNHR.SF_GET_DPTSEQ('01', 'A4',A.DPT_CD)                                      AS DPT_SEQ,   -- 부서명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', A.JOB_CD)                                    AS JOB_SEQ,   -- 직위명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A3', A.HOB_CD)                                    AS HOB_SEQ,   -- 호봉명SEQ
                          A.HIRG_YMD,
                          DECODE(A.EXCEPT_YN,'T','',SF_GET_AIMRST('1', '1', A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.ENO_NO)) AS AIM_01,    -- 목표입력
                          DECODE(A.EXCEPT_YN,'T','',SF_GET_AIMRST('1', '2', A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.ENO_NO)) AS ACT_01,    -- 목표입력(승인)
                          ASNHR.SF_GET_AIMRST('2', '1', A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.ENO_NO) AS AIM_02,    -- 목표수정
                          ASNHR.SF_GET_AIMRST('2', '2', A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.ENO_NO) AS ACT_02,    -- 목표수정(승인)
                          DECODE(A.EXCEPT_YN,'T','',SF_GET_ACHRST('1', A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, '1', A.ENO_NO)) AS SELF_YN,   -- 성과평가결과(달성도)
                          ASNHR.SF_GET_ACHRST('2', A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, '1', A.ENO_NO) AS EVL_YN     -- 성과평가결과(1차평가)
                   FROM   ASNHR.T_EV_EVLIST_HD A
                   WHERE  A.GUBUN    = ?
                   AND    A.EVL_YY   = ?
                   AND    A.EVL_GBN  = ?
                   AND    A.EVL_FRQ  = ?
                   AND    A.ENO_NO   LIKE ?||'%'
                   AND    A.DPT_CD   LIKE ?||'%'
                   AND    A.GROUP_CD LIKE ?||'%'
                 )
           ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUC250
* @description : 부서목표현황
***********************************************************************
* 2006/12/01      박인이        최초작성.
***********************************************************************
-->

    <!-- 부서에 대한 목표현황을 조회한다. -->
    <sql name="VLUC250_SHR_01">
        <description>부서목표현황 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN,                      -- 업무구분
                   EVL_YY,                     -- 해당년도
                   EVL_FRQ,                    -- 회차
                   AIM_YMD,                    -- 목표설정일자
                   CASE WHEN AA.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', AA.GROUP_CD)
                        WHEN AA.GUBUN = '02' THEN
                            (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = AA.GROUP_CD AND DUTY_LBL = AA.COMM_CD)
                   END                                   AS GROUP_NM,  -- 본부명
                   HEAD_NM,                    -- 본부명
                   DPT_NM,                     -- 부서명
                   JOB_NM,                     -- 직위명
                   ENO_NO,                     -- 사번
                   ENO_NM,                     -- 성명
                   EVLENO_NO,                  -- 평가자사번
                   EVLENO_NM,                  -- 피평가자사번
                   AIM_YMD_VIEW,               -- 작성일자
                   ACCEPT_YMD                  -- 승인일자
            FROM ( SELECT A.GUBUN,  A.EVL_YY, A.EVL_FRQ, TO_CHAR(A.AIM_YMD, 'YYYY-MM-DD') AIM_YMD,
                          B.GROUP_CD,
                          B.COMM_CD,
                          ASNHR.SF_GET_DPTNAME('01','B2',B.HEAD_CD)  AS HEAD_NM,
                          ASNHR.SF_GET_DPTNAME('01','A4',B.DPT_CD)    AS DPT_NM,
                          ASNHR.SF_GET_COMMNAME('01','A2',B.JOB_CD)   AS JOB_NM,
                          ASNHR.SF_GET_DPTSEQ('01','B2',B.HEAD_CD)   AS HEAD_SEQ,
                          ASNHR.SF_GET_DPTSEQ('01','A4',B.DPT_CD)     AS DPT_SEQ,
                          ASNHR.SF_GET_COMMSEQ('01','A2',B.JOB_CD)    AS JOB_SEQ,
                          ASNHR.SF_GET_COMMSEQ('01','A3',B.HOB_CD)    AS HOB_SEQ,
                          B.HIRG_YMD, A.ENO_NO, A.EVLENO_NO,
                          ASNHR.SF_GET_ENONAME('01',A.ENO_NO)         AS ENO_NM,
                          ASNHR.SF_GET_ENONAME('01',A.EVLENO_NO)      AS EVLENO_NM,
                          A.AIM_YMD_VIEW, A.ACCEPT_YMD
                   FROM ( SELECT GUBUN, EVL_YY, EVL_FRQ, ENO_NO, EVLENO_NO, AIM_YMD,
                                 MAX(DECODE(TO_CHAR(AIM_YMD,'YYYY-MM-DD'),'1900-01-01',TO_CHAR(IPT_YMD,'YYYY-MM-DD'),TO_CHAR(AIM_YMD,'YYYY-MM-DD'))) AS AIM_YMD_VIEW,
                                 MAX(TO_CHAR(ACCEPT_YMD,'YYYY-MM-DD')) AS ACCEPT_YMD
                          FROM   ASNHR.T_EV_AIMLST AA
                          WHERE  GUBUN    = ?
                          AND    EVL_YY   = ?
                          AND    EVL_FRQ  = ?
                          AND    AIM_YMD  = (SELECT MAX(AIM_YMD)
                                             FROM   ASNHR.T_EV_AIMLST
                                             WHERE  GUBUN      = AA.GUBUN
                                             AND    EVL_YY     = AA.EVL_YY
                                             AND    EVL_FRQ    = AA.EVL_FRQ
                                             AND    ENO_NO     = AA.ENO_NO
                                             AND    EVLENO_NO  = AA.EVLENO_NO
                                             AND    ACCEPT_GBN = '1')
                          GROUP BY GUBUN, EVL_YY, EVL_FRQ, ENO_NO, EVLENO_NO, AIM_YMD
                        ) A,
                          ASNHR.T_EV_EVLIST_HD B
                   WHERE  A.GUBUN    = B.GUBUN
                   AND    A.EVL_YY   = B.EVL_YY
                   AND    A.EVL_FRQ  = B.EVL_FRQ
                   AND    A.ENO_NO   = B.ENO_NO
                   AND    B.EVL_GBN  = ?
                   AND    B.DPT_CD   = ?
                   AND    B.GROUP_CD LIKE ?||'%'
                 ) AA
            ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO
            ]]>
        </query>
    </sql>


<!-- 평가정보 -->
<!--
***********************************************************************
* @UseCase     : VLUD010
* @description : 연간집계현황
***********************************************************************
* 2006/10/16      박인이        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도에 해당하는 역량평가 및 성과평가의 차수를 조회 한다. -->
    <sql name="VLUD010_SHR_00">
        <description>평가구조설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT EVL_YY,
                   ABL_CNT,                 -- 역량평가차수
                   ACH_CNT                  -- 성과평가차수
            FROM   ASNHR.T_EV_TYPE
            WHERE  GUBUN  = ?
            AND    EVL_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 년도, 사번, 부서에 해당하는 역량평가 및 성과평가의 점수/등급을 조회 한다. -->
    <sql name="VLUD010_SHR_01">
        <description>연간집계현황 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT EVL_YY,                                                    -- 해당년도
                   ENO_NO,                                                    -- 사번
                   ENO_NM,                                                    -- 성명
                   HEAD_NM,                                                   -- 본부명
                   DPT_NM,                                                    -- 부서명
                   JOB_NM,                                                    -- 직위명
                   DECODE(TO_CHAR(ROUND(FINAL_PNT11,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(FINAL_PNT11,2),'FM99990.00')) as FINAL_PNT11, -- 역량 1회차 점수
                   FINAL_GRD11,                                               -- 역량 1회차 등급
                   DECODE(TO_CHAR(ROUND(FINAL_PNT12,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(FINAL_PNT12,2),'FM99990.00')) as FINAL_PNT12, -- 역량 2회차 점수
                   FINAL_GRD12,                                               -- 역량 2회차 등급
                   DECODE(TO_CHAR(ROUND(FINAL_PNT13,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(FINAL_PNT13,2),'FM99990.00')) as FINAL_PNT13, -- 역량 3회차 점수
                   FINAL_GRD13,                                               -- 역량 3회차 등급
                   DECODE(TO_CHAR(ROUND(FINAL_PNT14,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(FINAL_PNT14,2),'FM99990.00')) as FINAL_PNT14, -- 역량 4회차 점수
                   FINAL_GRD14,                                               -- 역량 4회차 등급
                   DECODE(TO_CHAR(ROUND(FINAL_PNT21,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(FINAL_PNT21,2),'FM99990.00')) as FINAL_PNT21, -- 성과 1회차 점수
                   FINAL_GRD21,                                               -- 성과 1회차 등급
                   DECODE(TO_CHAR(ROUND(FINAL_PNT22,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(FINAL_PNT22,2),'FM99990.00')) as FINAL_PNT22, -- 성과 2회차 점수
                   FINAL_GRD22,                                               -- 성과 2회차 등급
                   DECODE(TO_CHAR(ROUND(FINAL_PNT23,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(FINAL_PNT23,2),'FM99990.00')) as FINAL_PNT23, -- 성과 3회차 점수
                   FINAL_GRD23,                                               -- 성과 3회차 등급
                   DECODE(TO_CHAR(ROUND(FINAL_PNT24,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(FINAL_PNT24,2),'FM99990.00')) as FINAL_PNT24, -- 성과 4회차 점수
                   FINAL_GRD24,                                                -- 성과 4회차 등급
                   DECODE(TO_CHAR(ROUND(FINAL_PNT31,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(FINAL_PNT31,2),'FM99990.00')) as FINAL_PNT31, -- 종합 점수
                   FINAL_GRD31
           FROM ( SELECT C.EVL_YY, C.ENO_NO,
                         ASNHR.SF_GET_ENONAME('01', C.ENO_NO)          AS ENO_NM,
                         ASNHR.SF_GET_DPTNAME('01', 'B2', C.HEAD_CD)  AS HEAD_NM,
                         ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD)     AS DPT_NM,
                         ASNHR.SF_GET_COMMNAME('01', 'A2', C.JOB_CD)   AS JOB_NM,
                         ASNHR.SF_GET_DPTSEQ('01', 'B2', C.HEAD_CD)   AS HEAD_SEQ,
                         ASNHR.SF_GET_DPTSEQ('01', 'A4',C.DPT_CD)      AS DPT_SEQ,
                         ASNHR.SF_GET_COMMSEQ('01', 'A2', C.JOB_CD)    AS JOB_SEQ,
                         ASNHR.SF_GET_COMMSEQ('01', 'A3', C.HOB_CD)    AS HOB_SEQ,
                         C.HIRG_YMD,
                         C.FINAL_PNT11, C.FINAL_GRD11, C.FINAL_PNT12, C.FINAL_GRD12,
                         C.FINAL_PNT13, C.FINAL_GRD13, C.FINAL_PNT14, C.FINAL_GRD14,
                         C.FINAL_PNT21, C.FINAL_GRD21, C.FINAL_PNT22, C.FINAL_GRD22,
                         C.FINAL_PNT23, C.FINAL_GRD23, C.FINAL_PNT24, C.FINAL_GRD24, C.FINAL_PNT31, C.FINAL_GRD31
                  FROM ( SELECT A.GUBUN, A.EVL_YY, A.ENO_NO, A.HEAD_CD, A.DPT_CD, A.JOB_CD, A.HOB_CD, A.HIRG_YMD, A.COMM_CD, --A.GROUP_CD,
                                SUM(DECODE(A.EVL_GBN, '1', DECODE(A.EVL_FRQ, 1, NVL(B.FINAL_PNT, 0)))) AS FINAL_PNT11,
                                MAX(DECODE(A.EVL_GBN, '1', DECODE(A.EVL_FRQ, 1, B.FINAL_GRD)))         AS FINAL_GRD11,
                                SUM(DECODE(A.EVL_GBN, '1', DECODE(A.EVL_FRQ, 2, NVL(B.FINAL_PNT, 0)))) AS FINAL_PNT12,
                                MAX(DECODE(A.EVL_GBN, '1', DECODE(A.EVL_FRQ, 2, B.FINAL_GRD)))         AS FINAL_GRD12,
                                SUM(DECODE(A.EVL_GBN, '1', DECODE(A.EVL_FRQ, 3, NVL(B.FINAL_PNT, 0)))) AS FINAL_PNT13,
                                MAX(DECODE(A.EVL_GBN, '1', DECODE(A.EVL_FRQ, 3, B.FINAL_GRD)))         AS FINAL_GRD13,
                                SUM(DECODE(A.EVL_GBN, '1', DECODE(A.EVL_FRQ, 4, NVL(B.FINAL_PNT, 0)))) AS FINAL_PNT14,
                                MAX(DECODE(A.EVL_GBN, '1', DECODE(A.EVL_FRQ, 4, B.FINAL_GRD)))         AS FINAL_GRD14,
                                SUM(DECODE(A.EVL_GBN, '2', DECODE(A.EVL_FRQ, 1, NVL(B.FINAL_PNT, 0)))) AS FINAL_PNT21,
                                MAX(DECODE(A.EVL_GBN, '2', DECODE(A.EVL_FRQ, 1, B.FINAL_GRD)))         AS FINAL_GRD21,
                                SUM(DECODE(A.EVL_GBN, '2', DECODE(A.EVL_FRQ, 2, NVL(B.FINAL_PNT, 0)))) AS FINAL_PNT22,
                                MAX(DECODE(A.EVL_GBN, '2', DECODE(A.EVL_FRQ, 2, B.FINAL_GRD)))         AS FINAL_GRD22,
                                SUM(DECODE(A.EVL_GBN, '2', DECODE(A.EVL_FRQ, 3, NVL(B.FINAL_PNT, 0)))) AS FINAL_PNT23,
                                MAX(DECODE(A.EVL_GBN, '2', DECODE(A.EVL_FRQ, 3, B.FINAL_GRD)))         AS FINAL_GRD23,
                                SUM(DECODE(A.EVL_GBN, '2', DECODE(A.EVL_FRQ, 4, NVL(B.FINAL_PNT, 0)))) AS FINAL_PNT24,
                                MAX(DECODE(A.EVL_GBN, '2', DECODE(A.EVL_FRQ, 4, B.FINAL_GRD)))         AS FINAL_GRD24,
                                SUM(DECODE(A.EVL_GBN, '3', DECODE(A.EVL_FRQ, 1, NVL(B.FINAL_PNT, 0)))) AS FINAL_PNT31,
                                MAX(DECODE(A.EVL_GBN, '3', DECODE(A.EVL_FRQ, 1, B.FINAL_GRD)))         AS FINAL_GRD31
                         FROM   ASNHR.T_EV_EVLIST_HD A, ASNHR.T_EV_ABLRST B
                         WHERE  A.GUBUN   = ?
                         AND    A.EVL_YY  = ?
                         AND    NVL(A.ENO_NO,' ')  LIKE '%'||?||'%'
                         AND    NVL(A.DPT_CD,' ')  LIKE '%'||?||'%'
                         AND    NVL(A.HEAD_CD,' ')  LIKE '%'||?||'%'
                         AND    A.GUBUN   = B.GUBUN
                         AND    A.EVL_YY  = B.EVL_YY
                         AND    A.EVL_GBN = B.EVL_GBN
                         AND    A.EVL_FRQ = B.EVL_FRQ
                         AND    A.ENO_NO  = B.ENO_NO
                         GROUP BY A.GUBUN, A.EVL_YY, A.ENO_NO, A.HEAD_CD, A.DPT_CD, A.JOB_CD, A.HOB_CD, A.HIRG_YMD, A.COMM_CD  --, A.GROUP_CD
                       ) C
                )
            ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO,FINAL_PNT11
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUD020
* @description : 항목별역량평가현황
***********************************************************************
* 2006/10/17      박인이        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도, 회차에 해당하는 항목별역량평가현황를 조회 한다. -->
    <!-- 확인사항 :
         현재는 공통,리더쉽,직무 3개의 역량코드로 쿼리를 구성함
         차후 역량코드가 추가되면 쿼리의 컬럼을 추가해야 한다.
     -->
    <sql name="VLUD020_SHR_01">
        <description>항목별역량평가현황 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN,                                                  -- 구분
                   EVL_YY,                                                 -- 해당년도
                   EVL_FRQ,                                                -- 회차
                   ENO_NO,                                                 -- 사번
                   DPT_CD,                                                 -- 부서
                   ENO_NM,                                                 -- 성명
                   GROUP_NM,                                               -- 평가그룹
                   HEAD_NM,                                                -- 본부명
                   DPT_NM,                                                 -- 부서명
                   JOB_NM,                                                 -- 직위명
                   DECODE(TO_CHAR(ROUND(PNT_211,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_211,2),'FM99990.00')) AS PNT_211,         -- 하향 1차 역량점수(공통)
                   DECODE(TO_CHAR(ROUND(PNT_212,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_212,2),'FM99990.00')) AS PNT_212,         -- 하향 1차 역량점수(리더쉽)
                   DECODE(TO_CHAR(ROUND(PNT_213,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_213,2),'FM99990.00')) AS PNT_213,         -- 하향 1차 역량점수(직무)
                   DECODE(TO_CHAR(ROUND(PNT_221,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_221,2),'FM99990.00')) AS PNT_221,         -- 하향 2차 역량점수(공통)
                   DECODE(TO_CHAR(ROUND(PNT_222,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_222,2),'FM99990.00')) AS PNT_222,         -- 하향 2차 역량점수(리더쉽)
                   DECODE(TO_CHAR(ROUND(PNT_223,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_223,2),'FM99990.00')) AS PNT_223,         -- 하향 2차 역량점수(직무)
                   DECODE(TO_CHAR(ROUND(PNT_231,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_231,2),'FM99990.00')) AS PNT_231,         -- 하향 3차 역량점수(공통)
                   DECODE(TO_CHAR(ROUND(PNT_232,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_232,2),'FM99990.00')) AS PNT_232,         -- 하향 3차 역량점수(리더쉽)
                   DECODE(TO_CHAR(ROUND(PNT_233,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_233,2),'FM99990.00')) AS PNT_233,         -- 하향 3차 역량점수(직무)
                   DECODE(TO_CHAR(ROUND(PNT_111,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_111,2),'FM99990.00')) AS PNT_111,         -- 상향 1차 역량점수(공통)
                   DECODE(TO_CHAR(ROUND(PNT_112,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_112,2),'FM99990.00')) AS PNT_112,         -- 상향 1차 역량점수(리더쉽)
                   DECODE(TO_CHAR(ROUND(PNT_113,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_113,2),'FM99990.00')) AS PNT_113,         -- 상향 1차 역량점수(직무)
                   DECODE(TO_CHAR(ROUND(PNT_121,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_121,2),'FM99990.00')) AS PNT_121,         -- 상향 2차 역량점수(공통)
                   DECODE(TO_CHAR(ROUND(PNT_122,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_122,2),'FM99990.00')) AS PNT_122,         -- 상향 2차 역량점수(리더쉽)
                   DECODE(TO_CHAR(ROUND(PNT_123,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_123,2),'FM99990.00')) AS PNT_123,         -- 상향 2차 역량점수(직무)
                   DECODE(TO_CHAR(ROUND(PNT_131,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_131,2),'FM99990.00')) AS PNT_131,         -- 상향 3차 역량점수(공통)
                   DECODE(TO_CHAR(ROUND(PNT_132,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_132,2),'FM99990.00')) AS PNT_132,         -- 상향 3차 역량점수(리더쉽)
                   DECODE(TO_CHAR(ROUND(PNT_133,2),'FM99990.00'),'0.00',' ',TO_CHAR(ROUND(PNT_133,2),'FM99990.00')) AS PNT_133          -- 상향 3차 역량점수(직무)
            FROM ( SELECT C.GUBUN,    C.EVL_YY,   C.EVL_FRQ,  C.ENO_NO,   C.DPT_CD,
                          ASNHR.SF_GET_ENONAME('01', C.ENO_NO)                    AS ENO_NM,        -- 성명
                          CASE WHEN C.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', C.GROUP_CD)
                               WHEN C.GUBUN = '02' THEN
                                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = C.GROUP_CD AND DUTY_LBL = C.COMM_CD)
                          END                                               AS GROUP_NM,      -- 평가그룹
                          ASNHR.SF_GET_DPTNAME('01', 'B2', C.HEAD_CD)            AS HEAD_NM,       -- 본부명
                          ASNHR.SF_GET_DPTNAME('01', 'A4',C.DPT_CD)               AS DPT_NM,        -- 부서명
                          ASNHR.SF_GET_COMMNAME('01', 'A2', C.JOB_CD)             AS JOB_NM,        -- 직위명
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', C.HEAD_CD)             AS HEAD_SEQ,      -- 본부명SEQ
                          ASNHR.SF_GET_DPTSEQ('01', 'A4',C.DPT_CD)                AS DPT_SEQ,       -- 부서명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', C.JOB_CD)              AS JOB_SEQ,       -- 직위명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A3', C.HOB_CD)              AS HOB_SEQ,       -- 직위명SEQ
                          C.HIRG_YMD,
                          C.PNT_211, C.PNT_212, C.PNT_213, C.PNT_221, C.PNT_222, C.PNT_223,
                          C.PNT_231, C.PNT_232, C.PNT_233, C.PNT_111, C.PNT_112, C.PNT_113,
                          C.PNT_121, C.PNT_122, C.PNT_123, C.PNT_131, C.PNT_132, C.PNT_133
                   FROM ( SELECT A.GUBUN, A.EVL_YY, A.EVL_FRQ, A.ENO_NO, A.HEAD_CD, A.DPT_CD, A.JOB_CD, A.HOB_CD, A.HIRG_YMD, A.COMM_CD, A.GROUP_CD,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '2', DECODE(B.DEGREE_GBN, '1', DECODE(B.EST_CD, '01', B.SUBPNT_AVG))), 0)) AS PNT_211,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '2', DECODE(B.DEGREE_GBN, '1', DECODE(B.EST_CD, '02', B.SUBPNT_AVG))), 0)) AS PNT_212,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '2', DECODE(B.DEGREE_GBN, '1', DECODE(B.EST_CD, '03', B.SUBPNT_AVG))), 0)) AS PNT_213,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '2', DECODE(B.DEGREE_GBN, '2', DECODE(B.EST_CD, '01', B.SUBPNT_AVG))), 0)) AS PNT_221,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '2', DECODE(B.DEGREE_GBN, '2', DECODE(B.EST_CD, '02', B.SUBPNT_AVG))), 0)) AS PNT_222,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '2', DECODE(B.DEGREE_GBN, '2', DECODE(B.EST_CD, '03', B.SUBPNT_AVG))), 0)) AS PNT_223,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '2', DECODE(B.DEGREE_GBN, '3', DECODE(B.EST_CD, '01', B.SUBPNT_AVG))), 0)) AS PNT_231,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '2', DECODE(B.DEGREE_GBN, '3', DECODE(B.EST_CD, '02', B.SUBPNT_AVG))), 0)) AS PNT_232,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '2', DECODE(B.DEGREE_GBN, '3', DECODE(B.EST_CD, '03', B.SUBPNT_AVG))), 0)) AS PNT_233,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '1', DECODE(B.DEGREE_GBN, '1', DECODE(B.EST_CD, '01', B.SUBPNT_AVG))), 0)) AS PNT_111,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '1', DECODE(B.DEGREE_GBN, '1', DECODE(B.EST_CD, '02', B.SUBPNT_AVG))), 0)) AS PNT_112,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '1', DECODE(B.DEGREE_GBN, '1', DECODE(B.EST_CD, '03', B.SUBPNT_AVG))), 0)) AS PNT_113,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '1', DECODE(B.DEGREE_GBN, '2', DECODE(B.EST_CD, '01', B.SUBPNT_AVG))), 0)) AS PNT_121,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '1', DECODE(B.DEGREE_GBN, '2', DECODE(B.EST_CD, '02', B.SUBPNT_AVG))), 0)) AS PNT_122,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '1', DECODE(B.DEGREE_GBN, '2', DECODE(B.EST_CD, '03', B.SUBPNT_AVG))), 0)) AS PNT_123,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '1', DECODE(B.DEGREE_GBN, '3', DECODE(B.EST_CD, '01', B.SUBPNT_AVG))), 0)) AS PNT_131,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '1', DECODE(B.DEGREE_GBN, '3', DECODE(B.EST_CD, '02', B.SUBPNT_AVG))), 0)) AS PNT_132,
                                 SUM(NVL(DECODE(B.UPDN_GBN, '1', DECODE(B.DEGREE_GBN, '3', DECODE(B.EST_CD, '03', B.SUBPNT_AVG))), 0)) AS PNT_133
                          FROM   ASNHR.T_EV_EVLIST_HD A,
                               ( SELECT GUBUN, EVL_YY, EVL_FRQ, UPDN_GBN, DEGREE_GBN, ENO_NO, EST_CD, AVG(SUBPNT_SUM) SUBPNT_AVG
                                 FROM ( SELECT GUBUN, EVL_YY, EVL_FRQ, UPDN_GBN, DEGREE_GBN, ENO_NO, EVLENO_NO, EST_CD, SUM(NVL(SUBPNT_AVG, 0)) SUBPNT_SUM
                                        FROM   ASNHR.T_EV_ABLTBL
                                        WHERE  GUBUN   = ?
                                        AND    EVL_YY  = ?
                                        AND    EVL_FRQ = ?
                                        GROUP BY GUBUN, EVL_YY, EVL_FRQ, UPDN_GBN, DEGREE_GBN, ENO_NO, EVLENO_NO, EST_CD
                                      ) AA
                                 GROUP BY GUBUN, EVL_YY, EVL_FRQ, UPDN_GBN, DEGREE_GBN, ENO_NO, EST_CD
                               ) B
                          WHERE  A.GUBUN   = ?
                          AND    A.EVL_YY  = ?
                          AND    A.EVL_GBN = ?
                          AND    A.EVL_FRQ = ?
                          AND    NVL(A.ENO_NO,' ')  LIKE '%'||?||'%'
                          AND    NVL(A.DPT_CD,' ')  LIKE '%'||?||'%'
                          AND    NVL(A.HEAD_CD,' ') LIKE '%'||?||'%'
                          AND    A.GUBUN   = B.GUBUN
                          AND    A.EVL_YY  = B.EVL_YY
                          AND    A.EVL_FRQ = B.EVL_FRQ
                          AND    A.ENO_NO  = B.ENO_NO
                          GROUP BY A.GUBUN, A.EVL_YY, A.EVL_FRQ, A.ENO_NO, A.HEAD_CD, A.DPT_CD, A.JOB_CD, A.HOB_CD, A.HIRG_YMD, A.COMM_CD, A.GROUP_CD
                        ) C
                 )
            ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUD030
* @description : 본부별평가현황
***********************************************************************
* 2006/10/17      박인이        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도, 역량구분, 회차, 부서에 해당하는 본부별평가현황을 조회 한다. -->
    <sql name="VLUD030_SHR_01">
        <description>본부별평가현황 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN,                                              -- 구분
                   EVL_YY,                                             -- 해당년도
                   EVL_GBN,                                            -- 역량구분
                   EVL_FRQ,                                            -- 회차
                   DPT_CD,                                             -- 부서
                   GROUP_CD,                                           -- 평가그룹
                   HEAD_NM,                                            -- 본부명
                   DPT_NM,                                             -- 부서명
                   GROUP_NM,                                           -- 평가그룹명
                   DECODE(TO_CHAR(TOT_CNT),'0',' ',TOT_CNT) AS TOT_CNT,               -- 총인원수(출력용,문자)
                   DECODE(TO_CHAR(FINAL_GRD_S),'0',' ',FINAL_GRD_S) AS FINAL_GRD_S,   -- S 점수 인원(출력용,문자)
                   DECODE(TO_CHAR(FINAL_GRD_A),'0',' ',FINAL_GRD_A) AS FINAL_GRD_A,   -- A 점수 인원(출력용,문자)
                   DECODE(TO_CHAR(FINAL_GRD_B),'0',' ',FINAL_GRD_B) AS FINAL_GRD_B,   -- B 점수 인원(출력용,문자)
                   DECODE(TO_CHAR(FINAL_GRD_C),'0',' ',FINAL_GRD_C) AS FINAL_GRD_C,   -- C 점수 인원(출력용,문자)
                   DECODE(TO_CHAR(FINAL_GRD_D),'0',' ',FINAL_GRD_D) AS FINAL_GRD_D,    -- D 점수 인원(출력용,문자)
                   TOT_CNT AS TOT_CNT_NUM,                                            -- 총인원수(합계용,숫자)
                   FINAL_GRD_S AS FINAL_GRD_S_NUM,                                        -- S 점수 인원(합계용,숫자)
                   FINAL_GRD_A AS FINAL_GRD_A_NUM,                                        -- A 점수 인원(합계용,숫자)
                   FINAL_GRD_B AS FINAL_GRD_B_NUM,                                        -- B 점수 인원(합계용,숫자)
                   FINAL_GRD_C AS FINAL_GRD_C_NUM,                                        -- C 점수 인원(합계용,숫자)
                   FINAL_GRD_D AS FINAL_GRD_D_NUM                                         -- D 점수 인원(합계용,숫자)
            FROM ( SELECT G.GUBUN,                                                  -- 구분
                          G.EVL_YY,                                                 -- 해당년도
                          G.EVL_GBN,                                                -- 역량구분
                          G.EVL_FRQ,                                                -- 회차
                          G.DPT_CD,                                                 -- 부서
                          G.GROUP_CD,                                               -- 평가그룹
                          ASNHR.SF_GET_DPTNAME('01', 'B2', G.HEAD_CD)       AS HEAD_NM,  -- 본부명
                          ASNHR.SF_GET_DPTNAME('01', 'A4',G.DPT_CD)          AS DPT_NM,   -- 부서명
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', G.HEAD_CD)        AS HEAD_SEQ, -- 본부명SEQ
                          ASNHR.SF_GET_DPTSEQ('01', 'A4',G.DPT_CD)           AS DPT_SEQ,  -- 부서명SEQ
                          CASE WHEN G.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', G.GROUP_CD)
                               WHEN G.GUBUN = '02' THEN
                                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = G.GROUP_CD AND DUTY_LBL = G.COMM_CD)
                          END                                          AS GROUP_NM, -- 평가그룹
                          G.TOT_CNT,                                                -- 총인원수
                          NVL(G.FINAL_GRD_S, 0) AS FINAL_GRD_S,                     -- S 점수 인원
                          NVL(G.FINAL_GRD_A, 0) AS FINAL_GRD_A,                     -- A 점수 인원
                          NVL(G.FINAL_GRD_B, 0) AS FINAL_GRD_B,                     -- B 점수 인원
                          NVL(G.FINAL_GRD_C, 0) AS FINAL_GRD_C,                     -- C 점수 인원
                          NVL(G.FINAL_GRD_D, 0) AS FINAL_GRD_D                      -- C 점수 인원
                   FROM ( SELECT E.GUBUN, E.EVL_YY, E.EVL_GBN, E.EVL_FRQ, F.HEAD_CD, F.DPT_CD, F.COMM_CD, F.GROUP_CD, F.TOT_CNT,
                                 SUM(DECODE(E.FINAL_GRD, 'S', 1))  AS FINAL_GRD_S,
                                 SUM(DECODE(E.FINAL_GRD, 'A', 1))  AS FINAL_GRD_A,
                                 SUM(DECODE(E.FINAL_GRD, 'B', 1))  AS FINAL_GRD_B,
                                 SUM(DECODE(E.FINAL_GRD, 'C', 1))  AS FINAL_GRD_C,
                                 SUM(DECODE(E.FINAL_GRD, 'D', 1))  AS FINAL_GRD_D
                          FROM   ASNHR.T_EV_ABLRST E,
                              (  SELECT A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.HEAD_CD, A.DPT_CD, A.COMM_CD, A.GROUP_CD, A.ENO_NO, B.TOT_CNT
                                 FROM
                                      ( SELECT AA.GUBUN, AA.EVL_YY, AA.EVL_GBN, AA.EVL_FRQ, AA.HEAD_CD, AA.DPT_CD, AA.COMM_CD, AA.GROUP_CD, COUNT(*) TOT_CNT
                                        FROM   ASNHR.T_EV_EVLIST_HD AA,
                                               ASNHR.T_EV_ABLRST BB
                                        WHERE  AA.GUBUN   = BB.GUBUN
                                        AND    AA.EVL_YY  = BB.EVL_YY
                                        AND    AA.EVL_GBN = BB.EVL_GBN
                                        AND    AA.EVL_FRQ = BB.EVL_FRQ
                                        AND    AA.ENO_NO =  BB.ENO_NO
                                        AND    AA.GUBUN   = ?
                                        AND    AA.EVL_YY  = ?
                                        AND    AA.EVL_GBN = ?
                                        AND    AA.EVL_FRQ = ?
                                        GROUP BY AA.GUBUN, AA.EVL_YY, AA.EVL_GBN, AA.EVL_FRQ, AA.HEAD_CD, AA.DPT_CD, AA.COMM_CD, AA.GROUP_CD      -- 본부/부서별 인원수
                                      ) B,
                                        ASNHR.T_EV_EVLIST_HD A
                                 WHERE  A.GUBUN    = B.GUBUN
                                 AND    A.EVL_YY   = B.EVL_YY
                                 AND    A.EVL_GBN  = B.EVL_GBN
                                 AND    A.EVL_FRQ  = B.EVL_FRQ
                                 AND    A.HEAD_CD  = B.HEAD_CD
                                 AND    A.DPT_CD   = B.DPT_CD
                                 AND    A.COMM_CD  = B.COMM_CD
                                 AND    A.GROUP_CD = B.GROUP_CD
                                 AND    A.HEAD_CD  LIKE ? || '%'
                               ) F
                          WHERE  E.GUBUN   = F.GUBUN
                          AND    E.EVL_YY  = F.EVL_YY
                          AND    E.EVL_GBN = F.EVL_GBN
                          AND    E.EVL_FRQ = F.EVL_FRQ
                          AND    E.ENO_NO  = F.ENO_NO
                          GROUP BY E.GUBUN, E.EVL_YY, E.EVL_GBN, E.EVL_FRQ, F.HEAD_CD, F.DPT_CD, F.COMM_CD, F.GROUP_CD, F.TOT_CNT
                        ) G
                 )
            ORDER BY HEAD_SEQ, DPT_SEQ, GROUP_CD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUD040
* @description : 평가자별평가현황
***********************************************************************
* 2006/10/18      박인이        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도, 역량구분, 회차, 부서에 해당하는 본부별평가현황을 조회 한다. -->
    <sql name="VLUD040_SHR_01">
        <description>본부별평가현황 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN,                                                 -- 구분
                   EVL_YY,                                                -- 해당년도
                   EVL_GBN,                                               -- 역량/성과구분
                   EVL_FRQ,                                               -- 회차
                   ROUND(COM_AVG,2)      AS COM_AVG,                      -- 회사평균
                   ROUND(COM_STDDEV,2)   AS COM_STDDEV,                   -- 회사표준편차
                   ENO_NO,                                                -- 사번
                   ENO_NM,                                                -- 성명
                   CNT,                                                   -- 인원수
                   ROUND(EVL_AVG,2)      AS EVL_AVG,                      -- 평가자별평균
                   ROUND(EVL_STDDEV,2)   AS EVL_STDDEV,                   -- 평가자별표준편차
                   GROUP_NM,                                              -- 평가그룹
                   HEAD_NM,                                               -- 본부명
                   JOB_NM,                                                -- 직위명
                   DPT_NM                                                 -- 부서명
            FROM ( SELECT C.GUBUN,   C.EVL_YY,  C.EVL_GBN,  C.EVL_FRQ, C.COM_AVG,  C.COM_STDDEV,
                          D.ENO_NO,  C.CNT,     C.EVL_AVG,  C.EVL_STDDEV,
                          ASNHR.SF_GET_ENONAME('01', D.ENO_NO)                  AS ENO_NM,     -- 성명
                          CASE WHEN C.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', D.GROUP_CD)
                               WHEN C.GUBUN = '02' THEN
                                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = D.GROUP_CD AND DUTY_LBL = D.COMM_CD)
                          END                                             AS GROUP_NM,   -- 평가그룹
                          ASNHR.SF_GET_DPTNAME('01', 'B2', D.HEAD_CD)          AS HEAD_NM,    -- 본부명
                          ASNHR.SF_GET_COMMNAME('01', 'A2', D.JOB_CD)           AS JOB_NM,     -- 직위명
                          ASNHR.SF_GET_DPTNAME('01', 'A4',D.DPT_CD)             AS DPT_NM,     -- 부서명
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', D.HEAD_CD)           AS HEAD_SEQ,   -- 본부명SEQ
                          ASNHR.SF_GET_DPTSEQ('01', 'A4',D.DPT_CD)              AS DPT_SEQ,    -- 부서명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', D.JOB_CD)            AS JOB_SEQ,    -- 직위명SEQ
                          ASNHR.SF_GET_COMMSEQ('01', 'A2', D.HOB_CD)            AS HOB_SEQ,    -- 호봉명SEQ
                          D.HIRG_YMD
                   FROM ( SELECT A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.AVG COM_AVG, A.STDDEV COM_STDDEV,
                                 B.EVLENO_NO, B.AVG EVL_AVG, B.STDDEV EVL_STDDEV, B.CNT
                          FROM ( SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ,  ROUND(AVG(SUBPNT_TOT),3) AS AVG, ROUND(STDDEV_POP(SUBPNT_TOT),3) AS STDDEV
                                 FROM   ASNHR.T_EV_ABLTBL_TOT
                                 WHERE  GUBUN   = ?
                                 AND    EVL_YY  = ?
                                 AND    EVL_GBN = ?
                                 AND    EVL_FRQ = ?
                                 GROUP BY GUBUN, EVL_YY, EVL_GBN, EVL_FRQ
                                ) A,                                             -- 회사평균, 표준편차
                               ( SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, EVLENO_NO, ROUND(AVG(SUBPNT_TOT),3) AS AVG, ROUND(STDDEV_POP(SUBPNT_TOT),3) AS STDDEV, COUNT(*) CNT
                                 FROM   ASNHR.T_EV_ABLTBL_TOT
                                 WHERE  GUBUN   = ?
                                 AND    EVL_YY  = ?
                                 AND    EVL_GBN = ?
                                 AND    EVL_FRQ = ?
                                 AND    EVLENO_NO  LIKE ? ||'%'
                                 GROUP BY GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, EVLENO_NO
                               ) B                                               -- 평가자별 평균, 표준편차
                          WHERE  B.GUBUN   = A.GUBUN
                          AND    B.EVL_YY  = A.EVL_YY
                          AND    B.EVL_GBN = A.EVL_GBN
                          AND    B.EVL_FRQ = A.EVL_FRQ
                        ) C,
                          ASNHR.T_EV_EVLIST_HD D
                   WHERE  C.GUBUN     = D.GUBUN
                   AND    C.EVL_YY    = D.EVL_YY
                   AND    C.EVL_GBN   = D.EVL_GBN
                   AND    C.EVL_FRQ   = D.EVL_FRQ
                   AND    C.EVLENO_NO = D.ENO_NO
                   AND    D.DPT_CD    LIKE ? || '%'
                 )
            ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUD050
* @description : 년도별평가현황
***********************************************************************
* 2006/11/03      박인이        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 년도, 역량구분, 회차, 부서에 해당하는 년도별평가현황을 조회 한다. -->
    <sql name="VLUD050_SHR_01">
        <description>년도별평가현황 조회</description>
        <query>
            <![CDATA[
            SELECT C.GUBUN,
                   D.HEAD_SEQ,                    -- 본부SEQ
                   D.DPT_SEQ,                     -- 부서SEQ
                   D.JOB_SEQ,                     -- 직위SEQ
                   D.HOB_SEQ,                     -- 호봉SEQ
                   D.HIRG_YMD,                    -- 입사일(그룹)
                   D.HEAD_NM,                     -- 본부
                   D.DPT_NM,                      -- 부서
                   D.JOB_NM,                      -- 직위
                   C.ENO_NO,                      -- 사번
                   D.ENO_NM,                      -- 성명
                   C.TOT_APPLY_RATE,              -- 총계
                   C.EVL_YY,                      -- 년도
                   C.APPLY_RATE                   -- 년별지급율
            FROM ( SELECT A.GUBUN,
                          A.EVL_YY,
                          A.ENO_NO,
                          A.APPLY_RATE,
                          B.TOT_APPLY_RATE
                   FROM ( SELECT GUBUN,
                                 EVL_YY,
                                 ENO_NO,
                                 APPLY_RATE
                          FROM   ASNHR.T_EV_EVLAPPLY
                          WHERE  GUBUN  = ?
                          AND    EVL_YY IN (?, ?, ?, ?, ?)               -- 최대 5년간 현황을 볼 수 있음
                          AND    ENO_NO LIKE ?||'%'
                          AND    APPLY_GBN = ?                           -- 반영구분 - 1:성과급, 2:상여금
                         ) A,                                            -- 년별 지급율
                        ( SELECT GUBUN,
                                 ENO_NO,
                                 SUM(APPLY_RATE) TOT_APPLY_RATE
                          FROM   ASNHR.T_EV_EVLAPPLY
                          WHERE  GUBUN  = ?
                          AND    EVL_YY IN (?, ?, ?, ?, ?)               -- 최대 5년간 현황을 볼 수 있음
                          AND    ENO_NO LIKE ?||'%'
                          AND    APPLY_GBN = ?                           -- 반영구분 - 1:성과급, 2:상여금
                          GROUP BY GUBUN, ENO_NO
                        ) B                                              -- 총지급율
                   WHERE A.GUBUN  = B.GUBUN
                   AND   A.ENO_NO = B.ENO_NO
                 ) C,
                   VI_T_CM_PERSON D
            WHERE  C.ENO_NO = D.ENO_NO
            AND    D.DPT_CD LIKE ? || '%'
            ORDER BY D.HEAD_SEQ, D.DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO, D.HEAD_NM, D.DPT_NM, D.JOB_NM, D.ENO_NM, C.TOT_APPLY_RATE, C.EVL_YY
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUD050_PRT
* @description : 년도별평가현황
***********************************************************************
* 2006/11/03      박인이        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 년도, 역량구분, 회차, 부서에 해당하는 년도별평가현황을 조회 한다. -->
    <sql name="VLUD050_PRT">
        <description>년도별평가현황 조회</description>
        <query>
            <![CDATA[
SELECT
*
FROM
(
                             SELECT
HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ , HIRG_YMD, ENO_NO, HEAD_NM, DPT_NM, JOB_NM, ENO_NM,
NVL(SUM(RATE1),0) AS TOT_APPLY_RATE1,
NVL(SUM(RATE2),0) AS TOT_APPLY_RATE2,
NVL(SUM(RATE3),0)AS TOT_APPLY_RATE3,
NVL(SUM(RATE4),0) AS TOT_APPLY_RATE4,
NVL(SUM(RATE5),0) AS TOT_APPLY_RATE5,
(
NVL(SUM(RATE1),0) +
NVL(SUM(RATE2),0) +
NVL(SUM(RATE3),0) +
NVL(SUM(RATE4),0) +
NVL(SUM(RATE5),0)) AS TOT_APPLY
FROM
(

            SELECT D.GUBUN,
                   D.HEAD_SEQ,                    -- 본부SEQ
                   D.DPT_SEQ,                     -- 부서SEQ
                   D.JOB_SEQ,                     -- 직위SEQ
                   D.HOB_SEQ,                     -- 호봉SEQ
                   D.HIRG_YMD,                    -- 입사일(그룹)
                   D.HEAD_NM,                     -- 본부
                   D.DPT_NM,                      -- 부서
                   D.JOB_NM,                      -- 직위
                   D.ENO_NO,                      -- 사번
                   D.ENO_NM,                      -- 성명
                   C.TOT_RATE ,
                   C.EVL_YY  ,
                   (CASE WHEN C.EVL_YY  = ? THEN C.TOT_RATE END) AS RATE1,
                   (CASE WHEN C.EVL_YY  = ? THEN C.TOT_RATE END) AS RATE2,
                   (CASE WHEN C.EVL_YY  = ? THEN C.TOT_RATE END) AS RATE3,
                   (CASE WHEN C.EVL_YY  = ? THEN C.TOT_RATE END) AS RATE4,
                   (CASE WHEN C.EVL_YY  = ? THEN C.TOT_RATE END) AS RATE5

            FROM
                    (  select EVL_YY, ENO_NO, APPLY_GBN , NVL(SUM(APPLY_RATE),0)  AS TOT_RATE
                       FROM  ASNHR.T_EV_EVLAPPLY
                       WHERE APPLY_RATE > 0
                       group by EVL_YY, ENO_NO, APPLY_GBN
                     ) C    ,
                     VI_T_CM_PERSON D
            WHERE  D.DPT_CD LIKE ? || '%'
            AND D.ENO_NO LIKE ? || '%'
            AND D.GUBUN = ?
            AND C.ENO_NO = D.ENO_NO AND APPLY_GBN = ?
            ORDER BY D.HEAD_SEQ, D.DPT_SEQ, D.JOB_SEQ, D.HOB_SEQ DESC, D.HIRG_YMD, D.ENO_NO, D.HEAD_NM, D.DPT_NM, D.JOB_NM, D.ENO_NM
) GROUP BY   HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ , HIRG_YMD, ENO_NO, HEAD_NM, DPT_NM, JOB_NM, ENO_NM
) WHERE        TOT_APPLY > 0
                 ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUD060
* @description : 평정현황(본부별)
***********************************************************************
* 2006/11/21      박인이        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도, 역량구분, 회차에 해당하는 평정현황(본부별)을 조회 한다. -->
    <sql name="VLUD060_SHR_01">
        <description>평정현황(본부별) 조회</description>
        <query>
            <![CDATA[
            SELECT TYPE,IDX,OCC_NM, HEAD_CD, HEAD_NM, GRD_NM, TOT_CNT, S_CNT, S_PERS, A_CNT, A_PERS, B_CNT, B_PERS, C_CNT, C_PERS, D_CNT, D_PERS
            FROM ( SELECT '1' AS TYPE,
                           ROWNUM AS IDX,
                   '총  계'  OCC_NM,
                          ' ' HEAD_CD, ' ' HEAD_NM,
                          0 HEAD_SEQ,
                          '0' OCC_CD, GRD_GBN,
                          DECODE(GRD_GBN, '1', '강제배분', '2', '본부장조정', '3', '최종확정') GRD_NM,
                          TOT_CNT, S_CNT, S_PERS, A_CNT, A_PERS, B_CNT, B_PERS, C_CNT, C_PERS, D_CNT, D_PERS
                   FROM ( SELECT GRD_GBN, TOT_CNT,
                                 SUM(DECODE(GRD, 'S', GRD_CNT, 0)) S_CNT, SUM(DECODE(GRD, 'S', PERS, 0)) S_PERS,
                                 SUM(DECODE(GRD, 'A', GRD_CNT, 0)) A_CNT, SUM(DECODE(GRD, 'A', PERS, 0)) A_PERS,
                                 SUM(DECODE(GRD, 'B', GRD_CNT, 0)) B_CNT, SUM(DECODE(GRD, 'B', PERS, 0)) B_PERS,
                                 SUM(DECODE(GRD, 'C', GRD_CNT, 0)) C_CNT, SUM(DECODE(GRD, 'C', PERS, 0)) C_PERS,
                                 SUM(DECODE(GRD, 'D', GRD_CNT, 0)) D_CNT, SUM(DECODE(GRD, 'D', PERS, 0)) D_PERS
                          FROM ( SELECT GRD_GBN, GRD, GRD_CNT, TOT_CNT, ROUND((GRD_CNT / TOT_CNT) * 100, 2) PERS
                                 FROM ( SELECT GRD_GBN, GRD, GRD_CNT,
                                               SUM(GRD_CNT) OVER(PARTITION BY GRD_GBN) TOT_CNT
                                        FROM ( SELECT GRD_GBN, GRD, COUNT(*) GRD_CNT
                                               FROM ( SELECT HD.GUBUN, HD.EVL_YY, HD.EVL_GBN, HD.EVL_FRQ, HD.ENO_NO, HD.OCC_CD, HD.HEAD_CD, HD.JOB_CD, HD.HOB_CD,
                                                             HD.HIRG_YMD, HD.DPA_YMD, HD.COMM_CD, HD.GROUP_CD, RST.GRD_GBN, RST.GRD,
                                                             ROW_NUMBER() OVER(PARTITION BY OCC_CD, HEAD_CD, GRD_GBN, GRD ORDER BY HD.ENO_NO) CNT
                                                      FROM   ASNHR.T_EV_EVLIST_HD HD,
                                                           ( SELECT '1' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, CHANGE_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                        --     AND    FEEDBK_GBN = 'T'
                                                             UNION ALL
                                                             SELECT '2' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, CHIEP_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                         --    AND    FEEDBK_GBN = 'T'
                                                             UNION ALL
                                                             SELECT '3' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, FINAL_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                          --   AND    FEEDBK_GBN = 'T'
                                                           ) RST
                                                      WHERE  HD.GUBUN   = ?
                                                      AND    HD.EVL_YY  = ?
                                                      AND    HD.EVL_GBN = ?
                                                      AND    HD.EVL_FRQ = ?
                                                      AND    HD.GUBUN   = RST.GUBUN
                                                      AND    HD.EVL_YY  = RST.EVL_YY
                                                      AND    HD.EVL_GBN = RST.EVL_GBN
                                                      AND    HD.EVL_FRQ = RST.EVL_FRQ
                                                      AND    HD.ENO_NO  = RST.ENO_NO
                                                    )
                                               GROUP BY GRD_GBN, GRD
                                             )
                                      )
                               )
                          GROUP BY GRD_GBN, TOT_CNT
                        )
                   UNION ALL
                   SELECT DECODE(OCC_CD, 'A', '2', '3') AS TYPE,
                           ROWNUM AS IDX,
                   			ASNHR.SF_GET_COMMNAME('01', 'A1', OCC_CD)  OCC_NM,
                          HEAD_CD, ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD) HEAD_NM,
                          ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD) HEAD_SEQ,
                          OCC_CD, GRD_GBN,
                          DECODE(GRD_GBN, '1', '강제배분', '2', '본부장조정', '3', '최종확정') GRD_NM,
                          TOT_CNT, S_CNT, S_PERS, A_CNT, A_PERS, B_CNT, B_PERS, C_CNT, C_PERS, D_CNT, D_PERS
                   FROM ( SELECT OCC_CD, HEAD_CD, GRD_GBN, TOT_CNT,
                                 SUM(DECODE(GRD, 'S', GRD_CNT, 0)) S_CNT, SUM(DECODE(GRD, 'S', PERS, 0)) S_PERS,
                                 SUM(DECODE(GRD, 'A', GRD_CNT, 0)) A_CNT, SUM(DECODE(GRD, 'A', PERS, 0)) A_PERS,
                                 SUM(DECODE(GRD, 'B', GRD_CNT, 0)) B_CNT, SUM(DECODE(GRD, 'B', PERS, 0)) B_PERS,
                                 SUM(DECODE(GRD, 'C', GRD_CNT, 0)) C_CNT, SUM(DECODE(GRD, 'C', PERS, 0)) C_PERS,
                                 SUM(DECODE(GRD, 'D', GRD_CNT, 0)) D_CNT, SUM(DECODE(GRD, 'D', PERS, 0)) D_PERS
                          FROM ( SELECT OCC_CD, HEAD_CD, GRD_GBN, GRD, GRD_CNT, TOT_CNT, ROUND((GRD_CNT / TOT_CNT) * 100, 2) PERS
                                 FROM ( SELECT OCC_CD, HEAD_CD, GRD_GBN, GRD, GRD_CNT,
                                               SUM(GRD_CNT) OVER(PARTITION BY OCC_CD, HEAD_CD, GRD_GBN) TOT_CNT
                                        FROM ( SELECT OCC_CD, HEAD_CD, GRD_GBN, GRD, COUNT(*) GRD_CNT
                                               FROM ( SELECT HD.GUBUN, HD.EVL_YY, HD.EVL_GBN, HD.EVL_FRQ, HD.ENO_NO, HD.OCC_CD, HD.HEAD_CD, HD.JOB_CD, HD.HOB_CD,
                                                             HD.HIRG_YMD, HD.DPA_YMD, HD.COMM_CD, HD.GROUP_CD, RST.GRD_GBN, RST.GRD,
                                                             ROW_NUMBER() OVER(PARTITION BY OCC_CD, HEAD_CD, GRD_GBN, GRD ORDER BY HD.ENO_NO) CNT
                                                      FROM   ASNHR.T_EV_EVLIST_HD HD,
                                                           ( SELECT '1' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, CHANGE_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                         --    AND   FEEDBK_GBN = 'T'
                                                             UNION ALL
                                                             SELECT '2' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, CHIEP_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                         --    AND    FEEDBK_GBN = 'T'
                                                             UNION ALL
                                                             SELECT '3' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, FINAL_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                          --   AND    FEEDBK_GBN = 'T'
                                                           ) RST
                                                      WHERE  HD.GUBUN   = ?
                                                      AND    HD.EVL_YY  = ?
                                                      AND    HD.EVL_GBN = ?
                                                      AND    HD.EVL_FRQ = ?
                                                      AND    HD.GUBUN   = RST.GUBUN
                                                      AND    HD.EVL_YY  = RST.EVL_YY
                                                      AND    HD.EVL_GBN = RST.EVL_GBN
                                                      AND    HD.EVL_FRQ = RST.EVL_FRQ
                                                      AND    HD.ENO_NO  = RST.ENO_NO
                                                    )
                                               GROUP BY OCC_CD, HEAD_CD, GRD_GBN, GRD
                                             )
                                      )
                               )
                          GROUP BY OCC_CD, HEAD_CD, GRD_GBN, TOT_CNT
                        )
                        ORDER BY OCC_CD, HEAD_SEQ, HEAD_CD, GRD_GBN, IDX
                 )

            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUD070
* @description : 평정현황(그룹별)
***********************************************************************
* 2006/11/21      박인이        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도, 역량구분, 회차, 본부에 해당하는 평정현황(그룹별)을 조회 한다. -->
    <sql name="VLUD070_SHR_01">
        <description>평정현황(그룹별) 조회</description>
        <query>
            <![CDATA[
            SELECT TYPE,IDX,OCC_NM, GROUP_NM, GRD_NM, TOT_CNT, S_CNT, S_PERS, A_CNT, A_PERS, B_CNT, B_PERS, C_CNT, C_PERS, D_CNT, D_PERS
            FROM ( SELECT '1' AS TYPE,
                           ROWNUM AS IDX,
                           '총  계' OCC_NM,
                          ' ' GROUP_NM,
                          '0' OCC_CD, '0' GROUP_CD, GRD_GBN,
                          DECODE(GRD_GBN, '1', '강제배분', '2', '본부장조정', '3', '최종확정') GRD_NM,
                          TOT_CNT, S_CNT, S_PERS, A_CNT, A_PERS, B_CNT, B_PERS, C_CNT, C_PERS, D_CNT, D_PERS
                   FROM ( SELECT GRD_GBN, TOT_CNT,
                                 SUM(DECODE(GRD, 'S', GRD_CNT, 0)) S_CNT, SUM(DECODE(GRD, 'S', PERS, 0)) S_PERS,
                                 SUM(DECODE(GRD, 'A', GRD_CNT, 0)) A_CNT, SUM(DECODE(GRD, 'A', PERS, 0)) A_PERS,
                                 SUM(DECODE(GRD, 'B', GRD_CNT, 0)) B_CNT, SUM(DECODE(GRD, 'B', PERS, 0)) B_PERS,
                                 SUM(DECODE(GRD, 'C', GRD_CNT, 0)) C_CNT, SUM(DECODE(GRD, 'C', PERS, 0)) C_PERS,
                                 SUM(DECODE(GRD, 'D', GRD_CNT, 0)) D_CNT, SUM(DECODE(GRD, 'D', PERS, 0)) D_PERS
                          FROM ( SELECT GRD_GBN, GRD, GRD_CNT, TOT_CNT, ROUND((GRD_CNT / TOT_CNT) * 100, 2) PERS
                                 FROM ( SELECT GRD_GBN, GRD, GRD_CNT, SUM(GRD_CNT) OVER(PARTITION BY GRD_GBN) TOT_CNT
                                        FROM ( SELECT GRD_GBN, GRD, COUNT(*) GRD_CNT
                                               FROM ( SELECT HD.GUBUN, HD.EVL_YY, HD.EVL_GBN, HD.EVL_FRQ, HD.ENO_NO, HD.OCC_CD, HD.HEAD_CD, HD.JOB_CD, HD.HOB_CD,
                                                             HD.HIRG_YMD, HD.DPA_YMD, HD.COMM_CD, HD.GROUP_CD, RST.GRD_GBN, RST.GRD,
                                                             ROW_NUMBER() OVER(PARTITION BY HD.OCC_CD, HD.COMM_CD, HD.GROUP_CD, RST.GRD_GBN, RST.GRD ORDER BY HD.ENO_NO) CNT
                                                      FROM   ASNHR.T_EV_EVLIST_HD HD,
                                                           ( SELECT '1' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, CHANGE_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                         --    AND    FEEDBK_GBN = 'T'
                                                             UNION ALL
                                                             SELECT '2' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, CHIEP_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                          --   AND    FEEDBK_GBN = 'T'
                                                             UNION ALL
                                                             SELECT '3' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, FINAL_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                          --   AND    FEEDBK_GBN = 'T'
                                                           ) RST
                                                      WHERE  HD.GUBUN   = ?
                                                      AND    HD.EVL_YY  = ?
                                                      AND    HD.EVL_GBN = ?
                                                      AND    HD.EVL_FRQ = ?
                                                      AND    HD.GUBUN   = RST.GUBUN
                                                      AND    HD.EVL_YY  = RST.EVL_YY
                                                      AND    HD.EVL_GBN = RST.EVL_GBN
                                                      AND    HD.EVL_FRQ = RST.EVL_FRQ
                                                      AND    HD.ENO_NO  = RST.ENO_NO
                                                      AND    HD.HEAD_CD LIKE ?||'%'
                                                    )
                                               GROUP BY GRD_GBN, GRD
                                             )
                                      )
                                 GROUP BY GRD_GBN, GRD, GRD_CNT, TOT_CNT
                               )
                          GROUP BY GRD_GBN, TOT_CNT
                        )
                   UNION ALL
                   SELECT DECODE(OCC_CD, 'A', '2', '3') AS TYPE,
                           ROWNUM AS IDX,
                           ASNHR.SF_GET_COMMNAME('01', 'A1', OCC_CD)             AS OCC_NM,
                          CASE WHEN A.GUBUN = '01' THEN ASNHR.SF_GET_COMMNAME('01', 'EG', A.GROUP_CD)
                               WHEN A.GUBUN = '02' THEN
                                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = A.GROUP_CD AND DUTY_LBL = A.COMM_CD)
                          END                                             AS GROUP_NM,   -- 평가그룹
                          OCC_CD, GROUP_CD, GRD_GBN,
                          DECODE(GRD_GBN, '1', '강제배분', '2', '본부장조정', '3', '최종확정') GRD_NM,
                          TOT_CNT, S_CNT, S_PERS, A_CNT, A_PERS, B_CNT, B_PERS, C_CNT, C_PERS, D_CNT, D_PERS
                   FROM ( SELECT GUBUN, OCC_CD, COMM_CD, GROUP_CD, GRD_GBN, TOT_CNT,
                                 SUM(DECODE(GRD, 'S', GRD_CNT, 0)) S_CNT, SUM(DECODE(GRD, 'S', PERS, 0)) S_PERS,
                                 SUM(DECODE(GRD, 'A', GRD_CNT, 0)) A_CNT, SUM(DECODE(GRD, 'A', PERS, 0)) A_PERS,
                                 SUM(DECODE(GRD, 'B', GRD_CNT, 0)) B_CNT, SUM(DECODE(GRD, 'B', PERS, 0)) B_PERS,
                                 SUM(DECODE(GRD, 'C', GRD_CNT, 0)) C_CNT, SUM(DECODE(GRD, 'C', PERS, 0)) C_PERS,
                                 SUM(DECODE(GRD, 'D', GRD_CNT, 0)) D_CNT, SUM(DECODE(GRD, 'D', PERS, 0)) D_PERS
                          FROM ( SELECT GUBUN, OCC_CD, COMM_CD, GROUP_CD, GRD_GBN, GRD, GRD_CNT, TOT_CNT,
                                        ROUND((GRD_CNT / TOT_CNT) * 100, 2) PERS
                                 FROM ( SELECT GUBUN, OCC_CD, COMM_CD, GROUP_CD, GRD_GBN, GRD, GRD_CNT,
                                               SUM(GRD_CNT) OVER(PARTITION BY OCC_CD, COMM_CD, GROUP_CD, GRD_GBN) TOT_CNT
                                        FROM ( SELECT GUBUN, OCC_CD, COMM_CD, GROUP_CD, GRD_GBN, GRD, COUNT(*) GRD_CNT
                                               FROM ( SELECT HD.GUBUN, HD.EVL_YY, HD.EVL_GBN, HD.EVL_FRQ, HD.ENO_NO, HD.OCC_CD, HD.HEAD_CD, HD.JOB_CD, HD.HOB_CD,
                                                             HD.HIRG_YMD, HD.DPA_YMD, HD.COMM_CD, HD.GROUP_CD, RST.GRD_GBN, RST.GRD,
                                                             ROW_NUMBER() OVER(PARTITION BY HD.OCC_CD, HD.COMM_CD, HD.GROUP_CD, RST.GRD_GBN, RST.GRD ORDER BY HD.ENO_NO) CNT
                                                      FROM   ASNHR.T_EV_EVLIST_HD HD,
                                                           ( SELECT '1' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, CHANGE_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                        --     AND    FEEDBK_GBN = 'T'
                                                             UNION ALL
                                                             SELECT '2' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, CHIEP_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                         --    AND    FEEDBK_GBN = 'T'
                                                             UNION ALL
                                                             SELECT '3' GRD_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, FINAL_GRD GRD
                                                             FROM   ASNHR.T_EV_ABLRST
                                                             WHERE  GUBUN      = ?
                                                             AND    EVL_YY     = ?
                                                             AND    EVL_GBN    = ?
                                                             AND    EVL_FRQ    = ?
                                                         --    AND    FEEDBK_GBN = 'T'
                                                           ) RST
                                                      WHERE  HD.GUBUN   = ?
                                                      AND    HD.EVL_YY  = ?
                                                      AND    HD.EVL_GBN = ?
                                                      AND    HD.EVL_FRQ = ?
                                                      AND    HD.GUBUN   = RST.GUBUN
                                                      AND    HD.EVL_YY  = RST.EVL_YY
                                                      AND    HD.EVL_GBN = RST.EVL_GBN
                                                      AND    HD.EVL_FRQ = RST.EVL_FRQ
                                                      AND    HD.ENO_NO  = RST.ENO_NO
                                                      AND    HD.HEAD_CD LIKE ?||'%'
                                                    )
                                               GROUP BY GUBUN, OCC_CD, COMM_CD, GROUP_CD, GRD_GBN, GRD
                                             )
                                      )
                                 GROUP BY GUBUN, OCC_CD, COMM_CD, GROUP_CD, GRD_GBN, GRD, GRD_CNT, TOT_CNT
                               )
                          GROUP BY GUBUN, OCC_CD, COMM_CD, GROUP_CD, GRD_GBN, TOT_CNT
                        ) A
                 )
            ORDER BY OCC_CD, GROUP_CD, GRD_GBN, IDX
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUD080
* @description : 평정현황(명단)
***********************************************************************
* 2006/11/22      박인이        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도, 역량구분, 회차, 본부에 해당하는 평정현황(명단)을 조회 한다. -->
    <sql name="VLUD080_SHR_01">
        <description>평정현황(명단) 조회</description>
        <query>
            <![CDATA[
            SELECT GUBUN,
                   EVL_YY,
                   EVL_GBN,
                   EVL_FRQ,
                   OCC_CD,
                   HEAD_SEQ,
                   ASNHR.SF_GET_COMMNAME('01', 'A1', OCC_CD)   AS OCC_NM,
                   HEAD_CD,
                   ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)  AS HEAD_NM,
                   RNUM,
                   ASNHR.SF_GET_DPTNAME('01', 'A4', S_DPT)     AS S_DPT,
                   ASNHR.SF_GET_COMMNAME('01', 'A2', S_JOB)    AS S_JOB,
                   ASNHR.SF_GET_ENONAME('01', S_ENO)           AS S_ENO,
                   ASNHR.SF_GET_DPTNAME('01', 'A4', A_DPT)     AS A_DPT,
                   ASNHR.SF_GET_COMMNAME('01', 'A2', A_JOB)    AS A_JOB,
                   ASNHR.SF_GET_ENONAME('01', A_ENO)           AS A_ENO,
                   ASNHR.SF_GET_DPTNAME('01', 'A4', C_DPT)     AS C_DPT,
                   ASNHR.SF_GET_COMMNAME('01', 'A2', C_JOB)    AS C_JOB,
                   ASNHR.SF_GET_ENONAME('01', C_ENO)           AS C_ENO,
                   ASNHR.SF_GET_DPTNAME('01', 'A4', D_DPT)     AS D_DPT,
                   ASNHR.SF_GET_COMMNAME('01', 'A2', D_JOB)    AS D_JOB,
                   ASNHR.SF_GET_ENONAME('01', D_ENO)           AS D_ENO,
                   S_CNT, A_CNT, B_CNT, C_CNT, D_CNT
            FROM ( SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, OCC_CD, HEAD_CD, HEAD_SEQ, RNUM,
                          MAX(DECODE(FINAL_GRD, 'S', DPT_CD, '')) S_DPT,
                          MAX(DECODE(FINAL_GRD, 'S', JOB_CD, '')) S_JOB,
                          MAX(DECODE(FINAL_GRD, 'S', ENO_NO, '')) S_ENO,
                          MAX(DECODE(FINAL_GRD, 'A', DPT_CD, '')) A_DPT,
                          MAX(DECODE(FINAL_GRD, 'A', JOB_CD, '')) A_JOB,
                          MAX(DECODE(FINAL_GRD, 'A', ENO_NO, '')) A_ENO,
                          MAX(DECODE(FINAL_GRD, 'C', DPT_CD, '')) C_DPT,
                          MAX(DECODE(FINAL_GRD, 'C', JOB_CD, '')) C_JOB,
                          MAX(DECODE(FINAL_GRD, 'C', ENO_NO, '')) C_ENO,
                          MAX(DECODE(FINAL_GRD, 'D', DPT_CD, '')) D_DPT,
                          MAX(DECODE(FINAL_GRD, 'D', JOB_CD, '')) D_JOB,
                          MAX(DECODE(FINAL_GRD, 'D', ENO_NO, '')) D_ENO,
                          MAX(DECODE(FINAL_GRD, 'S', 1, 0)) S_CNT,
                          MAX(DECODE(FINAL_GRD, 'A', 1, 0)) A_CNT,
                          MAX(DECODE(RNUM, 1, DECODE(FINAL_GRD, 'B', CNT, 0), 0)) B_CNT,
                          MAX(DECODE(FINAL_GRD, 'C', 1, 0)) C_CNT,
                          MAX(DECODE(FINAL_GRD, 'D', 1, 0)) D_CNT
                   FROM ( SELECT A.GUBUN, A.EVL_YY, A.EVL_GBN, A.EVL_FRQ, A.OCC_CD, A.HEAD_CD, A.HEAD_SEQ, B.DPT_CD,
                                 B.JOB_CD, B.HOB_CD, B.ENO_NO, B.FINAL_GRD, A.RNUM B_RNUM, B.RNUM, A.CNT
                          FROM ( SELECT HD.GUBUN, HD.EVL_YY, HD.EVL_GBN, HD.EVL_FRQ, HD.OCC_CD, HD.HEAD_CD, NVL(RST.FINAL_GRD, RST.CHIEP_GRD) AS FINAL_GRD,
                                        ASNHR.SF_GET_DPTSEQ('01', 'B2', HD.HEAD_CD) HEAD_SEQ,  1 RNUM, COUNT(*) CNT
                                 FROM   ASNHR.T_EV_EVLIST_HD HD,
                                        ASNHR.T_EV_ABLRST RST
                                 WHERE  HD.GUBUN   = ?
                                 AND    HD.EVL_YY  = ?
                                 AND    HD.EVL_GBN = ?
                                 AND    HD.EVL_FRQ = ?
                                 AND    HD.GUBUN   = RST.GUBUN
                                 AND    HD.EVL_YY  = RST.EVL_YY
                                 AND    HD.EVL_GBN = RST.EVL_GBN
                                 AND    HD.EVL_FRQ = RST.EVL_FRQ
                                 AND    HD.ENO_NO  = RST.ENO_NO
                             --    AND    RST.FEEDBK_GBN = 'T'
                                 GROUP BY HD.GUBUN, HD.EVL_YY, HD.EVL_GBN, HD.EVL_FRQ, HD.OCC_CD, HD.HEAD_CD, NVL(RST.FINAL_GRD, RST.CHIEP_GRD)
                               ) A,
                               ( SELECT GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, OCC_CD, HEAD_CD, DPT_CD,
                                        JOB_CD, HOB_CD, HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ, HIRG_YMD, FINAL_GRD,
                                        ROW_NUMBER() OVER(PARTITION BY OCC_CD, HEAD_CD, FINAL_GRD ORDER BY OCC_CD, HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO) RNUM
                                 FROM ( SELECT HD.GUBUN, HD.EVL_YY, HD.EVL_GBN, HD.EVL_FRQ, HD.ENO_NO,
                                               HD.OCC_CD,  ASNHR.SF_GET_COMMSEQ('01', 'A1', HD.OCC_CD)  AS OCC_SEQ,
                                               HD.HEAD_CD, ASNHR.SF_GET_DPTSEQ('01', 'B2', HD.HEAD_CD) AS HEAD_SEQ,
                                               HD.DPT_CD,  ASNHR.SF_GET_DPTSEQ( '01', 'A4', HD.DPT_CD)  AS DPT_SEQ,
                                               HD.JOB_CD,  ASNHR.SF_GET_COMMSEQ('01', 'A2', HD.JOB_CD)  AS JOB_SEQ,
                                               HD.HOB_CD,  ASNHR.SF_GET_COMMSEQ('01', 'A3', HD.HOB_CD)  AS HOB_SEQ,
                                               HD.HIRG_YMD,
                                               NVL(RST.FINAL_GRD, RST.CHIEP_GRD) AS FINAL_GRD
                                        FROM   ASNHR.T_EV_EVLIST_HD HD,
                                               ASNHR.T_EV_ABLRST RST
                                        WHERE  HD.GUBUN   = ?
                                        AND    HD.EVL_YY  = ?
                                        AND    HD.EVL_GBN = ?
                                        AND    HD.EVL_FRQ = ?
                                        AND    HD.GUBUN   = RST.GUBUN
                                        AND    HD.EVL_YY  = RST.EVL_YY
                                        AND    HD.EVL_GBN = RST.EVL_GBN
                                        AND    HD.EVL_FRQ = RST.EVL_FRQ
                                        AND    HD.ENO_NO  = RST.ENO_NO
                                    --    AND    RST.FEEDBK_GBN = 'T'
                                      )
                               ) B
                          WHERE  A.GUBUN     = B.GUBUN  (+)
                          AND    A.EVL_YY    = B.EVL_YY (+)
                          AND    A.EVL_GBN   = B.EVL_GBN(+)
                          AND    A.EVL_FRQ   = B.EVL_FRQ(+)
                          AND    A.OCC_CD    = B.OCC_CD (+)
                          AND    A.HEAD_CD   = B.HEAD_CD(+)
                          AND    A.FINAL_GRD = B.FINAL_GRD(+)
                        )
                   GROUP BY GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, OCC_CD, HEAD_SEQ, HEAD_CD, RNUM
                 )
            WHERE  S_CNT <> 0
            OR     A_CNT <> 0
            OR     B_CNT <> 0
            OR     C_CNT <> 0
            OR     D_CNT <> 0
            ORDER BY GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, OCC_CD, HEAD_SEQ, HEAD_CD, RNUM
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUD090
* @description : 개인별평가결과현황
***********************************************************************
* 2006/12/05      박인이        최초작성.
***********************************************************************
-->
    <!-- 업무구분, 년도에 해당하는 역량평가 및 성과평가의 차수를 조회 한다. -->
    <sql name="VLUD090_SHR_00">
        <description>평가구조설정 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT MAX(ABL_CNT) AS ABL_CNT,                 -- 역량평가차수
                   MAX(ACH_CNT) AS ACH_CNT                  -- 역량평가차수
            FROM   ASNHR.T_EV_TYPE
            WHERE  GUBUN = ?
            AND    EVL_YY BETWEEN ? AND ?
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 년도, 사번, 부서에 해당하는 역량평가 및 성과평가의 점수/등급을 조회 한다. -->
    <sql name="VLUD090_SHR_01">
        <description>연간집계현황 데이터 조회</description>
        <query>
            <![CDATA[
            SELECT EVL_YY,                                                    -- 해당년도
                   FINAL_GRD11,                                               -- 역량 1회차 등급
                   FINAL_GRD12,                                               -- 역량 2회차 등급
                   FINAL_GRD13,                                               -- 역량 3회차 등급
                   FINAL_GRD14,                                               -- 역량 4회차 등급
                   FINAL_GRD21,                                               -- 성과 1회차 등급
                   FINAL_GRD22,                                               -- 성과 2회차 등급
                   FINAL_GRD23,                                               -- 성과 3회차 등급
                   FINAL_GRD24,                                               -- 성과 4회차 등급
                   FINAL_GRD31                                                -- 종합 평가 등급
            FROM ( SELECT GUBUN, EVL_YY, ENO_NO,
                          MAX(DECODE(EVL_GBN, '1', DECODE(EVL_FRQ, 1, FINAL_GRD)))         AS FINAL_GRD11,
                          MAX(DECODE(EVL_GBN, '1', DECODE(EVL_FRQ, 2, FINAL_GRD)))         AS FINAL_GRD12,
                          MAX(DECODE(EVL_GBN, '1', DECODE(EVL_FRQ, 3, FINAL_GRD)))         AS FINAL_GRD13,
                          MAX(DECODE(EVL_GBN, '1', DECODE(EVL_FRQ, 4, FINAL_GRD)))         AS FINAL_GRD14,
                          MAX(DECODE(EVL_GBN, '2', DECODE(EVL_FRQ, 1, FINAL_GRD)))         AS FINAL_GRD21,
                          MAX(DECODE(EVL_GBN, '2', DECODE(EVL_FRQ, 2, FINAL_GRD)))         AS FINAL_GRD22,
                          MAX(DECODE(EVL_GBN, '2', DECODE(EVL_FRQ, 3, FINAL_GRD)))         AS FINAL_GRD23,
                          MAX(DECODE(EVL_GBN, '2', DECODE(EVL_FRQ, 4, FINAL_GRD)))         AS FINAL_GRD24,
                          MAX(DECODE(EVL_GBN, '3', DECODE(EVL_FRQ, 1, FINAL_GRD)))         AS FINAL_GRD31
                   FROM   ASNHR.T_EV_ABLRST
                   WHERE  GUBUN   = ?
                   AND    EVL_YY  BETWEEN ? AND ?
                   AND    ENO_NO  = ?
                   GROUP BY GUBUN, EVL_YY, ENO_NO
                 )
            ORDER BY EVL_YY
            ]]>
        </query>
    </sql>

<!-- 평가반영 -->

<!--
***********************************************************************
* @UseCase     : VLUE010
* @description : 성과급반영
***********************************************************************
* 2006/10/26      안준성        최초작성.
* 2006/11/06      박인이        수정.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 사번, 부서 해당하는 성과급반영을 조회 한다. -->

    <sql name="VLUE010_SHR">
        <description>성과급반영 조회</description>
        <query>
            <![CDATA[
            SELECT APPLY.GUBUN,
                   APPLY.EVL_YY,
                   APPLY.ENO_NO,
                   PSN.ENO_NM,
                   PSN.HEAD_NM,
                   PSN.DPT_NM,
                   PSN.JOB_NM,
                   PSN.GRD_1_1        AS EVL_GBN_1_1,
                   PSN.GRD_1_2        AS EVL_GBN_1_2,
                   PSN.GRD_1_3        AS EVL_GBN_1_3,
                   PSN.GRD_1_4        AS EVL_GBN_1_4,
                   PSN.GRD_2_1        AS EVL_GBN_2_1,
                   PSN.GRD_2_2        AS EVL_GBN_2_2,
                   PSN.GRD_2_3        AS EVL_GBN_2_3,
                   PSN.GRD_2_4        AS EVL_GBN_2_4,
                   APPLY.APPLY_RATE
            FROM   ASNHR.T_EV_EVLAPPLY APPLY,
                 ( SELECT HDRT.GUBUN,   HDRT.EVL_YY,   HDRT.ENO_NO, HDRT.ENO_NM,
                          HDRT.HEAD_NM, HDRT.HEAD_SEQ, HDRT.DPT_NM,  HDRT.DPT_SEQ, HDRT.JOB_NM, HDRT.JOB_SEQ, HDRT.HOB_SEQ, HDRT.HIRG_YMD,
                          CASE WHEN TYPE.ABL_CNT >= 1 THEN DECODE(HDRT.GRD_1_1, '0', CASE WHEN TYPE.ABL_CNT >= 4 AND HDRT.GRD_1_4 <> '0' THEN HDRT.GRD_1_4
                                                                                          WHEN TYPE.ABL_CNT >= 3 AND HDRT.GRD_1_3 <> '0' THEN HDRT.GRD_1_3
                                                                                          WHEN TYPE.ABL_CNT >= 2 AND HDRT.GRD_1_2 <> '0' THEN HDRT.GRD_1_2
                                                                                          ELSE 'B' END, HDRT.GRD_1_1)
                               ELSE '' END GRD_1_1,
                          CASE WHEN TYPE.ABL_CNT >= 2 THEN DECODE(HDRT.GRD_1_2, '0', CASE WHEN TYPE.ABL_CNT >= 4 AND HDRT.GRD_1_4 <> '0' THEN HDRT.GRD_1_4
                                                                                          WHEN TYPE.ABL_CNT >= 3 AND HDRT.GRD_1_3 <> '0' THEN HDRT.GRD_1_3
                                                                                          WHEN TYPE.ABL_CNT >= 1 AND HDRT.GRD_1_1 <> '0' THEN HDRT.GRD_1_1
                                                                                          ELSE 'B' END, HDRT.GRD_1_2)
                               ELSE '' END GRD_1_2,
                          CASE WHEN TYPE.ABL_CNT >= 3 THEN DECODE(HDRT.GRD_1_3, '0', CASE WHEN TYPE.ABL_CNT >= 4 AND HDRT.GRD_1_4 <> '0' THEN HDRT.GRD_1_4
                                                                                          WHEN TYPE.ABL_CNT >= 2 AND HDRT.GRD_1_2 <> '0' THEN HDRT.GRD_1_2
                                                                                          WHEN TYPE.ABL_CNT >= 1 AND HDRT.GRD_1_1 <> '0' THEN HDRT.GRD_1_1
                                                                                          ELSE 'B' END, HDRT.GRD_1_3)
                               ELSE '' END GRD_1_3,
                          CASE WHEN TYPE.ABL_CNT >= 4 THEN DECODE(HDRT.GRD_1_4, '0', CASE WHEN TYPE.ABL_CNT >= 3 AND HDRT.GRD_1_3 <> '0' THEN HDRT.GRD_1_3
                                                                                          WHEN TYPE.ABL_CNT >= 2 AND HDRT.GRD_1_2 <> '0' THEN HDRT.GRD_1_2
                                                                                          WHEN TYPE.ABL_CNT >= 1 AND HDRT.GRD_1_1 <> '0' THEN HDRT.GRD_1_1
                                                                                          ELSE 'B' END, HDRT.GRD_1_4)
                               ELSE '' END GRD_1_4,
                          CASE WHEN TYPE.ACH_CNT >= 1 THEN DECODE(HDRT.GRD_2_1, '0', CASE WHEN TYPE.ACH_CNT >= 4 AND HDRT.GRD_2_4 <> '0' THEN HDRT.GRD_2_4
                                                                                          WHEN TYPE.ACH_CNT >= 3 AND HDRT.GRD_2_3 <> '0' THEN HDRT.GRD_2_3
                                                                                          WHEN TYPE.ACH_CNT >= 2 AND HDRT.GRD_2_2 <> '0' THEN HDRT.GRD_2_2
                                                                                          ELSE 'B' END, HDRT.GRD_2_1)
                               ELSE '' END GRD_2_1,
                          CASE WHEN TYPE.ACH_CNT >= 2 THEN DECODE(HDRT.GRD_2_2, '0', CASE WHEN TYPE.ACH_CNT >= 4 AND HDRT.GRD_2_4 <> '0' THEN HDRT.GRD_2_4
                                                                                          WHEN TYPE.ACH_CNT >= 3 AND HDRT.GRD_2_3 <> '0' THEN HDRT.GRD_2_3
                                                                                          WHEN TYPE.ACH_CNT >= 1 AND HDRT.GRD_2_1 <> '0' THEN HDRT.GRD_2_1
                                                                                          ELSE 'B' END, HDRT.GRD_2_2)
                               ELSE '' END GRD_2_2,
                          CASE WHEN TYPE.ACH_CNT >= 3 THEN DECODE(HDRT.GRD_2_3, '0', CASE WHEN TYPE.ACH_CNT >= 4 AND HDRT.GRD_2_4 <> '0' THEN HDRT.GRD_2_4
                                                                                          WHEN TYPE.ACH_CNT >= 2 AND HDRT.GRD_2_2 <> '0' THEN HDRT.GRD_2_2
                                                                                          WHEN TYPE.ACH_CNT >= 1 AND HDRT.GRD_2_1 <> '0' THEN HDRT.GRD_2_1
                                                                                          ELSE 'B' END, HDRT.GRD_2_3)
                               ELSE '' END GRD_2_3,
                          CASE WHEN TYPE.ACH_CNT >= 4 THEN DECODE(HDRT.GRD_2_4, '0', CASE WHEN TYPE.ACH_CNT >= 3 AND HDRT.GRD_2_3 <> '0' THEN HDRT.GRD_2_3
                                                                                          WHEN TYPE.ACH_CNT >= 2 AND HDRT.GRD_2_2 <> '0' THEN HDRT.GRD_2_2
                                                                                          WHEN TYPE.ACH_CNT >= 1 AND HDRT.GRD_2_1 <> '0' THEN HDRT.GRD_2_1
                                                                                          ELSE 'B' END, HDRT.GRD_2_4)
                               ELSE '' END GRD_2_4
                   FROM ( SELECT HD.GUBUN,   HD.EVL_YY,   HD.ENO_NO, HD.ENO_NM,
                                 HD.HEAD_NM, HD.HEAD_SEQ, HD.DPT_NM,  HD.DPT_SEQ, HD.JOB_NM, HD.JOB_SEQ, HD.HOB_SEQ, HD.HIRG_YMD,
                                 MAX(DECODE(HD.EVL_GBN, '1', DECODE(HD.EVL_FRQ, 1, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0'), '0')) GRD_1_1,
                                 MAX(DECODE(HD.EVL_GBN, '1', DECODE(HD.EVL_FRQ, 2, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0'), '0')) GRD_1_2,
                                 MAX(DECODE(HD.EVL_GBN, '1', DECODE(HD.EVL_FRQ, 3, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0'), '0')) GRD_1_3,
                                 MAX(DECODE(HD.EVL_GBN, '1', DECODE(HD.EVL_FRQ, 4, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0'), '0')) GRD_1_4,
                                 MAX(DECODE(HD.EVL_GBN, '2', DECODE(HD.EVL_FRQ, 1, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0'), '0')) GRD_2_1,
                                 MAX(DECODE(HD.EVL_GBN, '2', DECODE(HD.EVL_FRQ, 2, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0'), '0')) GRD_2_2,
                                 MAX(DECODE(HD.EVL_GBN, '2', DECODE(HD.EVL_FRQ, 3, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0'), '0')) GRD_2_3,
                                 MAX(DECODE(HD.EVL_GBN, '2', DECODE(HD.EVL_FRQ, 4, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0'), '0')) GRD_2_4
                          FROM ( SELECT EVHD.GUBUN, EVHD.EVL_YY, EVHD.EVL_GBN, EVHD.EVL_FRQ, EVHD.ENO_NO, EVHD.EXCEPT_YN,
                                        INFO.ENO_NM,  INFO.HEAD_NM, INFO.DPT_NM, INFO.JOB_NM, INFO.HEAD_SEQ, INFO.DPT_SEQ, INFO.JOB_SEQ, INFO.HOB_SEQ, INFO.HIRG_YMD
                                 FROM   ASNHR.T_EV_EVLIST_HD EVHD,
                                      ( SELECT ENO_NO, DPT_CD,
                                               ASNHR.SF_GET_ENONAME('01', ENO_NO)               AS ENO_NM,     -- 성명
                                               ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)       AS HEAD_NM,    -- 본부명
                                               ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)          AS DPT_NM,     -- 부서명
                                               ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)        AS JOB_NM,     -- 직위명
                                               ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD)        AS HEAD_SEQ,   -- 본부명SEQ
                                               ASNHR.SF_GET_DPTSEQ('01', 'A4',DPT_CD)           AS DPT_SEQ,    -- 부서명SEQ
                                               ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD)         AS JOB_SEQ,    -- 직위명SEQ
                                               ASNHR.SF_GET_COMMSEQ('01', 'A2', HOB_CD)         AS HOB_SEQ,    -- 호봉명SEQ
                                               HIRG_YMD
                                        FROM ( SELECT PRI_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, HEAD_CD, DPT_CD, JOB_CD, HOB_CD, HIRG_YMD,
                                                      ROW_NUMBER() OVER(PARTITION BY ENO_NO ORDER BY PRI_GBN) RNUM
                                               FROM ( SELECT '1' PRI_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, HEAD_CD, DPT_CD, JOB_CD, HOB_CD, HIRG_YMD
                                                      FROM   ASNHR.T_EV_EVLIST_HD AA
                                                      WHERE  AA.GUBUN   = ?
                                                      AND    AA.EVL_YY  = ?
                                                      AND    AA.EVL_GBN = '2'
                                                      AND    AA.EVL_FRQ = ( SELECT MAX(EVL_FRQ) EVL_FRQ
                                                                            FROM   ASNHR.T_EV_EVLIST_HD
                                                                            WHERE  GUBUN   = AA.GUBUN
                                                                            AND    EVL_YY  = AA.EVL_YY
                                                                            AND    EVL_GBN = AA.EVL_GBN
                                                                            AND    ENO_NO  = AA.ENO_NO )  -- 성과평가(해당년도의 가장 큰 회차 정보)
                                                      UNION ALL
                                                      SELECT '2' PRI_GBN, GUBUN, EVL_YY, EVL_GBN, EVL_FRQ, ENO_NO, HEAD_CD, DPT_CD, JOB_CD, HOB_CD, HIRG_YMD
                                                      FROM   ASNHR.T_EV_EVLIST_HD BB
                                                      WHERE  BB.GUBUN   = ?
                                                      AND    BB.EVL_YY  = ?
                                                      AND    BB.EVL_GBN = '1'
                                                      AND    BB.EVL_FRQ = ( SELECT MAX(EVL_FRQ) EVL_FRQ
                                                                            FROM   ASNHR.T_EV_EVLIST_HD
                                                                            WHERE  GUBUN   = BB.GUBUN
                                                                            AND    EVL_YY  = BB.EVL_YY
                                                                            AND    EVL_GBN = BB.EVL_GBN
                                                                            AND    ENO_NO  = BB.ENO_NO )  -- 역량평가(해당년도의 가장 큰 회차 정보)
                                                    )
                                             )
                                        WHERE  RNUM = 1                                                   -- 성과/역량평가 모두 존재시 우선순위는 성과평가임
                                      ) INFO
                                 WHERE  EVHD.GUBUN  = ?
                                 AND    EVHD.EVL_YY = ?
                                 AND    EVHD.ENO_NO LIKE ?||'%'
                                 AND    EVHD.ENO_NO = INFO.ENO_NO                                         -- 해당년도의 사원에 대한 가장 최근의 본부/그룹정보를 가져오기 위함
                                 AND    INFO.DPT_CD LIKE ?||'%'
                               ) HD,
                                 ASNHR.T_EV_ABLRST RST
                          WHERE  HD.GUBUN   = RST.GUBUN  (+)
                          AND    HD.EVL_YY  = RST.EVL_YY (+)
                          AND    HD.EVL_GBN = RST.EVL_GBN(+)
                          AND    HD.EVL_FRQ = RST.EVL_FRQ(+)
                          AND    HD.ENO_NO  = RST.ENO_NO (+)
                          AND    RST.FEEDBK_GBN(+) = 'T'
                          GROUP BY HD.GUBUN,    HD.EVL_YY, HD.ENO_NO,  HD.ENO_NM, HD.HEAD_NM,
                                   HD.HEAD_SEQ, HD.DPT_NM, HD.DPT_SEQ, HD.JOB_NM, HD.JOB_SEQ,
                                   HD.HOB_SEQ,  HD.HIRG_YMD
                        ) HDRT,
                          ASNHR.T_EV_TYPE TYPE
                   WHERE  TYPE.GUBUN  = ?
                   AND    TYPE.EVL_YY = ?
                   AND    HDRT.GUBUN  = TYPE.GUBUN
                   AND    HDRT.EVL_YY = TYPE.EVL_YY
                 ) PSN
            WHERE  APPLY.GUBUN  = PSN.GUBUN
            AND    APPLY.EVL_YY = PSN.EVL_YY
            AND    APPLY.ENO_NO = PSN.ENO_NO
            AND    APPLY.APPLY_GBN = '1'
            ORDER BY PSN.HEAD_SEQ, PSN.DPT_SEQ, PSN.JOB_SEQ, PSN.HOB_SEQ DESC, PSN.HIRG_YMD
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도에 해당하는 본부별배분율, 평가반영비율, 등급별비율 및 최종평가결과 조회 한다. -->
    <sql name="VLUE010_SHR_01">
        <description>본부별배분율, 평가반영비율, 등급별비율 및 최종평가결과 조회 (VLUE020과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT DISTINCT '1' GBN, HEAD_CD AS VAL
            FROM   ASNHR.T_EV_EVLIST_HD A
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = '2'
            AND    HEAD_CD NOT IN (SELECT HEAD_CD
                                   FROM   ASNHR.T_EV_DEPTRATE
                                   WHERE  GUBUN   = A.GUBUN
                                   AND    EVL_YY  = A.EVL_YY
                                  )                                -- 구분 '1'은 평가대상자설정에 본부별배분율에 없는 본부코드가 존재하는지 확인
            UNION ALL
            SELECT '2' GBN, TO_CHAR(COUNT(*)) VAL
            FROM   ASNHR.T_EV_GRDRATE
            WHERE  GUBUN  = ?
            AND    EVL_YY = ?
            AND    GBN_CD = '2'                                    -- 구분 '2'는 상여금에 대한 등급별비율 데이터가 존재하는지 확인
            UNION ALL
            SELECT '3' GBN, TO_CHAR(COUNT(*)) VAL
            FROM   ASNHR.T_EV_GRDRATE
            WHERE  GUBUN  = ?
            AND    EVL_YY = ?
            AND    GBN_CD = '4'                                    -- 구분 '3'는 성과급에 대한 등급별비율 데이터가 존재하는지 확인
            UNION ALL
            SELECT DISTINCT '4' GBN, GROUP_CD AS VAL
            FROM   ASNHR.T_EV_EVLIST_HD A
            WHERE  GUBUN   = ?
            AND    EVL_YY  = ?
            AND    EVL_GBN = '2'
            AND    GROUP_CD <> ' '
            AND    GROUP_CD NOT IN (SELECT GROUP_CD
                                    FROM   ASNHR.T_EV_ADJRATE
                                    WHERE  GUBUN   = A.GUBUN
                                    AND    EVL_YY  = A.EVL_YY      -- 구분 '4'은 평가대상자설정에 평가반영비율에 없는 평가그룹코드가 존재하는지 확인
                                   )
            UNION ALL
            SELECT '5' GBN, TO_CHAR(COUNT(*)) VAL
            FROM   ASNHR.T_EV_ABLRST
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_GBN    = '1'
            AND    FEEDBK_GBN = 'T'
            AND    FINAL_GRD  IS NOT NULL
            AND    ROWNUM     = 1                                  -- 구분 '5'는 평가결과표(역량)에 최종등급이 존재하는지 확인
            UNION ALL
            SELECT '6' GBN, TO_CHAR(COUNT(*)) VAL
            FROM   ASNHR.T_EV_ABLRST
            WHERE  GUBUN      = ?
            AND    EVL_YY     = ?
            AND    EVL_GBN    = '2'
            AND    FEEDBK_GBN = 'T'
            AND    FINAL_GRD  IS NOT NULL
            AND    ROWNUM     = 1                                  -- 구분 '6'는 평가결과표(성과)에 최종등급이 존재하는지 확인
            ]]>
        </query>
    </sql>


    <!-- 업무구분, 해당년도에 해당하는 성과급반영을 한다. -->
    <sql name="VLUE010_INS">
        <description>성과급반영 (차후 삭제)</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EVLAPPLY
                 ( GUBUN, EVL_YY, ENO_NO, APPLY_GBN, APPLY_RATE, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            SELECT GUBUN, EVL_YY, ENO_NO, APPLY_GBN, APPLY_RATE, ?,       SYSDATE, ?,       SYSDATE
            FROM ( SELECT GUBUN, EVL_YY, ENO_NO, '1' APPLY_GBN, DPT_CD, COMM_CD, GROUP_CD,
                          NVL(SUM(RATE_RST * G_RATE * A_RATE), MAX(RATE_RST)) APPLY_RATE
                   FROM ( SELECT HPSN.GUBUN, HPSN.EVL_YY, HPSN.EVL_GBN, HPSN.EVL_FRQ, HPSN.ENO_NO, HPSN.DPT_CD, HPSN.COMM_CD, HPSN.GROUP_CD,
                                 CASE WHEN NVL(DPT.RATE_RST, 0) > 0 THEN DECODE(RST.FINAL_GRD, 'S', S_RATE, 'A', A_RATE, 'B', B_RATE, 'C', C_RATE, 'D', D_RATE, B_RATE)
                                      WHEN NVL(DPT.RATE_RST, 0) = 0 THEN 0
                                      WHEN NVL(DPT.RATE_RST, 0) < 0 THEN DECODE(RST.FINAL_GRD, 'D', S_RATE, 'C', A_RATE, 'B', B_RATE, 'A', C_RATE, 'S', D_RATE, B_RATE)
                                      END  G_RATE,
                                 CASE WHEN HPSN.EVL_GBN = '1' THEN DECODE(HPSN.EVL_FRQ, 1, RAT.ABL_01, 2, RAT.ABL_02, 3, RAT.ABL_03, 4, RAT.ABL_04, 0)
                                      WHEN HPSN.EVL_GBN = '2' THEN DECODE(HPSN.EVL_FRQ, 1, RAT.ACH_01, 2, RAT.ACH_02, 3, RAT.ACH_03, 4, RAT.ACH_04, 0)
                                      END  A_RATE,
                                 DPT.RATE_RST, RST.FINAL_GRD
                          FROM ( SELECT HD.GUBUN, HD.EVL_YY, HD.EVL_GBN, HD.EVL_FRQ, HD.ENO_NO,
                                        HD.HEAD_CD, HD.DPT_CD, HD.COMM_CD, HD.GROUP_CD
                                 FROM   ASNHR.T_EV_EVLIST_HD HD
                                 WHERE  HD.GUBUN   = ?
                                 AND    HD.EVL_YY  = ?
                               ) HPSN,
                               ( SELECT GUBUN, EVL_YY, HEAD_CD, RATE_RST
                                        FROM   ASNHR.T_EV_DEPTRATE D
                                        WHERE  GUBUN   = ?
                                        AND    EVL_YY  = ?
                                        AND    EVL_FRQ = (SELECT MAX(EVL_FRQ) EVL_FRQ
                                                          FROM   ASNHR.T_EV_DEPTRATE
                                                          WHERE  GUBUN  = D.GUBUN
                                                          AND    EVL_YY = D.EVL_YY )
                               ) DPT,
                               ( SELECT A.GUBUN, A.EVL_YY, (A.S_RATE / 100) S_RATE,
                                        (A.A_RATE / 100) A_RATE, (A.B_RATE / 100) B_RATE,
                                        (A.C_RATE / 100) C_RATE, (A.D_RATE / 100) D_RATE,
                                        B.COMM_CD, B.GROUP_CD, (ACH_01 / 100) ACH_01, (ACH_02 / 100) ACH_02,
                                        (ACH_03 / 100) ACH_03, (ACH_04 / 100) ACH_04, (ABL_01 / 100) ABL_01,
                                        (ABL_02 / 100) ABL_02, (ABL_03 / 100) ABL_03, (ABL_04 / 100) ABL_04
                                 FROM   ASNHR.T_EV_GRDRATE A,
                                        ASNHR.T_EV_ADJRATE B
                                 WHERE  A.GUBUN  = ?
                                 AND    A.EVL_YY = ?
                                 AND    A.GUBUN  = B.GUBUN
                                 AND    A.EVL_YY = B.EVL_YY
                                 AND    A.GBN_CD = '4'
                               ) RAT,
                                 ASNHR.T_EV_ABLRST RST
                          WHERE  HPSN.GUBUN    = ?
                          AND    HPSN.EVL_YY   = ?
                          AND    HPSN.GUBUN    = DPT.GUBUN
                          AND    HPSN.EVL_YY   = DPT.EVL_YY
                          AND    HPSN.HEAD_CD  = DPT.HEAD_CD
                          AND    HPSN.GUBUN    = RAT.GUBUN
                          AND    HPSN.EVL_YY   = RAT.EVL_YY
                          AND    HPSN.COMM_CD  = RAT.COMM_CD
                          AND    HPSN.GROUP_CD = RAT.GROUP_CD
                          AND    HPSN.GUBUN    = RST.GUBUN    (+)
                          AND    HPSN.EVL_YY   = RST.EVL_YY   (+)
                          AND    HPSN.EVL_GBN  = RST.EVL_GBN  (+)
                          AND    HPSN.EVL_FRQ  = RST.EVL_FRQ  (+)
                          AND    HPSN.ENO_NO   = RST.ENO_NO   (+)
                        )
                   GROUP BY GUBUN, EVL_YY, ENO_NO, DPT_CD, COMM_CD, GROUP_CD
                 )
            ]]>
        </query>
    </sql>

    <!-- 성과급 반영 수정 -->
    <sql name="VLUE010_UPT">
        <description>성과급 반영 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EVLAPPLY
            SET    APPLY_RATE = ?,                   -- 지급율
                   UPT_MAN    = ?,                   -- 최종수정자
                   UPT_YMD    = sysdate              -- 최종수정일시
            WHERE GUBUN       = ?
            AND   EVL_YY      = ?
            AND   ENO_NO      = ?
            AND   APPLY_GBN   = '1'
            ]]>
        </query>
    </sql>

    <!-- 성과급 반영 정보 삭제 -->
    <sql name="VLUE010_DEL">
        <description>성과급 반영 정보 삭제 (차후 삭제)</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_EVLAPPLY
            WHERE  GUBUN     = ?
            AND    EVL_YY    = ?
            AND    APPLY_GBN = '1'
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUE020
* @description : 상여금반영
***********************************************************************
* 2006/10/27      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 사번, 부서에 해당하는 상여금반영을 조회 한다. -->

    <sql name="VLUE020_SHR">
        <description>본부별배분율, 평가반영비율, 등급별비율 및 최종평가결과 조회 (VLUE020과 공통으로 사용) </description>
        <query>
            <![CDATA[
            SELECT '01'                                 GUBUN,
                   ?                                    EVL_YY,
                   ASNHR.SF_GET_DPTNAME('01','A4', B.DPT_CD)  DPT_NM,
                   ASNHR.SF_GET_COMMNAME('01','A2',B.JOB_CD)  JOB_NM,
                   B.ENO_NO                             ENO_NO,
                   ASNHR.SF_GET_ENONAME('01',B.ENO_NO)        ENO_NM,
                   A.EVL_1                              EVL_GBN_2_1,
                   A.EVL_2                              EVL_GBN_2_2,
                   ''                                   EVL_GBN_2_3,
                   ''                                   EVL_GBN_2_4,
                   A.APPLY_RATE                         APPLY_RATE
               FROM ASNHR.T_EV_EVLAPPLY A, ASNHR.T_CM_PERSON B
              WHERE A.EVL_YY = ?
                AND A.APPLY_GBN = '2'
                AND A.ENO_NO = B.ENO_NO
                AND B.ENO_NO LIKE '%'||?||'%'
                AND B.DPT_CD LIKE '%'||?||'%'
           ORDER BY ASNHR.SF_GET_DPTSEQ('01','A4', B.DPT_CD), ASNHR.SF_GET_COMMSEQ('01','A2',B.JOB_CD), B.HOB_CD DESC


            ]]>
        </query>
    </sql>


    <sql name="VLUE020_SHR_01">
        <description>상여금반영 조회</description>
        <query>
            <![CDATA[
            SELECT APPLY.GUBUN,
                   APPLY.EVL_YY,
                   APPLY.ENO_NO,
                   PSN.ENO_NM,
                   PSN.HEAD_NM,
                   PSN.DPT_NM,
                   PSN.JOB_NM,
                   PSN.GRD_1 EVL_GBN_2_1,
                   PSN.GRD_2 EVL_GBN_2_2,
                   PSN.GRD_3 EVL_GBN_2_3,
                   PSN.GRD_4 EVL_GBN_2_4,
                   APPLY.APPLY_RATE
            FROM   ASNHR.T_EV_EVLAPPLY APPLY,
                 ( SELECT HDRT.GUBUN,   HDRT.EVL_YY,   HDRT.EVL_GBN, HDRT.ENO_NO, HDRT.ENO_NM,  HDRT.HEAD_NM, HDRT.HEAD_SEQ,
                          HDRT.DPT_NM,  HDRT.DPT_SEQ, HDRT.JOB_NM, HDRT.JOB_SEQ,  HDRT.HOB_SEQ, HDRT.HIRG_YMD,
                          CASE WHEN TYPE.ACH_CNT >= 1 THEN DECODE(HDRT.GRD_1, '0', CASE WHEN TYPE.ACH_CNT >= 4 AND HDRT.GRD_4 <> '0' THEN HDRT.GRD_4
                                                                                        WHEN TYPE.ACH_CNT >= 3 AND HDRT.GRD_3 <> '0' THEN HDRT.GRD_3
                                                                                        WHEN TYPE.ACH_CNT >= 2 AND HDRT.GRD_2 <> '0' THEN HDRT.GRD_2
                                                                                        ELSE 'B' END, HDRT.GRD_1)
                               ELSE '' END GRD_1,
                          CASE WHEN TYPE.ACH_CNT >= 2 THEN DECODE(HDRT.GRD_2, '0', CASE WHEN TYPE.ACH_CNT >= 4 AND HDRT.GRD_4 <> '0' THEN HDRT.GRD_4
                                                                                        WHEN TYPE.ACH_CNT >= 3 AND HDRT.GRD_3 <> '0' THEN HDRT.GRD_3
                                                                                          WHEN TYPE.ACH_CNT >= 1 AND HDRT.GRD_1 <> '0' THEN HDRT.GRD_1
                                                                                        ELSE 'B' END, HDRT.GRD_2)
                               ELSE '' END GRD_2,
                          CASE WHEN TYPE.ACH_CNT >= 3 THEN DECODE(HDRT.GRD_3, '0', CASE WHEN TYPE.ACH_CNT >= 4 AND HDRT.GRD_4 <> '0' THEN HDRT.GRD_4
                                                                                        WHEN TYPE.ACH_CNT >= 2 AND HDRT.GRD_2 <> '0' THEN HDRT.GRD_2
                                                                                        WHEN TYPE.ACH_CNT >= 1 AND HDRT.GRD_1 <> '0' THEN HDRT.GRD_1
                                                                                        ELSE 'B' END, HDRT.GRD_3)
                               ELSE '' END GRD_3,
                          CASE WHEN TYPE.ACH_CNT >= 4 THEN DECODE(HDRT.GRD_4, '0', CASE WHEN TYPE.ACH_CNT >= 3 AND HDRT.GRD_3 <> '0' THEN HDRT.GRD_3
                                                                                        WHEN TYPE.ACH_CNT >= 2 AND HDRT.GRD_2 <> '0' THEN HDRT.GRD_2
                                                                                        WHEN TYPE.ACH_CNT >= 1 AND HDRT.GRD_1 <> '0' THEN HDRT.GRD_1
                                                                                        ELSE 'B' END, HDRT.GRD_4)
                               ELSE '' END GRD_4
                   FROM ( SELECT HD.GUBUN,   HD.EVL_YY,   HD.EVL_GBN, HD.EVL_FRQ, HD.ENO_NO, HD.ENO_NM,
                                 HD.HEAD_NM, HD.HEAD_SEQ, HD.DPT_NM,  HD.DPT_SEQ, HD.JOB_NM, HD.JOB_SEQ,
                                 HD.HOB_SEQ, HD.HIRG_YMD,
                                 MAX(DECODE(HD.EVL_FRQ, 1, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0')) GRD_1,
                                 MAX(DECODE(HD.EVL_FRQ, 2, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0')) GRD_2,
                                 MAX(DECODE(HD.EVL_FRQ, 3, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0')) GRD_3,
                                 MAX(DECODE(HD.EVL_FRQ, 4, DECODE(HD.EXCEPT_YN, 'T', 'B', NVL(RST.FINAL_GRD, '0')), '0')) GRD_4
                          FROM ( SELECT EVHD.GUBUN, EVHD.EVL_YY, EVHD.EVL_GBN, EVHD.EVL_FRQ, EVHD.ENO_NO, EVHD.EXCEPT_YN,
                                        INFO.ENO_NM,  INFO.HEAD_NM, INFO.DPT_NM, INFO.JOB_NM, INFO.HEAD_SEQ, INFO.DPT_SEQ, INFO.JOB_SEQ, INFO.HOB_SEQ, INFO.HIRG_YMD
                                 FROM   ASNHR.T_EV_EVLIST_HD EVHD,
                                      ( SELECT AA.GUBUN, AA.EVL_YY, AA.EVL_GBN, AA.EVL_FRQ, ENO_NO, DPT_CD,
                                               ASNHR.SF_GET_ENONAME('01', ENO_NO)               AS ENO_NM,     -- 성명
                                               ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)       AS HEAD_NM,    -- 본부명
                                               ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)          AS DPT_NM,     -- 부서명
                                               ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)        AS JOB_NM,     -- 직위명
                                               ASNHR.SF_GET_DPTSEQ( '01', 'B2', HEAD_CD)       AS HEAD_SEQ,   -- 본부명SEQ
                                               ASNHR.SF_GET_DPTSEQ('01', 'A4',DPT_CD)           AS DPT_SEQ,    -- 부서명SEQ
                                               ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD)         AS JOB_SEQ,    -- 직위명SEQ
                                               ASNHR.SF_GET_COMMSEQ('01', 'A2', HOB_CD)         AS HOB_SEQ,    -- 호봉명SEQ
                                               HIRG_YMD
                                        FROM   ASNHR.T_EV_EVLIST_HD AA
                                        WHERE  AA.GUBUN   = ?
                                        AND    AA.EVL_YY  = ?
                                        AND    AA.EVL_GBN = '2'
                                        AND    AA.EVL_FRQ = ( SELECT MAX(EVL_FRQ) EVL_FRQ
                                                              FROM   ASNHR.T_EV_EVLIST_HD
                                                              WHERE  GUBUN   = AA.GUBUN
                                                              AND    EVL_YY  = AA.EVL_YY
                                                              AND    EVL_GBN = AA.EVL_GBN
                                                              AND    ENO_NO  = AA.ENO_NO )  -- 성과평가(해당년도의 가장 큰 회차 정보)
                                      ) INFO
                                 WHERE  EVHD.GUBUN   = ?
                                 AND    EVHD.EVL_YY  = ?
                                 AND    EVHD.EVL_GBN = '2'
                                 AND    EVHD.ENO_NO LIKE ?||'%'
                                 AND    EVHD.GUBUN   = INFO.GUBUN
                                 AND    EVHD.EVL_YY  = INFO.EVL_YY
                                 AND    EVHD.EVL_GBN = INFO.EVL_GBN
                                 AND    EVHD.EVL_FRQ = INFO.EVL_FRQ
                                 AND    EVHD.ENO_NO = INFO.ENO_NO                           -- 해당년도의 사원에 대한 가장 최근의 본부/그룹정보를 가져오기 위함
                                 AND    INFO.DPT_CD LIKE ?||'%'
                               ) HD,
                                 ASNHR.T_EV_ABLRST RST
                          WHERE  HD.GUBUN   = RST.GUBUN  (+)
                          AND    HD.EVL_YY  = RST.EVL_YY (+)
                          AND    HD.EVL_GBN = RST.EVL_GBN(+)
                          AND    HD.EVL_FRQ = RST.EVL_FRQ(+)
                          AND    HD.ENO_NO  = RST.ENO_NO (+)
                          AND    RST.FEEDBK_GBN(+) = 'T'
                          GROUP BY HD.GUBUN,   HD.EVL_YY,   HD.EVL_GBN, HD.EVL_FRQ, HD.ENO_NO, HD.ENO_NM,
                                   HD.HEAD_NM, HD.HEAD_SEQ, HD.DPT_NM,  HD.DPT_SEQ, HD.JOB_NM, HD.JOB_SEQ, HD.HOB_SEQ, HD.HIRG_YMD
                        ) HDRT,
                          ASNHR.T_EV_TYPE TYPE
                   WHERE  TYPE.GUBUN  = ?
                   AND    TYPE.EVL_YY = ?
                   AND    HDRT.GUBUN  = TYPE.GUBUN
                   AND    HDRT.EVL_YY = TYPE.EVL_YY
                 ) PSN
            WHERE  APPLY.GUBUN  = PSN.GUBUN
            AND    APPLY.EVL_YY = PSN.EVL_YY
            AND    APPLY.ENO_NO = PSN.ENO_NO
            AND    APPLY.APPLY_GBN = '2'
            ORDER BY PSN.HEAD_SEQ, PSN.DPT_SEQ, PSN.JOB_SEQ, PSN.HOB_SEQ DESC, PSN.HIRG_YMD
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도에 해당하는 상여금반영을 한다. -->
    <sql name="VLUE020_INS">
        <description>상여금반영 (차후 삭제)</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EVLAPPLY
                ( GUBUN, EVL_YY, ENO_NO,
                    APPLY_GBN,  APPLY_RATE,
                    IPT_MAN, IPT_YMD,     UPT_MAN, UPT_YMD )
                SELECT GUBUN, EVL_YY, ENO_NO,
                    APPLY_GBN, --DPT_CD,     COMM_CD, GROUP_CD,
                    DECODE(ACH_CNT,
                            1,ROUND(NVL(EVL_GBN_2_1,0),1),
                            2,ROUND((NVL(EVL_GBN_2_1,0)+NVL(EVL_GBN_2_2,0))/2,1),
                            3,ROUND((NVL(EVL_GBN_2_1,0)+NVL(EVL_GBN_2_2,0)+NVL(EVL_GBN_2_3,0))/3,1),
                            4,ROUND((NVL(EVL_GBN_2_1,0)+NVL(EVL_GBN_2_2,0)+NVL(EVL_GBN_2_3,0)+NVL(EVL_GBN_2_4,0))/4,1),0) AS APPLY_RATE,
                    ? IPT_MAN,  SYSDATE AS IPT_YMD, ? UPT_MAN, SYSDATE AS UPT_MAN
                FROM
                (
                    SELECT MAX(A.GUBUN) AS GUBUN,
                           MAX(A.EVL_YY) AS EVL_YY,
                           A.ENO_NO AS ENO_NO,
                           MAX('2') AS APPLY_GBN,
                           MAX(B.DPT_CD) AS DPT_CD,
                           MAX(C.COMM_CD) AS COMM_CD,
                           MAX(C.GROUP_CD) AS GROUP_CD,
                           MAX(( SELECT ACH_CNT FROM ASNHR.T_EV_TYPE WHERE GUBUN=? AND EVL_YY=?)) AS ACH_CNT,
                           MAX( DECODE(A.EVL_GBN,'2',DECODE(A.EVL_FRQ,1,DECODE(A.FINAL_GRD,'S',D.S_RATE,'B',D.B_RATE,'C',D.C_RATE,'D',D.D_RATE,0))) ) AS EVL_GBN_2_1,
                           MAX( DECODE(A.EVL_GBN,'2',DECODE(A.EVL_FRQ,2,DECODE(A.FINAL_GRD,'S',D.S_RATE,'B',D.B_RATE,'C',D.C_RATE,'D',D.D_RATE,0))) ) AS EVL_GBN_2_2,
                           MAX( DECODE(A.EVL_GBN,'2',DECODE(A.EVL_FRQ,3,DECODE(A.FINAL_GRD,'S',D.S_RATE,'B',D.B_RATE,'C',D.C_RATE,'D',D.D_RATE,0))) ) AS EVL_GBN_2_3,
                           MAX( DECODE(A.EVL_GBN,'2',DECODE(A.EVL_FRQ,4,DECODE(A.FINAL_GRD,'S',D.S_RATE,'B',D.B_RATE,'C',D.C_RATE,'D',D.D_RATE,0))) ) AS EVL_GBN_2_4
                    FROM ASNHR.T_EV_ABLRST A, ASNHR.T_CM_PERSON B, ASNHR.T_EV_EVLIST_HD C,
                                (    SELECT GUBUN, EVL_YY, S_RATE, A_RATE, B_RATE, C_RATE, D_RATE
                                        FROM ASNHR.T_EV_GRDRATE
                                        WHERE GUBUN=?
                                            AND EVL_YY=?
                                            AND GBN_CD = '2' ) D
                    WHERE A.GUBUN = ?
                      AND A.EVL_YY = ?
                      AND A.ENO_NO = B.ENO_NO
                      AND A.GUBUN = C.GUBUN(+)
                      AND A.EVL_YY = C.EVL_YY(+)
                      AND A.EVL_GBN = C.EVL_GBN(+)
                      AND A.EVL_FRQ = C.EVL_FRQ(+)
                      AND A.ENO_NO = C.ENO_NO(+)
                      AND A.GUBUN = D.GUBUN(+)
                      AND A.EVL_YY = D.EVL_YY(+)
                    GROUP BY A.ENO_NO
                )
            ]]>
        </query>
    </sql>

    <!-- 상여금 반영 수정 -->
    <sql name="VLUE020_UPT">
        <description>상여금 반영 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_EVLAPPLY
            SET APPLY_RATE = ?,            --지급율
                UPT_MAN = ?,                    --최종수정자
                UPT_YMD = sysdate        --최종수정일시
            WHERE GUBUN = ?
            AND EVL_YY = ?
            AND ENO_NO= ?
            AND APPLY_GBN= '2'
            ]]>
        </query>
    </sql>

    <!-- 상여금반영 정보 삭제 -->
    <sql name="VLUE020_DEL">
        <description>상여금반영 정보 삭제 (차후 삭제)</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_EVLAPPLY
            WHERE  GUBUN = ?
            AND    EVL_YY = ?
            AND    APPLY_GBN= '2'
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUE030
* @description : 승진점수반영
***********************************************************************
* 2006/09/XX      XXX        최초작성.
***********************************************************************
-->

<!-- 직무관리 -->
<!--
***********************************************************************
* @UseCase     : VLUF010
* @description : 직무코드등록
***********************************************************************
* 2006/09/29     한학현        최초작성.
***********************************************************************
-->
    <!-- 직무정보 트리구성 데이터 조회 -->
    <sql name="VLUF010_SHR">
        <description>직무 트리 검색</description>
        <query>
            <![CDATA[
            SELECT     GUBUN,
                       DUTY_CD,
                       DUTY_NM,
                       TO_CHAR(END_YMD, 'YYYY-MM-DD') AS END_YMD,
                       UPDUTY_CD,
                       (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST B WHERE A.GUBUN=B.GUBUN AND A.UPDUTY_CD=B.DUTY_CD) AS UPDUTY_NM, -- 차후 function으로 대체
                       DOWNDUTY_CD,
                       DUTY_LBL,
                       COUNT_REM,
                       TO_CHAR(IPT_YMD, 'YYYY-MM-DD') AS IPT_YMD,
                       (SELECT THR_NM FROM VI_T_CM_DUTYMST C WHERE A.GUBUN=C.GUBUN AND A.DUTY_CD=C.DUTY_CD) AS HIGHDUTY_NM -- 2006-10-18 Added by DS (직무조사서_등록 팝업에서 사용)
            FROM       ASNHR.T_CM_DUTYMST A
            WHERE      GUBUN = ?
            ORDER BY   COUNT_REM, IPT_YMD
            ]]>
        </query>
    </sql>

    <!-- 직무정보 상세 데이터 조회 -->
    <sql name="VLUF010_SHR_01">
        <description>직무정보 상세 데이터 조회 </description>
        <query>
            <![CDATA[
            SELECT     GUBUN,
                       DUTY_CD,
                       DUTY_NM,
                       TO_CHAR(END_YMD, 'YYYY-MM-DD') AS END_YMD,
                       UPDUTY_CD,
                       (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST B WHERE A.GUBUN=B.GUBUN AND A.UPDUTY_CD=B.DUTY_CD) AS UPDUTY_NM, -- 차후 function으로 대체
                       DOWNDUTY_CD,
                       DUTY_LBL,
                       COUNT_REM,
                       TO_CHAR(IPT_YMD, 'YYYY-MM-DD') AS IPT_YMD
            FROM       ASNHR.T_CM_DUTYMST A
            WHERE      GUBUN = ?
            AND        LENGTH(COUNT_REM)= LENGTH(?)+3
            AND        COUNT_REM LIKE ?
            ORDER BY   COUNT_REM, IPT_YMD
            ]]>
        </query>
    </sql>

    <!-- 직무정보가 하나도 없으면 회사정보를 넣는다. -->
    <sql name="VLUF010_INS">
        <description>트리 신규구성을 위한 회사정보 입력</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_DUTYMST
                 ( GUBUN, DUTY_CD,
                   DUTY_NM, END_YMD, UPDUTY_CD, DOWNDUTY_CD, DUTY_LBL, COUNT_REM,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            SELECT  GUBUN, ' ',
                    COMP_NM, '', ' ', '1', '1', '000',
                    ?, SYSDATE,?, SYSDATE
            FROM    ASNHR.T_CM_COMPANY
            WHERE   GUBUN = ?
            ]]>
        </query>
    </sql>

    <!-- 직무정보 신규 저장 -->
    <sql name="VLUF010_INS_01">
        <description>직무정보 신규 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_DUTYMST
                 ( GUBUN, DUTY_CD,
                   DUTY_NM, END_YMD, UPDUTY_CD, DOWNDUTY_CD, DUTY_LBL, COUNT_REM,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            VALUES
                 ( ?, ?,
                   ?, ?, ?, ?, ?, ?,
                   ?, ?, ?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 직무코드 따른 직무정보 수정 -->
    <sql name="VLUF010_UPT_01">
        <description>직무정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_DUTYMST
            SET    DUTY_NM = ?, --직무이름
                   END_YMD = ?, --폐기일
                   UPDUTY_CD = ?, --상위직무코드
                   DOWNDUTY_CD = ?, --하위직무유무(1:없다,2:있다)
                   DUTY_LBL = ?, --레벨
                   COUNT_REM = ?, --부문별 SUM을 하기위한 SEQ
                   IPT_YMD = ?, --최초 등록일시 - 등록일자는 사용자로부터 받는다
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  GUBUN = ? --업무구분
            AND    DUTY_CD = ? --직무코드
            ]]>
        </query>
    </sql>

    <!-- 상위직무의 하위직무유무 update한다.(상위직무에 하위직무 있다고 update) -->
    <sql name="VLUF010_UPT_02">
        <description>상위 직무정보 하위직무유무(있다) 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_CM_DUTYMST SET DOWNDUTY_CD='2'
            WHERE   GUBUN = ?
            AND     DUTY_LBL= ?
            AND     COUNT_REM = ?
            ]]>
        </query>
    </sql>

    <!-- 상위직무의 하위직무유무 update한다.(상위직무에 하위직무 없다고 update) -->
    <sql name="VLUF010_UPT_03">
        <description>상위 직무정보 하위직무유무(없다) 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_CM_DUTYMST SET DOWNDUTY_CD='1'
            WHERE   GUBUN = ?
            AND     COUNT_REM = ?
            AND     1 = (SELECT COUNT(*) FROM ASNHR.T_CM_DUTYMST WHERE COUNT_REM LIKE ? )
            ]]>
        </query>
    </sql>

    <!-- 직무정보 삭제 -->
    <sql name="VLUF010_DEL_01">
        <description>직무정보 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_CM_DUTYMST
            WHERE  GUBUN = ?
            AND    DUTY_CD = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUF020
* @description : 직무기초
***********************************************************************
* 2006/09/29     안준성        최초작성.
* 2006/10/12     한학현        조사회차 조회 VLUF020_SHR_01 추가, 직무기초 조회 수정
***********************************************************************
-->

    <!-- 업무구분, 조사회차에 따른 직무기초 조회 -->
    <sql name="VLUF020_SHR">
        <description>직무기초 조회</description>
        <query>
            <![CDATA[
                SELECT   DUTY_NO,
                         TO_CHAR(DUTY_STDT,'YYYY-MM-DD') AS DUTY_STDT,
                         TO_CHAR(DUTY_ENDT,'YYYY-MM-DD') AS DUTY_ENDT,
                         DUTY_TITLE
                FROM     ASNHR.T_EV_DUTYBAS
                WHERE    GUBUN = ?
                AND      DUTY_NO LIKE '%'||?||'%'
                ORDER BY DUTY_NO
            ]]>
        </query>
    </sql>

    <!-- 직무기초 등록 -->
    <sql name="VLUF020_INS">
        <description>직무기초 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_DUTYBAS
                      ( GUBUN, DUTY_NO,
                        DUTY_STDT, DUTY_ENDT, DUTY_TITLE,
                        IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                      )
            VALUES
                      ( ?, ?,
                        ?, ?, ?,
                        ?, sysdate, ?, sysdate
                      )
            ]]>
        </query>
    </sql>

    <!-- 직무기초 수정 -->
    <sql name="VLUF020_UPT">
        <description>직무기초 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_DUTYBAS
                  SET DUTY_STDT = ?,        --조사시작일자
                           DUTY_ENDT = ?,        --조사종료일자
                           DUTY_TITLE = ?,        --조사제목(내용)
                         UPT_MAN = ?,        --최종수정자
                         UPT_YMD = sysdate        --최종수정일시
                  WHERE GUBUN = ?
                      AND DUTY_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 직무기초 삭제 -->
    <sql name="VLUF020_DEL">
        <description>직무기초 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_DUTYBAS
            WHERE  GUBUN = ?
                  AND DUTY_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 메뉴시작시 조사회차를 가지고 온다 -->
    <sql name="VLUF020_SHR_01">
        <description>조사회차 조회</description>
        <query>
            <![CDATA[
                SELECT     DUTY_NO, ASNHR.SF_GET_DPTNAME(?, 'B2', (SELECT HEAD_CD
                            FROM ASNHR.T_CM_PERSON WHERE ENO_NO = ?)) AS HEAD_NM,
                           TO_CHAR(DUTY_STDT,'YYYY-MM-DD') AS DUTY_STDT,
                           TO_CHAR(DUTY_ENDT,'YYYY-MM-DD') AS DUTY_ENDT
                FROM       ASNHR.T_EV_DUTYBAS
                WHERE      GUBUN = ?
                ORDER BY   DUTY_NO DESC
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUF030
* @description : 조사대상설정
***********************************************************************
* 2006/09/29     안준성        최초작성.
* 2006/10/12     한학현        조사대상설정 조회 수정, 등록(VLUF030_INS) 추가, 삭제(VLUF030_DEL) 추가
***********************************************************************
-->

    <!-- 업무구분, 조사회차, 사번, 부서에 따른 조사대상설정 조회 -->
    <sql name="VLUF030_SHR">
        <description>조사대상설정 조회</description>
        <query>
            <![CDATA[
            SELECT   A.DUTY_NO AS DUTY_NO,
                     A.ENO_NO AS ENO_NO,
                     B.ENO_NM AS ENO_NM,
                     B.DPT_CD AS DPT_CD,
                     B.DPT_NM AS DPT_NM,
                     B.JOB_NM AS JOB_NM
            FROM     ASNHR.T_EV_DUTYLST A, VI_T_CM_PERSON B
            WHERE    A.GUBUN = B.GUBUN(+)
            AND      A.ENO_NO = B.ENO_NO(+)
            AND      A.GUBUN=?
            AND      A.DUTY_NO LIKE '%'||?||'%'
            AND      A.ENO_NO LIKE '%'||?||'%'
             AND     B.DPT_CD LIKE '%'||?||'%'
            ORDER BY A.DUTY_NO, B.DPT_SEQ, B.JOB_SEQ, B.HOB_SEQ, B.HIRG_YMD
            ]]>
        </query>
    </sql>

    <!-- 직무기초 등록 -->
    <sql name="VLUF030_INS">
        <description>직무기초 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_DUTYLST
                      (GUBUN, DUTY_NO, ENO_NO, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                      (?, ?, ?, ?, sysdate, ?, sysdate)
            ]]>
        </query>
    </sql>

    <!-- 조사대상설정 대상여부 수정(대상자 여부가 않쓰이므로 미사용) -->
    <sql name="VLUF030_UPT">
        <description>조사대상설정 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_DUTYLST
            SET     DUTY_GBN = DECODE(?,'T','Y','F','N'),        --대상여부
                    UPT_MAN = ?,        --최종수정자
                    UPT_YMD = sysdate        --최종수정일시
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 조사대상설정 삭제 -->
    <sql name="VLUF030_DEL">
        <description>조사대상설정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_DUTYLST
            WHERE  GUBUN = ?
                  AND DUTY_NO = ?
                  AND ENO_NO = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUF040
* @description : 직무조사서
***********************************************************************
* 2006/10/16      오대성        최초작성.
***********************************************************************
-->

    <!-- 직무 조사서 정보를 가지고 온다 -->
    <sql name="VLUF040_SHR">
        <description>직무 조사서 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  A.GUBUN, A.DUTY_NO, TO_CHAR(A.DUTY_YMD, 'YYYY-MM-DD') DUTY_YMD,
                    A.DUTY_CD, B.DUTY_NM, B.SEC_CD, B.SEC_NM, B.THR_CD, B.THR_NM,
                    A.DUTY_OBJ, A.SCH_LBL
            FROM    ASNHR.T_EV_DUTYRSH A,
                    VI_T_CM_DUTYMST B
            WHERE   A.GUBUN = ?
            AND     A.DUTY_NO = ?
            AND     A.ENO_NO = ?
            AND     A.DUTY_CD = B.DUTY_CD
            ]]>
        </query>
    </sql>

    <!-- 직무 조사 대상자를 가지고 온다 -->
    <sql name="VLUF040_SHR_01">
        <description>직무 조사 대상자 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  ENO_NO
            FROM    ASNHR.T_EV_DUTYLST
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 직무 조사서 정보를 삭제한다. -->
    <sql name="VLUF040_DEL">
        <description>직무 조사서 정보 삭제</description>
        <query>
            <![CDATA[
            DELETE  ASNHR.T_EV_DUTYRSH
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     ENO_NO = ?
            AND     DUTY_CD = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUF041
* @description : 직무조사서_등록
***********************************************************************
* 2006/10/17      오대성        최초작성.
***********************************************************************
-->

    <!-- 직무 조사서 세부 내용을 조회한다. -->
    <sql name="VLUF041_SHR">
        <description>직무 조사서 세부 Item 조회</description>
        <query>
            <![CDATA[
            SELECT  GUBUN, DUTY_NO, ENO_NO, DUTY_CD, RESEARCH_GBN, CONTENTS_GBN,
                    SEQ_NO, ITEM_01, ITEM_02, ITEM_03, ITEM_04, ITEM_05
            FROM    ASNHR.T_EV_DUTYSUB
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     ENO_NO = ?
            AND     DUTY_CD = ?
            AND     RESEARCH_GBN = ?
            ORDER BY CONTENTS_GBN,SEQ_NO
            ]]>
        </query>
    </sql>

    <!-- 직무 조사서 세부 내용을 저장한다. -->
    <sql name="VLUF041_INS_01">
        <description>직무 조사서 세부 Item 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_DUTYSUB
                ( GUBUN, DUTY_NO, ENO_NO, DUTY_CD, RESEARCH_GBN, CONTENTS_GBN,
                  SEQ_NO, ITEM_01, ITEM_02, ITEM_03, ITEM_04, ITEM_05 )
            VALUES
                ( ?    , ?      , ?     , ?      , ?           , ?           ,
                  ?     , ?      , ?      , ?      , ?      , ?       )
            ]]>
        </query>
    </sql>

    <!-- 직무 조사서 정보를 저장한다. -->
    <sql name="VLUF041_INS_02">
        <description>직무 조사서 정보 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_DUTYRSH
                ( GUBUN, DUTY_NO, ENO_NO, DUTY_CD, DUTY_YMD, DUTY_OBJ, SCH_LBL,
                  IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                ( ?    , ?      , ?     , ?      , ?       , ?       , ?      ,
                  ?      , sysdate, ?      , sysdate )
            ]]>
        </query>
    </sql>

    <!-- 직무 조사서 세부 내용을 수정한다. -->
    <sql name="VLUF041_UPT_01">
        <description>직무 조사서 세부 Item 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_DUTYSUB
            SET     ITEM_01 = ?,
                    ITEM_02 = ?,
                    ITEM_03 = ?,
                    ITEM_04 = ?,
                    ITEM_05 = ?
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     ENO_NO = ?
            AND     DUTY_CD = ?
            AND     RESEARCH_GBN = ?
            AND     CONTENTS_GBN = ?
            AND     SEQ_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 직무 조사서 정보를 수정한다. -->
    <sql name="VLUF041_UPT_02">
        <description>직무 조사서 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_DUTYRSH
            SET     DUTY_YMD = ?,
                    DUTY_OBJ = ?,
                    SCH_LBL = ?,
                    UPT_MAN = ?,
                    UPT_YMD = sysdate
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     ENO_NO = ?
            AND     DUTY_CD = ?
            ]]>
        </query>
    </sql>

    <!-- 직무 조사서 세부 내용을 삭제한다. -->
    <sql name="VLUF041_DEL">
        <description>직무 조사서 세부 Item 삭제</description>
        <query>
            <![CDATA[
            DELETE  ASNHR.T_EV_DUTYSUB
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     ENO_NO = ?
            AND     DUTY_CD = ?
            AND     RESEARCH_GBN = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUF050
* @description : 직무별조사현황
***********************************************************************
* 2006/10/24      오대성        최초작성.
***********************************************************************
-->

    <!-- 직무별 직무 조사서 정보를 조회한다. -->
    <sql name="VLUF050_SHR">
        <description>직무 조사서 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  A.GUBUN, A.DUTY_NO, TO_CHAR(A.DUTY_YMD, 'YYYY-MM-DD') DUTY_YMD,
                    A.DUTY_CD, A.ENO_NO, B.ENO_NM, B.DPT_NM, B.JOB_NM, B.HEAD_NM,
                    C.DUTY_NM, C.SEC_CD, C.SEC_NM, C.THR_CD, C.THR_NM, A.DUTY_OBJ, A.SCH_LBL
            FROM    ( SELECT GUBUN, DUTY_NO, DUTY_YMD, DUTY_CD, ENO_NO, DUTY_OBJ, SCH_LBL
                      FROM   ASNHR.T_EV_DUTYRSH
                      WHERE  GUBUN = ?
                      AND    DUTY_NO = ?
                      AND    DUTY_CD = ? ) A,
                    ( SELECT  GUBUN, ENO_NO, ENO_NM, DPT_NM, JOB_NM, HEAD_NM,
                             HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ, HIRG_YMD
                      FROM    VI_T_CM_PERSON ) B,
                    VI_T_CM_DUTYMST C
            WHERE   A.GUBUN = B.GUBUN
            AND     A.ENO_NO = B.ENO_NO
            AND     A.DUTY_CD = C.DUTY_CD
            ORDER BY B.HEAD_SEQ, B.DPT_SEQ, B.JOB_SEQ, B.HOB_SEQ DESC, B.HIRG_YMD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUF060
* @description : 직무기술서
***********************************************************************
* 2006/10/24      오대성        최초작성.
***********************************************************************
-->

    <!-- 직무 기술서 정보를 가지고 온다 -->
    <sql name="VLUF060_SHR">
        <description>직무 기술서 정보 조회</description>
        <query>
            <![CDATA[
            SELECT  A.GUBUN, A.DUTY_NO, TO_CHAR(A.DUTY_YMD, 'YYYY-MM-DD') DUTY_YMD,
                    A.DUTY_CD, B.DUTY_NM, B.SEC_CD, B.SEC_NM, B.THR_CD, B.THR_NM,
                    A.DUTY_OBJ, A.SCH_LBL
            FROM    ASNHR.T_EV_DUTYDESC A,
                    VI_T_CM_DUTYMST B
            WHERE   A.GUBUN = ?
            AND     A.DUTY_NO = ?
            AND     A.DUTY_CD = B.DUTY_CD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUF061
* @description : 직무기술서_등록
***********************************************************************
* 2006/10/24      오대성        최초작성.
***********************************************************************
-->

    <!-- 직무 기술서 세부 내용을 조회한다. -->
    <sql name="VLUF061_SHR">
        <description>직무 조사서 세부 Item 조회</description>
        <query>
            <![CDATA[
            SELECT  GUBUN, DUTY_NO, ENO_NO, DUTY_CD, RESEARCH_GBN, CONTENTS_GBN,
                    SEQ_NO, ITEM_01, ITEM_02, ITEM_03, ITEM_04, ITEM_05
            FROM    ASNHR.T_EV_DUTYSUB
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     DUTY_CD = ?
            AND     RESEARCH_GBN = ?
            ORDER BY CONTENTS_GBN,SEQ_NO
            ]]>
        </query>
    </sql>

    <!-- 직무 기술서 세부 내용을 저장한다. -->
    <sql name="VLUF061_INS_01">
        <description>직무 조사서 세부 Item 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_DUTYSUB
                ( GUBUN, DUTY_NO, ENO_NO, DUTY_CD, RESEARCH_GBN, CONTENTS_GBN,
                  SEQ_NO, ITEM_01, ITEM_02, ITEM_03, ITEM_04, ITEM_05 )
            VALUES
                ( ?    , ?      , ?     , ?      , ?           , ?           ,
                  ?     , ?      , ?      , ?      , ?      , ?       )
            ]]>
        </query>
    </sql>

    <!-- 직무 기술서 정보를 저장한다. -->
    <sql name="VLUF061_INS_02">
        <description>직무 기술서 정보 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_DUTYDESC
                ( GUBUN, DUTY_NO, DUTY_CD, DUTY_YMD, DUTY_OBJ, SCH_LBL,
                  IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                ( ?    , ?      , ?      , ?       , ?       , ?      ,
                  ?      , sysdate, ?      , sysdate )
            ]]>
        </query>
    </sql>

    <!-- 직무 기술서 세부 내용을 수정한다. -->
    <sql name="VLUF061_UPT_01">
        <description>직무 조사서 세부 Item 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_DUTYSUB
            SET     ITEM_01 = ?,
                    ITEM_02 = ?,
                    ITEM_03 = ?,
                    ITEM_04 = ?,
                    ITEM_05 = ?
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     DUTY_CD = ?
            AND     RESEARCH_GBN = ?
            AND     CONTENTS_GBN = ?
            AND     SEQ_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 직무 기술서 세부 내용을 수정한다. -->
    <sql name="VLUF061_UPT_02">
        <description>직무 기술서 정보 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_DUTYDESC
            SET     DUTY_YMD = ?,
                    DUTY_OBJ = ?,
                    SCH_LBL = ?,
                    UPT_MAN = ?,
                    UPT_YMD = sysdate
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     DUTY_CD = ?
            ]]>
        </query>
    </sql>

    <!-- 직무 기술서 세부 내용을 삭제한다. -->
    <sql name="VLUF061_DEL">
        <description>직무 조사서 세부 Item 삭제</description>
        <query>
            <![CDATA[
            DELETE  ASNHR.T_EV_DUTYSUB
            WHERE   GUBUN = ?
            AND     DUTY_NO = ?
            AND     DUTY_CD = ?
            AND     RESEARCH_GBN = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUF070
* @description : 직무기술서현황
***********************************************************************
* 2006/10/26      오대성        최초작성.
***********************************************************************
-->

    <sql name="VLUF070_SHR">
        <description>직무기술서현황조회</description>
        <query>
            <![CDATA[
            SELECT  A.DUTY_NO, TO_CHAR(A.DUTY_YMD, 'YYYY-MM-DD') DUTY_YMD,
                    TO_CHAR(A.UPT_YMD,'YYYY-MM-DD') AS UPT_YMD,
                    A.DUTY_CD, B.DUTY_NM, B.SEC_CD, B.SEC_NM, B.THR_CD,
                    B.THR_NM, A.DUTY_OBJ, A.SCH_LBL
            FROM    ASNHR.T_EV_DUTYDESC A,
                    VI_T_CM_DUTYMST B
            WHERE   A.GUBUN = ?
            AND     A.DUTY_NO = ?
            AND     A.DUTY_CD = ?
            AND     A.DUTY_CD = B.DUTY_CD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUG010
* @description : 다면평가 결과조회
***********************************************************************
* 2008/11/13      김우태        최초작성.
***********************************************************************
-->
    <!-- 다면평가 결과를 조회 한다. -->
    <sql name="VLUG010_SHR_01">
        <description>본부별평가현황 조회</description>
        <query>
            <![CDATA[
            SELECT ASNHR.SF_GET_DPTNAME('01','B2',A.HEAD_CD)       HEAD_NM,
                   ASNHR.SF_GET_DPTNAME('01','A4',A.DPT_CD)        DPT_NM,
                   ASNHR.SF_GET_COMMNAME('01','A2',A.JOB_CD)       JOB_NM,
                   A.ENO_NO                                  ENO_NO,
                   ASNHR.SF_GET_ENONAME('01',A.ENO_NO)             ENO_NM,
                   B.CNT                                     F_CNT1,
                   C.CNT                                     F_CNT2,
                   D.AVG_01                                  F_SUBPNT1,
                   D.AVG_02                                  F_SUBPNT2,
                   D.AVG_03                                  F_SUBPNT3,
                   D.AVG_04                                  F_SUBPNT4,
                   E.CNT                                     D_CNT1,
                   F.CNT                                     D_CNT2,
                   G.AVG_01                                  D_SUBPNT1,
                   G.AVG_02                                  D_SUBPNT2,
                   G.AVG_03                                  D_SUBPNT3,
                   G.AVG_04                                  D_SUBPNT4,
                   (D.AVG_04+G.AVG_04)/2                     SUBPNT_AVG
              FROM (SELECT ENO_NO, HEAD_CD, DPT_CD, JOB_CD
                      FROM ASNHR.T_EV_DEPTVAL
                     WHERE EVL_YY = ?
                       AND EVL_FRQ = ? ) A,
                   (SELECT ENO_NO, COUNT(*) CNT
                      FROM (SELECT ENO_NO, EVLENO_NO
                              FROM ASNHR.T_EV_ABLTBL
                             WHERE EVL_YY = ?
                               AND EVL_FRQ = ?
                               AND UPDN_GBN = '3'
                               AND EST_CD = '01'
                          GROUP BY ENO_NO, EVLENO_NO)
                  GROUP BY ENO_NO) B,
                   (SELECT ENO_NO, nvl2(EVLENO_NO1,1,0) + nvl2(EVLENO_NO1,1,0) + nvl2(EVLENO_NO1,1,0) AS CNT
							FROM ASNHR.T_EV_DEPTVAL) C,
                   (SELECT B.ENO_NO ENO_NO,
                           SUM(DECODE(B.EST_CD,'01',SUBPNT_AVG)) AVG_01, SUM(DECODE(B.EST_CD,'02',SUBPNT_AVG)) AVG_02, SUM(DECODE(B.EST_CD,'03',SUBPNT_AVG)) AVG_03,
                           SUM(DECODE(B.EST_CD,'01',SUBPNT_AVG))+SUM(DECODE(B.EST_CD,'02',SUBPNT_AVG))+SUM(DECODE(B.EST_CD,'03',SUBPNT_AVG)) AVG_04
                      FROM (SELECT A.ENO_NO ENO_NO, A.EST_CD EST_CD, ROUND(AVG(SUBPNT_AVG),1) SUBPNT_AVG
                              FROM (SELECT ENO_NO, EVLENO_NO, EST_CD, SUM(SUBPNT_AVG) SUBPNT_AVG
                                      FROM ASNHR.T_EV_ABLTBL
                                     WHERE EVL_YY = ?
                                       AND EVL_FRQ = ?
                                      AND UPDN_GBN = '3'
                                 GROUP BY ENO_NO, EVLENO_NO, EST_CD ) A
                         GROUP BY A.ENO_NO, A.EST_CD) B
                 GROUP BY B.ENO_NO) D,
                  (SELECT ENO_NO, COUNT(*) CNT
                     FROM (SELECT ENO_NO, EVLENO_NO
                             FROM ASNHR.T_EV_ABLTBL
                            WHERE EVL_YY = ?
                              AND EVL_FRQ = ?
                              AND UPDN_GBN = '1'
                              AND EST_CD = '01'
                         GROUP BY ENO_NO, EVLENO_NO)
                GROUP BY ENO_NO) E,
                 (SELECT EVLENO_NO ENO_NO, COUNT(*) CNT
                    FROM (SELECT ENO_NO, EVLENO_NO
                            FROM ASNHR.T_EV_EVLIST_DT
                   WHERE EVL_YY = ?
                     AND ENO_NO IN (SELECT ENO_NO FROM ASNHR.T_EV_EVLIST_HD WHERE EVL_YY = ? AND EVL_GBN = '1' AND EVL_FRQ = ? AND EXCEPT_YN = 'F')
                     AND EVL_GBN = '1'
                     AND EVL_FRQ = ?
                     AND EVLENO_NO IN (SELECT ENO_NO FROM ASNHR.T_EV_DEPTVAL WHERE EVL_YY = ? AND EVL_FRQ = ?)) A
                GROUP BY A.EVLENO_NO) F,
                 (SELECT B.ENO_NO ENO_NO,
                         SUM(DECODE(B.EST_CD,'01',SUBPNT_AVG)) AVG_01, SUM(DECODE(B.EST_CD,'02',SUBPNT_AVG)) AVG_02, SUM(DECODE(B.EST_CD,'03',SUBPNT_AVG)) AVG_03,
                         SUM(DECODE(B.EST_CD,'01',SUBPNT_AVG))+SUM(DECODE(B.EST_CD,'02',SUBPNT_AVG))+SUM(DECODE(B.EST_CD,'03',SUBPNT_AVG)) AVG_04
                    FROM (SELECT A.ENO_NO ENO_NO, A.EST_CD EST_CD, ROUND(AVG(SUBPNT_AVG),1) SUBPNT_AVG
                            FROM (SELECT ENO_NO, EVLENO_NO, EST_CD, SUM(SUBPNT_AVG) SUBPNT_AVG
                                    FROM ASNHR.T_EV_ABLTBL
                                   WHERE EVL_YY = ?
                                     AND EVL_FRQ = ?
                                     AND UPDN_GBN = '1'
                                GROUP BY ENO_NO, EVLENO_NO, EST_CD ) A
                       GROUP BY A.ENO_NO, A.EST_CD) B
               GROUP BY B.ENO_NO) G
       WHERE A.ENO_NO = B.ENO_NO(+)
         AND A.ENO_NO = C.ENO_NO(+)
         AND A.ENO_NO = D.ENO_NO(+)
         AND A.ENO_NO = E.ENO_NO(+)
         AND A.ENO_NO = F.ENO_NO(+)
         AND A.ENO_NO = G.ENO_NO(+)
         AND A.HEAD_CD LIKE '%'||?||'%'
    ORDER BY ASNHR.SF_GET_DPTSEQ('01','B2',A.HEAD_CD), ASNHR.SF_GET_COMMSEQ('01','A2',A.JOB_CD)
            ]]>
        </query>
    </sql>

<!-- 직무관리 => 교육용-->
<!--
***********************************************************************
* @UseCase     : VLUF011
* @description : 직무코드등록  => 교육용
***********************************************************************
* 2006/09/29     한학현        최초작성.
***********************************************************************
-->
    <!-- 직무정보 트리구성 데이터 조회 -->
    <sql name="VLUF011_SHR">
        <description>직무 트리 검색</description>
        <query>
            <![CDATA[
            SELECT     GUBUN,
                       DUTY_CD,
                       DUTY_NM,
                       TO_CHAR(END_YMD, 'YYYY-MM-DD') AS END_YMD,
                       UPDUTY_CD,
                       (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST B WHERE A.GUBUN=B.GUBUN AND A.UPDUTY_CD=B.DUTY_CD) AS UPDUTY_NM, -- 차후 function으로 대체
                       DOWNDUTY_CD,
                       DUTY_LBL,
                       COUNT_REM,
                       TO_CHAR(IPT_YMD, 'YYYY-MM-DD') AS IPT_YMD,
                       (SELECT THR_NM FROM VI_T_CM_DUTYMST C WHERE A.GUBUN=C.GUBUN AND A.DUTY_CD=C.DUTY_CD) AS HIGHDUTY_NM -- 2006-10-18 Added by DS (직무조사서_등록 팝업에서 사용)
            FROM       ASNHR.T_CM_DUTYMST A
            WHERE      GUBUN = ?
            ORDER BY   COUNT_REM, IPT_YMD
            ]]>
        </query>
    </sql>

    <!-- 직무정보 상세 데이터 조회 -->
    <sql name="VLUF011_SHR_01">
        <description>직무정보 상세 데이터 조회 </description>
        <query>
            <![CDATA[
            SELECT     GUBUN,
                       DUTY_CD,
                       DUTY_NM,
                       TO_CHAR(END_YMD, 'YYYY-MM-DD') AS END_YMD,
                       UPDUTY_CD,
                       (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST B WHERE A.GUBUN=B.GUBUN AND A.UPDUTY_CD=B.DUTY_CD) AS UPDUTY_NM, -- 차후 function으로 대체
                       DOWNDUTY_CD,
                       DUTY_LBL,
                       COUNT_REM,
                       TO_CHAR(IPT_YMD, 'YYYY-MM-DD') AS IPT_YMD, ACH_COM, ACH_JOB
            FROM       ASNHR.T_CM_DUTYMST A
            WHERE      GUBUN = ?
            AND        LENGTH(COUNT_REM)= LENGTH(?)+3
            AND        COUNT_REM LIKE ?
            ORDER BY   COUNT_REM, IPT_YMD
            ]]>
        </query>
    </sql>
    <!-- 직무정보 교육분류코드 조회 -->
    <sql name="VLUF011_SHR_02">
        <description>직무정보 교육분류코드 조회 </description>
        <query>
            <![CDATA[
            SELECT   GUBUN,
                           DUTY_CD,
                           CLAS_CD,
                           ASNHR.SF_GET_COMMNAME('01', 'QE', CLAS_CD) AS CLAS_NM    -- 교육분류코드명
            FROM       ASNHR.T_ED_CLASS
            WHERE      GUBUN = '01'
                AND       DUTY_CD = ?
            ]]>
        </query>
    </sql>
    <!-- 직무정보가 하나도 없으면 회사정보를 넣는다. -->
    <sql name="VLUF011_INS">
        <description>트리 신규구성을 위한 회사정보 입력</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_DUTYMST
                 ( GUBUN, DUTY_CD,
                   DUTY_NM, END_YMD, UPDUTY_CD, DOWNDUTY_CD, DUTY_LBL, COUNT_REM,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            SELECT  GUBUN, ' ',
                    COMP_NM, '', ' ', '1', '1', '000',
                    ?, SYSDATE,?, SYSDATE
            FROM    ASNHR.T_CM_COMPANY
            WHERE   GUBUN = ?
            ]]>
        </query>
    </sql>

    <!-- 직무정보 신규 저장 -->
    <sql name="VLUF011_INS_01">
        <description>직무정보 신규 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_DUTYMST
                 ( GUBUN, DUTY_CD,
                   DUTY_NM, END_YMD, UPDUTY_CD, DOWNDUTY_CD, DUTY_LBL, COUNT_REM, ACH_COM, ACH_JOB,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            VALUES
                 ( ?, ?,
                   ?, ?, ?, ?, ?, ?,?,?,
                   ?, ?, ?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 직무코드 따른 직무정보 수정 -->
    <sql name="VLUF011_UPT_01">
        <description>직무정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_DUTYMST
            SET    DUTY_NM = ?, --직무이름
                   END_YMD = ?, --폐기일
                   UPDUTY_CD = ?, --상위직무코드
                   DOWNDUTY_CD = ?, --하위직무유무(1:없다,2:있다)
                   DUTY_LBL = ?, --레벨
                   COUNT_REM = ?, --부문별 SUM을 하기위한 SEQ
                   ACH_COM = ?,  -- 공통목표
                   ACH_JOB = ?,   -- 직무목표
                   IPT_YMD = ?, --최초 등록일시 - 등록일자는 사용자로부터 받는다
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  GUBUN = ? --업무구분
            AND    DUTY_CD = ? --직무코드
            ]]>
        </query>
    </sql>

    <!-- 상위직무의 하위직무유무 update한다.(상위직무에 하위직무 있다고 update) -->
    <sql name="VLUF011_UPT_02">
        <description>상위 직무정보 하위직무유무(있다) 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_CM_DUTYMST SET DOWNDUTY_CD='2'
            WHERE   GUBUN = ?
            AND     DUTY_LBL= ?
            AND     COUNT_REM = ?
            ]]>
        </query>
    </sql>

    <!-- 상위직무의 하위직무유무 update한다.(상위직무에 하위직무 없다고 update) -->
    <sql name="VLUF011_UPT_03">
        <description>상위 직무정보 하위직무유무(없다) 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_CM_DUTYMST SET DOWNDUTY_CD='1'
            WHERE   GUBUN = ?
            AND     COUNT_REM = ?
            AND     1 = (SELECT COUNT(*) FROM ASNHR.T_CM_DUTYMST WHERE COUNT_REM LIKE ? )
            ]]>
        </query>
    </sql>

    <!-- 직무정보 삭제 -->
    <sql name="VLUF011_DEL_01">
        <description>직무정보 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_CM_DUTYMST
            WHERE  GUBUN = ?
            AND    DUTY_CD = ?
            ]]>
        </query>
    </sql>
    <!-- 직무/교육 과정 신규 저장 -->
    <sql name="VLUF011_INS_05">
        <description>직무/교육 과정 신규 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_ED_CLASS
                 ( GUBUN, DUTY_CD,CLAS_CD,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            VALUES
                 ( ?, ?,?,
                   ?, SYSDATE, ?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 직무코드 따른 직무/교육 과정 수정 -->
    <sql name="VLUF011_UPT_05">
        <description>직무/교육 과정 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_ED_CLASS
            SET    CLAS_CD = ?, --직무이름
                      UPT_MAN = ?, --최종 수정자
                      UPT_YMD = SYSDATE --최종 수정일시
            WHERE  GUBUN = '01'
            AND    DUTY_CD = ? --직무코드
            ]]>
        </query>
    </sql>
    <!-- 직무정보 삭제 -->
    <sql name="VLUF011_DEL_05">
        <description>직무/교육 과정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_ED_CLASS
            WHERE  GUBUN = ?
            AND    DUTY_CD = ?
            AND    CLAS_CD = ?
            ]]>
        </query>
    </sql>

    <!-- 다면평가(동료) 조회 한다. -->
    <sql name="VLUG070_SHR_01">
        <description>다면평가(동료)  조회</description>
        <query>
            <![CDATA[
			SELECT
			EVL_YY, EVL_FRQ, HEAD_CD,
			   DPT_CD, DUTY_CD, JOB_CD,
			   ENO_NO, IPT_MAN, IPT_YMD,
			   UPT_MAN, UPT_YMD,
			    ASNHR.SF_GET_ENONAME('01', EVLENO_NO1) AS EVLENO_NO1,
			    ASNHR.SF_GET_ENONAME('01', EVLENO_NO2) AS EVLENO_NO2,
			    ASNHR.SF_GET_ENONAME('01', EVLENO_NO3) AS EVLENO_NO3,
			   ASNHR.SF_GET_ENONAME('01', ENO_NO)         AS ENO_NM,
			    ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD)                           AS HEAD_NM,
				ASNHR.SF_GET_DPTSEQ('01', 'B2', HEAD_CD)                            AS HEAD_SEQ,
				ASNHR.SF_GET_DPTNAME('01', 'A4',DPT_CD)                              AS DPT_NM,
				ASNHR.SF_GET_DPTSEQ('01', 'A4',DPT_CD)                               AS DPT_SEQ,
				ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)                            AS JOB_NM,
				ASNHR.SF_GET_COMMSEQ('01', 'A2', JOB_CD)                             AS JOB_SEQ,
                   '' AS IEVLENO_NO11,                                      -- (역량)1차평가자 사번 입력컬럼
                   '' AS IEVLENO_NM11,                                      -- (역량)1차평가자 성명 입력컬럼
                   '' AS IEVLENO_NO12,                                      -- (역량)2차평가자 사번 입력컬럼
                   '' AS IEVLENO_NM12,                                      -- (역량)2차평가자 성명 입력컬럼
                   '' AS IEVLENO_NO13,                                      -- (역량)3차평가자 사번 입력컬럼
                   '' AS IEVLENO_NM13                                      -- (역량)3차평가자 성명 입력컬럼
			FROM ASNHR.T_EV_DEPTVAL
            WHERE   EVL_YY = ?
                 AND   ENO_NO LIKE ? || '%'
                 AND   DPT_CD LIKE ? || '%'
            ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ,  ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 다면평가(동료) 신규 저장 -->
    <sql name="VLUG070_INS">
        <description>다면평가(동료) 신규 저장</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_DEPTVAL (
			   EVL_YY, EVL_FRQ, HEAD_CD,
			   DPT_CD, DUTY_CD, JOB_CD,
			   ENO_NO, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
			SELECT
			   ?, '1',          HEAD_CD,
			   DPT_CD, DUTY_CD, JOB_CD,
			   ENO_NO, ?, SYSDATE, ?, SYSDATE
			FROM ASNHR.T_CM_PERSON
			WHERE RET_YMD IS NULL
			  AND OCC_CD IN ('1','2','3')
            ]]>
        </query>
    </sql>

    <!-- 다면평가 1차평가자 저장 -->
    <sql name="VLUG070_UPT_01">
        <description>다면평가 1차평가자 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_DEPTVAL
			SET    EVLENO_NO1 = ?,
                      UPT_MAN      = ?,
                      UPT_YMD      = sysdate
            WHERE  EVL_YY         = ?
            AND       EVL_FRQ      = ?
            AND       ENO_NO       = ?

            ]]>
        </query>
    </sql>

    <!-- 다면평가 2차평가자 저장 -->
    <sql name="VLUG070_UPT_02">
        <description>다면평가 1차평가자 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_DEPTVAL
			SET    EVLENO_NO2 = ?,
                      UPT_MAN      = ?,
                      UPT_YMD      = sysdate
            WHERE  EVL_YY         = ?
            AND       EVL_FRQ      = ?
            AND       ENO_NO       = ?

            ]]>
        </query>
    </sql>

    <!-- 다면평가 3차평가자 저장 -->
    <sql name="VLUG070_UPT_03">
        <description>다면평가 1차평가자 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_DEPTVAL
			SET    EVLENO_NO3 = ?,
                      UPT_MAN      = ?,
                      UPT_YMD      = sysdate
            WHERE  EVL_YY         = ?
            AND       EVL_FRQ      = ?
            AND       ENO_NO       = ?

            ]]>
        </query>
    </sql>
    <!-- 이미 설정된 평가대상자 정보를 삭제 한다. -->
    <sql name="VLUG070_DEL_01">
        <description>평가대상설정 데이터 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_DEPTVAL
            WHERE  EVL_YY       = ?
            AND    EVL_FRQ      = ?
            AND    ENO_NO       = ?
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : VLUI100
* @description : 고과평가
***********************************************************************
* 2012/04/10      이동훈        최초작성.
***********************************************************************
-->


    <!-- 고과항목 조회 한다. -->
    <sql name="VLUI010_SHR">
        <description>고과항목 조회</description>
        <query>
            <![CDATA[
			SELECT
				 A.EVAYM,
				 A.GRPCD,
				 A.DIVCD,
				 A.JOBGRPH,
				 A.PRTSEQ,
				 A.GRPITEM,
				 A.ASKITEM, 	A.ESCR ,   	A.GSCR,
				 A.MSCR,      	A.LSCR,    	A.PSCR
			FROM ASNHR.T_EV_HVSHEET A
            WHERE      A.EVAYM = ?
                 AND   A.GRPCD = ?
            ORDER BY A.EVAYM, A.GRPCD,A.DIVCD, A.PRTSEQ, A.JOBGRPH
            ]]>
        </query>
    </sql>

    <!-- 고과항목 조회 한다. -->
    <sql name="VLUI010_SHR_01">
        <description>고과항목 조회</description>
        <query>
            <![CDATA[
			SELECT DISTINCT  COALESCE(EVAYM,'')  AS EVAYM
				FROM ASNHR.T_EV_HVSHEET
			WHERE EVAYM=?
            ]]>
        </query>
    </sql>

    <!-- 고과항목 조회 한다. -->
    <sql name="VLUI010_SHR_02">
        <description>고과항목 조회</description>
        <query>
            <![CDATA[
			SELECT
				EVAYM,   GRPCD,   DIVCD,   JOBGRPH, PRTSEQ,
				GRPITEM, ASKITEM, ESCR,    GSCR,    MSCR,
				LSCR,    PSCR
			FROM ASNHR.T_EV_HVSHEET
			WHERE EVAYM =(SELECT COALESCE(MAX(B.EVAYM),'') EVAYM FROM ASNHR.T_EV_HVSHEET B)
            ]]>
        </query>
    </sql>

    <!-- 고과항목 생성 한다. -->
    <sql name="VLUI010_SAV">
        <description>데이터 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVSHEET
                 ( EVAYM,       GRPCD,      DIVCD,     JOBGRPH,     PRTSEQ,
                   GRPITEM,  	ASKITEM, 	ESCR, 	   GSCR, 	    MSCR, 			LSCR, 		PSCR )
            VALUES
                 ( ?,           ?,           ?,           ?,           ?,
                   ?,           ?,           ?,           ?,           ?,           ?,           ?)
            ]]>
        </query>
    </sql>

    <!-- 고과항목 수정 한다. -->
    <sql name="VLUI010_UPT">
        <description>데이터 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_EV_HVSHEET
            SET     GRPITEM = ?,
                    ASKITEM = ?,
                    ESCR = ?,
                    GSCR = ?,
                    MSCR = ?,
                    LSCR = ?,
                    PSCR = ?
            WHERE   EVAYM = ?
            AND     GRPCD = ?
            AND     DIVCD = ?
            AND     JOBGRPH = ?
            AND     PRTSEQ = ?
            ]]>
        </query>
    </sql>


    <!-- 고과항목 생성 한다. -->
    <sql name="VLUI010_CRT">
        <description>데이터 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVSHEET
                 ( EVAYM,       GRPCD,      DIVCD,     JOBGRPH,     PRTSEQ,
                   GRPITEM,  	ASKITEM, 	ESCR, 	   GSCR, 	    MSCR, 			LSCR, 		PSCR )
            VALUES
                 ( ?,           ?,           ?,           ?,           ?,
                   ?,           ?,           ?,           ?,           ?,           ?,           ?)
            ]]>
        </query>
    </sql>

    <!-- 고과항목 삭제 한다. -->
    <sql name="VLUI010_DEL">
        <description>데이터 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_EV_HVSHEET
	            WHERE  EVAYM        = ?
	            AND    GRPCD        = ?
	            AND    DIVCD        = ?
	            AND    JOBGRPH      = ?
	            AND    PRTSEQ       = ?
            ]]>
        </query>
    </sql>





    <!-- 일반 피고과자선정 조회 한다. -->
    <sql name="VLUI020_SHR">
        <description>일반 피고과자선정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
                A.GRSTRTDT,
				A.STRTDT,
				A.WRDT,
                A.LAMDT,
                A.RECDIV,
                ASNHR.SF_GET_COMMNAME('01', 'C1', A.RECDIV) AS RECNM,
                A.JOBKIND,
				ASNHR.SF_GET_COMMNAME('01', 'SD', A.JOBREF) AS JOBREF
			FROM ASNHR.T_EV_HVEMP A
            WHERE      A.EVAYM = ?
            ORDER BY A.PAYGRD
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자선정 조회 한다. -->
    <sql name="VLUI020_SHR_01">
        <description>부서장 피고과자선정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				B.ENO_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				TO_CHAR(B.HIRG_YMD, 'YYYYMMDD')  AS GRSTRTDT,
				TO_CHAR(B.HIR_YMD, 'YYYYMMDD')  AS STRTDT,
				TO_CHAR(B.JPR_YMD, 'YYYYMMDD')  AS LAMDT,
				A.WRDT,
                A.RECDIV,
                ASNHR.SF_GET_COMMNAME('01', 'C1', A.RECDIV) AS RECNM,
                A.JOBKIND,
				ASNHR.SF_GET_COMMNAME('01', 'SD', A.JOBREF) AS JOBREF
			FROM ASNHR.T_EV_HVEMP_DPT A, ASNHR.T_CM_PERSON B
            WHERE  A.EMPNO = B.ENO_NO
            	AND A.EVAYM = ?
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 기생성자 조회 한다. -->
    <sql name="VLUI020_SHR_02">
        <description>일반 피고과자 기생성자 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,    A.EMPNO,    B.ENO_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.GRSTRTDT,    	A.STRTDT,    SUBSTR(A.WRDT,1,6) WRDT,
				A.TOTAVG,
				A.SCR1,      	A.AVG1,       	A.SCR2,        	A.AVG2,
				A.SCR3,     	A.AVG3,      	A.SCR4,       	A.AVG4
			FROM ASNHR.T_EV_HVEMP A, ASNHR.T_CM_PERSON B
            WHERE  A.EMPNO = B.ENO_NO
            	AND A.EVAYM = ?
            ORDER BY A.PAYGRD
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 생성 대상자 조회 한다. -->
    <sql name="VLUI020_SHR_12">
        <description>일반 피고과자 생성 대상자 조회</description>
        <query>
            <![CDATA[
			SELECT ? AS WRDT,
				A.ENO_NO AS EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
				A.DPT_CD, DECODE(A.DPT_CD,SF_GET_DPTNAME('01', 'A4',A.DPT_CD),SF_GET_DPTNAME('01', 'A6',A.DPT_CD),SF_GET_DPTNAME('01', 'A4',A.DPT_CD)) AS DEPTNM,
				A.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.JOB_CD)) AS GRDNM,
				TO_CHAR(A.HIRG_YMD, 'YYYYMMDD')  AS HIRG_YMD,
				TO_CHAR(A.HIR_YMD, 'YYYYMMDD')  AS HIR_YMD,
				TO_CHAR(A.JPR_YMD, 'YYYYMMDD')  AS JPR_YMD,
				A.OCC_CD, A.GBN_CD,
				A.HIR_CD
			FROM ASNHR.T_CM_PERSON A
			WHERE A.RET_YMD IS NULL
				AND A.FINJ_CD IN ('L11','L24','L30')
				AND SUBSTR(A.ENO_NO,0,1) < '5'
				AND (A.JOB_CD BETWEEN '140' AND '300' OR A.JOB_CD = '700' OR A.JOB_CD = '890')
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 생성 대상자 조회 한다. -->
    <sql name="VLUI020_SHR_13">
        <description>부서장 피고과자 생성 대상자 조회</description>
        <query>
            <![CDATA[
			SELECT ? AS WRDT,
				A.ENO_NO AS EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
				A.DPT_CD, DECODE(A.DPT_CD,SF_GET_DPTNAME('01', 'A4',A.DPT_CD),SF_GET_DPTNAME('01', 'A6',A.DPT_CD),SF_GET_DPTNAME('01', 'A4',A.DPT_CD)) AS DEPTNM,
				A.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.JOB_CD)) AS GRDNM,
				TO_CHAR(A.HIRG_YMD, 'YYYYMMDD')  AS HIRG_YMD,
				TO_CHAR(A.HIR_YMD, 'YYYYMMDD')  AS HIR_YMD,
				TO_CHAR(A.JPR_YMD, 'YYYYMMDD')  AS JPR_YMD,
				A.OCC_CD, A.GBN_CD,
				A.HIR_CD
			FROM ASNHR.T_CM_PERSON A
			WHERE A.RET_YMD IS NULL
				AND A.FINJ_CD IN ('L11','L24','L30')
				AND (A.DUTY_CD IN ('05','17','34') OR (A.DUTY_CD = '20' AND A.JOB_CD BETWEEN '140' AND '170'))
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 기생성자 저장 한다. -->
    <sql name="VLUI020_SAV_01">
        <description>일반 피고과자 기생성자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVEMP
                 ( EVAYM,	EMPNO, 		DEPTCD,		PAYGRD,		GRSTRTDT,
                   STRTDT,  WRDT,  		LAMDT,   	DEPREF,		RECDIV,  	GRSREF
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,
                   ?, 	 ?,		?,		?,		?, 		?
                 )
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 기생성자 저장 한다. -->
    <sql name="VLUI020_SAV_02">
        <description>부서장 피고과자 기생성자 저장</description>
        <query>
            <![CDATA[

            INSERT INTO ASNHR.T_EV_HVEMP_DPT
                 ( EVAYM,	EMPNO, 		DEPTCD,		PAYGRD,
                   WRDT,  	DEPREF,		RECDIV,  	GRSREF
                 )
            VALUES
                 ( ?, 	 ?,		?,		?,
                   ?,	 ?,		?,		?
                 )

            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자  삭제 한다. -->
    <sql name="VLUI020_DEL1">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVEMP
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자  삭제 한다. -->
    <sql name="VLUI020_DEL2">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVHEMP
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 일반 피고과자  삭제 한다. -->
    <sql name="VLUI020_DEL3">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVSCORE
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 부서장 피고과자  삭제 한다. -->
    <sql name="VLUI020_DEL4">
        <description>부서장 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVEMP_DPT
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 부서장 피고과자  삭제 한다. -->
    <sql name="VLUI020_DEL5">
        <description>부서장 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVHEMP_DPT
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 삭제 한다. -->
    <sql name="VLUI020_DEL6">
        <description>부서장 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVSCORE_DPT
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 일반 피고과자 기생성자 삭제 한다. -->
    <sql name="VLUI020_DEL_01">
        <description>일반 피고과자 기생성자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVEMP
			WHERE
				EVAYM = ?
            ]]>
        </query>
    </sql>

    <!-- 부서장 피고과자 기생성자 삭제 한다. -->
    <sql name="VLUI020_DEL_02">
        <description>부서장 피고과자 기생성자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVEMP_DPT
			WHERE
				EVAYM = ?
            ]]>
        </query>
    </sql>


    <!-- 고과자지정 조회 한다. -->
    <sql name="VLUI030_SHR">
        <description>고과자지정 조회</description>
        <query>
            <![CDATA[
			SELECT
				X.CHK, X.EVAYM, X.EMPNO,
				ASNHR.SF_GET_ENONAME('01', X.EMPNO) AS EMPNMK,
				X.DEPTCD,
				DECODE(X.DEPTCD,SF_GET_DPTNAME('01', 'A4',X.DEPTCD),SF_GET_DPTNAME('01', 'A6',X.DEPTCD),SF_GET_DPTNAME('01', 'A4',X.DEPTCD))AS DEPTNM,
				X.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(X.PAYGRD)) AS GRDNM,
				X.GRSTRTDT,
				X.STRTDT,
				MAX(X.SEQ1)SEQ1,
				CASE WHEN MAX(H.ENO_NM)='' OR  MAX(H.ENO_NM) IS NULL THEN  '' ELSE MAX(H.ENO_NM) END EMPNMK1,
				MAX(X.SEQ2)SEQ2,
				CASE WHEN MAX(I.ENO_NM)='' OR  MAX(I.ENO_NM) IS NULL THEN  '' ELSE MAX(I.ENO_NM) END EMPNMK2,
				MAX(X.SEQ3)SEQ3,
				CASE WHEN MAX(J.ENO_NM)='' OR  MAX(J.ENO_NM) IS NULL THEN  '' ELSE MAX(J.ENO_NM) END EMPNMK3,
				MAX(X.SEQ4)SEQ4,
				CASE WHEN MAX(K.ENO_NM)='' OR  MAX(K.ENO_NM) IS NULL THEN  '' ELSE MAX(K.ENO_NM) END EMPNMK4
			FROM
				(SELECT
					'F' CHK,
					A.EVAYM,
					A.EMPNO,
					A.DEPTCD,
					A.PAYGRD,
					A.GRSTRTDT,A.STRTDT,
				    CASE B.EVASEQ WHEN 1 THEN B.EMPNOH END AS SEQ1,
				    CASE B.EVASEQ WHEN 2 THEN B.EMPNOH END AS SEQ2,
				    CASE B.EVASEQ WHEN 3 THEN B.EMPNOH END AS SEQ3,
				    CASE B.EVASEQ WHEN 4 THEN B.EMPNOH END AS SEQ4
				FROM
					T_EV_HVEMP A,
					T_EV_HVHEMP B,
					T_CM_PERSON C
				WHERE
					A.EVAYM = B.EVAYM
					AND A.EMPNO = C.ENO_NO
					AND B.EMPNO = C.ENO_NO
					AND A.EMPNO = B.EMPNO
					AND A.EVAYM = ?
          	UNION ALL
                SELECT
					'F' CHK,
					A.EVAYM,
					A.EMPNO,
					A.DEPTCD,
					A.PAYGRD,
					A.GRSTRTDT,A.STRTDT,
                    ''SEQ1,''SEQ2,''SEQ3,''SEQ4
                FROM
                    ASNHR.T_EV_HVEMP A,
                    ASNHR.T_CM_PERSON C
                WHERE
                    A.EMPNO = C.ENO_NO
                    AND A.EVAYM = ?

				) X,
			T_CM_PERSON H,
			T_CM_PERSON I,
			T_CM_PERSON J,
			T_CM_PERSON K
		WHERE X.SEQ1 = H.ENO_NO(+)
			AND X.SEQ2 = I.ENO_NO(+)
			AND X.SEQ3 = J.ENO_NO(+)
			AND X.SEQ4 = K.ENO_NO(+)
			AND X.DEPTCD LIKE '%'||?||'%'
			AND X.PAYGRD LIKE '%'||?||'%'
			AND X.EMPNO LIKE '%'||?||'%'
		GROUP BY X.CHK, X.EVAYM, X.EMPNO,X.DEPTCD, X.PAYGRD, X.GRSTRTDT,X.STRTDT
		ORDER BY X.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 고과자지정 조회 한다. -->
    <sql name="VLUI030_SHR_01">
        <description>고과자지정 조회</description>
        <query>
            <![CDATA[
			SELECT DISTINCT
				'' CHKOUT,

				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.EMPNOH,
				ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS EMPNMKH,
				A.EVASEQ,
				A.DEPTCD,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.DEPTNM AS DEPTNM
			FROM
				T_EV_HVHEMP A,
				T_CM_PERSON B
			WHERE
                A.EMPNOH = B.ENO_NO
				AND A.EVAYM = ?
				AND B.DPT_CD LIKE '%'||?||'%'
				AND B.JOB_CD LIKE '%'||?||'%'
				AND B.ENO_NO LIKE '%'||?||'%'
				AND A.EMPNOH LIKE '%'||?||'%'
				AND A.EVASEQ LIKE '%'||?||'%'

			ORDER BY A.EMPNO

            ]]>
        </query>
    </sql>



    <!-- 고과자 저장 한다. -->
    <sql name="VLUI030_SAV">
        <description>고과자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVHEMP
                 ( EVAYM,EMPNOH,EMPNO,EVASEQ,DEPTCD,DEPTNM,PAYGRD
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 ?
                 )

            ]]>
        </query>
    </sql>


    <!-- 고과자 삭제 한다. -->
    <sql name="VLUI030_DEL">
        <description>고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVHEMP
			WHERE EVAYM = ?
				AND EMPNOH = ?
				AND EMPNO = ?
				AND EVASEQ = ?
            ]]>
        </query>
    </sql>


    <!-- 고과 대상자 - 본사 정규직 및 계약직 조회 한다. -->
    <sql name="VLUI040_SHR">
        <description>고과점수입력(하향) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				A.JOBREF JOBGRPH ,
				COALESCE(X.SCR,0) SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0) END AVGSCR,
				CASE WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>=85) THEN '상'
				WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>=75 AND COALESCE(A.AVG1,0)<85) THEN '중상'
				WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>=65 AND COALESCE(A.AVG1,0)<75) THEN '중'
				WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>=55 AND COALESCE(A.AVG1,0)<65) THEN '중하'
				WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>0   AND COALESCE(A.AVG1,0)<55) THEN '하'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>=85 )THEN '상'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>=75 AND COALESCE(A.AVG2,0)<85) THEN '중상'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>=65 AND COALESCE(A.AVG2,0)<75) THEN '중'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>=55 AND COALESCE(A.AVG2,0)<65) THEN '중하'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>0   AND COALESCE(A.AVG2,0)<55) THEN '하'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>=85) THEN '상'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>=75 AND COALESCE(A.AVG3,0)<85) THEN '중상'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>=65 AND COALESCE(A.AVG3,0)<75) THEN '중'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>=55 AND COALESCE(A.AVG3,0)<65) THEN '중하'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>0   AND COALESCE(A.AVG3,0)<55) THEN '하' END ASSES

	        FROM ASNHR.T_EV_HVEMP A
	        FULL OUTER JOIN ASNHR.T_EV_HVHEMP B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_HVSCORE G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   (A.DEPREF IN ('1') AND A.EMPNO NOT IN ('2090012','2070037','2040014','2060011','2050030','2070032'))
				[1]
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 고과 대상자 - 본사외(개성, 현장, 금강산등등) 정규직 및 계약직 조회 한다. -->
    <sql name="VLUI040_SHR_01">
        <description>고과점수입력(하향) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				A.JOBREF JOBGRPH , COALESCE(X.SCR,0) SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0) END AVGSCR,
				CASE WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>=85) THEN '상'
				WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>=75 AND COALESCE(A.AVG1,0)<85) THEN '중상'
				WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>=65 AND COALESCE(A.AVG1,0)<75) THEN '중'
				WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>=55 AND COALESCE(A.AVG1,0)<65) THEN '중하'
				WHEN (B.EVASEQ = 1 AND COALESCE(A.AVG1,0)>0   AND COALESCE(A.AVG1,0)<55) THEN '하'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>=85 )THEN '상'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>=75 AND COALESCE(A.AVG2,0)<85) THEN '중상'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>=65 AND COALESCE(A.AVG2,0)<75) THEN '중'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>=55 AND COALESCE(A.AVG2,0)<65) THEN '중하'
				WHEN (B.EVASEQ = 2 AND COALESCE(A.AVG2,0)>0   AND COALESCE(A.AVG2,0)<55) THEN '하'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>=85) THEN '상'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>=75 AND COALESCE(A.AVG3,0)<85) THEN '중상'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>=65 AND COALESCE(A.AVG3,0)<75) THEN '중'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>=55 AND COALESCE(A.AVG3,0)<65) THEN '중하'
				WHEN (B.EVASEQ = 3 AND COALESCE(A.AVG3,0)>0   AND COALESCE(A.AVG3,0)<55) THEN '하' END ASSES

	        FROM ASNHR.T_EV_HVEMP A
	        FULL OUTER JOIN ASNHR.T_EV_HVHEMP B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_HVSCORE G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   (A.DEPREF IN ('2','3','4','5','6','7','8') OR A.EMPNO IN ('2090012','2070037','2040014','2060011','2050030','2070032'))
				[1]
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql>


    <!-- 고과 대상자 - 본사 부서장 조회 한다. -->
    <sql name="VLUI040_SHR_02">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				COALESCE(X.SCR,0) SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0)
				WHEN B.EVASEQ = 5 THEN COALESCE(A.AVG5,0)
				WHEN B.EVASEQ = 6 THEN COALESCE(A.AVG6,0)
				WHEN B.EVASEQ = 7 THEN COALESCE(A.AVG7,0)
				WHEN B.EVASEQ = 8 THEN COALESCE(A.AVG8,0)
				WHEN B.EVASEQ = 9 THEN COALESCE(A.AVG9,0)
				WHEN B.EVASEQ = 10 THEN COALESCE(A.AVG10,0)
				WHEN B.EVASEQ = 11 THEN COALESCE(A.AVG11,0)
				WHEN B.EVASEQ = 12 THEN COALESCE(A.AVG12,0)
				WHEN B.EVASEQ = 13 THEN COALESCE(A.AVG13,0)
				WHEN B.EVASEQ = 14 THEN COALESCE(A.AVG14,0)
				WHEN B.EVASEQ = 15 THEN COALESCE(A.AVG15,0) END AVGSCR,
				'' ASSES
	        FROM ASNHR.T_EV_HVEMP_DPT A
	        FULL OUTER JOIN ASNHR.T_EV_HVHEMP_DPT B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_HVSCORE_DPT G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   (A.DEPREF IN ('1') AND A.EMPNO NOT IN ('2090012','2070037','2040014','2060011','2050030','2070032'))
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql>


    <!-- 고과 대상자 - 본사외(개성, 현장, 금강산등등) 부서장 조회 한다. -->
    <sql name="VLUI040_SHR_03">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				COALESCE(X.SCR,0) SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0)
				WHEN B.EVASEQ = 5 THEN COALESCE(A.AVG5,0)
				WHEN B.EVASEQ = 6 THEN COALESCE(A.AVG6,0)
				WHEN B.EVASEQ = 7 THEN COALESCE(A.AVG7,0)
				WHEN B.EVASEQ = 8 THEN COALESCE(A.AVG8,0)
				WHEN B.EVASEQ = 9 THEN COALESCE(A.AVG9,0)
				WHEN B.EVASEQ = 10 THEN COALESCE(A.AVG10,0)
				WHEN B.EVASEQ = 11 THEN COALESCE(A.AVG11,0)
				WHEN B.EVASEQ = 12 THEN COALESCE(A.AVG12,0)
				WHEN B.EVASEQ = 13 THEN COALESCE(A.AVG13,0)
				WHEN B.EVASEQ = 14 THEN COALESCE(A.AVG14,0)
				WHEN B.EVASEQ = 15 THEN COALESCE(A.AVG15,0) END AVGSCR,
				'' ASSES
	        FROM ASNHR.T_EV_HVEMP_DPT A
	        FULL OUTER JOIN ASNHR.T_EV_HVHEMP_DPT B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_HVSCORE_DPT G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   (A.DEPREF IN ('2','3','4','5','6','7','8') OR A.EMPNO IN ('2090012','2070037','2040014','2060011','2050030','2070032'))
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD, A.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 고과입력표 정규직 및 계약직 조회 한다. -->
    <sql name="VLUI040_SHR_SCR">
        <description>고과점수입력(하향) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM, A.GRPCD,
				A.DIVCD, ASNHR.SF_GET_COMMNAME('01', 'O3', A.DIVCD) AS DIVNM,
				A.JOBGRPH,
				A.PRTSEQ,
				A.GRPITEM,
				A.ASKITEM, E.SCRGBN,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				A.ESCR, A.GSCR, A.MSCR, A.LSCR, A.PSCR, COALESCE(E.SCR,0) SCR,
				COALESCE(E.EMPNOH,'') AS EMPNOH, COALESCE(E.EMPNO,'') AS EMPNO, COALESCE(E.EVASEQ,0) AS EVASEQ
			FROM ASNHR.T_EV_HVSHEET A
				 FULL OUTER JOIN ASNHR.T_EV_HVSCORE E ON
			    A.EVAYM = E.EVAYM
				AND A.GRPCD = E.GRPCD
				AND A.DIVCD = E.DIVCD
				AND A.PRTSEQ = E.PRTSEQ
				AND A.EVAYM = ?
				AND E.EMPNOH = ?
				AND E.EMPNO = ?
				AND E.EVASEQ = ?
             WHERE A.EVAYM = ?
             AND A.GRPCD = ?
            ORDER BY A.DIVCD, A.PRTSEQ
            ]]>
        </query>
    </sql>

    <!-- 고과입력표 부서장 조회 한다. -->
    <sql name="VLUI040_SHR_SCR_01">
        <description>고과점수입력(부서장) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM, A.GRPCD,
				A.DIVCD, ASNHR.SF_GET_COMMNAME('01', 'O3', A.DIVCD) AS DIVNM,
				A.JOBGRPH,
				A.PRTSEQ,
				A.GRPITEM,
				A.ASKITEM, E.SCRGBN,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				A.ESCR, A.GSCR, A.MSCR, A.LSCR, A.PSCR, COALESCE(E.SCR,0) SCR,
				COALESCE(E.EMPNOH,'') AS EMPNOH, COALESCE(E.EMPNO,'') AS EMPNO, COALESCE(E.EVASEQ,0) AS EVASEQ
			FROM ASNHR.T_EV_HVSHEET A
				 FULL OUTER JOIN ASNHR.T_EV_HVSCORE_DPT E ON
			    A.EVAYM = E.EVAYM
				AND A.GRPCD = E.GRPCD
				AND A.DIVCD = E.DIVCD
				AND A.PRTSEQ = E.PRTSEQ
				AND A.EVAYM = ?
				AND E.EMPNOH = ?
				AND E.EMPNO = ?
				AND E.EVASEQ = ?
             WHERE A.EVAYM = ?
             AND A.GRPCD = '4'
            ORDER BY A.DIVCD, A.PRTSEQ
            ]]>
        </query>
    </sql>

    <!-- 업적신고 조회 한다. -->
    <sql name="VLUI040_SHR_WRK">
        <description>업적신고 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.HEADCD,SF_GET_DPTNAME('01', 'B2',A.HEADCD) HEADNM,
				A.DIVCD, ASNHR.SF_GET_DPTNAME('01', 'A4',A.DIVCD) DIVNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.WORK_1,  A.STARTDT_1, A.ENDDT_1, A.PLACE_1, A.REMARK_1,
				A.WORK_2,  A.STARTDT_2, A.ENDDT_2, A.PLACE_2, A.REMARK_2,
				A.WORK_3,  A.STARTDT_3, A.ENDDT_3, A.PLACE_3, A.REMARK_3

			FROM
				T_EV_HWORKMST A,
				T_CM_PERSON B

			WHERE
				A.EMPNO = B.ENO_NO
				AND A.EVAYM = ?
				AND A.EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 업적신고 조회 한다. -->
    <sql name="VLUI040_SHR_WRK_01">
        <description>업적신고 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,   A.EMPNO,   A.SEQ2,    A.WORKGB,  A.WKCONT,
				A.IMPORT,  A.REMARK
			FROM
				T_EV_HWORKDTL A
			WHERE
				A.EVAYM = ?
				AND A.EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 정규직 및 계약직 저장 한다. -->
    <sql name="VLUI040_SAV">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVSCORE
                 ( EVAYM,	EMPNOH,		EMPNO,	EVASEQ,		GRPCD,		DIVCD,	JOBGRPH,	PRTSEQ,		SCR,	SCRGBN
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 	?, 		?,		?, 	 	?
                 )

            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 저장 한다. -->
    <sql name="VLUI040_SAV_01">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVSCORE_DPT
                 ( EVAYM,	EMPNOH,		EMPNO,	EVASEQ,		GRPCD,		DIVCD,	JOBGRPH,	PRTSEQ,		SCR,	SCRGBN
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 	?, 		?,		?, 	 	?
                 )

            ]]>
        </query>
    </sql>

    <!-- 고과점수 정규직 및 계약직 업데이트 한다. -->
    <sql name="VLUI040_UPT">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_HVEMP
              SET
                  [1]
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 부서장 업데이트 한다. -->
    <sql name="VLUI040_UPT_01">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_HVEMP_DPT
              SET
                  [1]
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 정규직 및 계약직삭제 한다. -->
    <sql name="VLUI040_DEL">
        <description>고과점수 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_HVSCORE
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
				AND  EVASEQ = ?
				AND  GRPCD = ?
				AND  DIVCD = ?
				AND  JOBGRPH = ?
				AND  PRTSEQ = ?
            ]]>
        </query>
    </sql>


    <!-- 고과점수 부서장 삭제 한다. -->
    <sql name="VLUI040_DEL_01">
        <description>고과점수 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_HVSCORE_DPT
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
				AND  EVASEQ = ?
				AND  GRPCD = ?
				AND  DIVCD = ?
				AND  JOBGRPH = ?
				AND  PRTSEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 정규직 고과점수 조정 조회 한다. -->
    <sql name="VLUI050_SHR">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				RTRIM(F.EMPNOH) EMPNOH_1,	ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, COALESCE(A.AVG1,0) AVG1,
				RTRIM(G.EMPNOH) EMPNOH_2,	ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, COALESCE(A.AVG2,0) AVG2,
				RTRIM(H.EMPNOH) EMPNOH_3,	ASNHR.SF_GET_ENONAME('01', H.EMPNOH) AS EMPNMH_3,
				COALESCE(A.SCR3,0) SCR3, COALESCE(A.AVG3,0) AVG3,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.4+COALESCE(A.SCR2,0)*0.3+COALESCE(A.SCR3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*0.6+COALESCE(A.SCR2,0)*0.4+COALESCE(A.SCR3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0+COALESCE(A.SCR3,0)*0)
				ELSE 0 END AS SCRAVG ,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.4+COALESCE(A.AVG2,0)*0.3+COALESCE(A.AVG3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*0.6+COALESCE(A.AVG2,0)*0.4+COALESCE(A.AVG3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0+COALESCE(A.AVG3,0)*0)
				ELSE 0 END AS CORAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				COALESCE(P.DPTAVG,0) DPTAVG,
				COALESCE(Y.CORAVG_SUM,0) CORAVG_SUM,
				COALESCE(Y.TOTAVG_SUM,0) TOTAVG_SUM,
				A.GRADE,  A.GRADE2 , A.GRADE3
			FROM
                ASNHR.T_EV_HVEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_HVHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_HVHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                FULL JOIN ASNHR.T_EV_HVHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO = H.EMPNO AND H.EVASEQ = 3
				FULL JOIN (
					SELECT
					X.EMPNO,
					X.CORAVG/X.CNT AS CORAVG_SUM,
					X.TOTAVG/X.CNT AS TOTAVG_SUM
					FROM (
						SELECT
						A.EMPNO,COUNT(A.EMPNO)CNT, SUM(COALESCE(A.TOTAVG,0)) AS TOTAVG,  SUM(COALESCE(A.TOTAVG,0)) AS CORAVG
						FROM ASNHR.T_EV_HVEMP A
						FULL JOIN ASNHR.T_EV_HVHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO=F.EMPNO AND F.EVASEQ=1
						FULL JOIN ASNHR.T_EV_HVHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO=G.EMPNO AND G.EVASEQ=2
						FULL JOIN ASNHR.T_EV_HVHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO=H.EMPNO AND H.EVASEQ=3
						WHERE A.EVAYM LIKE ?
						AND A.TOTAVG!=0
						GROUP BY A.EMPNO
					) X
				) Y ON Y.EMPNO = A.EMPNO
				FULL JOIN
				(
				SELECT A.EVAYM, A.EMPNO,
					ROUND(COALESCE(
					(A.AVG1+A.AVG2+A.AVG3+A.AVG4+A.AVG5
					+A.AVG6+A.AVG7+A.AVG8+A.AVG9+A.AVG10
					+A.AVG11+A.AVG12+A.AVG13+A.AVG14+A.AVG15)/V.CNT,0),3) AS DPTAVG
				FROM ASNHR.T_EV_HVEMP_DPT A
				FULL JOIN (
					SELECT EVAYM, EMPNO, COUNT(EMPNOH) CNT
					FROM ASNHR.T_EV_HVHEMP_DPT
					WHERE EVAYM = ?
					GROUP BY EVAYM, EMPNO
					)V ON A.EVAYM = V.EVAYM AND A.EMPNO = V.EMPNO
				)P ON P.EVAYM = A.EVAYM AND P.EMPNO = A.EMPNO
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND (F.EMPNOH LIKE '%'||?||'%' OR G.EMPNOH LIKE '%'||?||'%' OR H.EMPNOH LIKE '%'||?||'%')
				[1]
				[2]
				AND A.GRSREF IN ('1','2')
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>



    <!-- 계약직 고과점수 조정 조회 한다. -->
    <sql name="VLUI050_SHR_01">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				RTRIM(F.EMPNOH) EMPNOH_1,	ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, COALESCE(A.AVG1,0) AVG1,
				RTRIM(G.EMPNOH) EMPNOH_2,	ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, COALESCE(A.AVG2,0) AVG2,
				RTRIM(H.EMPNOH) EMPNOH_3,	ASNHR.SF_GET_ENONAME('01', H.EMPNOH) AS EMPNMH_3,
				COALESCE(A.SCR3,0) SCR3, COALESCE(A.AVG3,0) AVG3,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.4+COALESCE(A.SCR2,0)*0.3+COALESCE(A.SCR3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*0.6+COALESCE(A.SCR2,0)*0.4+COALESCE(A.SCR3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0+COALESCE(A.SCR3,0)*0)
				ELSE 0 END AS SCRAVG ,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.4+COALESCE(A.AVG2,0)*0.3+COALESCE(A.AVG3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*0.6+COALESCE(A.AVG2,0)*0.4+COALESCE(A.AVG3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0+COALESCE(A.AVG3,0)*0)
				ELSE 0 END AS CORAVG,
				COALESCE(P.DPTAVG,0) DPTAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				COALESCE(Y.CORAVG_SUM,0) CORAVG_SUM,
				COALESCE(Y.TOTAVG_SUM,0) TOTAVG_SUM,
				A.GRADE,  A.GRADE2 , A.GRADE3
			FROM
                ASNHR.T_EV_HVEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_HVHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_HVHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                FULL JOIN ASNHR.T_EV_HVHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO = H.EMPNO AND H.EVASEQ = 3
				FULL JOIN (
					SELECT
					X.EMPNO,
					X.CORAVG/X.CNT AS CORAVG_SUM,
					X.TOTAVG/X.CNT AS TOTAVG_SUM
					FROM (
						SELECT
						A.EMPNO,COUNT(A.EMPNO)CNT, SUM(COALESCE(A.TOTAVG,0)) AS TOTAVG,  SUM(COALESCE(A.TOTAVG,0)) AS CORAVG
						FROM ASNHR.T_EV_HVEMP A
						FULL JOIN ASNHR.T_EV_HVHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO=F.EMPNO AND F.EVASEQ=1
						FULL JOIN ASNHR.T_EV_HVHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO=G.EMPNO AND G.EVASEQ=2
						FULL JOIN ASNHR.T_EV_HVHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO=H.EMPNO AND H.EVASEQ=3
						WHERE A.EVAYM LIKE ?
						AND A.TOTAVG!=0
						GROUP BY A.EMPNO
					) X
				) Y ON Y.EMPNO = A.EMPNO
				FULL JOIN
				(
				SELECT A.EVAYM, A.EMPNO,
					ROUND(COALESCE(
					(A.AVG1+A.AVG2+A.AVG3+A.AVG4+A.AVG5
					+A.AVG6+A.AVG7+A.AVG8+A.AVG9+A.AVG10
					+A.AVG11+A.AVG12+A.AVG13+A.AVG14+A.AVG15)/V.CNT,0),3) AS DPTAVG
				FROM ASNHR.T_EV_HVEMP_DPT A
				FULL JOIN (
					SELECT EVAYM, EMPNO, COUNT(EMPNOH) CNT
					FROM ASNHR.T_EV_HVHEMP_DPT
					WHERE EVAYM = ?
					GROUP BY EVAYM, EMPNO
					)V ON A.EVAYM = V.EVAYM AND A.EMPNO = V.EMPNO
				)P ON P.EVAYM = A.EVAYM AND P.EMPNO = A.EMPNO
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND (F.EMPNOH LIKE '%'||?||'%' OR G.EMPNOH LIKE '%'||?||'%' OR H.EMPNOH LIKE '%'||?||'%')
				[1]
				[2]
				AND A.GRSREF NOT IN ('1','2')
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>



    <!-- 정규직 고과점수 조정 조회 한다. -->
    <sql name="VLUI050_SHR_02">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				RTRIM(F.EMPNOH) EMPNOH_1,	ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, COALESCE(A.AVG1,0) AVG1,
				RTRIM(G.EMPNOH) EMPNOH_2,	ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, COALESCE(A.AVG2,0) AVG2,
				RTRIM(H.EMPNOH) EMPNOH_3,	ASNHR.SF_GET_ENONAME('01', H.EMPNOH) AS EMPNMH_3,
				COALESCE(A.SCR3,0) SCR3, COALESCE(A.AVG3,0) AVG3,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.4+COALESCE(A.SCR2,0)*0.3+COALESCE(A.SCR3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*0.6+COALESCE(A.SCR2,0)*0.4+COALESCE(A.SCR3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0+COALESCE(A.SCR3,0)*0)
				ELSE 0 END AS SCRAVG ,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.4+COALESCE(A.AVG2,0)*0.3+COALESCE(A.AVG3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*0.6+COALESCE(A.AVG2,0)*0.4+COALESCE(A.AVG3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0+COALESCE(A.AVG3,0)*0)
				ELSE 0 END AS CORAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				COALESCE(P.DPTAVG,0) DPTAVG,
				COALESCE(Y.CORAVG_SUM,0) CORAVG_SUM,
				COALESCE(Y.TOTAVG_SUM,0) TOTAVG_SUM,
				A.GRADE,  A.GRADE2 , A.GRADE3
			FROM
                ASNHR.T_EV_HVEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_HVHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_HVHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                FULL JOIN ASNHR.T_EV_HVHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO = H.EMPNO AND H.EVASEQ = 3
				FULL JOIN (
					SELECT
					X.EMPNO,
					X.CORAVG/X.CNT AS CORAVG_SUM,
					X.TOTAVG/X.CNT AS TOTAVG_SUM
					FROM (
						SELECT
						A.EMPNO,COUNT(A.EMPNO)CNT, SUM(COALESCE(A.TOTAVG,0)) AS TOTAVG,  SUM(COALESCE(A.TOTAVG,0)) AS CORAVG
						FROM ASNHR.T_EV_HVEMP A
						FULL JOIN ASNHR.T_EV_HVHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO=F.EMPNO AND F.EVASEQ=1
						FULL JOIN ASNHR.T_EV_HVHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO=G.EMPNO AND G.EVASEQ=2
						FULL JOIN ASNHR.T_EV_HVHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO=H.EMPNO AND H.EVASEQ=3
						WHERE A.EVAYM LIKE ?
						AND A.TOTAVG!=0
						GROUP BY A.EMPNO
					) X
				) Y ON Y.EMPNO = A.EMPNO
				FULL JOIN
				(
				SELECT A.EVAYM, A.EMPNO,
					ROUND(COALESCE(
					(A.AVG1+A.AVG2+A.AVG3+A.AVG4+A.AVG5
					+A.AVG6+A.AVG7+A.AVG8+A.AVG9+A.AVG10
					+A.AVG11+A.AVG12+A.AVG13+A.AVG14+A.AVG15)/V.CNT,0),3) AS DPTAVG
				FROM ASNHR.T_EV_HVEMP_DPT A
				FULL JOIN (
					SELECT EVAYM, EMPNO, COUNT(EMPNOH) CNT
					FROM ASNHR.T_EV_HVHEMP_DPT
					WHERE EVAYM = ?
					GROUP BY EVAYM, EMPNO
					)V ON A.EVAYM = V.EVAYM AND A.EMPNO = V.EMPNO
				)P ON P.EVAYM = A.EVAYM AND P.EMPNO = A.EMPNO
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND (F.EMPNOH LIKE '%'||?||'%' OR G.EMPNOH LIKE '%'||?||'%' OR H.EMPNOH LIKE '%'||?||'%')
				AND A.GRSREF IN ('1','2')
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>



    <!-- 계약직 고과점수 조정 조회 한다. -->
    <sql name="VLUI050_SHR_03">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				RTRIM(F.EMPNOH) EMPNOH_1,	ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_1,
				COALESCE(A.SCR1,0) SCR1, COALESCE(A.AVG1,0) AVG1,
				RTRIM(G.EMPNOH) EMPNOH_2,	ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_2,
				COALESCE(A.SCR2,0) SCR2, COALESCE(A.AVG2,0) AVG2,
				RTRIM(H.EMPNOH) EMPNOH_3,	ASNHR.SF_GET_ENONAME('01', H.EMPNOH) AS EMPNMH_3,
				COALESCE(A.SCR3,0) SCR3, COALESCE(A.AVG3,0) AVG3,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.SCR1,0)*0.4+COALESCE(A.SCR2,0)*0.3+COALESCE(A.SCR3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*0.6+COALESCE(A.SCR2,0)*0.4+COALESCE(A.SCR3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.SCR1,0)*1+COALESCE(A.SCR2,0)*0+COALESCE(A.SCR3,0)*0)
				ELSE 0 END AS SCRAVG ,
				CASE
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND H.EMPNOH IS NOT NULL THEN (COALESCE(A.AVG1,0)*0.4+COALESCE(A.AVG2,0)*0.3+COALESCE(A.AVG3,0)*0.3)
				WHEN F.EMPNOH IS NOT NULL AND G.EMPNOH IS NOT NULL AND (H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*0.6+COALESCE(A.AVG2,0)*0.4+COALESCE(A.AVG3,0)*0)
				WHEN F.EMPNOH IS NOT NULL AND (G.EMPNOH IS NULL OR G.EMPNOH='') AND(H.EMPNOH IS NULL OR H.EMPNOH='')  THEN (COALESCE(A.AVG1,0)*1+COALESCE(A.AVG2,0)*0+COALESCE(A.AVG3,0)*0)
				ELSE 0 END AS CORAVG,
				COALESCE(P.DPTAVG,0) DPTAVG,
				COALESCE(A.TOTAVG,0) TOTAVG,
				COALESCE(Y.CORAVG_SUM,0) CORAVG_SUM,
				COALESCE(Y.TOTAVG_SUM,0) TOTAVG_SUM,
				A.GRADE,  A.GRADE2 , A.GRADE3
			FROM
                ASNHR.T_EV_HVEMP A
                INNER JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
                FULL JOIN ASNHR.T_EV_HVHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO = F.EMPNO AND F.EVASEQ = 1
                FULL JOIN ASNHR.T_EV_HVHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO = G.EMPNO AND G.EVASEQ = 2
                FULL JOIN ASNHR.T_EV_HVHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO = H.EMPNO AND H.EVASEQ = 3
				FULL JOIN (
					SELECT
					X.EMPNO,
					X.CORAVG/X.CNT AS CORAVG_SUM,
					X.TOTAVG/X.CNT AS TOTAVG_SUM
					FROM (
						SELECT
						A.EMPNO,COUNT(A.EMPNO)CNT, SUM(COALESCE(A.TOTAVG,0)) AS TOTAVG,  SUM(COALESCE(A.TOTAVG,0)) AS CORAVG
						FROM ASNHR.T_EV_HVEMP A
						FULL JOIN ASNHR.T_EV_HVHEMP F ON A.EVAYM = F.EVAYM AND A.EMPNO=F.EMPNO AND F.EVASEQ=1
						FULL JOIN ASNHR.T_EV_HVHEMP G ON A.EVAYM = G.EVAYM AND A.EMPNO=G.EMPNO AND G.EVASEQ=2
						FULL JOIN ASNHR.T_EV_HVHEMP H ON A.EVAYM = H.EVAYM AND A.EMPNO=H.EMPNO AND H.EVASEQ=3
						WHERE A.EVAYM LIKE ?
						AND A.TOTAVG!=0
						GROUP BY A.EMPNO
					) X
				) Y ON Y.EMPNO = A.EMPNO
				FULL JOIN
				(
				SELECT A.EVAYM, A.EMPNO,
					ROUND(COALESCE(
					(A.AVG1+A.AVG2+A.AVG3+A.AVG4+A.AVG5
					+A.AVG6+A.AVG7+A.AVG8+A.AVG9+A.AVG10
					+A.AVG11+A.AVG12+A.AVG13+A.AVG14+A.AVG15)/V.CNT,0),3) AS DPTAVG
				FROM ASNHR.T_EV_HVEMP_DPT A
				FULL JOIN (
					SELECT EVAYM, EMPNO, COUNT(EMPNOH) CNT
					FROM ASNHR.T_EV_HVHEMP_DPT
					WHERE EVAYM = ?
					GROUP BY EVAYM, EMPNO
					)V ON A.EVAYM = V.EVAYM AND A.EMPNO = V.EMPNO
				)P ON P.EVAYM = A.EVAYM AND P.EMPNO = A.EMPNO
			WHERE
				A.EVAYM = ?
				AND A.EMPNO=B.ENO_NO
				AND (F.EMPNOH LIKE '%'||?||'%' OR G.EMPNOH LIKE '%'||?||'%' OR H.EMPNOH LIKE '%'||?||'%')
				AND A.GRSREF NOT IN ('1','2')
			ORDER BY A.PAYGRD,A.EMPNO
            ]]>
        </query>
    </sql>


    <!-- 정규직 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUI050_SHR_04">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.PAYGRD2,
				CAST(ROUND(Y.CNT*5.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*15.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*5.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*15.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*7.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) )AS B,
				CAST(ROUND(Y.CNT*7.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT(X.EVAYM, X.PAYGRD2) CNT, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD, A.TOTAVG,

						 CASE WHEN (B.DUTY_CD IN ('05','17','29','34')  --//2012년 상반기에는 부서장 대행 제외

						-- CASE WHEN (B.DUTY_CD IN ('05','17','29')  //2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
						OR (B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR (A.PAYGRD >='140' AND A.PAYGRD<='170') ) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_HVEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  AND A.GRSREF IN ('1','2')
				) X
			WHERE X.EVAYM =?   AND X.GRSREF IN ('1','2')
			)Y
			ORDER BY Y.PAYGRD2
            ]]>
        </query>
    </sql>


    <!-- 계약직 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUI050_SHR_05">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.PAYGRD2,
				CAST(ROUND(Y.CNT*5.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*15.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*5.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*15.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*7.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) )AS B,
				CAST(ROUND(Y.CNT*7.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT2(X.EVAYM, X.PAYGRD2) CNT, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD, A.TOTAVG,

						CASE WHEN (B.DUTY_CD IN ('05','17','29','34')  --//2012년 상반기에는 부서장 대행 제외

						--CASE WHEN (B.DUTY_CD IN ('05','17','29') //2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
 						OR (B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR (A.PAYGRD >='140' AND A.PAYGRD<='170') ) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_HVEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ? AND A.GRSREF NOT IN ('1','2')
				) X
			WHERE X.EVAYM =? AND X.GRSREF NOT IN ('1','2')
			)Y
			ORDER BY Y.PAYGRD2
            ]]>
        </query>
    </sql>


    <!-- 정규직 직급별 rank 조회 한다. -->
    <sql name="VLUI050_SHR_06">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, Y.EMPNO, Y.PAYGRD, Y.PAYGRD2,
				Y.TOTAVG, Y.RNK, Y.CNT, ''GRADE
			FROM(
				SELECT
					X.EVAYM, X.EMPNO, X.PAYGRD, X.PAYGRD2, X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT(X.EVAYM, X.PAYGRD2) CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD, A.TOTAVG,

						CASE WHEN (B.DUTY_CD IN ('05','17','29','34') OR  --//2012년 상반기에는 부서장 대행 제외

						-- CASE WHEN (B.DUTY_CD IN ('05','17','29') OR		//2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
						(B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR  (A.PAYGRD >='140' AND A.PAYGRD<='170')) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_HVEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  AND A.GRSREF IN ('1','2')
				) X
				WHERE X.EVAYM = ?  AND X.GRSREF  IN ('1','2')
			) Y
			ORDER BY Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>

    <!-- 계약직 직급별 rank 조회 한다. -->
    <sql name="VLUI050_SHR_07">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, Y.EMPNO, Y.PAYGRD, Y.PAYGRD2,
				Y.TOTAVG, Y.RNK, Y.CNT, ''GRADE
			FROM(
				SELECT
					X.EVAYM, X.EMPNO, X.PAYGRD, X.PAYGRD2, X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT2(X.EVAYM, X.PAYGRD2) CNT
				FROM (
					SELECT
						A.EVAYM, A.GRSREF, A.EMPNO, A.PAYGRD, A.TOTAVG,

						CASE WHEN (B.DUTY_CD IN ('05','17','29','34') OR    --//2012년 상반기에는 부서장 대행 제외

						-- CASE WHEN (B.DUTY_CD IN ('05','17','29') OR  //2012년 하반기에는 부서장 대행 포함, 수정시 ASNHR.SF_get_maxcnt/_maxcnt2 도 같이 수정
						(B.DUTY_CD ='20' AND B.JOB_CD IN ('140','150','160','170')) OR  (A.PAYGRD >='140' AND A.PAYGRD<='170')) THEN '130'
						ELSE
						CASE
						WHEN (A.PAYGRD >='180' AND A.PAYGRD<='190') THEN '180'
						WHEN (A.PAYGRD >='200' AND A.PAYGRD<='210') THEN '200'
						WHEN (A.PAYGRD >='220' AND A.PAYGRD<='230') THEN '220'
						WHEN (A.PAYGRD >='240' AND A.PAYGRD<='270') THEN '240'
						WHEN (A.PAYGRD >='300' AND A.PAYGRD<='300') THEN '700'
						WHEN (A.PAYGRD >='700' AND A.PAYGRD<='700') THEN '700'
						WHEN (A.PAYGRD >='890' AND A.PAYGRD<='890') THEN '700'
						ELSE '999' END
						END PAYGRD2
					FROM ASNHR.T_EV_HVEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = ?  AND A.GRSREF NOT IN ('1','2')
				) X
				WHERE X.EVAYM = ?  AND X.GRSREF NOT IN ('1','2')
			) Y
			ORDER BY Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>


    <!-- 등급생성 저장 한다. -->
    <sql name="VLUI050_SAV">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_HVEMP
			SET
			GRADE2 = ?,
			GRADE3 = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 실행결과 저장 한다. -->
    <sql name="VLUI050_SAV_EXE">
        <description>실행결과 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_HVEMP
			SET
			TOTAVG = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 등급생성 저장 한다. -->
    <sql name="VLUI050_SAV_GRD">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_HVEMP
			SET
			GRADE = ?,
			GRADE2 = ?,
			GRADE3 = ?
			WHERE EVAYM = ? and EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 조회 한다. -->
    <sql name="VLUI060_SHR">
        <description>고과자지정(부서장) 조회</description>
        <query>
            <![CDATA[
				SELECT
				X.CHK, X.EVAYM, X.EMPNO, X.EMPNMK, X.DEPTCD,
				RTRIM(X.DEPTNM) DEPTNM ,
				X.PAYGRD, X.PAYGRDNM,
				MAX(X.SEQ1)SEQ1,   MAX(X.EMPNMK1)EMPNMK1,
				MAX(X.SEQ2)SEQ2,   MAX(X.EMPNMK2)EMPNMK2,
				MAX(X.SEQ3)SEQ3,   MAX(X.EMPNMK3)EMPNMK3,
				MAX(X.SEQ4)SEQ4,   MAX(X.EMPNMK4)EMPNMK4,
				MAX(X.SEQ5)SEQ5,   MAX(X.EMPNMK5)EMPNMK5,
				MAX(X.SEQ6)SEQ6,   MAX(X.EMPNMK6)EMPNMK6,
				MAX(X.SEQ7)SEQ7,   MAX(X.EMPNMK7)EMPNMK7,
				MAX(X.SEQ8)SEQ8,   MAX(X.EMPNMK8)EMPNMK8,
				MAX(X.SEQ9)SEQ9,   MAX(X.EMPNMK9)EMPNMK9,
				MAX(X.SEQ10)SEQ10, MAX(X.EMPNMK10)EMPNMK10,
				MAX(X.SEQ11)SEQ11, MAX(X.EMPNMK11)EMPNMK11,
				MAX(X.SEQ12)SEQ12, MAX(X.EMPNMK12)EMPNMK12,
				MAX(X.SEQ13)SEQ13, MAX(X.EMPNMK13)EMPNMK13,
				MAX(X.SEQ14)SEQ14, MAX(X.EMPNMK14)EMPNMK14,
				MAX(X.SEQ15)SEQ15, MAX(X.EMPNMK15)EMPNMK15
			FROM (
			SELECT
				'F' CHK,
				A.EVAYM,
				A.EMPNO, ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,

				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,

				CASE B.EVASEQ WHEN 1  THEN B.EMPNOH END AS SEQ1,
				CASE B.EVASEQ WHEN 2  THEN B.EMPNOH END AS SEQ2,
				CASE B.EVASEQ WHEN 3  THEN B.EMPNOH END AS SEQ3,
				CASE B.EVASEQ WHEN 4  THEN B.EMPNOH END AS SEQ4,
				CASE B.EVASEQ WHEN 5  THEN B.EMPNOH END AS SEQ5,
				CASE B.EVASEQ WHEN 6  THEN B.EMPNOH END AS SEQ6,
				CASE B.EVASEQ WHEN 7  THEN B.EMPNOH END AS SEQ7,
				CASE B.EVASEQ WHEN 8  THEN B.EMPNOH END AS SEQ8,
				CASE B.EVASEQ WHEN 9  THEN B.EMPNOH END AS SEQ9,
				CASE B.EVASEQ WHEN 10 THEN B.EMPNOH END AS SEQ10,
				CASE B.EVASEQ WHEN 11 THEN B.EMPNOH END AS SEQ11,
				CASE B.EVASEQ WHEN 12 THEN B.EMPNOH END AS SEQ12,
				CASE B.EVASEQ WHEN 13 THEN B.EMPNOH END AS SEQ13,
				CASE B.EVASEQ WHEN 14 THEN B.EMPNOH END AS SEQ14,
				CASE B.EVASEQ WHEN 15 THEN B.EMPNOH END AS SEQ15,
				CASE B.EVASEQ WHEN 1  THEN C.ENO_NM END AS EMPNMK1,
				CASE B.EVASEQ WHEN 2  THEN C.ENO_NM END AS EMPNMK2,
				CASE B.EVASEQ WHEN 3  THEN C.ENO_NM END AS EMPNMK3,
				CASE B.EVASEQ WHEN 4  THEN C.ENO_NM END AS EMPNMK4,
				CASE B.EVASEQ WHEN 5  THEN C.ENO_NM END AS EMPNMK5,
				CASE B.EVASEQ WHEN 6  THEN C.ENO_NM END AS EMPNMK6,
				CASE B.EVASEQ WHEN 7  THEN C.ENO_NM END AS EMPNMK7,
				CASE B.EVASEQ WHEN 8  THEN C.ENO_NM END AS EMPNMK8,
				CASE B.EVASEQ WHEN 9  THEN C.ENO_NM END AS EMPNMK9,
				CASE B.EVASEQ WHEN 10 THEN C.ENO_NM END AS EMPNMK10,
				CASE B.EVASEQ WHEN 11 THEN C.ENO_NM END AS EMPNMK11,
				CASE B.EVASEQ WHEN 12 THEN C.ENO_NM END AS EMPNMK12,
				CASE B.EVASEQ WHEN 13 THEN C.ENO_NM END AS EMPNMK13,
				CASE B.EVASEQ WHEN 14 THEN C.ENO_NM END AS EMPNMK14,
				CASE B.EVASEQ WHEN 15 THEN C.ENO_NM END AS EMPNMK15

				FROM ASNHR.T_EV_HVEMP_DPT A
				FULL OUTER JOIN ASNHR.T_EV_HVHEMP_DPT B ON A.EVAYM = B.EVAYM  AND  A.EMPNO = B.EMPNO
				FULL OUTER JOIN ASNHR.T_CM_PERSON C ON B.EMPNOH = C.ENO_NO AND (C.RET_YMD ='' OR C.RET_YMD IS NULL)
				FULL OUTER JOIN ASNHR.T_CM_PERSON D ON A.EMPNO = D.ENO_NO AND (D.RET_YMD ='' OR D.RET_YMD IS NULL)
				) X
			WHERE X.EVAYM = ?
				AND X.EMPNO LIKE '%'||?||'%'
				AND X.DEPTCD LIKE '%'||?||'%'
				AND X.PAYGRD LIKE '%'||?||'%'
				GROUP BY X.CHK, X.EVAYM, X.EMPNO, X.EMPNMK, X.DEPTCD, X.DEPTNM, X.PAYGRD, X.PAYGRDNM
				ORDER BY X.EMPNO
            ]]>
        </query>
    </sql>

    <!-- 조회 한다. -->
    <sql name="VLUI060_SHR_01">
        <description>고과자지정(부서장) 조회</description>
        <query>
            <![CDATA[
				SELECT
				'' CHKOUT,
				A.EVAYM,
				A.EMPNOH,
				B.ENO_NM AS EMPNMKH,
				A.EMPNO ,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.EVASEQ,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.EMPNOH AS OLDEMPNOH,
				A.EVASEQ AS OLDEVASEQ
			FROM
				T_EV_HVHEMP_DPT A, ASNHR.T_CM_PERSON B, ASNHR.T_CM_PERSON C
			WHERE A.EMPNOH = B.ENO_NO
				AND A.EMPNO = C.ENO_NO
				AND A.EVAYM = ?
				AND A.EMPNO LIKE '%'||?||'%'
				AND B.DPT_CD LIKE '%'||?||'%'
				AND B.JOB_CD LIKE '%'||?||'%'
				AND A.EMPNOH LIKE '%'||?||'%'
				AND A.EVASEQ LIKE '%'||?||'%'

            ]]>
        </query>
    </sql>

    <!-- 부서장에 대한 고과자 저장 한다. -->
    <sql name="VLUI060_SAV">
        <description>부서장에 대한 고과자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVHEMP_DPT
                 ( EVAYM,EMPNOH,EMPNO,EVASEQ,DEPTCD,DEPTNM,PAYGRD
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 ?
                 )

            ]]>
        </query>
    </sql>


    <!-- 부서장 고과자 삭제 한다. -->
    <sql name="VLUI060_DEL">
        <description>부서장 고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVHEMP_DPT
			WHERE EVAYM = ?
				AND EMPNOH = ?
				AND EMPNO = ?
				AND EVASEQ = ?
            ]]>
        </query>
    </sql>


    <!-- 조회 한다. -->
    <sql name="VLUI070_SHR">
        <description>피고과자선정(상향) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
					DECODE(
					A.DEPTCD,
					DECODE(
					A.DEPTCD,
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
					A.DEPTCD),
					DECODE(
					A.DEPTCD,
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'B2',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)),
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD)
					) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
                A.GRSTRTDT,
				A.STRTDT,
				A.WRDT,
				NVL(A.TOTAVG,0)	TOTAVG,
				NVL(A.SCR1,0)	 SCR1,
				NVL(A.AVG1,0)	 AVG1,
				NVL(A.SCR2,0)	 SCR2,
				NVL(A.AVG2,0)	 AVG2,
				NVL(A.SCR3,0)	 SCR3,
				NVL(A.AVG3,0)	 AVG3,
				NVL(A.SCR4,0)	 SCR4,
				NVL(A.AVG4,0)	 AVG4,
                A.LAMDT,
                A.RECDIV,
                ASNHR.SF_GET_COMMNAME('01', 'C1', A.RECDIV) AS RECNM,
                A.JOBKIND,
				ASNHR.SF_GET_COMMNAME('01', 'SD', A.JOBREF) AS JOBREF
			FROM ASNHR.T_EV_HVEMPS A
            WHERE      A.EVAYM = ?
				AND A.EMPNO LIKE '%'||?||'%'
				AND A.DEPTCD LIKE '%'||?||'%'
				AND A.PAYGRD LIKE '%'||?||'%'
            ORDER BY A.PAYGRD

            ]]>
        </query>
    </sql>


    <!-- 상향 피고과자 기생성자 조회 한다. -->
    <sql name="VLUI070_SHR_01">
        <description>상향 피고과자 기생성자 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,    A.EMPNO,    B.ENO_NM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS GRDNM,
				A.GRSTRTDT,    	A.STRTDT,    SUBSTR(A.WRDT,1,6) WRDT,
				A.TOTAVG,
				A.SCR1,      	A.AVG1,       	A.SCR2,        	A.AVG2,
				A.SCR3,     	A.AVG3,      	A.SCR4,       	A.AVG4
			FROM ASNHR.T_EV_HVEMPS A, ASNHR.T_CM_PERSON B
            WHERE  A.EMPNO = B.ENO_NO
            	AND A.EVAYM = ?
            ORDER BY A.PAYGRD
            ]]>
        </query>
    </sql>


    <!-- 상향 피고과자 기생성자 조회 한다. -->
    <sql name="VLUI070_SHR_02">
        <description>상향 피고과자 기생성자 생성</description>
        <query>
            <![CDATA[
			SELECT ? AS WRDT,
				A.ENO_NO AS EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
				A.DPT_CD, DECODE(A.DPT_CD,SF_GET_DPTNAME('01', 'A4',A.DPT_CD),SF_GET_DPTNAME('01', 'A6',A.DPT_CD),SF_GET_DPTNAME('01', 'A4',A.DPT_CD)) AS DEPTNM,
				A.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.JOB_CD)) AS GRDNM,
				TO_CHAR(A.HIRG_YMD, 'YYYYMMDD')  AS HIRG_YMD,
				TO_CHAR(A.HIR_YMD, 'YYYYMMDD')  AS HIR_YMD,
				TO_CHAR(A.JPR_YMD, 'YYYYMMDD')  AS JPR_YMD,
				A.HIR_CD, A.GBN_CD
			FROM ASNHR.T_CM_PERSON A
			WHERE A.RET_YMD IS NULL
				AND A.FINJ_CD IN ('L11')
				AND SUBSTR(A.ENO_NO,0,1) < '9'
				AND (A.JOB_CD BETWEEN '010' AND '190')
			ORDER BY A.JOB_CD
            ]]>
        </query>
    </sql>


    <!-- 상향 피고과자 기생성자 저장 한다. -->
    <sql name="VLUI070_SAV_01">
        <description>상향 피고과자 기생성자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVEMPS
                 ( EVAYM,	EMPNO, 		DEPTCD,		PAYGRD,		GRSTRTDT,
                   STRTDT,  WRDT,  		LAMDT,   	DEPREF,		RECDIV,  	GRSREF
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,
                   ?, 	 ?,		?,		?,		?,		'1'
                 )
            ]]>
        </query>
    </sql>



    <!-- 상향 피고과자  삭제 한다. -->
    <sql name="VLUI070_DEL1">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVEMPS
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 상향 피고과자  삭제 한다. -->
    <sql name="VLUI070_DEL2">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVHEMPS
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 상향 피고과자  삭제 한다. -->
    <sql name="VLUI070_DEL3">
        <description>일반 피고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVSCORES
			WHERE
				EVAYM = ? AND EMPNO = ?
            ]]>
        </query>
    </sql>



    <!-- 피고과자 기생성자 삭제 한다. -->
    <sql name="VLUI070_DEL_01">
        <description>피고과자 기생성자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVEMPS
			WHERE
				EVAYM = ?
            ]]>
        </query>
    </sql>



    <!-- 조회 한다. -->
    <sql name="VLUI080_SHR">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
				SELECT
				X.CHK, X.EVAYM, X.EMPNO, X.EMPNMK, X.DEPTCD,
				RTRIM(X.DEPTNM) DEPTNM ,
				X.PAYGRD, X.PAYGRDNM,
				MAX(X.SEQ1)SEQ1,   MAX(X.EMPNMK1)EMPNMK1,
				MAX(X.SEQ2)SEQ2,   MAX(X.EMPNMK2)EMPNMK2,
				MAX(X.SEQ3)SEQ3,   MAX(X.EMPNMK3)EMPNMK3,
				MAX(X.SEQ4)SEQ4,   MAX(X.EMPNMK4)EMPNMK4,
				MAX(X.SEQ5)SEQ5,   MAX(X.EMPNMK5)EMPNMK5,
				MAX(X.SEQ6)SEQ6,   MAX(X.EMPNMK6)EMPNMK6,
				MAX(X.SEQ7)SEQ7,   MAX(X.EMPNMK7)EMPNMK7,
				MAX(X.SEQ8)SEQ8,   MAX(X.EMPNMK8)EMPNMK8,
				MAX(X.SEQ9)SEQ9,   MAX(X.EMPNMK9)EMPNMK9,
				MAX(X.SEQ10)SEQ10, MAX(X.EMPNMK10)EMPNMK10,
				MAX(X.SEQ11)SEQ11, MAX(X.EMPNMK11)EMPNMK11,
				MAX(X.SEQ12)SEQ12, MAX(X.EMPNMK12)EMPNMK12,
				MAX(X.SEQ13)SEQ13, MAX(X.EMPNMK13)EMPNMK13,
				MAX(X.SEQ14)SEQ14, MAX(X.EMPNMK14)EMPNMK14,
				MAX(X.SEQ15)SEQ15, MAX(X.EMPNMK15)EMPNMK15,
				MAX(X.SEQ16)SEQ16, MAX(X.EMPNMK16)EMPNMK16,
				MAX(X.SEQ17)SEQ17, MAX(X.EMPNMK17)EMPNMK17,
				MAX(X.SEQ18)SEQ18, MAX(X.EMPNMK18)EMPNMK18,
				MAX(X.SEQ19)SEQ19, MAX(X.EMPNMK19)EMPNMK19,
				MAX(X.SEQ20)SEQ20, MAX(X.EMPNMK20)EMPNMK20,
				MAX(X.SEQ21)SEQ21, MAX(X.EMPNMK21)EMPNMK21,
				MAX(X.SEQ22)SEQ22, MAX(X.EMPNMK22)EMPNMK22,
				MAX(X.SEQ23)SEQ23, MAX(X.EMPNMK23)EMPNMK23,
				MAX(X.SEQ24)SEQ24, MAX(X.EMPNMK24)EMPNMK24,
				MAX(X.SEQ25)SEQ25, MAX(X.EMPNMK25)EMPNMK25,
				MAX(X.SEQ26)SEQ26, MAX(X.EMPNMK26)EMPNMK26,
				MAX(X.SEQ27)SEQ27, MAX(X.EMPNMK27)EMPNMK27,
				MAX(X.SEQ28)SEQ28, MAX(X.EMPNMK28)EMPNMK28,
				MAX(X.SEQ29)SEQ29, MAX(X.EMPNMK29)EMPNMK29,
				MAX(X.SEQ30)SEQ30, MAX(X.EMPNMK30)EMPNMK30,
				MAX(X.SEQ31)SEQ31, MAX(X.EMPNMK31)EMPNMK31,
				MAX(X.SEQ32)SEQ32, MAX(X.EMPNMK32)EMPNMK32,
				MAX(X.SEQ33)SEQ33, MAX(X.EMPNMK33)EMPNMK33,
				MAX(X.SEQ34)SEQ34, MAX(X.EMPNMK34)EMPNMK34,
				MAX(X.SEQ35)SEQ35, MAX(X.EMPNMK35)EMPNMK35,
				MAX(X.SEQ36)SEQ36, MAX(X.EMPNMK36)EMPNMK36,
				MAX(X.SEQ37)SEQ37, MAX(X.EMPNMK37)EMPNMK37,
				MAX(X.SEQ38)SEQ38, MAX(X.EMPNMK38)EMPNMK38,
				MAX(X.SEQ39)SEQ39, MAX(X.EMPNMK39)EMPNMK39,
				MAX(X.SEQ40)SEQ40, MAX(X.EMPNMK40)EMPNMK40,
				MAX(X.SEQ41)SEQ41, MAX(X.EMPNMK41)EMPNMK41,
				MAX(X.SEQ42)SEQ42, MAX(X.EMPNMK42)EMPNMK42,
				MAX(X.SEQ43)SEQ43, MAX(X.EMPNMK43)EMPNMK43,
				MAX(X.SEQ44)SEQ44, MAX(X.EMPNMK44)EMPNMK44,
				MAX(X.SEQ45)SEQ45, MAX(X.EMPNMK45)EMPNMK45,
				MAX(X.SEQ46)SEQ46, MAX(X.EMPNMK46)EMPNMK46,
				MAX(X.SEQ47)SEQ47, MAX(X.EMPNMK47)EMPNMK47,
				MAX(X.SEQ48)SEQ48, MAX(X.EMPNMK48)EMPNMK48,
				MAX(X.SEQ49)SEQ49, MAX(X.EMPNMK49)EMPNMK49,
				MAX(X.SEQ50)SEQ50, MAX(X.EMPNMK50)EMPNMK50,
				MAX(X.SEQ51)SEQ51, MAX(X.EMPNMK51)EMPNMK51,
				MAX(X.SEQ52)SEQ52, MAX(X.EMPNMK52)EMPNMK52,
				MAX(X.SEQ53)SEQ53, MAX(X.EMPNMK53)EMPNMK53,
				MAX(X.SEQ54)SEQ54, MAX(X.EMPNMK54)EMPNMK54,
				MAX(X.SEQ55)SEQ55, MAX(X.EMPNMK55)EMPNMK55,
				MAX(X.SEQ56)SEQ56, MAX(X.EMPNMK56)EMPNMK56,
				MAX(X.SEQ57)SEQ57, MAX(X.EMPNMK57)EMPNMK57,
				MAX(X.SEQ58)SEQ58, MAX(X.EMPNMK58)EMPNMK58,
				MAX(X.SEQ59)SEQ59, MAX(X.EMPNMK59)EMPNMK59,
				MAX(X.SEQ60)SEQ60, MAX(X.EMPNMK60)EMPNMK60

			FROM (
			SELECT
				'F' CHK,
				A.EVAYM,
				A.EMPNO, ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,

					DECODE(
					A.DEPTCD,
					DECODE(
					A.DEPTCD,
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
					A.DEPTCD),
					DECODE(
					A.DEPTCD,
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'B2',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)),
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD)
					) AS DEPTNM,

				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,

				CASE B.EVASEQ WHEN 1  THEN B.EMPNOH END AS SEQ1,
				CASE B.EVASEQ WHEN 2  THEN B.EMPNOH END AS SEQ2,
				CASE B.EVASEQ WHEN 3  THEN B.EMPNOH END AS SEQ3,
				CASE B.EVASEQ WHEN 4  THEN B.EMPNOH END AS SEQ4,
				CASE B.EVASEQ WHEN 5  THEN B.EMPNOH END AS SEQ5,
				CASE B.EVASEQ WHEN 6  THEN B.EMPNOH END AS SEQ6,
				CASE B.EVASEQ WHEN 7  THEN B.EMPNOH END AS SEQ7,
				CASE B.EVASEQ WHEN 8  THEN B.EMPNOH END AS SEQ8,
				CASE B.EVASEQ WHEN 9  THEN B.EMPNOH END AS SEQ9,
				CASE B.EVASEQ WHEN 10 THEN B.EMPNOH END AS SEQ10,
				CASE B.EVASEQ WHEN 11 THEN B.EMPNOH END AS SEQ11,
				CASE B.EVASEQ WHEN 12 THEN B.EMPNOH END AS SEQ12,
				CASE B.EVASEQ WHEN 13 THEN B.EMPNOH END AS SEQ13,
				CASE B.EVASEQ WHEN 14 THEN B.EMPNOH END AS SEQ14,
				CASE B.EVASEQ WHEN 15 THEN B.EMPNOH END AS SEQ15,
				CASE B.EVASEQ WHEN 16 THEN B.EMPNOH END AS SEQ16,
				CASE B.EVASEQ WHEN 17 THEN B.EMPNOH END AS SEQ17,
				CASE B.EVASEQ WHEN 18 THEN B.EMPNOH END AS SEQ18,
				CASE B.EVASEQ WHEN 19 THEN B.EMPNOH END AS SEQ19,
				CASE B.EVASEQ WHEN 20 THEN B.EMPNOH END AS SEQ20,
				CASE B.EVASEQ WHEN 21 THEN B.EMPNOH END AS SEQ21,
				CASE B.EVASEQ WHEN 22 THEN B.EMPNOH END AS SEQ22,
				CASE B.EVASEQ WHEN 23 THEN B.EMPNOH END AS SEQ23,
				CASE B.EVASEQ WHEN 24 THEN B.EMPNOH END AS SEQ24,
				CASE B.EVASEQ WHEN 25 THEN B.EMPNOH END AS SEQ25,
				CASE B.EVASEQ WHEN 26 THEN B.EMPNOH END AS SEQ26,
				CASE B.EVASEQ WHEN 27 THEN B.EMPNOH END AS SEQ27,
				CASE B.EVASEQ WHEN 28 THEN B.EMPNOH END AS SEQ28,
				CASE B.EVASEQ WHEN 29 THEN B.EMPNOH END AS SEQ29,
				CASE B.EVASEQ WHEN 30 THEN B.EMPNOH END AS SEQ30,
				CASE B.EVASEQ WHEN 31 THEN B.EMPNOH END AS SEQ31,
				CASE B.EVASEQ WHEN 32 THEN B.EMPNOH END AS SEQ32,
				CASE B.EVASEQ WHEN 33 THEN B.EMPNOH END AS SEQ33,
				CASE B.EVASEQ WHEN 34 THEN B.EMPNOH END AS SEQ34,
				CASE B.EVASEQ WHEN 35 THEN B.EMPNOH END AS SEQ35,
				CASE B.EVASEQ WHEN 36 THEN B.EMPNOH END AS SEQ36,
				CASE B.EVASEQ WHEN 37 THEN B.EMPNOH END AS SEQ37,
				CASE B.EVASEQ WHEN 38 THEN B.EMPNOH END AS SEQ38,
				CASE B.EVASEQ WHEN 39 THEN B.EMPNOH END AS SEQ39,
				CASE B.EVASEQ WHEN 40 THEN B.EMPNOH END AS SEQ40,
				CASE B.EVASEQ WHEN 41 THEN B.EMPNOH END AS SEQ41,
				CASE B.EVASEQ WHEN 42 THEN B.EMPNOH END AS SEQ42,
				CASE B.EVASEQ WHEN 43 THEN B.EMPNOH END AS SEQ43,
				CASE B.EVASEQ WHEN 44 THEN B.EMPNOH END AS SEQ44,
				CASE B.EVASEQ WHEN 45 THEN B.EMPNOH END AS SEQ45,
				CASE B.EVASEQ WHEN 46 THEN B.EMPNOH END AS SEQ46,
				CASE B.EVASEQ WHEN 47 THEN B.EMPNOH END AS SEQ47,
				CASE B.EVASEQ WHEN 48 THEN B.EMPNOH END AS SEQ48,
				CASE B.EVASEQ WHEN 49 THEN B.EMPNOH END AS SEQ49,
				CASE B.EVASEQ WHEN 50 THEN B.EMPNOH END AS SEQ50,
				CASE B.EVASEQ WHEN 51 THEN B.EMPNOH END AS SEQ51,
				CASE B.EVASEQ WHEN 52 THEN B.EMPNOH END AS SEQ52,
				CASE B.EVASEQ WHEN 53 THEN B.EMPNOH END AS SEQ53,
				CASE B.EVASEQ WHEN 54 THEN B.EMPNOH END AS SEQ54,
				CASE B.EVASEQ WHEN 55 THEN B.EMPNOH END AS SEQ55,
				CASE B.EVASEQ WHEN 56 THEN B.EMPNOH END AS SEQ56,
				CASE B.EVASEQ WHEN 57 THEN B.EMPNOH END AS SEQ57,
				CASE B.EVASEQ WHEN 58 THEN B.EMPNOH END AS SEQ58,
				CASE B.EVASEQ WHEN 59 THEN B.EMPNOH END AS SEQ59,
				CASE B.EVASEQ WHEN 60 THEN B.EMPNOH END AS SEQ60,

				CASE B.EVASEQ WHEN 1  THEN C.ENO_NM END AS EMPNMK1,
				CASE B.EVASEQ WHEN 2  THEN C.ENO_NM END AS EMPNMK2,
				CASE B.EVASEQ WHEN 3  THEN C.ENO_NM END AS EMPNMK3,
				CASE B.EVASEQ WHEN 4  THEN C.ENO_NM END AS EMPNMK4,
				CASE B.EVASEQ WHEN 5  THEN C.ENO_NM END AS EMPNMK5,
				CASE B.EVASEQ WHEN 6  THEN C.ENO_NM END AS EMPNMK6,
				CASE B.EVASEQ WHEN 7  THEN C.ENO_NM END AS EMPNMK7,
				CASE B.EVASEQ WHEN 8  THEN C.ENO_NM END AS EMPNMK8,
				CASE B.EVASEQ WHEN 9  THEN C.ENO_NM END AS EMPNMK9,
				CASE B.EVASEQ WHEN 10 THEN C.ENO_NM END AS EMPNMK10,
				CASE B.EVASEQ WHEN 11 THEN C.ENO_NM END AS EMPNMK11,
				CASE B.EVASEQ WHEN 12 THEN C.ENO_NM END AS EMPNMK12,
				CASE B.EVASEQ WHEN 13 THEN C.ENO_NM END AS EMPNMK13,
				CASE B.EVASEQ WHEN 14 THEN C.ENO_NM END AS EMPNMK14,
				CASE B.EVASEQ WHEN 15 THEN C.ENO_NM END AS EMPNMK15,
				CASE B.EVASEQ WHEN 16 THEN C.ENO_NM END AS EMPNMK16,
				CASE B.EVASEQ WHEN 17 THEN C.ENO_NM END AS EMPNMK17,
				CASE B.EVASEQ WHEN 18 THEN C.ENO_NM END AS EMPNMK18,
				CASE B.EVASEQ WHEN 19 THEN C.ENO_NM END AS EMPNMK19,
				CASE B.EVASEQ WHEN 20 THEN C.ENO_NM END AS EMPNMK20,
				CASE B.EVASEQ WHEN 21 THEN C.ENO_NM END AS EMPNMK21,
				CASE B.EVASEQ WHEN 22 THEN C.ENO_NM END AS EMPNMK22,
				CASE B.EVASEQ WHEN 23 THEN C.ENO_NM END AS EMPNMK23,
				CASE B.EVASEQ WHEN 24 THEN C.ENO_NM END AS EMPNMK24,
				CASE B.EVASEQ WHEN 25 THEN C.ENO_NM END AS EMPNMK25,
				CASE B.EVASEQ WHEN 26 THEN C.ENO_NM END AS EMPNMK26,
				CASE B.EVASEQ WHEN 27 THEN C.ENO_NM END AS EMPNMK27,
				CASE B.EVASEQ WHEN 28 THEN C.ENO_NM END AS EMPNMK28,
				CASE B.EVASEQ WHEN 29 THEN C.ENO_NM END AS EMPNMK29,
				CASE B.EVASEQ WHEN 30 THEN C.ENO_NM END AS EMPNMK30,
				CASE B.EVASEQ WHEN 31 THEN C.ENO_NM END AS EMPNMK31,
				CASE B.EVASEQ WHEN 32 THEN C.ENO_NM END AS EMPNMK32,
				CASE B.EVASEQ WHEN 33 THEN C.ENO_NM END AS EMPNMK33,
				CASE B.EVASEQ WHEN 34 THEN C.ENO_NM END AS EMPNMK34,
				CASE B.EVASEQ WHEN 35 THEN C.ENO_NM END AS EMPNMK35,
				CASE B.EVASEQ WHEN 36 THEN C.ENO_NM END AS EMPNMK36,
				CASE B.EVASEQ WHEN 37 THEN C.ENO_NM END AS EMPNMK37,
				CASE B.EVASEQ WHEN 38 THEN C.ENO_NM END AS EMPNMK38,
				CASE B.EVASEQ WHEN 39 THEN C.ENO_NM END AS EMPNMK39,
				CASE B.EVASEQ WHEN 40 THEN C.ENO_NM END AS EMPNMK40,
				CASE B.EVASEQ WHEN 41 THEN C.ENO_NM END AS EMPNMK41,
				CASE B.EVASEQ WHEN 42 THEN C.ENO_NM END AS EMPNMK42,
				CASE B.EVASEQ WHEN 43 THEN C.ENO_NM END AS EMPNMK43,
				CASE B.EVASEQ WHEN 44 THEN C.ENO_NM END AS EMPNMK44,
				CASE B.EVASEQ WHEN 45 THEN C.ENO_NM END AS EMPNMK45,
				CASE B.EVASEQ WHEN 46 THEN C.ENO_NM END AS EMPNMK46,
				CASE B.EVASEQ WHEN 47 THEN C.ENO_NM END AS EMPNMK47,
				CASE B.EVASEQ WHEN 48 THEN C.ENO_NM END AS EMPNMK48,
				CASE B.EVASEQ WHEN 49 THEN C.ENO_NM END AS EMPNMK49,
				CASE B.EVASEQ WHEN 50 THEN C.ENO_NM END AS EMPNMK50,
				CASE B.EVASEQ WHEN 51 THEN C.ENO_NM END AS EMPNMK51,
				CASE B.EVASEQ WHEN 52 THEN C.ENO_NM END AS EMPNMK52,
				CASE B.EVASEQ WHEN 53 THEN C.ENO_NM END AS EMPNMK53,
				CASE B.EVASEQ WHEN 54 THEN C.ENO_NM END AS EMPNMK54,
				CASE B.EVASEQ WHEN 55 THEN C.ENO_NM END AS EMPNMK55,
				CASE B.EVASEQ WHEN 56 THEN C.ENO_NM END AS EMPNMK56,
				CASE B.EVASEQ WHEN 57 THEN C.ENO_NM END AS EMPNMK57,
				CASE B.EVASEQ WHEN 58 THEN C.ENO_NM END AS EMPNMK58,
				CASE B.EVASEQ WHEN 59 THEN C.ENO_NM END AS EMPNMK59,
				CASE B.EVASEQ WHEN 60 THEN C.ENO_NM END AS EMPNMK60

                FROM ASNHR.T_EV_HVEMPS A
                FULL OUTER JOIN ASNHR.T_EV_HVHEMPS B ON A.EVAYM = B.EVAYM  AND  A.EMPNO = B.EMPNO
                FULL OUTER JOIN ASNHR.T_CM_PERSON C ON B.EMPNOH = C.ENO_NO AND (C.RET_YMD ='' OR C.RET_YMD IS NULL)
                FULL OUTER JOIN ASNHR.T_CM_PERSON D ON A.EMPNO = D.ENO_NO AND (D.RET_YMD ='' OR D.RET_YMD IS NULL)
				) X
			WHERE X.EVAYM = ?
				AND X.EMPNO LIKE '%'||?||'%'
				AND X.DEPTCD LIKE '%'||?||'%'
				AND X.PAYGRD LIKE '%'||?||'%'
				GROUP BY X.CHK, X.EVAYM, X.EMPNO, X.EMPNMK, X.DEPTCD, X.DEPTNM, X.PAYGRD, X.PAYGRDNM
				ORDER BY X.EMPNO
            ]]>
        </query>
    </sql>



    <!-- 조회 한다. -->
    <sql name="VLUI080_SHR_01">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
				SELECT
				'' CHKOUT,
				A.EVAYM,
				A.EMPNOH,
				B.ENO_NM AS EMPNMKH,
				A.EMPNO ,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.EVASEQ,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.EMPNOH AS OLDEMPNOH,
				A.EVASEQ AS OLDEVASEQ
			FROM
				T_EV_HVHEMPS A, ASNHR.T_CM_PERSON B, ASNHR.T_CM_PERSON C
			WHERE A.EMPNOH = B.ENO_NO
				AND A.EMPNO = C.ENO_NO
				AND A.EVAYM = ?
				AND A.EMPNOH LIKE '%'||?||'%'
			ORDER BY A.EMPNO, A.EVASEQ
            ]]>
        </query>
    </sql>


    <!-- 고과자 저장 한다. -->
    <sql name="VLUI080_SAV">
        <description>고과자 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVHEMPS
                 ( EVAYM,EMPNOH,EMPNO,EVASEQ,DEPTCD,DEPTNM,PAYGRD
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 ?
                 )

            ]]>
        </query>
    </sql>


    <!-- 고과자 삭제 한다. -->
    <sql name="VLUI080_DEL">
        <description>고과자 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HVHEMPS
			WHERE EVAYM = ?
				AND EMPNOH = ?
				AND EMPNO = ?
				AND EVASEQ = ?
            ]]>
        </query>
    </sql>





    <!-- 상향 고과 대상자 - 본사 정규직 및 계약직 조회 한다. -->
    <sql name="VLUI090_SHR">
        <description>고과점수입력(상향) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				A.JOBREF JOBGRPH ,
				COALESCE(X.SCR,0) SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0) END AVGSCR

	        FROM ASNHR.T_EV_HVEMPS A
	        FULL OUTER JOIN ASNHR.T_EV_HVHEMPS B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_HVSCORES G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   A.DEPREF IN ('1')
				[1]
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD
            ]]>
        </query>
    </sql>

    <!-- 상향 고과 대상자 - 본사외(개성, 현장, 금강산등등) 정규직 및 계약직 조회 한다. -->
    <sql name="VLUI090_SHR_01">
        <description>고과점수입력(상향) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,   ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				NVL(A.TOTAVG,0)TOTAVG, B.EVASEQ ,
				A.JOBREF JOBGRPH , COALESCE(X.SCR,0) SCR,
				CASE WHEN B.EVASEQ = 1 THEN COALESCE(A.AVG1,0)
				WHEN B.EVASEQ = 2 THEN COALESCE(A.AVG2,0)
				WHEN B.EVASEQ = 3 THEN COALESCE(A.AVG3,0)
				WHEN B.EVASEQ = 4 THEN COALESCE(A.AVG4,0) END AVGSCR

	        FROM ASNHR.T_EV_HVEMPS A
	        FULL OUTER JOIN ASNHR.T_EV_HVHEMPS B ON A.EVAYM = B.EVAYM AND A.EMPNO = B.EMPNO
		    FULL OUTER JOIN
		        (SELECT G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ,SUM(G.SCR) SCR
		        FROM ASNHR.T_EV_HVSCORES G
		        WHERE G.EVAYM =?
		        AND G.EMPNOH = ?
		        GROUP BY G.EVAYM,G.EMPNOH, G.EMPNO,G.EVASEQ) X
		        ON A.EVAYM = X.EVAYM AND A.EMPNO = X.EMPNO AND X.EVASEQ = B.EVASEQ AND X.EMPNOH = ?
			WHERE   A.DEPREF IN ('2','3','4','5','6','7','8')
				[1]
				AND A.EVAYM = ?
				AND B.EMPNOH = ?
			ORDER BY A.PAYGRD
            ]]>
        </query>
    </sql>



    <!-- 상향 고과입력표 정규직 및 계약직 조회 한다. -->
    <sql name="VLUI090_SHR_SCR">
        <description>고과점수입력(상향) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM, A.GRPCD,
				A.DIVCD, ASNHR.SF_GET_COMMNAME('01', 'O3', A.DIVCD) AS DIVNM,
				A.JOBGRPH,
				A.PRTSEQ,
				A.GRPITEM,
				A.ASKITEM, E.SCRGBN,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				A.ESCR, A.GSCR, A.MSCR, A.LSCR, A.PSCR, COALESCE(E.SCR,0) SCR,
				COALESCE(E.EMPNOH,'') AS EMPNOH, COALESCE(E.EMPNO,'') AS EMPNO, COALESCE(E.EVASEQ,0) AS EVASEQ
			FROM ASNHR.T_EV_HVSHEET A
				 FULL OUTER JOIN ASNHR.T_EV_HVSCORES E ON
			    A.EVAYM = E.EVAYM
				AND A.GRPCD = E.GRPCD
				AND A.DIVCD = E.DIVCD
				AND A.PRTSEQ = E.PRTSEQ
				AND A.EVAYM = ?
				AND E.EMPNOH = ?
				AND E.EMPNO = ?
				AND E.EVASEQ = ?
             WHERE A.EVAYM = ?
             AND A.GRPCD = ?
			ORDER BY A.DIVCD, A.PRTSEQ
            ]]>
        </query>
    </sql>


    <!-- 상향 고과입력완료 조회 한다. -->
    <sql name="VLUI090_SHR_STS">
        <description>고과점수입력 입력완료 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,  	A.EMPNOH,  ASNHR.SF_GET_ENONAME('01', A.EMPNOH) AS EMPNMK,
				A.SUBMITST,
				A.WRDT,  A.WRID
			FROM ASNHR.T_EV_HVCLOSE A
             WHERE A.EVAYM = ?
             AND A.EMPNOH = ?
			ORDER BY A.EVAYM, A.EMPNOH
            ]]>
        </query>
    </sql>

    <!-- 상향 고과점수 정규직 및 계약직 저장 한다. -->
    <sql name="VLUI090_SAV">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVSCORES
                 ( EVAYM,	EMPNOH,		EMPNO,	EVASEQ,		GRPCD,		DIVCD,	JOBGRPH,	PRTSEQ,		SCR,	SCRGBN
                 )
            VALUES
                 ( ?, 	 ?,		?,		?, 		?,		?, 	 	?, 		?,		?, 	 	?
                 )

            ]]>
        </query>
    </sql>

    <!-- 상향 고과점수 제출 입력완료 저장 한다. -->
    <sql name="VLUI090_SAV_01">
        <description>고과점수 제출 입력완료</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_HVCLOSE
                 ( EVAYM, EMPNOH, SUBMITST, WRDT, WRID )
            VALUES
                 ( ?, 	 ?,	   'C',	 sysdate,  ? )
            ]]>
        </query>
    </sql>

    <!-- 고과점수 정규직 및 계약직 업데이트 한다. -->
    <sql name="VLUI090_UPT">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_EV_HVEMPS
              SET
                  [1]
            WHERE EVAYM = ?
                 AND EMPNO = ?
            ]]>
        </query>
    </sql>


    <!-- 고과점수 제출 입력완료 한다. -->
    <sql name="VLUI090_UPT_01">
        <description>고과점수 제출 입력완료</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_HVSCORES
			SET EMPNOH = '9999999'
				,EVASEQ = EVASEQ+45
			WHERE  EVAYM = ?
			AND  EMPNOH = ?
            ]]>
        </query>
    </sql>

    <!-- 고과점수 정규직 및 계약직삭제 한다. -->
    <sql name="VLUI090_DEL">
        <description>고과점수 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_HVSCORES
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
				AND  EVASEQ = ?
				AND  GRPCD = ?
				AND  DIVCD = ?
				AND  JOBGRPH = ?
				AND  PRTSEQ = ?
            ]]>
        </query>
    </sql>


    <!-- 조회 한다. -->
    <sql name="VLUI100_SHR">
        <description>고과점수조정(상향) 조회</description>
        <query>
            <![CDATA[

		SELECT
		       X.EVAYM,  X.EMPNO, X.EMPNMK, X.DEPTCD, X.DEPTNM, X.PAYGRD, X.PAYGRDNM,
		          MAX(X.EMPNOH1) EMPNOH1 ,   MAX(X.EMPNOH1)EMPNMH_1,   MAX(X.SCR1)SCR1,   MAX(X.AVG1)AVG1,
		          MAX(X.EMPNOH2) EMPNOH2 ,   MAX(X.EMPNOH2)EMPNMH_2,   MAX(X.SCR2)SCR2,   MAX(X.AVG2)AVG2,
		          MAX(X.EMPNOH3) EMPNOH3 ,   MAX(X.EMPNOH3)EMPNMH_3,   MAX(X.SCR3)SCR3,   MAX(X.AVG3)AVG3,
		          MAX(X.EMPNOH4) EMPNOH4 ,   MAX(X.EMPNOH4)EMPNMH_4,   MAX(X.SCR4)SCR4,   MAX(X.AVG4)AVG4,
		          MAX(X.EMPNOH5) EMPNOH5 ,   MAX(X.EMPNOH5)EMPNMH_5,   MAX(X.SCR5)SCR5,   MAX(X.AVG5)AVG5,
		          MAX(X.EMPNOH6) EMPNOH6 ,   MAX(X.EMPNOH6)EMPNMH_6,   MAX(X.SCR6)SCR6,   MAX(X.AVG6)AVG6,
		          MAX(X.EMPNOH7) EMPNOH7 ,   MAX(X.EMPNOH7)EMPNMH_7,   MAX(X.SCR7)SCR7,   MAX(X.AVG7)AVG7,
		          MAX(X.EMPNOH8) EMPNOH8 ,   MAX(X.EMPNOH8)EMPNMH_8,   MAX(X.SCR8)SCR8,   MAX(X.AVG8)AVG8,
		          MAX(X.EMPNOH9) EMPNOH9 ,   MAX(X.EMPNOH9)EMPNMH_9,   MAX(X.SCR9)SCR9,   MAX(X.AVG9)AVG9,
		          MAX(X.EMPNOH10) EMPNOH10,  MAX(X.EMPNOH10)EMPNMH_10,  MAX(X.SCR10)SCR10, MAX(X.AVG10)AVG10,
		          MAX(X.EMPNOH11) EMPNOH11,  MAX(X.EMPNOH11)EMPNMH_11,  MAX(X.SCR11)SCR11, MAX(X.AVG11)AVG11,
		          MAX(X.EMPNOH12) EMPNOH12,  MAX(X.EMPNOH12)EMPNMH_12,  MAX(X.SCR12)SCR12, MAX(X.AVG12)AVG12,
		          MAX(X.EMPNOH13) EMPNOH13 , MAX(X.EMPNOH13)EMPNMH_13,  MAX(X.SCR13)SCR13, MAX(X.AVG13)AVG13,
		          MAX(X.EMPNOH14) EMPNOH14 , MAX(X.EMPNOH14)EMPNMH_14,  MAX(X.SCR14)SCR14, MAX(X.AVG14)AVG14,
		          MAX(X.EMPNOH15) EMPNOH15 , MAX(X.EMPNOH15)EMPNMH_15,  MAX(X.SCR15)SCR15, MAX(X.AVG15)AVG15,
		          MAX(X.EMPNOH16) EMPNOH16 , MAX(X.EMPNOH16)EMPNMH_16,  MAX(X.SCR16)SCR16, MAX(X.AVG16)AVG16,
		          MAX(X.EMPNOH17) EMPNOH17 , MAX(X.EMPNOH17)EMPNMH_17,  MAX(X.SCR17)SCR17, MAX(X.AVG17)AVG17,
		          MAX(X.EMPNOH18) EMPNOH18 , MAX(X.EMPNOH18)EMPNMH_18,  MAX(X.SCR18)SCR18, MAX(X.AVG18)AVG18,
		          MAX(X.EMPNOH19) EMPNOH19 , MAX(X.EMPNOH19)EMPNMH_19,  MAX(X.SCR19)SCR19, MAX(X.AVG19)AVG19,
		          MAX(X.EMPNOH20) EMPNOH20,  MAX(X.EMPNOH20)EMPNMH_20,  MAX(X.SCR20)SCR20, MAX(X.AVG20)AVG20,
		          MAX(X.EMPNOH21) EMPNOH21,  MAX(X.EMPNOH21)EMPNMH_21,  MAX(X.SCR21)SCR21, MAX(X.AVG21)AVG21,
		          MAX(X.EMPNOH22) EMPNOH22,  MAX(X.EMPNOH22)EMPNMH_22,  MAX(X.SCR22)SCR22, MAX(X.AVG22)AVG22,
		          MAX(X.EMPNOH23) EMPNOH23 , MAX(X.EMPNOH23)EMPNMH_23,  MAX(X.SCR23)SCR23, MAX(X.AVG23)AVG23,
		          MAX(X.EMPNOH24) EMPNOH24 , MAX(X.EMPNOH24)EMPNMH_24,  MAX(X.SCR24)SCR24, MAX(X.AVG24)AVG24,
		          MAX(X.EMPNOH25) EMPNOH25 , MAX(X.EMPNOH25)EMPNMH_25,  MAX(X.SCR25)SCR25, MAX(X.AVG25)AVG25,
		          MAX(X.EMPNOH26) EMPNOH26 , MAX(X.EMPNOH26)EMPNMH_26,  MAX(X.SCR26)SCR26, MAX(X.AVG26)AVG26,
		          MAX(X.EMPNOH27) EMPNOH27 , MAX(X.EMPNOH27)EMPNMH_27,  MAX(X.SCR27)SCR27, MAX(X.AVG27)AVG27,
		          MAX(X.EMPNOH28) EMPNOH28 , MAX(X.EMPNOH28)EMPNMH_28,  MAX(X.SCR28)SCR28, MAX(X.AVG28)AVG28,
		          MAX(X.EMPNOH29) EMPNOH29 , MAX(X.EMPNOH29)EMPNMH_29,  MAX(X.SCR29)SCR29, MAX(X.AVG29)AVG29,
		          MAX(X.EMPNOH30) EMPNOH30,  MAX(X.EMPNOH30)EMPNMH_30,  MAX(X.SCR30)SCR30, MAX(X.AVG30)AVG30,
		          MAX(X.EMPNOH21) EMPNOH31,  MAX(X.EMPNOH31)EMPNMH_31,  MAX(X.SCR31)SCR31, MAX(X.AVG31)AVG31,
		          MAX(X.EMPNOH22) EMPNOH32,  MAX(X.EMPNOH32)EMPNMH_32,  MAX(X.SCR32)SCR32, MAX(X.AVG32)AVG32,
		          MAX(X.EMPNOH23) EMPNOH33 , MAX(X.EMPNOH33)EMPNMH_33,  MAX(X.SCR33)SCR33, MAX(X.AVG33)AVG33,
		          MAX(X.EMPNOH24) EMPNOH34 , MAX(X.EMPNOH34)EMPNMH_34,  MAX(X.SCR34)SCR34, MAX(X.AVG34)AVG34,
		          MAX(X.EMPNOH25) EMPNOH35 , MAX(X.EMPNOH35)EMPNMH_35,  MAX(X.SCR35)SCR35, MAX(X.AVG35)AVG35,
		          MAX(X.EMPNOH26) EMPNOH36 , MAX(X.EMPNOH36)EMPNMH_36,  MAX(X.SCR36)SCR36, MAX(X.AVG36)AVG36,
		          MAX(X.EMPNOH27) EMPNOH37 , MAX(X.EMPNOH37)EMPNMH_37,  MAX(X.SCR37)SCR37, MAX(X.AVG37)AVG37,
		          MAX(X.EMPNOH28) EMPNOH38 , MAX(X.EMPNOH38)EMPNMH_38,  MAX(X.SCR38)SCR38, MAX(X.AVG38)AVG38,
		          MAX(X.EMPNOH29) EMPNOH39 , MAX(X.EMPNOH39)EMPNMH_39,  MAX(X.SCR39)SCR39, MAX(X.AVG39)AVG39,
		          MAX(X.EMPNOH30) EMPNOH40,  MAX(X.EMPNOH40)EMPNMH_40,  MAX(X.SCR40)SCR40, MAX(X.AVG40)AVG40,
		          X.TOTAVG
		  FROM (

			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A4',A.DEPTCD),SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,

				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,

	          CASE B.EVASEQ WHEN 1 THEN B.EMPNOH END AS EMPNOH1,      COALESCE(A.SCR1,0)  SCR1,  COALESCE(A.AVG1,0)  AVG1,
	          CASE B.EVASEQ WHEN 2 THEN B.EMPNOH END AS EMPNOH2,      COALESCE(A.SCR2,0)  SCR2,  COALESCE(A.AVG2,0)  AVG2,
	          CASE B.EVASEQ WHEN 3 THEN B.EMPNOH END AS EMPNOH3,      COALESCE(A.SCR3,0)  SCR3,  COALESCE(A.AVG3,0)  AVG3,
	          CASE B.EVASEQ WHEN 4 THEN B.EMPNOH END AS EMPNOH4,      COALESCE(A.SCR4,0)  SCR4,  COALESCE(A.AVG4,0)  AVG4,
	          CASE B.EVASEQ WHEN 5 THEN B.EMPNOH END AS EMPNOH5,      COALESCE(A.SCR5,0)  SCR5,  COALESCE(A.AVG5,0)  AVG5,
	          CASE B.EVASEQ WHEN 6 THEN B.EMPNOH END AS EMPNOH6,      COALESCE(A.SCR6,0)  SCR6,  COALESCE(A.AVG6,0)  AVG6,
	          CASE B.EVASEQ WHEN 7 THEN B.EMPNOH END AS EMPNOH7,      COALESCE(A.SCR7,0)  SCR7,  COALESCE(A.AVG7,0)  AVG7,
	          CASE B.EVASEQ WHEN 8 THEN B.EMPNOH END AS EMPNOH8,      COALESCE(A.SCR8,0)  SCR8,  COALESCE(A.AVG8,0)  AVG8,
	          CASE B.EVASEQ WHEN 9 THEN B.EMPNOH END AS EMPNOH9,      COALESCE(A.SCR9,0)  SCR9,  COALESCE(A.AVG9,0)  AVG9,
	          CASE B.EVASEQ WHEN 10 THEN B.EMPNOH END AS EMPNOH10,    COALESCE(A.SCR10,0) SCR10, COALESCE(A.AVG10,0) AVG10,
	          CASE B.EVASEQ WHEN 11 THEN B.EMPNOH END AS EMPNOH11,    COALESCE(A.SCR11,0) SCR11, COALESCE(A.AVG11,0) AVG11,
	          CASE B.EVASEQ WHEN 12 THEN B.EMPNOH END AS EMPNOH12,    COALESCE(A.SCR12,0) SCR12, COALESCE(A.AVG12,0) AVG12,
	          CASE B.EVASEQ WHEN 13 THEN B.EMPNOH END AS EMPNOH13,    COALESCE(A.SCR13,0) SCR13, COALESCE(A.AVG13,0) AVG13,
	          CASE B.EVASEQ WHEN 14 THEN B.EMPNOH END AS EMPNOH14,    COALESCE(A.SCR14,0) SCR14, COALESCE(A.AVG14,0) AVG14,
	          CASE B.EVASEQ WHEN 15 THEN B.EMPNOH END AS EMPNOH15,    COALESCE(A.SCR15,0) SCR15, COALESCE(A.AVG15,0) AVG15,
	          CASE B.EVASEQ WHEN 16 THEN B.EMPNOH END AS EMPNOH16,    COALESCE(A.SCR16,0) SCR16, COALESCE(A.AVG16,0) AVG16,
	          CASE B.EVASEQ WHEN 17 THEN B.EMPNOH END AS EMPNOH17,    COALESCE(A.SCR17,0) SCR17, COALESCE(A.AVG17,0) AVG17,
	          CASE B.EVASEQ WHEN 18 THEN B.EMPNOH END AS EMPNOH18,    COALESCE(A.SCR18,0) SCR18, COALESCE(A.AVG18,0) AVG18,
	          CASE B.EVASEQ WHEN 19 THEN B.EMPNOH END AS EMPNOH19,    COALESCE(A.SCR19,0) SCR19, COALESCE(A.AVG19,0) AVG19,
	          CASE B.EVASEQ WHEN 20 THEN B.EMPNOH END AS EMPNOH20,    COALESCE(A.SCR20,0) SCR20, COALESCE(A.AVG20,0) AVG20,
	          CASE B.EVASEQ WHEN 21 THEN B.EMPNOH END AS EMPNOH21,    COALESCE(A.SCR21,0) SCR21, COALESCE(A.AVG21,0) AVG21,
	          CASE B.EVASEQ WHEN 22 THEN B.EMPNOH END AS EMPNOH22,    COALESCE(A.SCR22,0) SCR22, COALESCE(A.AVG22,0) AVG22,
	          CASE B.EVASEQ WHEN 23 THEN B.EMPNOH END AS EMPNOH23,    COALESCE(A.SCR23,0) SCR23, COALESCE(A.AVG23,0) AVG23,
	          CASE B.EVASEQ WHEN 24 THEN B.EMPNOH END AS EMPNOH24,    COALESCE(A.SCR24,0) SCR24, COALESCE(A.AVG24,0) AVG24,
	          CASE B.EVASEQ WHEN 25 THEN B.EMPNOH END AS EMPNOH25,    COALESCE(A.SCR25,0) SCR25, COALESCE(A.AVG25,0) AVG25,
	          CASE B.EVASEQ WHEN 26 THEN B.EMPNOH END AS EMPNOH26,    COALESCE(A.SCR26,0) SCR26, COALESCE(A.AVG26,0) AVG26,
	          CASE B.EVASEQ WHEN 27 THEN B.EMPNOH END AS EMPNOH27,    COALESCE(A.SCR27,0) SCR27, COALESCE(A.AVG27,0) AVG27,
	          CASE B.EVASEQ WHEN 28 THEN B.EMPNOH END AS EMPNOH28,    COALESCE(A.SCR28,0) SCR28, COALESCE(A.AVG28,0) AVG28,
	          CASE B.EVASEQ WHEN 29 THEN B.EMPNOH END AS EMPNOH29,    COALESCE(A.SCR29,0) SCR29, COALESCE(A.AVG29,0) AVG29,
	          CASE B.EVASEQ WHEN 30 THEN B.EMPNOH END AS EMPNOH30,    COALESCE(A.SCR30,0) SCR30, COALESCE(A.AVG30,0) AVG30,
	          CASE B.EVASEQ WHEN 31 THEN B.EMPNOH END AS EMPNOH31,    COALESCE(A.SCR31,0) SCR31, COALESCE(A.AVG31,0) AVG31,
	          CASE B.EVASEQ WHEN 32 THEN B.EMPNOH END AS EMPNOH32,    COALESCE(A.SCR32,0) SCR32, COALESCE(A.AVG32,0) AVG32,
	          CASE B.EVASEQ WHEN 33 THEN B.EMPNOH END AS EMPNOH33,    COALESCE(A.SCR33,0) SCR33, COALESCE(A.AVG33,0) AVG33,
	          CASE B.EVASEQ WHEN 34 THEN B.EMPNOH END AS EMPNOH34,    COALESCE(A.SCR34,0) SCR34, COALESCE(A.AVG34,0) AVG34,
	          CASE B.EVASEQ WHEN 35 THEN B.EMPNOH END AS EMPNOH35,    COALESCE(A.SCR35,0) SCR35, COALESCE(A.AVG35,0) AVG35,
	          CASE B.EVASEQ WHEN 36 THEN B.EMPNOH END AS EMPNOH36,    COALESCE(A.SCR36,0) SCR36, COALESCE(A.AVG36,0) AVG36,
	          CASE B.EVASEQ WHEN 37 THEN B.EMPNOH END AS EMPNOH37,    COALESCE(A.SCR37,0) SCR37, COALESCE(A.AVG37,0) AVG37,
	          CASE B.EVASEQ WHEN 38 THEN B.EMPNOH END AS EMPNOH38,    COALESCE(A.SCR38,0) SCR38, COALESCE(A.AVG38,0) AVG38,
	          CASE B.EVASEQ WHEN 39 THEN B.EMPNOH END AS EMPNOH39,    COALESCE(A.SCR39,0) SCR39, COALESCE(A.AVG39,0) AVG39,
	          CASE B.EVASEQ WHEN 40 THEN B.EMPNOH END AS EMPNOH40,    COALESCE(A.SCR40,0) SCR40, COALESCE(A.AVG40,0) AVG40,
	          COALESCE(A.TOTAVG,0) TOTAVG


			FROM
                ASNHR.T_EV_HVEMPS A, ASNHR.T_EV_HVHEMPS B
            WHERE
            A.EVAYM = B.EVAYM
            AND A.EMPNO = B.EMPNO
			AND	A.EVAYM = ?
			) X
			GROUP BY  X.EVAYM,  X.EMPNO, X.EMPNMK, X.DEPTCD, X.DEPTNM, X.PAYGRD, X.PAYGRDNM, X.TOTAVG


            ]]>
        </query>
    </sql>




    <!-- 조회 한다. -->
    <sql name="VLUI110_SHR">
        <description>평가요소집계(상향) 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.DEPTCD,
					DECODE(
					A.DEPTCD,
					DECODE(
					A.DEPTCD,
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD),
					A.DEPTCD),
					DECODE(
					A.DEPTCD,
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'B2',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD)),
					ASNHR.SF_GET_DPTNAME('01', 'A4',A.DEPTCD),
					ASNHR.SF_GET_DPTNAME('01', 'A6',A.DEPTCD)
					) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM
			FROM
				T_EV_HVEMPS A
			WHERE
				A.EVAYM = ?
            ]]>
        </query>
    </sql>

    <!-- 조회 한다. -->
    <sql name="VLUI110_SHR_01">
        <description>평가요소집계(상향) 조회</description>
        <query>
            <![CDATA[
		SELECT   X.EVAYM, X.EMPNO, ASNHR.SF_GET_ENONAME('01', X.EMPNO) AS EMPNMK,
		         X.GRPCD,
		         X.DIVCD, ASNHR.SF_GET_DPTNAME('01', 'A4',X.DIVCD) DIVNM,
		         X.JOBGRPH, ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(X.GRPCD)) AS PAYGRDNM,
		         X.PRTSEQ, D.ASKITEM,
		         ROUND (CAST ((X.SCR - Z.XSCR - Z.NSCR) AS DECIMAL (10, 4)) / B.CNT,2) SCR,
		         CASE
		            WHEN (ROUND (  CAST ((X.SCR - Z.XSCR - Z.NSCR) AS DECIMAL (10, 4))/ B.CNT,2)) >= 8.5 THEN 'S'
		            WHEN (ROUND (  CAST ((X.SCR - Z.XSCR - Z.NSCR) AS DECIMAL (10, 4))/ B.CNT,2)) >= 7.5 THEN 'A'
		            WHEN (ROUND (  CAST ((X.SCR - Z.XSCR - Z.NSCR) AS DECIMAL (10, 4))/ B.CNT,2)) >= 6.5 THEN 'B'
		            WHEN (ROUND (  CAST ((X.SCR - Z.XSCR - Z.NSCR) AS DECIMAL (10, 4))/ B.CNT,2)) >= 5.5 THEN 'C'
		            ELSE 'D'
		         END GRADE
		    FROM (SELECT   A.EVAYM, A.EMPNO, A.GRPCD, A.DIVCD, A.JOBGRPH, A.PRTSEQ,
		                   SUM (A.SCR) SCR
		              FROM ASNHR.T_EV_HVSCORES A
		                   LEFT JOIN
		                   (SELECT   EVAYM, EMPNO, PRTSEQ, MAX (SCR) XSCR,
		                             MIN (SCR) NSCR
		                        FROM ASNHR.T_EV_HVSCORES
		                       WHERE EVAYM = ? AND EMPNO = ?
		                    GROUP BY EVAYM, EMPNO, PRTSEQ
		                    ORDER BY EMPNO, PRTSEQ) Z
		                   ON Z.EVAYM = A.EVAYM
		                 AND Z.EMPNO = A.EMPNO
		                 AND A.PRTSEQ = Z.PRTSEQ
		             WHERE A.EVAYM = ? AND A.EMPNO = ?
		          GROUP BY A.EVAYM, A.EMPNO, A.GRPCD, A.DIVCD, A.JOBGRPH, A.PRTSEQ) X
		         LEFT JOIN
		         (SELECT   EVAYM, EMPNO, PRTSEQ, MAX (SCR) XSCR, MIN (SCR) NSCR
		              FROM ASNHR.T_EV_HVSCORES
		             WHERE EVAYM = ? AND EMPNO = ?
		          GROUP BY EVAYM, EMPNO, PRTSEQ
		          ORDER BY EMPNO, PRTSEQ) Z
		         ON Z.EVAYM = X.EVAYM AND Z.EMPNO = X.EMPNO AND X.PRTSEQ = Z.PRTSEQ
		         LEFT JOIN
		         (SELECT   X.EMPNO, COALESCE (COUNT (X.EMPNO), 0) - 2 AS CNT
		              FROM (SELECT   EMPNO, COUNT (EVASEQ)
		                        FROM ASNHR.T_EV_HVSCORES
		                       WHERE EVAYM = ? AND EMPNO = ?
		                    GROUP BY EMPNO, EVASEQ) X
		          GROUP BY EMPNO) B ON B.EMPNO = X.EMPNO
		         LEFT JOIN ASNHR.T_EV_HVSHEET D
		         ON X.EVAYM = D.EVAYM
		       AND X.GRPCD = D.GRPCD
		       AND X.DIVCD = D.DIVCD
		       AND X.JOBGRPH = D.JOBGRPH
		       AND X.PRTSEQ = D.PRTSEQ
		         LEFT JOIN ASNHR.T_CM_PERSON F ON X.EMPNO = F.ENO_NO
		ORDER BY X.EMPNO, X.PRTSEQ
            ]]>
        </query>
    </sql>


    <!-- 업적신고작성 조회 한다. -->
    <sql name="VLUI120_SHR">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS EMPNMK,
				A.HEADCD,SF_GET_DPTNAME('01', 'B2',A.HEADCD) HEADNM,
				A.DIVCD, ASNHR.SF_GET_DPTNAME('01', 'A4',A.DIVCD) DIVNM,
				A.DEPTCD,
				DECODE(A.DEPTCD,SF_GET_DPTNAME('01', 'A6',A.DEPTCD),SF_GET_DPTNAME('01', 'A4',A.DEPTCD)) AS DEPTNM,
				A.PAYGRD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.PAYGRD)) AS PAYGRDNM,
				A.WORK_1,  A.STARTDT_1, A.ENDDT_1, A.PLACE_1, A.REMARK_1,
				A.WORK_2,  A.STARTDT_2, A.ENDDT_2, A.PLACE_2, A.REMARK_2,
				A.WORK_3,  A.STARTDT_3, A.ENDDT_3, A.PLACE_3, A.REMARK_3

			FROM
				T_EV_HWORKMST A,
				T_CM_PERSON B

			WHERE
				A.EMPNO = B.ENO_NO
				AND A.EVAYM = ?
				AND A.EMPNO = ?

            ]]>
        </query>
    </sql>

    <!-- 업적신고작성 조회 한다. -->
    <sql name="VLUI120_SHR_01">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,   A.EMPNO,   A.SEQ2,    A.WORKGB,  A.WKCONT,
				A.IMPORT,  A.REMARK
			FROM
				T_EV_HWORKDTL A
			WHERE
				A.EVAYM = ?
				AND A.EMPNO = ?
            ]]>
        </query>
    </sql>

    <!-- 업적신고작성 조회 한다. -->
    <sql name="VLUI120_SHR_00">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.ENO_NO,   A.ENO_NM,
				A.JOB_CD,
				ASNHR.SF_GET_COMMNAME('01', 'A2', TRIM(A.JOB_CD)) AS JOB_NM,
				A.HEAD_CD,
				ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD) AS  HEAD_NM,
				A.DPT_CD,
				ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD) AS  DPT_NM,
				A.TEAM_CD,
				ASNHR.SF_GET_DPTNAME('01', 'A6', TEAM_CD) AS  TEAM_NM
			FROM
				T_CM_PERSON A
			WHERE
				A.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUI120_SHR_CHK">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				COUNT(*) CNT
			FROM
				T_EV_HWORKMST A
			WHERE A.EVAYM = ?
				AND A.EMPNO = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUI120_SHR_TERM">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.COMM_NM
			FROM
				T_CM_COMMON A
			WHERE A.CD_GBN = 'O5'
				AND A.COMM_CD = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUI120_SHR_LENGTH">
        <description>업적신고작성 조회</description>
        <query>
            <![CDATA[
			SELECT
				MAX(LENGTH(RTRIM(A.WKCONT))) AS LEN
			FROM
				T_EV_HWORKDTL A
			WHERE A.EVAYM = ?
				AND A.EMPNO = ?
            ]]>
        </query>
    </sql>


    <sql name="VLUI120_SAV_MST">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_HWORKMST (
				EVAYM,	EMPNO,		HEADCD,		DIVCD,		DEPTCD, 	PAYGRD,
				WORK_1,	STARTDT_1,	ENDDT_1,	PLACE_1,	REMARK_1,
				WORK_2,	STARTDT_2,	ENDDT_2,	PLACE_2,	REMARK_2,
				WORK_3,	STARTDT_3,	ENDDT_3,	PLACE_3,	REMARK_3,
				WRDT,	WRID,	  	UPDT,	  	UPID
			) VALUES(
				?, ?, ?, ?, ?, ?,
				?, ?, ?, ?, ?,
				?, ?, ?, ?, ?,
				?, ?, ?, ?, ?,
				TO_CHAR(sysdate, 'YYYYMMDD'), ?, TO_CHAR(sysdate, 'YYYYMMDD'), ?
			)
            ]]>
        </query>
    </sql>

    <sql name="VLUI120_UPT_MST">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_HWORKMST SET
				 HEADCD = ?,
				 DIVCD = ?,
				 DEPTCD = ?,
				 PAYGRD = ?,
				 WORK_1 = ?,
				 STARTDT_1 = ?,
				 ENDDT_1 = ?,
				 PLACE_1 = ?,
				 REMARK_1 = ?,
				 WORK_2 = ?,
				 STARTDT_2 = ?,
				 ENDDT_2 = ?,
				 PLACE_2 = ?,
				 REMARK_2 = ?,
				 WORK_3 = ?,
				 STARTDT_3 = ?,
				 ENDDT_3 = ?,
				 PLACE_3 = ?,
				 REMARK_3 = ?,
				 UPDT = TO_CHAR(sysdate, 'YYYYMMDD'),
				 UPID = ?
			WHERE EVAYM = ?
			  AND EMPNO = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUI120_SAV_DTL">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_HWORKDTL (
				EVAYM,	  	EMPNO,		SEQ2,	WORKGB,		WKCONT,
				IMPORT,		REMARK,
				WRDT,		WRID,	  	UPDT,	  UPID
			)
			VALUES(
				?, ?, ?, ?, ?,
				?, ?,
				TO_CHAR(sysdate, 'YYYYMMDD'), ?, TO_CHAR(sysdate, 'YYYYMMDD'), ?
			)
            ]]>
        </query>
    </sql>

    <sql name="VLUI120_UPT_DTL">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_HWORKDTL SET
				WORKGB = ?,
				WKCONT = ?,
				IMPORT = ?,
				REMARK = ?,
				UPDT = TO_CHAR(sysdate, 'YYYYMMDD'),
				UPID = ?
			WHERE EVAYM = ?
				AND EMPNO = ?
				AND  SEQ2 = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUI120_DEL_DTL">
        <description>업적신고작성 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_HWORKDTL
			WHERE  EVAYM = ?
				AND EMPNO = ?
				AND  SEQ2 = ?
            ]]>
        </query>
    </sql>


    <!-- 조회 한다. -->
    <sql name="VLUJ010_SHR">
        <description>잡프로필 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,   A.ENO_NO, ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
				A.JOBGRPH, A.JOBRR, A.JOBKIND, A.JOBNAME, A.JOBSM,
	         	B.HEAD_CD, ASNHR.SF_GET_DPTNAME('01', 'B2', B.HEAD_CD) AS HEAD_NM,
				B.DPT_CD, ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD) AS DPT_NM,
				B.TEAM_CD, ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM,
				B.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2',B. JOB_CD) AS JOB_NM,
				A.EDU, A.MAJOR,	A.SEX, A.ETC, A.EXP, A.CERTIFICATE,
				A.FRGRD, A.OAGRD,	A.TECH, A.STUDY, A.STUDY2, A.STUDY3
			FROM
				T_EV_JOBSPEC A, ASNHR.T_CM_PERSON B
			WHERE
				A.ENO_NO = B.ENO_NO
				AND A.EVAYM = ?
				AND A.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 조회 한다. -->
    <sql name="VLUJ010_SHR_01">
        <description>잡프로필 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,   A.ENO_NO,   A.SEQ,    	A.JOB,  A.TASK,  A.TASKDESC,
				A.IMPORT,  A.DEGREE,   A.FREQUENCY
			FROM
				T_EV_JOBTASK A
			WHERE
				A.EVAYM = ?
				AND A.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUJ010_UPT_MST">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_JOBSPEC SET
				 JOBNAME = ?,
				 JOBSM = ?,
				 HEAD_CD = ?,
				 DPT_CD = ?,
				 TEAM_CD = ?,
				 JOB_CD = ?,
				 EDU = ?,
				 MAJOR = ?,
				 SEX = ?,
				 ETC = ?,
				 EXP = ?,
				 CERTIFICATE = ?,
				 FRGRD = ?,
				 OAGRD = ?,
				 TECH = ?,
				 STUDY = ?,
				 STUDY2 = ?,
				 STUDY3 = ?
			WHERE ENO_NO = ?
			  AND EVAYM = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUJ010_SAV_DTL">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_JOBTASK (
				ENO_NO,	  		EVAYM,		SEQ,			JOB,				TASK,
				TASKDESC,		IMPORT,		DEGREE,		FREQUENCY
			)
			VALUES(
				?, ?, ?, ?, ?,
				?, ?, ?, ?
			)
            ]]>
        </query>
    </sql>

    <sql name="VLUJ010_UPT_DTL">
        <description>업적신고작성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_JOBTASK SET
				JOB = ?,
				TASK = ?,
				TASKDESC = ?,
				IMPORT = ?,
				DEGREE = ?,
				FREQUENCY = ?
			WHERE ENO_NO = ?
				AND EVAYM = ?
				AND SEQ = ?
            ]]>
        </query>
    </sql>

    <sql name="VLUJ010_DEL_DTL">
        <description>업적신고작성 삭제</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_EV_JOBTASK
			WHERE ENO_NO = ?
				AND EVAYM = ?
				AND SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 조회 한다. -->
    <sql name="VLUJ020_SHR">
        <description>잡프로필 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.ENO_NO, ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
				A.JOBNAME, A.JOBSM,
	         	B.HEAD_CD, ASNHR.SF_GET_DPTNAME('01', 'B2', B.HEAD_CD) AS HEAD_NM,
				B.DPT_CD, ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD) AS DPT_NM,
				B.TEAM_CD, ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM,
				B.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2',B. JOB_CD) AS JOB_NM
			FROM
				T_EV_JOBSPEC A, ASNHR.T_CM_PERSON B
			WHERE
				A.ENO_NO = B.ENO_NO
				AND A.EVAYM = ?
			ORDER BY B.HEAD_CD, B.DPT_CD, B.TEAM_CD DESC, B.JOB_CD
            ]]>
        </query>
    </sql>


 <!--
***********************************************************************
* @UseCase     : VLUK010
* @description : 아산 역량평가
***********************************************************************
* 2006/10/12      안준성        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 목표수정일자, 피평가자사번, 평가자사번에 따른 목표수정 정보를 조회 -->
    <sql name="VLUK010_SHR">
        <description>평가기간  조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,  	A.EMPNOH,  ASNHR.SF_GET_ENONAME('01', A.EMPNOH) AS EMPNMK,
				A.SUBMITST,
				A.WRDT,  A.WRID
			FROM ASNHR.T_EV_HVCLOSE A
			ORDER BY A.EVAYM, A.EMPNOH
            ]]>
        </query>
    </sql>



 <!--
***********************************************************************
* @UseCase     : VLUM010
* @description : 업적 평가 결과 조회
***********************************************************************
* 2016/11/23      이동훈        최초작성.
***********************************************************************
-->

    <!-- 업적 평가 결과 정보를 조회 -->
    <sql name="VLUM010_SHR_01">
        <description>업적 평가 결과 조회</description>
        <query>
            <![CDATA[
			SELECT 
				A.EVL_YYYY AS EVAYM,
				A.GOAL_NO AS SEQ2,
				A.CATEGORY AS WORKGB,
				A.FORMULA AS WKCONT,
        		E.FEEDBACK AS FEEDBACK
			FROM ASNHR.T_EV_GOALSET A
			LEFT JOIN ASNHR.T_EV_EQSCORE E ON A.EVL_YYYY = E.EVAYM AND A.GOAL_SEQ = E.EVASEQ AND A.ENO_NO = E.EMPNO AND A.GOAL_NO = E.SEQ2
           WHERE A.EVL_YYYY = '2021'
                AND E.EVAYM = '2021'	           
                AND E.CHASU = ?           
                AND A.ENO_NO = ?
                ORDER BY A.GOAL_NO             
            ]]>
        </query>
    </sql>

    <!-- 역량 평가 결과 정보를 조회 -->
    <sql name="VLUM010_SHR_02">
        <description>역량 평가 결과 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
        		A.EMPNO,
        		A.EMPNOH,
				A.CMMENT
			FROM ASNHR.T_EV_COMMENT A
      		WHERE A.EVAYM = ?
          		AND A.EMPNO = ?
          		AND A.EVASEQ = ?          		
            ]]>
        </query>
    </sql>

    <!-- 최종 평가 결과 정보를 조회 -->
    <sql name="VLUM010_SHR_03">
        <description>최종 평가 결과 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				A.TGRADE
			FROM ASNHR.T_EV_TOTAL A
           WHERE A.EVAYM = ?
               AND A.EMPNO = ?
            ]]>
        </query>
    </sql>


 <!--
***********************************************************************
* @UseCase     : VLUM020
* @description : 평가 결과 조회
***********************************************************************
* 2017/12/18      이동훈        최초작성.
***********************************************************************
-->

    <!-- 평가 결과 정보를 조회 -->
    <sql name="VLUM020_SHR">
        <description>평가 결과 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO AS ENO_NO, 
				ASNHR.SF_GET_ENONAME('01', A.EMPNO) AS ENO_NM,
				ASNHR.SF_GET_ENOHEAD(A.EMPNO) AS HEAD_NM,
            	ASNHR.SF_GET_ENODPT(A.EMPNO) AS DPT_NM,
				ASNHR.SF_GET_ENOJOB(A.EMPNO) AS JOB_NM,
                A.TGRADE AS GRADE3
			FROM ASNHR.T_EV_TOTAL A
           WHERE A.EVAYM = ?

            ]]>
        </query>
    </sql>





 <!--
***********************************************************************
* @UseCase     : VLUM010
* @description : 업적 평가 결과 조회
***********************************************************************
* 2016/11/23      이동훈        최초작성.
***********************************************************************
-->

    <!-- 업적 평가 결과 정보를 조회 -->
    <sql name="VLUM030_SHR_01">
        <description>업적 평가 결과 조회</description>
        <query>
            <![CDATA[
			SELECT 
				A.EVL_YYYY AS EVAYM,
				A.GOAL_NO AS SEQ2,
				A.CATEGORY AS WORKGB,
				A.FORMULA AS WKCONT,
        		E.FEEDBACK AS FEEDBACK
			FROM ASNHR.T_EV_GOALSET A
			LEFT JOIN ASNHR.T_EV_EQSCORE E ON A.EVL_YYYY = E.EVAYM AND A.GOAL_SEQ = E.EVASEQ AND A.ENO_NO = E.EMPNO AND A.GOAL_NO = E.SEQ2
           WHERE A.EVL_YYYY = '2017'
                AND E.EVAYM = '2017'	           
                AND E.EVASEQ = ?           
                AND A.ENO_NO = ?
                ORDER BY A.GOAL_NO            
            ]]>
        </query>
    </sql>

    <!-- 역량 평가 결과 정보를 조회 -->
    <sql name="VLUM030_SHR_02">
        <description>역량 평가 결과 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
        		A.EMPNO,
        		A.EMPNOH,
				A.CMMENT
			FROM ASNHR.T_EV_COMMENT A
      		WHERE A.EVAYM = ?
          		AND A.EMPNO = ?
          		AND A.EVASEQ = ?          		
            ]]>
        </query>
    </sql>

    <!-- 최종 평가 결과 정보를 조회 -->
    <sql name="VLUM030_SHR_03">
        <description>최종 평가 결과 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVAYM,
				A.EMPNO,
				A.TGRADE
			FROM ASNHR.T_EV_TOTAL A
           WHERE A.EVAYM = ?
               AND A.EMPNO = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUOL010
* @description : 업무 목표설정
***********************************************************************
* 2016/02/06      이동훈        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정 정보를 조회 -->
    <sql name="VLUO010_SHR">
        <description>업무 목표설정 조회</description>
        <query>
            <![CDATA[
            SELECT  EVL_YYYY, ENO_NO, GOAL_SEQ, GOAL_NO, CATEGORY, FORMULA, 
            		GOALSET, GOALSET_HALF, GOALSET_10,
            		WEIGHT, DIFFICULTY, APP_STATUS,
            		ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM,
            		ASNHR.SF_GET_ENODPT(ENO_NO) AS DPT_NM,
				    ASNHR.SF_GET_ENOJOB(ENO_NO) AS JOB_NM
            FROM    ASNHR.T_EV_GOALSET
            WHERE   EVL_YYYY = ?
	        AND     ENO_NO   = ?
	        AND     GOAL_SEQ = ?
			ORDER BY GOAL_NO
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정 정보를 조회 -->
    <sql name="VLUO010_SHR_PRT">
        <description>KPI 목표설정 조회</description>
        <query>
            <![CDATA[
            SELECT  EVL_YYYY, ENO_NO, GOAL_SEQ, GOAL_NO, CATEGORY, FORMULA, 
            		GOALSET, GOALSET_HALF, GOALSET_10,
            		WEIGHT, DIFFICULTY, APP_STATUS,
            		ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM,
            		ASNHR.SF_GET_ENODPT(ENO_NO) AS DPT_NM,
				    ASNHR.SF_GET_ENOJOB(ENO_NO) AS JOB_NM            			 
            FROM    ASNHR.T_EV_GOALSET
            WHERE   EVL_YYYY    = ?
	        AND     ENO_NO      = ?
	        AND     GOAL_SEQ = ?
			ORDER BY GOAL_NO
            ]]>
        </query>
    </sql>

    <!-- 목표설정 등록 -->
    <sql name="VLUO010_INS">
        <description>목표설정 등록</description>
        <query>
            <![CDATA[
            MERGE INTO ASNHR.T_EV_GOALSET A
            USING
			(SELECT ? AS EVL_YYYY, ? AS ENO_NO, ? AS GOAL_SEQ, ? AS GOAL_NO FROM DUAL) B
			   ON ( A.EVL_YYYY = B.EVL_YYYY
				  	AND A.ENO_NO 	= B.ENO_NO
				  	AND A.GOAL_SEQ 	= ?				  	
				  	AND A.GOAL_NO 	= B.GOAL_NO)
			WHEN MATCHED THEN
			UPDATE SET
				   A.CATEGORY		= ?,             -- 구분
                   A.FORMULA      	= ?,             -- 산출식
                   A.GOALSET_HALF   = ?,             -- 상반기목표  
                   A.GOALSET_10   	= ?,             -- 10월목표                  
                   A.GOALSET   		= ?,             -- 년간목표                  
                   A.WEIGHT   		= ?,             -- 가중치
                   A.APP_STATUS     = 'S',           -- 상태값                                    
                   A.UPT_MAN      	= ?,             -- 최종수정자
                   A.UPT_YMD      	= SYSDATE        -- 최종수정일시
			 WHEN NOT MATCHED THEN
            INSERT
                ( EVL_YYYY, ENO_NO, 
                  GOAL_SEQ, GOAL_NO, 
                  CATEGORY, FORMULA, 
                  GOALSET_HALF, GOALSET_10, GOALSET,
                  WEIGHT,   APP_STATUS, 
                  IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                (	?,	?,	
                    ?,  ?,  
                    ?,	?,	
                    ?,  ?,  ?,
                    ?,  ?, 
                    ?,  sysdate,	?, 	 sysdate )
            ]]>
        </query>
    </sql>


    <!-- 목표설정 상신처리 -->
    <sql name="VLUO010_UPT_01">
        <description>목표설정 상신처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_GOALSET SET
				APP_STATUS = 'R',
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
				AND GOAL_NO = ?				
            ]]>
        </query>
    </sql>


    <!-- 목표설정 상신처리 -->
    <sql name="VLUO010_UPT_011">
        <description>목표설정 상신처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_MEMBERLIST SET
				STATUS = 'R',
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 목표설정 결재처리 -->
    <sql name="VLUO010_UPT_02">
        <description>목표설정 결재처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_MEMBERLIST SET
				STATUS = ?,
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 목표설정 결재처리 -->
    <sql name="VLUO010_UPT_03">
        <description>목표설정 결재처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_GOALSET SET
				APP_STATUS = ?,
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 목표설정 전체삭제 -->
    <sql name="VLUO010_DEL_01">
        <description>목표설정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_GOALSET
            WHERE  EVL_YYYY = ?			   		--해당년도
            	AND ENO_NO   = ?				--피평가자사번
				AND GOAL_SEQ = ?            
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : VLUOL020
* @description : 업무 목표수정
***********************************************************************
* 2016/02/13      이동훈        최초작성.
***********************************************************************
-->


    <sql name="VLUO020_SHR">
        <description>업무목표수정</description>
        <query>
            <![CDATA[
            SELECT  DISTINCT
	            A.EVL_YYYY AS EVL_YYYY, 
	            B.GOAL_SEQ GOAL_SEQ,
	            
	            B.HTEAM_CD,
	            ASNHR.SF_GET_DPTNAME('01', 'A4', B.HTEAM_CD) AS HTEAM_NM,
	            ASNHR.SF_GET_DPTNAME('01', 'A6', B.HPART_CD) AS HPART_NM,	            
	            B.HENO_NO,
	            ASNHR.SF_GET_ENONAME('01', B.HENO_NO) AS HENO_NM,
	            
	            B.TEAM_CD,
	            ASNHR.SF_GET_DPTNAME('01', 'A4', B.TEAM_CD) AS TEAM_NM,
	            ASNHR.SF_GET_DPTNAME('01', 'A6', B.PART_CD) AS PART_NM,	            
	            B.ENO_NO,
	            ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS ENO_NM,
	            
	            B.STATUS AS APP_STATUS,
				CASE
				WHEN B.STATUS = 'S' THEN '저장  '
				WHEN B.STATUS = 'R' THEN '상신  '
				WHEN B.STATUS = 'Y' THEN '완료  '
				WHEN B.STATUS = 'N' THEN '부결  '				
				ELSE ' ' END AS STATUS,    
	            TO_CHAR(A.UPT_YMD,'YYYY-MM-DD') AS IPT_YMD,
	            TO_CHAR(TO_DATE(B.FROM_YMD,'YYYYMMDD'), 'YYYY-MM-DD')||' ~ '||TO_CHAR(TO_DATE(B.TO_YMD,'YYYYMMDD'), 'YYYY-MM-DD') AS FROM_TO
	            	 
            FROM    ASNHR.T_EV_GOALSET A
            FULL OUTER JOIN ASNHR.T_EV_MEMBERLIST B ON A.EVL_YYYY = B.EVL_YYYY  AND  A.ENO_NO = B.ENO_NO AND A.GOAL_SEQ = B.GOAL_SEQ,
            ASNHR.T_CM_PERSON C, ASNHR.T_CM_PERSON D            
            WHERE  A.EVL_YYYY    = ?
              AND  A.ENO_NO      = ?
              AND  B.TO_YMD  = '20211231' --2021.01.25 이동훈 추가
              AND  B.ENO_NO  = C.ENO_NO
              AND  B.HENO_NO = D.ENO_NO              
			ORDER BY B.GOAL_SEQ		
            ]]>
        </query>
    </sql>


    <sql name="VLUO020_SHR_01">
        <description>업무목표조회</description>
        <query>
            <![CDATA[
            SELECT  EVL_YYYY, ENO_NO, GOAL_SEQ, GOAL_NO, 
            		CATEGORY, FORMULA, 
            		GOALSET_HALF, GOALSET_10, GOALSET,
            		GRADE_S, GRADE_A, GRADE_B, GRADE_C, GRADE_D,	 
            		WEIGHT,
            		SELF_COMMENT, SELF_SCR, SCORE      			 
            FROM    ASNHR.T_EV_GOALSET
            WHERE   EVL_YYYY    = ?
	        AND     ENO_NO      = ?
	        AND     GOAL_SEQ    = ?	        
			ORDER BY GOAL_NO
            ]]>
        </query>
    </sql>
 

    <!-- 목표설정 등록 -->
    <sql name="VLUO020_INS">
        <description>목표설정 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_GOALSET 
                ( EVL_YYYY, ENO_NO, GOAL_SEQ, GOAL_NO, 
                  CATEGORY, FORMULA, GOALSET, WEIGHT,  
                  APP_STATUS, 
                  IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                (	?,	?,	?,  ?,  
                    ?,	?,	?,  ?,    
                    'S', 
                    ?,  sysdate,	?, 	 sysdate )
            ]]>
        </query>
    </sql>

    <!-- 본인평가 등록 -->
    <sql name="VLUO020_INS2">
        <description>본인평가 등록</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_GOALSET 
                ( EVL_YYYY, ENO_NO, GOAL_SEQ, GOAL_NO, 
                  CATEGORY, FORMULA, GOALSET_HALF, GOALSET_10, GOALSET, WEIGHT,  
                  GRADE_S, GRADE_A, GRADE_B, GRADE_C, GRADE_D,
                  APP_STATUS, SELF_COMMENT, SELF_SCR,
                  IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                (	?,	?,	?,  ?,  
                    ?,	?,	?,  ?,  ?,  ?,
                    ?,  ?,  ?,  ?,  ?,
                    'Y', ?,  ?, 
                    ?,  sysdate,	?, 	 sysdate )
            ]]>
        </query>
    </sql>


    <!-- 목표설정 상신처리 -->
    <sql name="VLUO020_UPT_01">
        <description>목표설정 상신처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_GOALSET SET
				APP_STATUS = 'R',
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
				AND GOAL_NO = ?				
            ]]>
        </query>
    </sql>


    <!-- 목표설정 상신처리 -->
    <sql name="VLUO020_UPT_011">
        <description>목표설정 상신처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_MEMBERLIST SET
				STATUS = 'R',
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
            ]]>
        </query>
    </sql>



    <!-- 목표설정 전체삭제 -->
    <sql name="VLUO020_DEL_01">
        <description>목표설정 전체삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_GOALSET
            WHERE  EVL_YYYY = ?			   	-- 해당년도
            AND    ENO_NO   = ?				-- 피평가자사번
            AND    GOAL_SEQ = ?				-- GOAL_SEQ            
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : VLUOL050
* @description : 목표승인
***********************************************************************
* 2016/02/13      이동훈        최초작성.
***********************************************************************
-->

    <!-- 목표승인 팀 정보를 조회 -->
    <sql name="VLUO050_SHR_TEAM">
        <description>목표승인 팀조회</description>
        <query>
            <![CDATA[
            SELECT 
                A.DPT_CD AS TEAM_CD, 
                ASNHR.SF_GET_DPTNAME('01','A4',A.DPT_CD) AS TEAM_NM
              FROM ASNHR.T_CM_PERSON A
             WHERE A.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 목표승인 팀원리스트 정보를 조회 -->
    <sql name="VLUO050_SHR">
        <description>목표승인 팀원리스트조회</description>
        <query>
            <![CDATA[
            SELECT 
                A.HENO_NO, 
                ASNHR.SF_GET_ENONAME('01', A.HENO_NO) AS HENO_NM,
                ASNHR.SF_GET_ENOJOB(A.HENO_NO) AS HJOB_NM, 
                ASNHR.SF_GET_DPTNAME('01','A4',A.HTEAM_CD) AS HTEAM_NM,
                A.ENO_NO, 
                ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
                ASNHR.SF_GET_ENOJOB(A.ENO_NO) AS JOB_NM, 
                ASNHR.SF_GET_DPTNAME('01','A4',A.TEAM_CD) AS TEAM_NM,
                A.GOAL_SEQ, 
				CASE
				WHEN A.STATUS = 'S' THEN '저장  '
				WHEN A.STATUS = 'R' THEN '상신  '
				WHEN A.STATUS = 'Y' THEN '완료  '
				WHEN A.STATUS = 'N' THEN '부결  '				
				ELSE ' ' END AS STATUS                      
              FROM ASNHR.T_EV_MEMBERLIST A, ASNHR.T_CM_PERSON B
             WHERE A.ENO_NO = B.ENO_NO    -- 대상자 기준
               AND A.EVL_YYYY = ?
               AND A.HTEAM_CD LIKE '%'||?||'%'
               AND A.HENO_NO LIKE '%'||?||'%'
               AND A.STATUS LIKE '%'||?||'%'
               AND A.GOAL_SEQ LIKE '%'||?||'%'               
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUOL060
* @description : 업무목표 평가
***********************************************************************
* 2016/04/10      이동훈        최초작성.
***********************************************************************
-->

    <!-- 정보를 조회 -->
    <sql name="VLUO060_SHR">
        <description>조회</description>
        <query>
            <![CDATA[
            SELECT 
                B.HENO_NO,
                ASNHR.SF_GET_ENONAME('01', B.HENO_NO) AS HENO_NM,
                B.HTEAM_CD, 
                ASNHR.SF_GET_DPTNAME('01','A4',B.HTEAM_CD) AS HTEAM_NM,                
                ASNHR.SF_GET_ENOJOB(B.HENO_NO) AS HJOB_NM, 
                B.ENO_NO, 
                ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS ENO_NM,                            
                B.TEAM_CD, 
                ASNHR.SF_GET_DPTNAME('01','A4',A.DPT_CD) AS TEAM_NM,
                ASNHR.SF_GET_DPTNAME('01','A6',A.TEAM_CD) AS PART_NM,                
                ASNHR.SF_GET_ENOJOB(B.ENO_NO) AS JOB_NM,           
                GOAL_SEQ,
                TO_CHAR(C.SCR) AS DPT_CH_SCR,
                B.AVG AS AVGSCR            
              FROM ASNHR.T_CM_PERSON A
              LEFT JOIN ASNHR.T_EV_MEMBERLIST B ON A.ENO_NO = B.ENO_NO
              FULL OUTER JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM =?
                            AND JOB_CD IS NULL
                            AND EMPNOH LIKE '%'||?
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) C 
                            ON A.ENO_NO = C.EMPNO AND C.EVAYM = ?     
                            AND B.HENO_NO = C.EMPNOH     
             WHERE 1=1
                [1]             
                AND B.EVL_YYYY = ?
                AND B.HENO_NO LIKE '%'||?
                AND B.TO_YMD = ?||'1231' 
                AND B.GROUP_NM = 'A'     
             ORDER BY A.DPT_CD, A.TEAM_CD DESC, A.JOB_CD      
            ]]>
        </query>
    </sql>


    <!-- 정보를 조회 -->
    <sql name="VLUO060_SHR2">
        <description>조회</description>
        <query>
            <![CDATA[
            SELECT 
                B.HENO_NO,
                ASNHR.SF_GET_ENONAME('01', B.HENO_NO) AS HENO_NM,
                B.HTEAM_CD, 
                ASNHR.SF_GET_DPTNAME('01','A4',B.HTEAM_CD) AS HTEAM_NM,                
                ASNHR.SF_GET_ENOJOB(B.HENO_NO) AS HJOB_NM, 
                B.ENO_NO, 
                ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS ENO_NM,                            
                B.TEAM_CD, 
                ASNHR.SF_GET_DPTNAME('01','A4',A.DPT_CD) AS TEAM_NM,
                ASNHR.SF_GET_DPTNAME('01','A6',A.TEAM_CD) AS PART_NM,                
                ASNHR.SF_GET_ENOJOB(B.ENO_NO) AS JOB_NM,           
                GOAL_SEQ,
                C.SCR AS DPT_CH_SCR,
                B.AVG AS AVGSCR            
              FROM ASNHR.T_CM_PERSON A
              LEFT JOIN ASNHR.T_EV_MEMBERLIST B ON A.ENO_NO = B.ENO_NO
              FULL OUTER JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM =?
                            AND JOB_CD IS NULL
                            AND EMPNOH LIKE '%'||?
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) C 
                            ON A.ENO_NO = C.EMPNO AND C.EVAYM = ? 
                            AND B.HENO_NO = C.EMPNOH     
             WHERE 1=1
                [1]             
                AND B.EVL_YYYY = ?
                AND B.HENO_NO LIKE '%'||?
                AND B.TO_YMD = ?||'1231' 
                AND B.GROUP_NM = 'B'     
             ORDER BY A.DPT_CD, A.TEAM_CD DESC, A.JOB_CD      
            ]]>
        </query>
    </sql>

    <!-- 상세고과점수  정규직 및 계약직 조회 한다. -->
    <sql name="VLUO060_SHR_ITEM">
        <description>상세고과점수입력 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.EVL_YYYY,
				A.GOAL_NO,
				A.CATEGORY,
				A.FORMULA,
				A.GOALSET,
				A.GOALSET_10,	
				TO_NUMBER(A.WEIGHT) AS WEIGHT,		
				TO_NUMBER(A.WEIGHT_HEAD) AS WEIGHT_HEAD,						
				--A.WEIGHT,
				nvl(E.DPT_IMPORT,0) DPT_IMPORT,
				CASE E.SCRGBN WHEN '1' THEN 'T' ELSE 'F' END AS CHK01,
				CASE E.SCRGBN WHEN '2' THEN 'T' ELSE 'F' END AS CHK02,
				CASE E.SCRGBN WHEN '3' THEN 'T' ELSE 'F' END AS CHK03,
				CASE E.SCRGBN WHEN '4' THEN 'T' ELSE 'F' END AS CHK04,
				CASE E.SCRGBN WHEN '5' THEN 'T' ELSE 'F' END AS CHK05,
				COALESCE(E.SCR,0) SCR,
                E.SCRGBN,
                E.DPT_CH_SCR,
                E.DPT_CH_SCR as DPT_CH_SCR2,
                COALESCE(E.EMPNOH,'') AS EMPNOH, 
                COALESCE(E.EMPNO,'') AS EMPNO, 
                COALESCE(E.EVASEQ,0) AS EVASEQ,
                A.SELF_COMMENT, 
                A.SELF_SCR,
                0 AS SCORE,
                E.FEEDBACK
			FROM ASNHR.T_EV_GOALSET A
			LEFT JOIN ASNHR.T_EV_EQSCORE E ON A.EVL_YYYY = E.EVAYM 
				 AND E.EMPNOH = ?
				 AND E.EMPNO = ?
				 AND E.EVASEQ = ?
				 AND A.GOAL_NO = E.SEQ2
			LEFT JOIN ASNHR.T_CM_PERSON F ON E.EMPNO = F.ENO_NO
             WHERE A.EVL_YYYY = ?
             	  AND A.ENO_NO = ?
                AND A.GOAL_SEQ = ?
			ORDER BY A.GOAL_NO
            ]]>
        </query>
    </sql>



    <!-- 고과점수 정규직 및 계약직 저장 한다. -->
    <sql name="VLUO060_INS">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_EV_EQSCORE
                 ( EVAYM, EMPNOH, EMPNO, EVASEQ, 
                   SEQ2, DPT_IMPORT, SCR, SCRGBN, 
                   DPT_CH_SCR, FEEDBACK
                 )
            VALUES
                 ( ?,  ?,  ?,  ?, 
                   ?,  ?,  ?,  ?, 
                   ?,  ?
                 )
            ]]>
        </query>
    </sql>


    <!-- 고과점수 정규직 및 계약직 저장 한다. -->
    <sql name="VLUO060_UPT">
        <description>고과점수 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_GOALSET SET
				WEIGHT_HEAD = ?
			WHERE EVL_YYYY = '2021'
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
				AND GOAL_NO = ?				
            ]]>
        </query>
    </sql>

    <!-- 고과점수 정규직 및 계약직 삭제 한다. -->
    <sql name="VLUO060_DEL">
        <description>고과점수 삭제</description>
        <query>
            <![CDATA[
			DELETE  FROM ASNHR.T_EV_EQSCORE
			WHERE  EVAYM = ?
				AND  EMPNOH = ?
				AND  EMPNO = ?
				AND  EVASEQ = ?
				AND  SEQ2 = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : VLUOL070
* @description : 면담일지
***********************************************************************
* 2016/02/13      이동훈        최초작성.
***********************************************************************
-->

    <!-- 면담일지 팀 정보를 조회 -->
    <sql name="VLUO070_SHR_TEAM">
        <description>면담일지 팀조회</description>
        <query>
            <![CDATA[
            SELECT 
                A.ENO_NO, A.ENO_NM,
                A.JOB_CD, ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,
                A.DPT_CD AS TEAM_CD, 
                ASNHR.SF_GET_DPTNAME('01','A4',A.DPT_CD) AS TEAM_NM
              FROM ASNHR.T_CM_PERSON A
             WHERE A.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 면담일지 파일 정보를 조회 -->
    <sql name="VLUO070_SHR_FILE">
        <description>면담일지 파일조회</description>
        <query>
            <![CDATA[
            SELECT 
            	A.EVL_YYYY,
                A.ENO_NO, 
                A.MEET_NO,
                A.MEET_GBN, 
                A.FILE_KEY
              FROM ASNHR.T_EV_MEETLIST A
             WHERE A.ENO_NO = ?
             AND A.MEET_NO = ?
             AND A.EVL_YYYY = ?             
            ]]>
        </query>
    </sql>


    <!-- 면담일지 정보를 조회 -->
    <sql name="VLUO070_SHR">
        <description>면담일지 조회</description>
        <query>
            <![CDATA[
            SELECT 
                B.TEAM_CD,
                ASNHR.SF_GET_DPTNAME('01','A4',B.TEAM_CD) AS TEAM_NM,
                B.JOB_CD,
                ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD) AS JOB_NM,
                A.ENO_NO,
                ASNHR.SF_GET_ENONAME('01', A.ENO_NO) AS ENO_NM,
                B.MEET_NO,
				B.MEET_GBN AS MEET_GB,               
				CASE
				WHEN B.MEET_GBN = 'S' THEN '목표설정    '
				WHEN B.MEET_GBN = 'M' THEN '수시  '
				WHEN B.MEET_GBN = 'F' THEN '정기(1차)      '		
				WHEN B.MEET_GBN = 'G' THEN '정기(2차)      '					
				ELSE ' ' END AS MEET_GBN,
				TO_CHAR(B.IPT_YMD,'YYYY-MM-DD') IPT_YMD                
              FROM ASNHR.T_CM_PERSON A, ASNHR.T_EV_MEETLIST B
             WHERE A.ENO_NO = B.ENO_NO 
                AND B.EVL_YYYY = ?
                AND A.ENO_NO LIKE '%'||?
                AND B.MEET_GBN LIKE '%'||?                
               ORDER BY B.IPT_YMD
            ]]>
        </query>
    </sql>


    <!-- 면담일지 정보를 저장 -->
    <sql name="VLUO070_INS_FILE">
        <description>면담일지 저장</description>
        <query>
            <![CDATA[
			INSERT INTO ASNHR.T_EV_MEETLIST (
				EVL_YYYY, 		TEAM_CD, 	JOB_CD, 	ENO_NO,	  	
				MEET_NO, 	
				MEET_GBN, 		FILE_KEY,
				IPT_MAN,		IPT_YMD,	UPT_MAN,	UPT_YMD
			)
			VALUES(
					?, 			?, 			?, 			?, 			
					(SELECT  COUNT(*)+1 FROM ASNHR.T_EV_MEETLIST WHERE EVL_YYYY = ? AND ENO_NO = ?),			
					?,			?,
					?, SYSDATE, ?, SYSDATE
			)
            ]]>
        </query>
    </sql>

    <!-- 면담일지 정보를 업데이트 -->
    <sql name="VLUO070_UPT_FILE">
        <description>면담일지 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_MEETLIST SET
				FILE_KEY = ?,
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND MEET_NO = ?
            ]]>
        </query>
    </sql>
    
    
    
    <!-- 업무목표평가 정규직 고과점수 조회 한다. -->
    <sql name="VLUO080_SHR">
        <description>고과점수 조회</description>
         <query>
         <![CDATA[
           SELECT DISTINCT
                A.ENO_NO AS EMPNO,
                ASNHR.SF_GET_ENOHEAD(A.ENO_NO) AS HEAD_NM,
                B.ENO_NO, ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS EMPNMK,                            
                B.TEAM_CD AS DEPTCD, 
                ASNHR.SF_GET_DPTNAME('01','A4',B.TEAM_CD) AS DEPTNM,               
                ASNHR.SF_GET_ENOJOB(B.ENO_NO) AS GRDNM,           
                RTRIM(E.EMPNOH) EMPNOH_1,	
                ASNHR.SF_GET_ENONAME('01', E.EMPNOH) AS EMPNMH_1,
                COALESCE(E.SCR,0) SCR1,   
                B.AVG AS AVG1,              
                RTRIM(F.EMPNOH) EMPNOH_2,	
                ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_2,
                COALESCE(F.SCR,0) SCR2, 
                C.AVG AS AVG2,
                B.FINAL_SCR,
                B.GRADE
              FROM ASNHR.T_CM_PERSON A
              LEFT JOIN ASNHR.T_EV_MEMBERLIST B ON A.ENO_NO = B.ENO_NO AND B.CHASU = '1'
              LEFT JOIN ASNHR.T_EV_MEMBERLIST C ON A.ENO_NO = C.ENO_NO AND C.CHASU = '2' AND C.EVL_YYYY='2021'
              LEFT JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,CHASU,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2021' AND CHASU = 1
                            GROUP BY EVAYM,EMPNOH,EMPNO,CHASU) E ON E.EMPNO = B.ENO_NO            
              LEFT JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,CHASU,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2021' AND CHASU = 2
                            GROUP BY EVAYM,EMPNOH,EMPNO,CHASU) F ON F.EMPNO = B.ENO_NO                 
             WHERE 1=1          
                AND B.EVL_YYYY = ?
			ORDER BY A.ENO_NO
         ]]>
         
        <!--    <![CDATA[
            SELECT 
                B.ENO_NO AS EMPNO,
                X.HEAD_NM,
                ASNHR.SF_GET_ENONAME('01', B.HENO_NO) AS HENO_NM,               
                ASNHR.SF_GET_ENOJOB(B.HENO_NO) AS HJOB_NM, 
                B.ENO_NO, ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS EMPNMK,                            
                B.TEAM_CD AS DEPTCD, 
                ASNHR.SF_GET_DPTNAME('01','A4',B.TEAM_CD) AS DEPTNM,               
                ASNHR.SF_GET_ENOJOB(B.ENO_NO) AS GRDNM,           
                B.GOAL_SEQ,
                B.FINAL_SCR,
                B.GRADE,
                B.AVG AS AVG1,
                C.AVG AS AVG2,
                D.AVG AS AVG3,                
                RTRIM(E.EMPNOH) EMPNOH_1,	
                ASNHR.SF_GET_ENONAME('01', E.EMPNOH) AS EMPNMH_1,
                COALESCE(E.SCR,0) SCR1,                 

                RTRIM(F.EMPNOH) EMPNOH_2,	
                ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_2,
                COALESCE(F.SCR,0) SCR2,
                
                RTRIM(G.EMPNOH) EMPNOH_3,	
                ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_3,
                COALESCE(G.SCR,0) SCR3
                         
              FROM ASNHR.T_CM_PERSON A
              FULL JOIN ASNHR.T_EV_MEMBERLIST B ON A.ENO_NO = B.ENO_NO AND B.GOAL_SEQ = '1'
              FULL JOIN ASNHR.T_EV_MEMBERLIST C ON A.ENO_NO = C.ENO_NO AND C.GOAL_SEQ = '2'
              FULL JOIN ASNHR.T_EV_MEMBERLIST D ON A.ENO_NO = D.ENO_NO AND D.GOAL_SEQ = '3'      
              FULL JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2018' AND EVASEQ = 1
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) E ON E.EMPNO = B.ENO_NO            
              FULL JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2018' AND EVASEQ = 2
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) F ON F.EMPNO = B.ENO_NO                 

              FULL JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2018' AND EVASEQ = 3
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) G ON G.EMPNO = B.ENO_NO   
                            
               LEFT JOIN              
               (SELECT AA.ENO_NO,
                  CASE 
                    WHEN AA.ENO_NO IN ('2040046','2050053','1990105','2020008','2020013','2030032','2050046','2100002','2070020','2080009','2080012','2080018','2080019','2080028','2110014','2040025','2070016','2070039','2050004','2080044','2100004','2110002','2110003','2030007','2140004','2140032','2150001','2150005') THEN '경영' 
                    WHEN AA.ENO_NO IN ('2020025','2040006','1990040','1990042','1990044','2020011','2120003','2030009','2040020','2040042','2050042','2070019','2070027','2070043','2130021','2050022','2170002','2020030','2100001','2110005','2140001','2020005','2160003','2170001','2170003','2040076','2120004') THEN '관광' 
                    WHEN AA.ENO_NO IN ('2040053','2040078','2060005','2080021','2120007','2140014','2150009','2040003','2040011','2040012','2040013','2040038','2040067','2040068','2040070','2040071','2050008','2050012','2050014','2050030','2050032','2050037','2050039','2050050','2050060','2060007','2070007','2080008','2080031','2090005','2110011','2120008','2120021','2120032','2130002','2130007','2130010','2130013','2130037','2130039','2140015','2170005','2170011','2170013','2170014','2020016','2030002','2040023','2050009','2050015','2130012','2140010','2050038','2090002') THEN '건설'
                    WHEN AA.ENO_NO IN ('2150006','1990036','1990104','2040036','2050040','2100003','1990041') THEN '공통' 
                    ELSE '' END HEAD_NM
                FROM ASNHR.T_CM_PERSON AA, ASNHR.T_EV_MEMBERLIST BB WHERE AA.ENO_NO = BB.ENO_NO AND BB.GOAL_SEQ = '1'
                AND AA.ENO_NO IN
                ('2040046','2050053','1990105','2020008','2020013','2030032','2050046','2100002','2070020','2080009','2080012','2080018',
                '2080019','2080028','2110014','2040025','2070016','2070039','2050004','2080044','2100004','2110002','2110003','2030007',
                '2140004','2140032','2150001','2150005', '2020025','2040006','1990040','1990042','1990044','2020011','2120003','2030009',
                '2040020','2040042','2050042','2070019','2070027','2070043','2130021','2050022','2170002','2020030','2100001','2110005',
                '2140001','2020005','2160003','2170001','2170003','2040076','2120004','2040053','2040078','2060005','2080021','2120007',
                '2140014','2150009','2040003','2040011','2040012','2040013','2040038','2040067','2040068','2040070','2040071','2050008',
                '2050012','2050014','2050030','2050032','2050037','2050039','2050050','2050060','2060007','2070007','2080008','2080031',
                '2090005','2110011','2120008','2120021','2120032','2130002','2130007','2130010','2130013','2130037','2130039','2140015',
                '2170005','2170011','2170013','2170014','2020016','2030002','2040023','2050009','2050015','2130012','2140010','2050038',
                '2090002','2150006','1990036','1990104','2040036','2050040','2100003','1990041')   ) X ON X.ENO_NO = B.ENO_NO                         
                            
                            
             WHERE 1=1
                AND A.OCC_CD != '8'             
                AND B.EVL_YYYY = '2018'
 
			ORDER BY B.TEAM_CD, A.TEAM_CD DESC, A.JOB_CD
            ]]> -->
            
        </query>
        
    </sql>
    
    <!-- 업적평가 PJT 고과점수 조회 한다. -->
    <sql name="VLUO080_SHR_PJT">
        <description>고과점수 조회</description>
        <query>
            <![CDATA[
           SELECT DISTINCT
                A.ENO_NO AS EMPNO,
                ASNHR.SF_GET_ENOHEAD(A.ENO_NO) AS HEAD_NM,
                B.ENO_NO, ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS EMPNMK,                            
                B.TEAM_CD AS DEPTCD, 
                ASNHR.SF_GET_DPTNAME('01','A4',B.TEAM_CD) AS DEPTNM,               
                ASNHR.SF_GET_ENOJOB(B.ENO_NO) AS GRDNM,           
                RTRIM(E.EMPNOH) EMPNOH_1,	
                ASNHR.SF_GET_ENONAME('01', E.EMPNOH) AS EMPNMH_1,
                COALESCE(E.SCR,0) SCR1,   
                B.AVG AS AVG1,              
                RTRIM(F.EMPNOH) EMPNOH_2,	
                ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_2,
                COALESCE(F.SCR,0) SCR2, 
                C.AVG AS AVG2,
                B.FINAL_SCR,
                B.GRADE

              FROM ASNHR.T_CM_PERSON A
              LEFT JOIN ASNHR.T_EV_MEMBERLIST B ON A.ENO_NO = B.ENO_NO AND B.CHASU = '1'
              LEFT JOIN ASNHR.T_EV_MEMBERLIST C ON A.ENO_NO = C.ENO_NO AND C.CHASU = '2'
    
              LEFT JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,CHASU,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2019' AND CHASU = 1
                            GROUP BY EVAYM,EMPNOH,EMPNO,CHASU) E ON E.EMPNO = B.ENO_NO            
              LEFT JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,CHASU,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2019' AND CHASU = 2
                            GROUP BY EVAYM,EMPNOH,EMPNO,CHASU) F ON F.EMPNO = B.ENO_NO                 

             WHERE 1=1
                AND A.OCC_CD = '8'             
                AND B.EVL_YYYY = ?
                
			ORDER BY A.ENO_NO
            ]]>
        </query>
    </sql>    
    
    
    
    <!-- 정규직 고과점수 조정 조회 한다. -->
    <sql name="VLUO080_SHR_02">
        <description>고과점수 조정 조회</description>
        <query>
        <![CDATA[
            SELECT DISTINCT
                A.ENO_NO AS EMPNO,
                B.EVL_YYYY,
                
                --CASE WHEN C.AVG IS NULL THEN COALESCE(B.AVG,0)
                --ELSE (COALESCE(B.AVG,0) + COALESCE(C.AVG,0)) / 2 END CORVAG,
                --CASE WHEN C.AVG IS NULL THEN COALESCE(B.AVG,0)
                --ELSE (COALESCE(B.AVG,0) + COALESCE(C.AVG,0)) / 2 END TOTAVG,            
                
                CASE
				WHEN C.AVG IS NOT NULL THEN (COALESCE(B.AVG,0)*0.5+COALESCE(C.AVG,0)*0.5)
				WHEN C.AVG IS NULL THEN (COALESCE(B.AVG,0)*1+COALESCE(C.AVG,0)*0)
				ELSE 0 END AS CORAVG,
				0 TOTAVG,
                ASNHR.SF_GET_ENOHEAD(A.ENO_NO) AS HEAD_NM,
                B.ENO_NO, ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS EMPNMK,                            
                B.TEAM_CD AS DEPTCD, 
                ASNHR.SF_GET_DPTNAME('01','A4',B.TEAM_CD) AS DEPTNM,               
                ASNHR.SF_GET_ENOJOB(B.ENO_NO) AS GRDNM,           
                RTRIM(E.EMPNOH) EMPNOH_1,	
                ASNHR.SF_GET_ENONAME('01', E.EMPNOH) AS EMPNMH_1,
                COALESCE(E.SCR,0) SCR1,   
                B.AVG AS AVG1,              
                RTRIM(F.EMPNOH) EMPNOH_2,	
                ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_2,
                COALESCE(F.SCR,0) SCR2, 
                C.AVG AS AVG2,
                B.FINAL_SCR,
                B.GRADE

              FROM ASNHR.T_CM_PERSON A
              LEFT JOIN ASNHR.T_EV_MEMBERLIST B ON A.ENO_NO = B.ENO_NO AND B.CHASU = '1'
              LEFT JOIN ASNHR.T_EV_MEMBERLIST C ON A.ENO_NO = C.ENO_NO AND C.CHASU = '2' AND C.EVL_YYYY='2021'
              LEFT JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,CHASU,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2021' AND CHASU = 1
                            GROUP BY EVAYM,EMPNOH,EMPNO,CHASU) E ON E.EMPNO = B.ENO_NO            
              LEFT JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,CHASU,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2021' AND CHASU = 2
                            GROUP BY EVAYM,EMPNOH,EMPNO,CHASU) F ON F.EMPNO = B.ENO_NO                 
             WHERE 1=1          
                AND B.EVL_YYYY = '2021'
			ORDER BY A.ENO_NO       
        ]]>
        
        <!-- 
            <![CDATA[
            SELECT 
                B.ENO_NO AS EMPNO,

                ASNHR.SF_GET_ENONAME('01', B.HENO_NO) AS HENO_NM,               
                ASNHR.SF_GET_ENOJOB(B.HENO_NO) AS HJOB_NM, 
                B.ENO_NO, ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS EMPNMK,                            
                B.TEAM_CD AS DEPTCD, 
                ASNHR.SF_GET_DPTNAME('01','A4',B.TEAM_CD) AS DEPTNM,               
                ASNHR.SF_GET_ENOJOB(B.ENO_NO) AS GRDNM,           
                B.GOAL_SEQ,
                B.FINAL_SCR,
                B.GRADE,
                B.AVG AS AVG1,
                C.AVG AS AVG2,
                D.AVG AS AVG3,                
                RTRIM(E.EMPNOH) EMPNOH_1,	
                ASNHR.SF_GET_ENONAME('01', E.EMPNOH) AS EMPNMH_1,
                COALESCE(E.SCR,0) SCR1,                 

                RTRIM(F.EMPNOH) EMPNOH_2,	
                ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_2,
                COALESCE(F.SCR,0) SCR2,
                
                RTRIM(G.EMPNOH) EMPNOH_3,	
                ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_3,
                COALESCE(G.SCR,0) SCR3
                         
              FROM ASNHR.T_CM_PERSON A
              FULL JOIN ASNHR.T_EV_MEMBERLIST B ON A.ENO_NO = B.ENO_NO AND B.GOAL_SEQ = '1'
              FULL JOIN ASNHR.T_EV_MEMBERLIST C ON A.ENO_NO = C.ENO_NO AND C.GOAL_SEQ = '2'
              FULL JOIN ASNHR.T_EV_MEMBERLIST D ON A.ENO_NO = D.ENO_NO AND D.GOAL_SEQ = '3'      
              FULL JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2019' AND EVASEQ = 1
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) E ON E.EMPNO = B.ENO_NO            
              FULL JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2019' AND EVASEQ = 2
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) F ON F.EMPNO = B.ENO_NO                 

              FULL JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2019' AND EVASEQ = 3
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) G ON G.EMPNO = B.ENO_NO   
              WHERE 1=1
                AND A.OCC_CD != '8'             
                AND B.EVL_YYYY = '2019'
 
			ORDER BY B.TEAM_CD, A.TEAM_CD DESC, A.JOB_CD
            ]]>-->
        </query>
    </sql>

    
     <!-- PJT 고과점수 조정 조회 한다. -->
    <sql name="VLUO080_SHR_02_PJT">
        <description>고과점수 조정 조회</description>
        <query>
            <![CDATA[
            SELECT 
                B.ENO_NO AS EMPNO,
                ASNHR.SF_GET_ENONAME('01', B.HENO_NO) AS HENO_NM,               
                ASNHR.SF_GET_ENOJOB(B.HENO_NO) AS HJOB_NM, 
                B.ENO_NO, ASNHR.SF_GET_ENONAME('01', B.ENO_NO) AS EMPNMK,                            
                B.TEAM_CD AS DEPTCD, 
                ASNHR.SF_GET_DPTNAME('01','A4',B.TEAM_CD) AS DEPTNM,               
                ASNHR.SF_GET_ENOJOB(B.ENO_NO) AS GRDNM,           
                B.GOAL_SEQ,
                --TO_CHAR(C.SCR) AS DPT_CH_SCR,
                B.AVG AS AVG1,
                C.AVG AS AVG2,
                D.AVG AS AVG3,                
                RTRIM(E.EMPNOH) EMPNOH_1,	
                ASNHR.SF_GET_ENONAME('01', E.EMPNOH) AS EMPNMH_1,
                COALESCE(E.SCR,0) SCR1,                 

                RTRIM(F.EMPNOH) EMPNOH_2,	
                ASNHR.SF_GET_ENONAME('01', F.EMPNOH) AS EMPNMH_2,
                COALESCE(F.SCR,0) SCR2,
                
                RTRIM(G.EMPNOH) EMPNOH_3,	
                ASNHR.SF_GET_ENONAME('01', G.EMPNOH) AS EMPNMH_3,
                COALESCE(G.SCR,0) SCR3
                         
              FROM ASNHR.T_CM_PERSON A
              FULL JOIN ASNHR.T_EV_MEMBERLIST B ON A.ENO_NO = B.ENO_NO AND B.GOAL_SEQ = '1'
              FULL JOIN ASNHR.T_EV_MEMBERLIST C ON A.ENO_NO = C.ENO_NO AND C.GOAL_SEQ = '2'
              FULL JOIN ASNHR.T_EV_MEMBERLIST D ON A.ENO_NO = D.ENO_NO AND D.GOAL_SEQ = '3'      
              FULL JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2019' AND EVASEQ = 1
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) E ON E.EMPNO = B.ENO_NO            
              FULL JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2019' AND EVASEQ = 2
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) F ON F.EMPNO = B.ENO_NO                 

              FULL JOIN
                (SELECT EVAYM,EMPNOH,EMPNO,EVASEQ,SUM(DPT_CH_SCR) SCR
                            FROM ASNHR.T_EV_EQSCORE
                            WHERE EVAYM ='2019' AND EVASEQ = 3
                            GROUP BY EVAYM,EMPNOH,EMPNO,EVASEQ) G ON G.EMPNO = B.ENO_NO        
             WHERE 1=1
                AND A.OCC_CD = '8'             
                AND B.EVL_YYYY = '2019'
   
			ORDER BY B.TEAM_CD, A.TEAM_CD DESC, A.JOB_CD
            ]]>
        </query>
    </sql>    
    
    
    <!-- 정규직 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUO080_SHR_04">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.HEAD_CD,Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT2017(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'1') CNT,X.HEAD_CD, X.PAYGRD2
				FROM (
						SELECT
		                  A.EVL_YYYY AS EVAYM, 
		                  A.GOAL_SEQ AS GRSREF, 
		                  B.ENO_NO AS EMPNO, 
		                  B.JOB_CD AS PAYGRD, 
		                  A.TEAM_CD AS HEAD_CD,
		                 CASE WHEN (B.JOB_CD >='140' AND B.JOB_CD<='210') THEN '200'
		                    WHEN (B.JOB_CD >='220' AND B.JOB_CD<='270') THEN '220'
		                    ELSE '999' END PAYGRD2
		             FROM T_EV_MEMBERLIST A
		             FULL JOIN T_CM_PERSON B ON A.ENO_NO = B.ENO_NO
		            WHERE A.EVL_YYYY = '2021'  
				) X
			WHERE X.EVAYM = '2021'
			)Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2
            ]]>
        </query>
    </sql>



    
     <!-- PJT 직급별 등급 인원수 조회 한다. -->
    <sql name="VLUO080_SHR_04_PJT">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.HEAD_CD,Y.PAYGRD2,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS S,
				CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )AS A,
				Y.CNT - ( CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*12.00/100.00,0)AS INTEGER )+ CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )+CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER ) ) AS B,
				CAST(ROUND(Y.CNT*12.00 /100.00,0)AS INTEGER )AS C,
				CAST(ROUND(Y.CNT*3.00 /100.00,0)AS INTEGER )AS D
			FROM (
				SELECT
					DISTINCT ASNHR.SF_GET_MAXCNT2017(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'3') CNT,X.HEAD_CD, X.PAYGRD2
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						A.TOTAVG,
						A.HEAD_CD,
			            CASE WHEN (A.PAYGRD >='140' AND A.PAYGRD<='210') THEN '200'
			                 WHEN (A.PAYGRD >='220' AND A.PAYGRD<='270') THEN '200'
			            END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = '201811' 
					AND B.OCC_CD ='8'
				) X
			WHERE X.EVAYM = '201811' 
			)Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2
            ]]>
        </query>
    </sql>
    
    
    <!-- 정규직 직급별 rank 조회 한다. -->
    <sql name="VLUO080_SHR_06">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, 
				Y.EMPNO, 
				Y.HEAD_CD,
				Y.PAYGRD, 
				Y.PAYGRD2,
				Y.TOTAVG, 
				Y.RNK, 
				Y.CNT, 
				''GRADE
			FROM(
				SELECT
					X.EVAYM, 
					X.EMPNO, 
					X.HEAD_CD, 
					X.PAYGRD, 
					X.PAYGRD2, 
					X.TOTAVG,
					RANK() OVER( PARTITION BY X.HEAD_CD,X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT2017(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'1') CNT
				FROM (
						SELECT
		                  A.EVL_YYYY AS EVAYM, 
		                  A.GOAL_SEQ AS GRSREF, 
		                  B.ENO_NO AS EMPNO, 
		                  B.JOB_CD AS PAYGRD, 
						  A.FINAL_SCR AS TOTAVG,		                  
		                  A.TEAM_CD AS HEAD_CD,
		                 CASE WHEN (B.JOB_CD >='140' AND B.JOB_CD<='210') THEN '200'
		                    WHEN (B.JOB_CD >='220' AND B.JOB_CD<='270') THEN '220'
		                    ELSE '999' END PAYGRD2
		             FROM T_EV_MEMBERLIST A
		             FULL JOIN T_CM_PERSON B ON A.ENO_NO = B.ENO_NO
		            WHERE A.EVL_YYYY = '2021' 
		              AND A.GOAL_SEQ = '1' 
				) X
				WHERE X.EVAYM = '2021'  
			) Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>


    
     <!-- PJT 직급별 rank 조회 한다. -->
    <sql name="VLUO080_SHR_06_PJT">
        <description>직급별 등급 인원수 조회</description>
        <query>
            <![CDATA[
			SELECT
				Y.EVAYM, 
				Y.EMPNO, 
				Y.HEAD_CD,
				Y.PAYGRD, 
				Y.PAYGRD2,
				Y.TOTAVG, 
				Y.RNK, 
				Y.CNT, 
				''GRADE
			FROM(
				SELECT
					X.EVAYM, 
					X.EMPNO, 
					X.HEAD_CD, 
					X.PAYGRD, 
					X.PAYGRD2, 
					X.TOTAVG,
					RANK() OVER( PARTITION BY X.PAYGRD2 ORDER BY X.TOTAVG DESC ) RNK,
					ASNHR.SF_GET_MAXCNT2017(X.EVAYM, X.HEAD_CD, X.PAYGRD2,'3') CNT
				FROM (
					SELECT
						A.EVAYM, 
						A.GRSREF, 
						A.EMPNO, 
						A.PAYGRD, 
						B.FINAL_SCR AS TOTAVG,
						A.HEAD_CD,
			            CASE WHEN (A.PAYGRD >='140' AND A.PAYGRD<='210') THEN '200'
			                 WHEN (A.PAYGRD >='220' AND A.PAYGRD<='270') THEN '200'
			                 ELSE '999' END PAYGRD2
					FROM ASNHR.T_EV_RQEMP A
					FULL JOIN ASNHR.T_CM_PERSON B ON A.EMPNO = B.ENO_NO
					WHERE A.EVAYM = '201811'
					AND B.OCC_CD ='8'
				) X
				WHERE X.EVAYM = '201811'  
			) Y
			ORDER BY Y.HEAD_CD, Y.PAYGRD2, Y.RNK
            ]]>
        </query>
    </sql>
    
    
    <!-- 실행결과 저장 한다. -->
    <sql name="VLUO080_SAV_EXE">
        <description>실행결과 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_MEMBERLIST
			SET
			FINAL_SCR = ?
			WHERE EVL_YYYY = ? and ENO_NO = ?
            ]]>
        </query>
    </sql>
    
    <!-- 등급 저장 한다. -->
    <sql name="VLUO080_SAV">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_MEMBERLIST
			SET
			FINAL_SCR = ?
			WHERE EVL_YYYY = '2019' 
			   and ENO_NO = ?
            ]]>
        </query>
    </sql>    
    
    
    <!-- 등급생성 저장 한다. -->
    <sql name="VLUO080_SAV_GRD">
        <description>등급생성 저장</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_MEMBERLIST
			SET
			GRADE = ?
			WHERE EVL_YYYY = '2018' 
			   and ENO_NO = ?
            ]]>
        </query>
    </sql>    
 <!--
***********************************************************************
* @UseCase     : VLUOL100
* @description : 업무 목표설정_2019
***********************************************************************
* 2016/02/06      이동훈        최초작성.
***********************************************************************
-->

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정 정보를 조회 -->
    <sql name="VLUO100_SHR">
        <description>업무 목표설정 조회</description>
        <query>
            <![CDATA[
            SELECT  EVL_YYYY, ENO_NO, GOAL_SEQ, GOAL_NO, CATEGORY, FORMULA, 
            		GOALSET, GOALSET_HALF, GOALSET_10,
            		WEIGHT, DIFFICULTY, APP_STATUS,
            		SELF_COMMENT,SCORE, SELF_SCR,
            		ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM,
            		ASNHR.SF_GET_ENODPT(ENO_NO) AS DPT_NM,
				    ASNHR.SF_GET_ENOJOB(ENO_NO) AS JOB_NM,
				    GRADE_S, GRADE_A, GRADE_B, GRADE_C, GRADE_D
            FROM    ASNHR.T_EV_GOALSET
            WHERE   EVL_YYYY = ?
	        AND     ENO_NO   = ?
	        AND     GOAL_SEQ = ?
			ORDER BY GOAL_NO
            ]]>
        </query>
    </sql>

    <!-- 업무구분, 해당년도, 평가회차, 피평가자사번, 평가자사번에 따른 목표설정 정보를 조회 -->
    <sql name="VLUO100_SHR_PRT">
        <description>KPI 목표설정 조회</description>
        <query>
            <![CDATA[
            SELECT  EVL_YYYY, ENO_NO, GOAL_SEQ, GOAL_NO, CATEGORY, FORMULA, 
            		GOALSET, GOALSET_HALF, GOALSET_10,
            		WEIGHT, DIFFICULTY, APP_STATUS,
            		ASNHR.SF_GET_ENONAME('01', ENO_NO) AS ENO_NM,
            		ASNHR.SF_GET_ENODPT(ENO_NO) AS DPT_NM,
				    ASNHR.SF_GET_ENOJOB(ENO_NO) AS JOB_NM,
				    GRADE_S, GRADE_A, GRADE_B, GRADE_C, GRADE_D            			 
            FROM    ASNHR.T_EV_GOALSET
            WHERE   EVL_YYYY    = ?
	        AND     ENO_NO      = ?
	        AND     GOAL_SEQ = ?
			ORDER BY GOAL_NO
            ]]>
        </query>
    </sql>


    <sql name="VLUO100_SHR_22">
        <description>업무목표조회</description>
        <query>
            <![CDATA[
            SELECT  EVL_YYYY, ENO_NO, GOAL_SEQ, GOAL_NO, 
            		CATEGORY, FORMULA, 
            		GOALSET_HALF, GOALSET_10, GOALSET, 
            		WEIGHT,
            		SELF_COMMENT, SELF_SCR, SCORE,
            		GRADE_S, GRADE_A, GRADE_B, GRADE_C, GRADE_D      			 
            FROM    ASNHR.T_EV_GOALSET
            WHERE   EVL_YYYY    = ?
	        AND     ENO_NO      = ?
	        AND     GOAL_SEQ    = ?	        
			ORDER BY GOAL_NO
            ]]>
        </query>
    </sql>


    <!-- 목표설정 등록 -->
    <sql name="VLUO100_INS">
        <description>목표설정 등록</description>
        <query>
            <![CDATA[
            MERGE INTO ASNHR.T_EV_GOALSET A
            USING
			(SELECT ? AS EVL_YYYY, ? AS ENO_NO, ? AS GOAL_SEQ, ? AS GOAL_NO FROM DUAL) B
			   ON ( A.EVL_YYYY = B.EVL_YYYY
				  	AND A.ENO_NO 	= B.ENO_NO
				  	AND A.GOAL_SEQ 	= ?				  	
				  	AND A.GOAL_NO 	= B.GOAL_NO)
			WHEN MATCHED THEN
			UPDATE SET
				   A.CATEGORY		= ?,             -- 구분
                   A.FORMULA      	= ?,             -- 산출식
                   A.GRADE_S		= ?,			 -- S등급
                   A.GRADE_A		= ?,			 -- A등급
                   A.GRADE_B		= ?,			 -- B등급
                   A.GRADE_C		= ?,			 -- C등급
                   A.GRADE_D		= ?,			 -- D등급
                   A.GOALSET_HALF   = ?,             -- 상반기목표  
                   A.GOALSET_10   	= ?,             -- 10월목표                  
                   A.GOALSET   		= ?,             -- 년간목표                  
                   A.WEIGHT   		= ?,             -- 가중치
                   A.APP_STATUS     = 'S',           -- 상태값                                    
                   A.UPT_MAN      	= ?,             -- 최종수정자
                   A.UPT_YMD      	= SYSDATE        -- 최종수정일시
			 WHEN NOT MATCHED THEN
            INSERT
                ( EVL_YYYY, ENO_NO, 
                  GOAL_SEQ, GOAL_NO, 
                  CATEGORY, FORMULA, 
                  GRADE_S, GRADE_A, GRADE_B, GRADE_C, GRADE_D,
                  GOALSET_HALF, GOALSET_10, GOALSET,
                  WEIGHT,   APP_STATUS, 
                  IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                (	?,	?,	
                    ?,  ?,  
                    ?,	?,	
                    ?,  ?,  ?,  ?,  ?,
                    ?,  ?,  ?,
                    ?,  ?, 
                    ?,  sysdate,	?, 	 sysdate )
            ]]>
        </query>
    </sql>


    <!-- 목표설정 상신처리 -->
    <sql name="VLUO100_UPT_01">
        <description>목표설정 상신처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_GOALSET SET
				APP_STATUS = 'R',
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
				AND GOAL_NO = ?				
            ]]>
        </query>
    </sql>


    <!-- 목표설정 상신처리 -->
    <sql name="VLUO100_UPT_011">
        <description>목표설정 상신처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_MEMBERLIST SET
				STATUS = 'R',
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 목표설정 결재처리 -->
    <sql name="VLUO100_UPT_02">
        <description>목표설정 결재처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_MEMBERLIST SET
				STATUS = ?,
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 목표설정 결재처리 -->
    <sql name="VLUO100_UPT_03">
        <description>목표설정 결재처리</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_EV_GOALSET SET
				APP_STATUS = ?,
				UPT_MAN = ?,
				UPT_YMD = TO_CHAR(sysdate, 'YYYYMMDD')
			WHERE EVL_YYYY = ?
				AND ENO_NO = ?
				AND GOAL_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 목표설정 전체삭제 -->
    <sql name="VLUO100_DEL_01">
        <description>목표설정 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_EV_GOALSET
            WHERE  EVL_YYYY = ?			   		--해당년도
            	AND ENO_NO   = ?				--피평가자사번
				AND GOAL_SEQ = ?            
            ]]>
        </query>
    </sql>   

</sqls>



