<?xml version="1.0" encoding="euc-kr"?>

<sqls>
				<!-- 경영정보 -->
				<!--
								***********************************************************************
								* @UseCase     : misa010
								* @description : 본부별 인원현황 조회
								***********************************************************************
								* 2007/04/12      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISA010_SHR_01">
								<description>본부별 인원현황 조회</description>
								<query>
												<![CDATA[
SELECT C.DPT_NM      as GBN_NM
     , C.DPT_CD      as GBN_CD
     , COUNT(*)       as TOT_CNT
     , MAX(C.SORT_NO) as SORT_NO
  FROM T_CM_PERSON       P
     , T_CM_DEPT         C
 WHERE C.DPT_CD       = Replace(P.HEAD_CD, 'Z','C')
   AND C.SORT_NO      <> 0
   AND C.CD_GBN        = 'B2'
   AND P.HIR_YMD <= SYSDATE
   AND ((P.RET_YMD IS NULL) OR  (P.RET_YMD > SYSDATE))
 GROUP BY C.DPT_CD, C.DPT_NM
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>
				<sql name="MISA010_SHR_02">
								<description>본사구분별 인원현황 조회</description>
								<query>
												<![CDATA[
SELECT CASE WHEN C.GBN2_TAG = '1' THEN '본사'
            ELSE '지방'
       END            as GBN_NM
     , C.GBN2_TAG     as GBN_CD
     , COUNT(*)       as TOT_CNT
     , C.GBN2_TAG     as SORT_NO
  FROM T_CM_PERSON       P
     , T_CM_COMMON       C
 WHERE P.DPT_CD        = C.COMM_CD
   AND C.SORT_NO       > 0
   AND C.CD_GBN        = 'A4'
   AND P.HIR_YMD <= SYSDATE
   AND ((P.RET_YMD IS NULL) OR  (P.RET_YMD > SYSDATE))
 GROUP BY C.GBN2_TAG
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>
				<sql name="MISA010_SHR_03">
								<description>부서별 인원현황 조회</description>
								<query>
												<![CDATA[
SELECT C.DPT_NM      as GBN_NM
     , P.DPT_CD       as GBN_CD
     , COUNT(*)       as TOT_CNT
     , MAX(C.SORT_NO) as SORT_NO
  FROM T_CM_PERSON       P
     , T_CM_DEPT       C
 WHERE P.DPT_CD        = C.DPT_CD
   AND C.SORT_NO       > 0
   AND C.CD_GBN        = 'A4'
   AND P.HIR_YMD <= SYSDATE
   AND ((P.RET_YMD IS NULL) OR  (P.RET_YMD > SYSDATE))
     [1]
 GROUP BY P.DPT_CD, C.DPT_NM
 ORDER BY SORT_NO

            ]]>
								</query>
				</sql>
				<sql name="MISA020_SHR">
								<description>직위별 인원현황 조회</description>
								<query>
												<![CDATA[
SELECT C.JOB_CDP                  as JOB_CD
     , C.JOB_NM                   as JOB_NM
     , NVL(SUM(T.TOT_CNT),0)      as TOT_CNT
     , MAX(C.SORT_NO)             as SORT_NO
  FROM (-- 직위별 총원
        SELECT JOB_CD, COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON P
		[1]
         WHERE HIR_YMD <= SYSDATE
		   AND ((RET_YMD IS NULL) OR  (RET_YMD > SYSDATE))
		[2]
         GROUP BY JOB_CD
        )      T,
       (SELECT GBN2_TAG           as JOB_CDP
             , COMM_CD            as JOB_CD
		     , COMM_NM            as JOB_NM
		     , SORT_NO
		  FROM T_CM_COMMON
		 WHERE SORT_NO             > 0
		   AND CD_GBN              = 'A2'
        )      C
 WHERE C.JOB_CD  = T.JOB_CD
 GROUP BY C.JOB_CDP, C.JOB_NM
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>
				<!--
								***********************************************************************
								* @UseCase     : misa030
								* @description : 연도별 인원변동 추이
								***********************************************************************
								* 2007/04/12      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISA030_SHR">
								<description>연도별 인원변동 추이</description>
								<query>
												<![CDATA[
SELECT ?                                      as YYYY
     , SUM(CASE WHEN OCC_CD       in ('0','1','2') THEN 1 END) as A_CNT
     , SUM(CASE WHEN OCC_CD not in ('0','1','2') THEN 1 END) as M_CNT
     , COUNT(*)                               as TOT_CNT
  FROM T_CM_PERSON
 WHERE TO_CHAR(HIR_YMD,'YYYYMMDD') <=  ? || '1231'
   AND ((RET_YMD IS NULL) OR (TO_CHAR(RET_YMD, 'YYYYMMDD') > ? || '1231'))
   AND OCC_CD is not null
            ]]>
								</query>
				</sql>
				<!--
								***********************************************************************
								* @UseCase     : misa040
								* @description : 부서별 이직율 조회
								***********************************************************************
								* 2007/04/12      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISA040_SHR">
								<description>부서별 이직율 조회</description>
								<query>
												<![CDATA[
SELECT MAX(C.DPT_NM)              as DPT_NM
     , C.DPT_CD                   as DPT_CD
     , NVL(SUM(T.TOT_CNT),0)      as TOT_CNT
     , NVL(SUM(R.RET_CNT),0)      as RET_CNT
     , MAX(C.SORT_NO)             as SORT_NO
  FROM (-- 본부별 퇴사자
        SELECT DPT_CD, COUNT(*)   as RET_CNT
          FROM T_CM_PERSON
         WHERE TO_CHAR(RET_YMD, 'YYYY') BETWEEN ? and ?
         GROUP BY DPT_CD
        )      R,
       (-- 본부별 총원
        SELECT H.DPT_CD
             , COUNT(DISTINCT H.ENO_NO) as TOT_CNT
          FROM T_CM_AHISTORY  H
             , (SELECT ENO_NO
                     , SUBSTR(STR_YMD,1,4) as YYYY
                     , MAX(STR_YMD)        as STR_YMD
                  FROM T_CM_AHISTORY
                 WHERE STR_YMD BETWEEN ?||'0101' AND ?||'1231'
                 GROUP BY ENO_NO, SUBSTR(STR_YMD,1,4)
                )             M
         WHERE H.ENO_NO     = M.ENO_NO
           AND H.STR_YMD    = M.STR_YMD
           AND H.END_YMD IS NULL
           --AND H.SEQ_NO     = '0'
         GROUP BY H.DPT_CD
        )      T,
       (SELECT DPT_CD
             , DPT_NM
             , SORT_NO
          FROM T_CM_DEPT
         WHERE 1=1 --SORT_NO BETWEEN 100 AND 750
           AND CD_GBN        = 'A4'
        )      C
 WHERE C.DPT_CD  = T.DPT_CD
   AND C.DPT_CD  = R.DPT_CD
 GROUP BY C.DPT_CD
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>
				<!--
								***********************************************************************
								* @UseCase     : misa050
								* @description : 직위별 이직율 조회
								***********************************************************************
								* 2007/04/12      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISA050_SHR">
								<description>직위별 이직율 조회</description>
								<query>
												<![CDATA[
SELECT MAX(C.JOB_NM)              as JOB_NM
     , C.JOBT_CD                  as JOB_CD
     , NVL(SUM(T.TOT_CNT),0)      as TOT_CNT
     , NVL(SUM(R.RET_CNT),0)      as RET_CNT
     , MAX(C.SORT_NO)             as SORT_NO
  FROM (-- 본부별 퇴사자
        SELECT JOB_CD, COUNT(*)   as RET_CNT
          FROM T_CM_PERSON
         WHERE TO_CHAR(RET_YMD, 'YYYY') BETWEEN ? and ?
         GROUP BY JOB_CD
        )      R,
       (-- 본부별 총원
        SELECT H.JOB_CD
             , COUNT(DISTINCT H.ENO_NO) as TOT_CNT
          FROM T_CM_AHISTORY  H
             , (SELECT ENO_NO
                     , SUBSTR(STR_YMD,1,4) as YYYY
                     , MAX(STR_YMD)        as STR_YMD
                  FROM T_CM_AHISTORY
                 WHERE STR_YMD BETWEEN ?||'0101' AND ?||'1231'
                 GROUP BY ENO_NO, SUBSTR(STR_YMD,1,4)
                )             M
         WHERE H.ENO_NO     = M.ENO_NO
           AND H.STR_YMD    = M.STR_YMD
           AND H.END_YMD IS NULL
           --AND H.SEQ_NO     = '1'
         GROUP BY H.JOB_CD
        )      T,
       (SELECT GBN2_TAG as JOBT_CD
             , COMM_CD  as JOB_CD
             , COMM_NM  as JOB_NM
             , SORT_NO
          FROM T_CM_COMMON
         WHERE 1=1   --SORT_NO BETWEEN 100 AND 750
           AND CD_GBN   = 'A2'
        )      C
 WHERE C.JOB_CD  = T.JOB_CD(+)
   AND C.JOB_CD  = R.JOB_CD(+)
   AND NVL(R.RET_CNT,0) + NVL(T.TOT_CNT,0) > 0
 GROUP BY C.JOBT_CD
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>

				<sql name="MISA060_SHR_01">
								<description>입사지원현황 조회 학교별</description>
								<query>
												<![CDATA[
SELECT CASE WHEN Q_RANK > 16 THEN '기타' ELSE GUBUN END as GUBUN
     , SUM(INWON) as INWON
     , MAX(Q_RANK) as Q_RANK
  FROM (SELECT GUBUN
             , INWON
             , RANK() OVER (ORDER BY INWON DESC) as Q_RANK
          FROM (SELECT NVL((CASE WHEN S.GSNAME2 is NOT NULL AND S.GSNAME2 != '99' THEN SF_GET_COMMNAME('01', 'E5', S.GSNAME2)   -- 대학원
                                 WHEN S.GSNAME1 is NOT NULL AND S.GSNAME1 != '99' THEN SF_GET_COMMNAME('01', 'E5', S.GSNAME1)   -- 대학원
                                 WHEN S.EUNAME1 is NOT NULL AND S.EUNAME1 != '99' THEN SF_GET_COMMNAME('01', 'E4', S.EUNAME1)   -- 대학교
                                 WHEN S.CNAME   is NOT NULL AND S.CNAME   != '99'  AND S.CNAME != 'F99' THEN SF_GET_COMMNAME('01', 'E3', S.CNAME) -- 전문대
                                 ELSE S.HNAME END),'기타')    as GUBUN
                     , COUNT(*)   as INWON
                  FROM T_RC_MASTER M
                     , T_RC_SCHOOL S
                 WHERE M.REG_NO  = S.REG_NO
                   AND M.REGYY   = ?
                   AND REGCH     = ?
                 GROUP BY NVL((CASE WHEN S.GSNAME2 is NOT NULL AND S.GSNAME2 != '99' THEN SF_GET_COMMNAME('01', 'E5', S.GSNAME2)   -- 대학원
                                    WHEN S.GSNAME1 is NOT NULL AND S.GSNAME1 != '99' THEN SF_GET_COMMNAME('01', 'E5', S.GSNAME1)   -- 대학원    ||S.GSNAME2
                                    WHEN S.EUNAME1 is NOT NULL AND S.EUNAME1 != '99' THEN SF_GET_COMMNAME('01', 'E4', S.EUNAME1)   -- 대학교
                                    WHEN S.CNAME   is NOT NULL AND S.CNAME   != '99'  AND S.CNAME != 'F99' THEN SF_GET_COMMNAME('01', 'E3', S.CNAME) -- 전문대
                                    ELSE S.HNAME END),'기타')
                )
        )
 GROUP BY (CASE WHEN Q_RANK > 16 THEN '기타' ELSE GUBUN END)
 ORDER BY Q_RANK
            ]]>
								</query>
				</sql>

				<sql name="MISA060_SHR_02">
								<description>입사지원현황 조회 지역별</description>
								<query>
												<![CDATA[
SELECT NVL(SUBSTR(SIKUKN,1,2),'기타') as GUBUN
     , COUNT(*)   as INWON
  FROM T_RC_MASTER   M
 WHERE M.REGYY     = ?
   AND M.REGCH     = ?
 GROUP BY SUBSTR(SIKUKN,1,2)
 ORDER BY INWON DESC
            ]]>
								</query>
				</sql>

				<sql name="MISA060_SHR_03">
								<description>입사지원현황 조회 성별</description>
								<query>
												<![CDATA[
SELECT CASE WHEN M.SEXGU = 'M' THEN '남자' WHEN M.SEXGU = 'F' THEN '여자' END as GUBUN
     , COUNT(*)   as INWON
  FROM T_RC_MASTER   M
     , T_RC_SCHOOL   S
 WHERE M.REG_NO    = S.REG_NO
   AND M.REGYY     = ?
   AND REGCH       = ?
 GROUP BY M.SEXGU
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misa070
								* @description : 파견사원입퇴사자현황 조회
								***********************************************************************
								* 2007/04/13      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISA070_SHR_01">
								<description>파견사원입퇴사자현황</description>
								<query>
												<![CDATA[
SELECT C.HEAD_CD                  as HEAD_CD
     , MAX(C.HEAD_NM)             as HEAD_NM
     , NVL(SUM(T.TOT_CNT),0)      as TOT_CNT
     , NVL(SUM(H.HIR_CNT),0)      as HIR_CNT
     , NVL(SUM(R.RET_CNT),0)      as RET_CNT
     , MAX(C.SORT_NO)             as SORT_NO
  FROM (-- 본부별 퇴사자
        SELECT HEAD_CD, COUNT(*)   as RET_CNT
          FROM T_ME_PERSON
         WHERE TO_CHAR(RET_YMD, 'YYYYMM') BETWEEN ? and ?
         GROUP BY HEAD_CD
        )      R,
       (-- 본부별 입사자
        SELECT HEAD_CD, COUNT(*)   as HIR_CNT
          FROM T_ME_PERSON
         WHERE TO_CHAR(HIR_YMD, 'YYYYMM') BETWEEN ? and ?
         GROUP BY HEAD_CD
        )      H,
       (-- 본부별 총원
        SELECT HEAD_CD, COUNT(*)   as TOT_CNT
          FROM T_ME_PERSON
         WHERE TO_CHAR(HIR_YMD,'YYYYMM') <=  ?
           AND ((RET_YMD IS NULL) OR  (TO_CHAR(RET_YMD, 'YYYYMM') > ?))
         GROUP BY HEAD_CD
        )      T,
       (SELECT COMM_CD  as HEAD_CD
             , COMM_NM  as HEAD_NM
             , SORT_NO
          FROM T_CM_COMMON
         WHERE SORT_NO   > 0
           AND CD_GBN    = 'B2'
        )      C
 WHERE C.HEAD_CD  = T.HEAD_CD
   AND C.HEAD_CD  = H.HEAD_CD(+)
   AND C.HEAD_CD  = R.HEAD_CD(+)
 GROUP BY C.HEAD_CD
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>

				<sql name="MISA070_SHR_02">
								<description>
												파견사원입퇴사자현황 부서별
								</description>
								<query>
												<![CDATA[
SELECT C.DPT_CD                   as DPT_CD
     , C.DPT_NM                   as DPT_NM
     , NVL(SUM(T.TOT_CNT),0)      as TOT_CNT
     , NVL(SUM(H.HIR_CNT),0)      as HIR_CNT
     , NVL(SUM(R.RET_CNT),0)      as RET_CNT
     , MAX(C.SORT_NO)             as SORT_NO
  FROM (-- 부서별 퇴사자
        SELECT DPT_CD, COUNT(*)   as RET_CNT
          FROM T_ME_PERSON
         WHERE TO_CHAR(RET_YMD, 'YYYYMM') BETWEEN ? and ?
         GROUP BY DPT_CD
        )      R,
       (-- 부서별 입사자
        SELECT DPT_CD, COUNT(*)   as HIR_CNT
          FROM T_ME_PERSON
         WHERE TO_CHAR(HIR_YMD, 'YYYYMM') BETWEEN ? and ?
         GROUP BY DPT_CD
        )      H,
       (-- 부서별 총원
        SELECT DPT_CD, COUNT(*)   as TOT_CNT
          FROM T_ME_PERSON
         WHERE TO_CHAR(HIR_YMD,'YYYYMM') <=  ?
           AND ((RET_YMD IS NULL) OR  (TO_CHAR(RET_YMD, 'YYYYMM') > ?))
         GROUP BY DPT_CD
        )      T,
       (SELECT DPT_CD
             , DPT_NM
             , SORT_NO
          FROM T_CM_DEPT
         WHERE SORT_NO BETWEEN 100 AND 750
           AND UPDPT_CD = ?
        )      C
 WHERE C.DPT_CD  = T.DPT_CD
   AND C.DPT_CD  = H.DPT_CD(+)
   AND C.DPT_CD  = R.DPT_CD(+)
 GROUP BY C.DPT_CD, C.DPT_NM
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb010
								* @description : 이직율 현황
								***********************************************************************
								* 2007/04/11     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 직위별이직율 데이터 조회 -->
				<sql name="MISB010_SHR_01">
								<description>직위별이직율 데이터 조회</description>
								<query>
												<![CDATA[
                SELECT MIN(MAIN.GUBUN),
                       MAIN.JOB_CD,
                       SF_GET_COMMNAME(MIN(MAIN.GUBUN), 'A2', MIN(MAIN.JOB_CD)) AS TITLE_NM,
                       SF_GET_COMMSEQ(MIN(MAIN.GUBUN), 'A2', MIN(MAIN.JOB_CD)) AS SEQ,
                       SUM(MAIN.A_CNT) AS CNT1,
                       SUM(MAIN.M_CNT) AS MCNT1,
                       SUM(MAIN.A_CNT2) AS CNT2,
                       SUM(MAIN.M_CNT2) AS MCNT2
                FROM  (SELECT AAA.GUBUN,
                              AAA.JOB_CD,
                              AAA.A_CNT,
                              AAA.M_CNT,
                              BBB.A_CNT2,
                              BBB.M_CNT2
                       FROM  (SELECT GUBUN,
                                     JOB_CD,
                                     SUM(A_CNT) AS A_CNT,
                                     SUM(M_CNT) AS M_CNT
                              FROM  (SELECT A.GUBUN,
                                            A.JOB_CD,
                                            COUNT(ENO_NO) AS A_CNT,
                                            0 AS M_CNT
                                     FROM   T_CM_PERSON A,
                                           (SELECT GUBUN,
                                                   DPT_CD,
                                                   DPT_NM,
                                                   SORT_NO
                                            FROM   T_CM_DEPT
                                            WHERE  CD_GBN='A4'
                                           ) B
                                     WHERE  A.GUBUN  = B.GUBUN(+)
                                     AND    A.DPT_CD = B.DPT_CD(+)
                                     AND   ((RET_YMD IS NULL) OR  (RET_YMD > SYSDATE))
                                     GROUP BY A.GUBUN,A.JOB_CD
                                    ) AA
                              GROUP BY GUBUN,  JOB_CD
                             ) AAA
                       LEFT OUTER JOIN (SELECT GUBUN,
                                               JOB_CD,
                                               SUM(A_CNT2) AS A_CNT2,
                                               SUM(M_CNT2) AS M_CNT2
                                        FROM  (SELECT A.GUBUN,
                                                      A.JOB_CD,
                                                      COUNT(ENO_NO) AS A_CNT2,
                                                      0 AS M_CNT2
                                               FROM   T_CM_PERSON A,
                                                     (SELECT GUBUN,
                                                             DPT_CD,
                                                             DPT_NM,
                                                             SORT_NO
                                                      FROM   T_CM_DEPT
                                                      WHERE  CD_GBN='A4'
                                                     ) B
                                               WHERE A.GUBUN  = B.GUBUN(+)
                                               AND   A.DPT_CD = B.DPT_CD(+)
                                               AND  (RET_YMD BETWEEN ? AND ?)
                                               GROUP BY A.JOB_CD, A.GUBUN
                                              ) BB
                                        GROUP BY GUBUN,  JOB_CD
                                       ) BBB
                       ON     AAA.JOB_CD   = BBB.JOB_CD(+)
                       AND    AAA.GUBUN    = BBB.GUBUN(+)
                      ) MAIN
                WHERE 1=1
                GROUP BY JOB_CD
                ORDER BY SEQ

            ]]>
								</query>
				</sql>

				<!-- 부서별이직율 데이터 조회 -->
				<sql name="MISB010_SHR_02">
								<description>부서별이직율 데이터 조회</description>
								<query>
												<![CDATA[
				SELECT DPT_CD, MIN(MAIN.GUBUN) AS GUBUN, MIN(MAIN.DPT_CD) AS DPT_CD, -- MIN(MAIN.GBN_CD) AS GBN_CD,
					MIN(MAIN.DPT_NM) AS TITLE_NM,
					SF_GET_DPTSEQ(MIN(MAIN.GUBUN), 'A4', MIN(MAIN.DPT_CD)) AS SEQ,
					SUM(MAIN.A_CNT) AS CNT1,
					SUM(MAIN.M_CNT) AS MCNT1,
					SUM(MAIN.A_CNT2) AS CNT2,
					SUM(MAIN.M_CNT2) AS MCNT2
				FROM
				(
					SELECT AAA.GUBUN,  AAA.DPT_CD, AAA.DPT_NM,  AAA.A_CNT, AAA.M_CNT, BBB.A_CNT2, BBB.M_CNT2
					FROM
					(
						SELECT GUBUN,  DPT_CD, DPT_NM,  SUM(AA.A_CNT) AS A_CNT, SUM(AA.M_CNT) AS M_CNT
						FROM
						(
							SELECT A.GUBUN,A.DPT_CD,    COUNT(ENO_NO) AS A_CNT,
								0 AS M_CNT, MIN(B.DPT_NM) AS DPT_NM
							FROM T_CM_PERSON A, (SELECT GUBUN, DPT_CD, DPT_NM, SORT_NO FROM T_CM_DEPT WHERE CD_GBN='A4') B
							WHERE A.GUBUN = B.GUBUN(+) AND A.DPT_CD = B.DPT_CD(+) AND ((RET_YMD IS NULL) OR  (RET_YMD > SYSDATE))
							GROUP BY A.GUBUN, A.DPT_CD, DPT_NM) AA
						GROUP BY GUBUN,  DPT_CD,  DPT_NM
					) AAA
					LEFT OUTER JOIN
					(
						SELECT GUBUN,  DPT_CD, DPT_NM,  SUM(BB.A_CNT2) AS A_CNT2, SUM(BB.M_CNT2) AS M_CNT2
						FROM
						(
							SELECT A.GUBUN,A.DPT_CD, B.DPT_NM,    COUNT(ENO_NO) A_CNT2,
								0 AS M_CNT2
							FROM T_CM_PERSON A, (SELECT GUBUN, DPT_CD, DPT_NM, SORT_NO FROM T_CM_DEPT WHERE CD_GBN='A4') B
							WHERE A.GUBUN = B.GUBUN(+) AND A.DPT_CD = B.DPT_CD(+) AND (RET_YMD BETWEEN ? AND ?)
							GROUP BY A.DPT_CD,  A.GUBUN, DPT_NM) BB
						GROUP BY GUBUN,  DPT_CD,  DPT_NM
					) BBB
					ON AAA.GUBUN=BBB.GUBUN(+)  AND AAA.DPT_CD= BBB.DPT_CD(+)
				) MAIN
				WHERE 1=1
				GROUP BY DPT_CD, DPT_NM
				ORDER BY SEQ

            ]]>
								</query>
				</sql>

				<!-- 직위별 이직율 데이터 조회 변경 쿼리-->
				<sql name="MISB010_SHR_03">
								<description>
												직위별 이직율 데이터 조회
								</description>
								<query>
												<![CDATA[
	 SELECT MIN(MAIN.GUBUN),
                       MAIN.JOB_CD,
                     SF_GET_COMMNAME(MIN(MAIN.GUBUN), 'A2', MIN(MAIN.JOB_CD)) AS TITLE_NM,
                       SF_GET_COMMSEQ(MIN(MAIN.GUBUN), 'A2', MIN(MAIN.JOB_CD)) AS SEQ,
                       SUM(MAIN.A_CNT) AS CNT1,
                       SUM(MAIN.M_CNT) AS MCNT1,
                       SUM(MAIN.A_CNT2) AS CNT2,
                       SUM(MAIN.M_CNT2) AS MCNT2,

                        (NVL(SUM(MAIN.A_CNT),0) + NVL(SUM(MAIN.M_CNT),0)) AS TOT1,
                       (NVL(SUM(MAIN.A_CNT2),0) + NVL(SUM(MAIN.M_CNT2),0)) AS TOT2,

                       CASE WHEN (NVL(SUM(MAIN.A_CNT),0) <> 0 OR  NVL(SUM(MAIN.M_CNT),0) <> 0) AND
                                 (NVL(SUM(MAIN.A_CNT2),0) <> 0 OR  NVL(SUM(MAIN.M_CNT2),0) <> 0)
                            THEN (ROUND((NVL(SUM(MAIN.A_CNT2),0) + NVL(SUM(MAIN.M_CNT2),0)) / (NVL(SUM(MAIN.A_CNT),0) + NVL(SUM(MAIN.M_CNT),0))*100,1))||'%'
                            ELSE ''
                            END AS TOT3


                FROM  (SELECT AAA.GUBUN,
                              AAA.JOB_CD,
                              AAA.A_CNT,
                              AAA.M_CNT,
                              BBB.A_CNT2,
                              BBB.M_CNT2
                       FROM  (SELECT GUBUN,
                                     JOB_CD,
                                     SUM(A_CNT) AS A_CNT,
                                     SUM(M_CNT) AS M_CNT
                              FROM  (SELECT A.GUBUN,
                                            A.JOB_CD,
                                            COUNT(ENO_NO) AS A_CNT,
                                            0 AS M_CNT
                                     FROM   T_CM_PERSON A,
                                           (SELECT GUBUN,
                                                   DPT_CD,
                                                   DPT_NM,
                                                   SORT_NO,
                                                   GBN2_TAG
                                            FROM   T_CM_DEPT
                                            WHERE  CD_GBN='A4'
                                           ) B
                                     WHERE  A.GUBUN  = B.GUBUN(+)
                                     AND    A.DPT_CD = B.DPT_CD(+)
                                     AND   ((RET_YMD IS NULL) OR  (RET_YMD > SYSDATE))
                                     GROUP BY A.GUBUN,A.JOB_CD
                                    ) AA
                              GROUP BY GUBUN,  JOB_CD
                             ) AAA
                       LEFT OUTER JOIN (SELECT GUBUN,
                                               JOB_CD,
                                               SUM(A_CNT2) AS A_CNT2,
                                               SUM(M_CNT2) AS M_CNT2
                                        FROM  (SELECT A.GUBUN,
                                                      A.JOB_CD,
                                                      COUNT(ENO_NO) AS A_CNT2,
                                                      0 AS M_CNT2
                                               FROM   T_CM_PERSON A,
                                                     (SELECT GUBUN,
                                                             DPT_CD,
                                                             DPT_NM,
                                                             SORT_NO
                                                      FROM   T_CM_DEPT
                                                      WHERE  CD_GBN='A4'
                                                     ) B
                                               WHERE A.GUBUN  = B.GUBUN(+)
                                               AND   A.DPT_CD = B.DPT_CD(+)
                                               AND  (RET_YMD BETWEEN ? AND ?)
                                               GROUP BY A.JOB_CD, A.GUBUN
                                              ) BB
                                        GROUP BY GUBUN, JOB_CD
                                       ) BBB
                       ON     AAA.JOB_CD   = BBB.JOB_CD(+)
                       AND    AAA.GUBUN    = BBB.GUBUN(+)
                      ) MAIN
                WHERE 1=1
                GROUP BY JOB_CD

                UNION

                SELECT MIN(MAIN.GUBUN),
                       '',
                       '합계' AS TITLE_NM,
                       999 AS SEQ,
                       SUM(MAIN.A_CNT) AS CNT1,
                       SUM(MAIN.M_CNT) AS MCNT1,
                       SUM(MAIN.A_CNT2) AS CNT2,
                       SUM(MAIN.M_CNT2) AS MCNT2,

                       (NVL(SUM(MAIN.A_CNT),0) + NVL(SUM(MAIN.M_CNT),0)) AS TOT1,
                       (NVL(SUM(MAIN.A_CNT2),0) + NVL(SUM(MAIN.M_CNT2),0)) AS TOT2,

                       CASE WHEN (NVL(SUM(MAIN.A_CNT),0) <> 0 OR  NVL(SUM(MAIN.M_CNT),0) <> 0) AND
                                 (NVL(SUM(MAIN.A_CNT2),0) <> 0 OR  NVL(SUM(MAIN.M_CNT2),0) <> 0)
                            THEN (ROUND((NVL(SUM(MAIN.A_CNT2),0) + NVL(SUM(MAIN.M_CNT2),0)) / (NVL(SUM(MAIN.A_CNT),0) + NVL(SUM(MAIN.M_CNT),0))*100,1))||'%'
                            ELSE ''
                            END AS TOT3


                FROM  (SELECT AAA.GUBUN,
                              AAA.JOB_CD,
                              AAA.A_CNT,
                              AAA.M_CNT,
                              BBB.A_CNT2,
                              BBB.M_CNT2
                       FROM  (SELECT GUBUN,
                                     JOB_CD,
                                     SUM(A_CNT) AS A_CNT,
                                     SUM(M_CNT) AS M_CNT
                              FROM  (SELECT A.GUBUN,
                                            A.JOB_CD,
                                            COUNT(ENO_NO) AS A_CNT,
                                            0 AS M_CNT
                                     FROM   T_CM_PERSON A,
                                           (SELECT GUBUN,
                                                   DPT_CD,
                                                   DPT_NM,
                                                   SORT_NO,
                                                   GBN2_TAG
                                            FROM   T_CM_DEPT
                                            WHERE  CD_GBN='A4'
                                           ) B
                                     WHERE  A.GUBUN  = B.GUBUN(+)
                                     AND    A.DPT_CD = B.DPT_CD(+)
                                     AND   ((RET_YMD IS NULL) OR  (RET_YMD > SYSDATE))
                                     GROUP BY A.GUBUN,A.JOB_CD
                                    ) AA
                              GROUP BY GUBUN,  JOB_CD
                             ) AAA
                       LEFT OUTER JOIN (SELECT GUBUN,
                                               JOB_CD,
                                               SUM(A_CNT2) AS A_CNT2,
                                               SUM(M_CNT2) AS M_CNT2
                                        FROM  (SELECT A.GUBUN,
                                                      A.JOB_CD,
                                                      COUNT(ENO_NO) AS A_CNT2,
                                                      0 AS M_CNT2
                                               FROM   T_CM_PERSON A,
                                                     (SELECT GUBUN,
                                                             DPT_CD,
                                                             DPT_NM,
                                                             SORT_NO
                                                      FROM   T_CM_DEPT
                                                      WHERE  CD_GBN='A4'
                                                     ) B
                                               WHERE A.GUBUN  = B.GUBUN(+)
                                               AND   A.DPT_CD = B.DPT_CD(+)
                                               AND  (RET_YMD BETWEEN ? AND ?)
                                               GROUP BY A.JOB_CD,  A.GUBUN
                                              ) BB
                                        GROUP BY GUBUN,  JOB_CD
                                       ) BBB
                       ON     AAA.JOB_CD   = BBB.JOB_CD(+)
                       AND    AAA.GUBUN    = BBB.GUBUN(+)
                      ) MAIN
                WHERE 1=1
                GROUP BY MAIN.GUBUN
                ORDER BY SEQ
            ]]>
								</query>
				</sql>

				<!-- 부서별  이직율 데이터 조회 변경 쿼리-->
				<sql name="MISB010_SHR_04">
								<description>
												부서별 이직율 데이터 조회
								</description>
								<query>
												<![CDATA[
		SELECT MIN(MAIN.GUBUN) AS GUBUN,  MIN(MAIN.DPT_CD) AS DPT_CD, -- MIN(MAIN.GBN_CD) AS GBN_CD,
					MIN(MAIN.DPT_NM) AS TITLE_NM,
					SF_GET_DPTSEQ(MIN(MAIN.GUBUN), 'A4', MIN(MAIN.DPT_CD)) AS SEQ,
					SUM(MAIN.A_CNT) AS CNT1,
					SUM(MAIN.M_CNT) AS MCNT1,

					SUM(MAIN.A_CNT2) AS CNT2,
					SUM(MAIN.M_CNT2) AS MCNT2,

                    (NVL(SUM(MAIN.A_CNT),0) + NVL(SUM(MAIN.M_CNT),0)) AS TOT1,
                    (NVL(SUM(MAIN.A_CNT2),0) + NVL(SUM(MAIN.M_CNT2),0)) AS TOT2,

                    CASE WHEN (NVL(SUM(MAIN.A_CNT),0) <> 0 OR  NVL(SUM(MAIN.M_CNT),0) <> 0) AND
                    (NVL(SUM(MAIN.A_CNT2),0) <> 0 OR  NVL(SUM(MAIN.M_CNT2),0) <> 0)
                    THEN (ROUND((NVL(SUM(MAIN.A_CNT2),0) + NVL(SUM(MAIN.M_CNT2),0)) / (NVL(SUM(MAIN.A_CNT),0) + NVL(SUM(MAIN.M_CNT),0))*100,1))||'%'
                    ELSE ''
                    END AS TOT3


				FROM
				(
					SELECT AAA.GUBUN,  AAA.DPT_CD, AAA.DPT_NM,  AAA.A_CNT, AAA.M_CNT, BBB.A_CNT2, BBB.M_CNT2
					FROM
					(
						SELECT GUBUN, DPT_CD, DPT_NM,  SUM(AA.A_CNT) AS A_CNT, SUM(AA.M_CNT) AS M_CNT
						FROM
						(
							SELECT A.GUBUN,A.DPT_CD,   COUNT(ENO_NO) AS A_CNT,
								0 AS M_CNT, MIN(B.DPT_NM) AS DPT_NM
							FROM T_CM_PERSON A, (SELECT GUBUN, DPT_CD, DPT_NM, SORT_NO FROM T_CM_DEPT WHERE CD_GBN='A4') B
							WHERE A.GUBUN = B.GUBUN(+) AND A.DPT_CD = B.DPT_CD(+) AND ((RET_YMD IS NULL) OR  (RET_YMD > SYSDATE))
							GROUP BY A.GUBUN,A.DPT_CD, DPT_NM) AA
						GROUP BY GUBUN,  DPT_CD,  DPT_NM
					) AAA
					LEFT OUTER JOIN
					(
						SELECT GUBUN,  DPT_CD, DPT_NM, SUM(BB.A_CNT2) AS A_CNT2, SUM(BB.M_CNT2) AS M_CNT2
						FROM
						(
							SELECT A.GUBUN,A.DPT_CD, B.DPT_NM,  COUNT(ENO_NO) AS A_CNT2,
								0 AS M_CNT2
							FROM T_CM_PERSON A, (SELECT GUBUN, DPT_CD, DPT_NM, SORT_NO FROM T_CM_DEPT WHERE CD_GBN='A4') B
							WHERE A.GUBUN = B.GUBUN(+) AND A.DPT_CD = B.DPT_CD(+) AND (RET_YMD BETWEEN ? AND ?)
							GROUP BY A.DPT_CD,  A.GUBUN, DPT_NM) BB
						GROUP BY GUBUN,  DPT_CD,  DPT_NM
					) BBB
					ON AAA.GUBUN=BBB.GUBUN(+)  AND AAA.DPT_CD= BBB.DPT_CD(+)
				) MAIN
				WHERE 1=1
				GROUP BY DPT_CD, DPT_NM
				--ORDER BY SEQ

				UNION

                SELECT MIN(MAIN.GUBUN),
                       '',
                       '합계' AS TITLE_NM,
                       999 AS SEQ,
                    SUM(MAIN.A_CNT) AS CNT1,
					SUM(MAIN.M_CNT) AS MCNT1,

					SUM(MAIN.A_CNT2) AS CNT2,
					SUM(MAIN.M_CNT2) AS MCNT2,

                    (NVL(SUM(MAIN.A_CNT),0) + NVL(SUM(MAIN.M_CNT),0)) AS TOT1,
                    (NVL(SUM(MAIN.A_CNT2),0) + NVL(SUM(MAIN.M_CNT2),0)) AS TOT2,

                    CASE WHEN (NVL(SUM(MAIN.A_CNT),0) <> 0 OR  NVL(SUM(MAIN.M_CNT),0) <> 0) AND
                    (NVL(SUM(MAIN.A_CNT2),0) <> 0 OR  NVL(SUM(MAIN.M_CNT2),0) <> 0)
                    THEN (ROUND((NVL(SUM(MAIN.A_CNT2),0) + NVL(SUM(MAIN.M_CNT2),0)) / (NVL(SUM(MAIN.A_CNT),0) + NVL(SUM(MAIN.M_CNT),0))*100,1))||'%'
                    ELSE ''
                    END AS TOT3
                 FROM
				(
					SELECT AAA.GUBUN,  AAA.DPT_CD, AAA.DPT_NM,  AAA.A_CNT, AAA.M_CNT, BBB.A_CNT2, BBB.M_CNT2
					FROM
					(
						SELECT GUBUN,  DPT_CD, DPT_NM,  SUM(AA.A_CNT) AS A_CNT, SUM(AA.M_CNT) AS M_CNT
						FROM
						(
							SELECT A.GUBUN,A.DPT_CD,    COUNT(ENO_NO) AS A_CNT,
								0 AS M_CNT, MIN(B.DPT_NM) AS DPT_NM
							FROM T_CM_PERSON A, (SELECT GUBUN, DPT_CD, DPT_NM, SORT_NO FROM T_CM_DEPT WHERE CD_GBN='A4') B
							WHERE A.GUBUN = B.GUBUN(+) AND A.DPT_CD = B.DPT_CD(+) AND ((RET_YMD IS NULL) OR  (RET_YMD > SYSDATE))
							GROUP BY A.GUBUN, A.DPT_CD,  DPT_NM) AA
						GROUP BY GUBUN,  DPT_CD,  DPT_NM
					) AAA
					LEFT OUTER JOIN
					(
						SELECT GUBUN,  DPT_CD, DPT_NM,  SUM(BB.A_CNT2) AS A_CNT2, SUM(BB.M_CNT2) AS M_CNT2
						FROM
						(
							SELECT A.GUBUN,A.DPT_CD, B.DPT_NM,  COUNT(ENO_NO) AS A_CNT2,
								0 AS M_CNT2
							FROM T_CM_PERSON A, (SELECT GUBUN, DPT_CD, DPT_NM, SORT_NO FROM T_CM_DEPT WHERE CD_GBN='A4') B
							WHERE A.GUBUN = B.GUBUN(+) AND A.DPT_CD = B.DPT_CD(+) AND (RET_YMD BETWEEN ? AND ?)
							GROUP BY A.DPT_CD,  A.GUBUN, DPT_NM) BB
						GROUP BY GUBUN,  DPT_CD,  DPT_NM
					) BBB
					ON AAA.GUBUN=BBB.GUBUN(+)  AND AAA.DPT_CD= BBB.DPT_CD(+)
				) MAIN
				WHERE 1=1
                GROUP BY MAIN.GUBUN
                ORDER BY SEQ

            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misb020
								* @description : 급/상여 현황
								***********************************************************************
								* 2007/04/11     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 급상여현황  데이터 조회(직위별) -->
				<sql name="MISB020_SHR_01">
								<description>급상여현황 데이터 조회</description>
								<query>
												<![CDATA[
        SELECT
                   DECODE(SF_GET_COMMNAME('01', 'A2', JOB_CD), '', '합계', SF_GET_COMMNAME('01', 'A2', JOB_CD)) AS SUB_NM,
                   SUM(TOT_AMT) AS SUM_TOT,
                   SUM(CNT1) AS SUM_CNT,
                   SUM(TERM_AMT) AS SUM_TERM,
                   SUM(CNT2) AS SUM_CNT2,
                   SUM(TERM_AMT2) AS SUM_TERM2,
                   SUM(CNT3) AS SUM_CNT3,
                   MIN(SF_GET_COMMSEQ('01', 'A2',JOB_CD)) AS JOB_SEQ,
                   GROUPING_ID( JOB_CD) AS GROUP_SEQ
        FROM
                (
                        SELECT ZZ.JOB_CD,AA.TOT_AMT, AA.CNT AS CNT1, BB.TERM_AMT, BB.CNT AS CNT2 , CC.TERM_AMT2, CC.CNT3 AS CNT3
                        FROM
                                (
				                  SELECT A.JOB_CD
				                  FROM T_CP_PAYMASTER A
				                        LEFT JOIN T_CM_PERSON B ON  A.ENO_NO = B.ENO_NO
				                  WHERE  (A.PIS_YY = ?   OR ( A.PIS_YY = ? AND (A.PIS_MM BETWEEN ? AND ?) ))
				                     AND A.SAL_GBN = ?
				                  GROUP BY A.JOB_CD
				                ) ZZ,
                          		(
                                SELECT A.JOB_CD, SUM(A.SALT_AMT) AS TOT_AMT, count(distinct B.eno_no) AS CNT
                                FROM T_CP_PAYMASTER A
                                LEFT JOIN T_CM_PERSON B
                                ON  A.ENO_NO = B.ENO_NO
                                WHERE  A.PIS_YY = ?
                                AND A.SAL_GBN = ?
                                GROUP BY A.JOB_CD
                                ) AA,
                          		(
	                            SELECT A.JOB_CD, SUM(A.SALT_AMT) AS TERM_AMT, count(distinct B.eno_no) AS CNT
	                                FROM T_CP_PAYMASTER A
	                                LEFT JOIN T_CM_PERSON B
	                                ON  A.ENO_NO = B.ENO_NO
	                            WHERE  A.PIS_YY = ? AND (A.PIS_MM BETWEEN ? AND ?)
	                        	AND A.SAL_GBN = ?
	                        	GROUP BY A.JOB_CD
                        		) BB,
                        		(
                    			SELECT A.JOB_CD, SUM(A.SALT_AMT) AS TERM_AMT2, count(distinct B.eno_no) AS CNT3
                        		FROM T_CP_PAYMASTER A
                        		LEFT JOIN T_CM_PERSON B
                        		ON  A.ENO_NO = B.ENO_NO
                        		WHERE  A.PIS_YY = ? AND (A.PIS_MM = ?)
                        		AND A.SAL_GBN = ?
                        		GROUP BY A.JOB_CD
                        		) CC
                	WHERE ZZ.JOB_CD = AA.JOB_CD(+)
                    AND ZZ.JOB_CD = CC.JOB_CD(+)
                    AND ZZ.JOB_CD = BB.JOB_CD(+)
        			)
			WHERE 1=1
			GROUP BY ROLLUP(  JOB_CD)
			ORDER BY GROUP_SEQ, JOB_SEQ

            ]]>
								</query>
				</sql>
				<!--
								***********************************************************************
								* @UseCase     : misb020
								* @description : 급/상여 현황
								***********************************************************************
								* 2007/04/11     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 급상여현황  데이터 조회(부서별) -->
				<sql name="MISB020_SHR_02">
								<description>급상여현황 데이터 조회</description>
								<query>
												<![CDATA[
        SELECT
                   DECODE(SF_GET_DPTNAME('01', 'A4', DPT_CD), '', '합계',SF_GET_DPTNAME('01', 'A4', DPT_CD)) AS SUB_NM,
                   SUM(TOT_AMT) AS SUM_TOT,
                   SUM(CNT1) AS SUM_CNT,
                   SUM(TERM_AMT) AS SUM_TERM,
                   SUM(CNT2) AS SUM_CNT2,
                   SUM(TERM_AMT2) AS SUM_TERM2,
                   SUM(CNT3) AS SUM_CNT3,
                   MIN(SF_GET_DPTSEQ('01', 'A4',DPT_CD))AS DPT_SEQ,
                   GROUPING_ID(  DPT_CD) AS GROUP_SEQ
        FROM
                (
	                 SELECT ZZ.DPT_CD,  AA.TOT_AMT, AA.CNT AS CNT1, BB.TERM_AMT, BB.CNT AS CNT2 , CC.TERM_AMT2, CC.CNT3 AS CNT3
	                 FROM
                          (
		                    SELECT A.DPT_CD
		                    FROM T_CP_PAYMASTER A
		                      LEFT JOIN T_CM_PERSON B ON  A.ENO_NO = B.ENO_NO
		                    WHERE  (A.PIS_YY = ?   OR ( A.PIS_YY = ? AND (A.PIS_MM BETWEEN ? AND ?) ))
		                      AND A.SAL_GBN = ?
		                    GROUP BY A.DPT_CD
			              ) ZZ ,
                          (
                            SELECT A.DPT_CD, SUM(A.SALT_AMT) AS TOT_AMT, count(distinct B.eno_no) AS CNT
                            FROM T_CP_PAYMASTER A
                            LEFT JOIN T_CM_PERSON B
                            ON  A.ENO_NO = B.ENO_NO
                            WHERE  A.PIS_YY = ?
                            AND A.SAL_GBN = ?
                            GROUP BY A.DPT_CD
                                ) AA,
                          (
                            SELECT A.DPT_CD, SUM(A.SALT_AMT) AS TERM_AMT, count(distinct B.eno_no) AS CNT
                                FROM T_CP_PAYMASTER A
                                LEFT JOIN T_CM_PERSON B
                                ON  A.ENO_NO = B.ENO_NO
                                WHERE  A.PIS_YY = ? AND (A.PIS_MM BETWEEN ? AND ?)
	                        AND A.SAL_GBN = ?
	                        GROUP BY A.DPT_CD
                        ) BB,
                        (
	                    	SELECT A.DPT_CD, SUM(A.SALT_AMT) AS TERM_AMT2, count(distinct B.eno_no) AS CNT3
	                        FROM T_CP_PAYMASTER A
	                        LEFT JOIN T_CM_PERSON B
	                        ON  A.ENO_NO = B.ENO_NO
	                        WHERE  A.PIS_YY = ? AND (A.PIS_MM = ?)
	                        AND A.SAL_GBN = ?
	                        GROUP BY A.DPT_CD
                        ) CC
                	WHERE ZZ.DPT_CD = AA.DPT_CD(+)
                    AND ZZ.DPT_CD = BB.DPT_CD(+)
        		    AND ZZ.DPT_CD = CC.DPT_CD(+)
        			)
		WHERE 1=1
		GROUP BY ROLLUP(   DPT_CD)
		ORDER BY GROUP_SEQ, DPT_SEQ
            ]]>
								</query>
				</sql>
				<!--
								***********************************************************************
								* @UseCase     : misb030
								* @description : 학자금 통계  현황
								***********************************************************************
								* 2007/04/121     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 학자금 통계  현황 -->
				<sql name="MISB030_SHR">
								<description>학자금 통계 현황</description>
								<query>
												<![CDATA[
                                SELECT
                                          MAIN.GBN_NM AS GBN_NM,
                                          AA.CNT1,
                                          BB.CNT2,
                                          CC.CNT3,
                                          AA.SUM_PAY1,
                                          BB.SUM_PAY2,
                                          CC.SUM_PAY3
                                FROM
                                (
                          SELECT A.OCC_CD,  B.COMM_CD AS GUBUN , B.COMM_NM AS GBN_NM
                          FROM T_SC_SCHLBOOK A , T_CM_COMMON B
                          WHERE ( A.PIS_YY = ? OR ( A.PIS_YY||A.PIS_MM BETWEEN ? AND ?))
                            AND B.GUBUN = '01' AND B.CD_GBN = 'E1' AND SUBSTR(A.FSCH_CD,0,1) = B.COMM_CD
                          GROUP BY A.OCC_CD, B.COMM_CD, B.COMM_NM
                        ) MAIN
                                LEFT OUTER JOIN
                                (
                                SELECT OCC_CD,  COUNT(ENO_NO) AS CNT1 , SUM(TOT_AMT) AS SUM_PAY1,SUBSTR(FSCH_CD,0,1) AS GUBUN
                                FROM T_SC_SCHLBOOK
                                WHERE PIS_YY = ?
                                GROUP BY OCC_CD, SUBSTR(FSCH_CD,0,1)
                                )AA
                                ON MAIN.GUBUN = AA.GUBUN AND MAIN.OCC_CD = AA.OCC_CD
                                LEFT OUTER JOIN
                                (
                                SELECT OCC_CD,  COUNT(ENO_NO) AS CNT2 , SUM(TOT_AMT) AS SUM_PAY2,SUBSTR(FSCH_CD,0,1) AS GUBUN
                                FROM T_SC_SCHLBOOK
                                WHERE PIS_YY||PIS_MM BETWEEN ? AND ?
                                GROUP BY OCC_CD, SUBSTR(FSCH_CD,0,1)
                                )BB
                                ON MAIN.GUBUN = BB.GUBUN AND MAIN.OCC_CD = BB.OCC_CD
                                LEFT OUTER JOIN
                                (
                                SELECT OCC_CD,  COUNT(ENO_NO) AS CNT3 , SUM(TOT_AMT) AS SUM_PAY3,SUBSTR(FSCH_CD,0,1) AS GUBUN
                                FROM T_SC_SCHLBOOK
                                WHERE PIS_YY = ? AND PIS_MM = ?
                                GROUP BY OCC_CD, SUBSTR(FSCH_CD,0,1)
                                )CC
                                ON MAIN.GUBUN = CC.GUBUN AND MAIN.OCC_CD = CC.OCC_CD
                                WHERE  1=1
                        ORDER BY MAIN.GUBUN

		            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb040
								* @description : 직위별 인원현황
								***********************************************************************
								* 2007/04/12      방석호        최초작성.
								***********************************************************************
				-->
				<sql name="MISB040_SHR">
								<description>misb040</description>
								<query>
												<![CDATA[
SELECT A.GUBUN
      ,A.ENO_NO
      ,MF_NM
      ,REG_NM
      ,'수도권'
      ,OCC_NM
      ,JOB_NM
      ,DPT_NM
      ,ENO_NM
      ,AGE
      ,HIR_YMD
      ,HIRG_YMD
      ,JPR_YMD   -- 현직위승진일
      ,DPA_YMD   -- 현소속발령일
      ,TERM_YEAR
      ,SCH_NM
      ,MAJ_NM
      ,GUR_YMD
      ,(SELECT MAX(EVL_YY)   FROM T_EV_ABLRST WHERE GUBUN = '01')||'년' as GRD1_NM
      ,(GRD1_1||DECODE(GRD1_2,'','','/')||GRD1_2) AS GRD11
      ,(GRD1_3||DECODE(GRD1_4,'','','/')||GRD1_4) AS GRD12
      ,(SELECT MAX(EVL_YY)-1 FROM T_EV_ABLRST WHERE GUBUN = '01')||'년' as GRD2_NM
      ,(GRD2_1||DECODE(GRD2_2,'','','/')||GRD2_2) AS GRD21
      ,(GRD2_3||DECODE(GRD2_4,'','','/')||GRD2_4) AS GRD22
      ,(SELECT MAX(EVL_YY)-2 FROM T_EV_ABLRST WHERE GUBUN = '01')||'년' as GRD3_NM
      ,(GRD3_1||DECODE(GRD3_2,'','','/')||GRD3_2) AS GRD31
      ,(GRD3_3||DECODE(GRD3_4,'','','/')||GRD3_4) AS GRD32
      ,(SELECT MAX(EVL_YY)-3 FROM T_EV_ABLRST WHERE GUBUN = '01')||'년' as GRD4_NM
      ,(GRD4_1||DECODE(GRD4_2,'','','/')||GRD4_2) AS GRD41
      ,(GRD4_3||DECODE(GRD4_4,'','','/')||GRD4_4) AS GRD42
      ,(SELECT MAX(EVL_YY)-4 FROM T_EV_ABLRST WHERE GUBUN = '01')||'년' as GRD5_NM
      ,(GRD5_1||DECODE(GRD5_2,'','','/')||GRD5_2) AS GRD51
      ,(GRD5_3||DECODE(GRD5_4,'','','/')||GRD5_4) AS GRD52
      ,REPLACE(H_NM,',',CHR(13)||CHR(10)) AS H_NM
      ,P_NM
      ,(SELECT DECODE(COUNT(ENO_NO),0,'',COUNT(ENO_NO)) FROM T_CM_AHISTORY WHERE APP_CD = 'LB1' AND A.ENO_NO = ENO_NO) AS MOVE_CNT
FROM  (SELECT GUBUN
             ,JOB_SEQ
             ,ENO_NO
             ,MF_NM
             ,DECODE(REG_CD,'1','본사','지방') AS REG_NM
             ,'수도권'
             ,OCC_NM
             ,JOB_NM
             ,DPT_NM
             ,ENO_NM
             ,(CEIL(MONTHS_BETWEEN(SYSDATE, BIR_YMD)/12)-1) AS AGE
             ,TO_CHAR(HIR_YMD, 'YYYY/MM/DD')                AS HIR_YMD
             ,TO_CHAR(HIRG_YMD, 'YYYY/MM/DD')               AS HIRG_YMD
             ,TO_CHAR(JPR_YMD, 'YYYY/MM/DD')                AS JPR_YMD
             ,TO_CHAR(DPA_YMD, 'YYYY/MM/DD')                AS DPA_YMD
             ,(FLOOR(MONTHS_BETWEEN(SYSDATE, DPA_YMD)/12)||'년 '||FLOOR(MOD(MONTHS_BETWEEN(SYSDATE, DPA_YMD),12))||'개월') AS TERM_YEAR
             ,SCH_NM
             ,MAJ_NM
             , GUR_YMD
       FROM   VI_T_CM_PERSON
       WHERE (RET_YMD IS NULL OR TO_CHAR(RET_YMD,'YYYYMMDD') > ?)
      )A,

      (SELECT ENO_NO
             ,MIN(DECODE(C_GRP, 1, YEAR_NM)||'년') AS GRD1_NM
             ,MIN(DECODE(C_GRP, 1, FINAL_GRD11))   AS GRD1_1
             ,MIN(DECODE(C_GRP, 1, FINAL_GRD12))   AS GRD1_2
             ,MIN(DECODE(C_GRP, 1, FINAL_GRD21))   AS GRD1_3
             ,MIN(DECODE(C_GRP, 1, FINAL_GRD22))   AS GRD1_4
             ,MIN(DECODE(C_GRP, 2, YEAR_NM)||'년') AS GRD2_NM
             ,MIN(DECODE(C_GRP, 2, FINAL_GRD11))   AS GRD2_1
             ,MIN(DECODE(C_GRP, 2, FINAL_GRD12))   AS GRD2_2
             ,MIN(DECODE(C_GRP, 2, FINAL_GRD21))   AS GRD2_3
             ,MIN(DECODE(C_GRP, 2, FINAL_GRD22))   AS GRD2_4
             ,MIN(DECODE(C_GRP, 3, YEAR_NM)||'년')  GRD3_NM
             ,MIN(DECODE(C_GRP, 3, FINAL_GRD11))   AS GRD3_1
             ,MIN(DECODE(C_GRP, 3, FINAL_GRD12))   AS GRD3_2
             ,MIN(DECODE(C_GRP, 3, FINAL_GRD21))   AS GRD3_3
             ,MIN(DECODE(C_GRP, 3, FINAL_GRD22))   AS GRD3_4
             ,MIN(DECODE(C_GRP, 4, YEAR_NM)||'년') AS GRD4_NM
             ,MIN(DECODE(C_GRP, 4, FINAL_GRD11))   AS GRD4_1
             ,MIN(DECODE(C_GRP, 4, FINAL_GRD12))   AS GRD4_2
             ,MIN(DECODE(C_GRP, 4, FINAL_GRD21))   AS GRD4_3
             ,MIN(DECODE(C_GRP, 4, FINAL_GRD22))   AS GRD4_4
             ,MIN(DECODE(C_GRP, 5, YEAR_NM)||'년') AS GRD5_NM
             ,MIN(DECODE(C_GRP, 5, FINAL_GRD11))   AS GRD5_1
             ,MIN(DECODE(C_GRP, 5, FINAL_GRD12))   AS GRD5_2
             ,MIN(DECODE(C_GRP, 5, FINAL_GRD21))   AS GRD5_3
             ,MIN(DECODE(C_GRP, 5, FINAL_GRD22))   AS GRD5_4
       FROM  (SELECT ENO_NO
                    ,YEAR_NM
                    ,(CASE WHEN YEAR_NM =  EVL_YY THEN FINAL_GRD11 ELSE '' END) AS FINAL_GRD11
                    ,(CASE WHEN YEAR_NM =  EVL_YY THEN FINAL_GRD12 ELSE '' END) AS FINAL_GRD12
                    ,(CASE WHEN YEAR_NM =  EVL_YY THEN FINAL_GRD21 ELSE '' END) AS FINAL_GRD21
                    ,(CASE WHEN YEAR_NM =  EVL_YY THEN FINAL_GRD22 ELSE '' END) AS FINAL_GRD22
                    ,MOD(ROWNUM-1, 5)+1 AS C_GRP
                    ,CEIL(ROWNUM/5)     AS R_GRP
              FROM   (SELECT ENO_NO
                            ,EVL_YY              -- 해당년도
                            ,FINAL_GRD11         -- 역량 1회차 등급
                            ,FINAL_GRD12         -- 역량 2회차 등급
                            ,FINAL_GRD21         -- 업적 1회차 등급
                            ,FINAL_GRD22         -- 업적 2회차 등급
                      FROM  (SELECT GUBUN
                                   ,EVL_YY
                                   ,ENO_NO
                                   ,MAX(DECODE(EVL_GBN, '1', DECODE(EVL_FRQ, 1, FINAL_GRD))) AS FINAL_GRD11
                                   ,MAX(DECODE(EVL_GBN, '1', DECODE(EVL_FRQ, 2, FINAL_GRD))) AS FINAL_GRD12
                                   ,MAX(DECODE(EVL_GBN, '2', DECODE(EVL_FRQ, 1, FINAL_GRD))) AS FINAL_GRD21
                                   ,MAX(DECODE(EVL_GBN, '2', DECODE(EVL_FRQ, 2, FINAL_GRD))) AS FINAL_GRD22
                             FROM   T_EV_ABLRST
                             WHERE  GUBUN = '01'
                             AND    EVL_YY BETWEEN (SELECT MAX(EVL_YY)-4 FROM T_EV_ABLRST WHERE GUBUN = '01') AND (SELECT MAX(EVL_YY) FROM T_EV_ABLRST WHERE GUBUN = '01')
                          -- AND    ENO_NO  = '19010116'
                             GROUP BY GUBUN, EVL_YY, ENO_NO
                            )
                      ORDER BY EVL_YY
                     ) A LEFT OUTER JOIN (SELECT ((SELECT MAX(EVL_YY)+1 FROM T_EV_ABLRST WHERE GUBUN = '01') - LEVEL) YEAR_NM FROM DUAL  CONNECT BY LEVEL <= 5 ) B
                      ON A.ENO_NO IS NOT NULL
             )
       GROUP BY  ENO_NO
      ) B,

      (SELECT ENO_NO
             ,MIN(H_NM) AS H_NM
             ,MIN(P_NM) AS P_NM
       FROM  (SELECT ENO_NO
                    ,DECODE(REPU_CD, 'H', PATH#, '') AS H_NM
                    ,DECODE(REPU_CD ,'P', PATH#, '') AS P_NM
              FROM  (SELECT ENO_NO
                           ,REPU_CD
                           ,SUBSTR(MAX(SYS_CONNECT_BY_PATH(REPU_TNM, ',')), 2) AS PATH#
                     FROM  (SELECT ENO_NO
                                  ,REPU_TNM
                                  ,REPU_CD
                                  ,ROW_NUMBER () OVER (PARTITION BY ENO_NO, REPU_CD ORDER BY ENO_NO) RNUM
                            FROM  (SELECT ENO_NO
                                         ,REPU_CD
                                         ,(SF_GET_COMMNAME('01', 'K1', REPU_TAG) || '(' || TO_CHAR(TO_DATE(REPU_YMD, 'YYYY-MM-DD'), 'YY') ||')') AS REPU_TNM
                                   FROM   T_CM_REWARD
                                   WHERE  REPU_CD = 'H'

                                   UNION ALL

                                   SELECT ENO_NO
                                         ,REPU_CD
                                         ,(SF_GET_COMMNAME('01', 'K2', REPU_TAG) || '(' || TO_CHAR(TO_DATE(REPU_YMD, 'YYYY-MM-DD'), 'YY') ||')') AS REPU_TNM
                                   FROM   T_CM_REWARD
                                   WHERE  REPU_CD = 'P'
                                  )
                           )
                     START WITH RNUM = 1
                     CONNECT BY PRIOR RNUM = RNUM - 1 AND PRIOR ENO_NO = ENO_NO AND PRIOR REPU_CD = REPU_CD
                     GROUP BY ENO_NO, REPU_CD
                    )
             )
       GROUP BY ENO_NO
      )C
WHERE  A.ENO_NO = B.ENO_NO(+)
AND    A.ENO_NO = C.ENO_NO(+)
ORDER BY A.JOB_SEQ, A.ENO_NO
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb050
								* @description : 입사후경력
								***********************************************************************
								* 2007/04/121     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 입사후경력 -->
				<sql name="MISB050_SHR">
								<description>입사후경력</description>
								<query>
												<![CDATA[
		          SELECT A.ENO_NO, B.ENO_NM, B.CET_NO,                                                             -- 사번
		                   TO_CHAR(TO_DATE(A.STR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS STR_YMD,     -- 시작일자
		                   A.SEQ_NO,                                                               -- SEQ번호
		                   A.OCC_CD,                                                               -- 직종코드
		                   SF_GET_COMMNAME('01', 'A1', A.OCC_CD)                   AS OCC_NM,      -- 직종
		                   TO_CHAR(TO_DATE(A.END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS END_YMD,     -- 종료일자
		                   A.APP_CD,                                                               -- 발령구분코드
		                   A.APP_CD                                                AS OLD_APP_CD,  -- 발령구분코드(OLD)
		                   SF_GET_COMMNAME('01', 'J2', A.APP_CD)                   AS APP_NM,      -- 발령구분
		                   A.HEAD_CD,                                                              -- 본부코드
		                   SF_GET_DPTNAME('01', 'B2', A.HEAD_CD)                  AS HEAD_NM,     -- 본부코드
		                   A.DPT_CD,                                                               -- 소속코드
                   DECODE(SF_GET_DPTNAME('01', 'A4', A.DPT_CD), A.DPT_CD, DECODE(SF_GET_DPTNAME('01', 'A6', A.DPT_CD), A.DPT_CD, SF_GET_DPTNAME('01', 'B2', A.DPT_CD),
SF_GET_DPTNAME('01', 'A6', A.DPT_CD)) , SF_GET_DPTNAME('01', 'A4', A.DPT_CD))    AS DPT_NM ,     -- 소속명
		                   A.TEAM_CD,                                                              -- 팀코드
		                   SF_GET_DPTNAME('01', 'A6', A.TEAM_CD)                  AS TEAM_NM,     -- 팀
		                   A.JOB_CD,                                                               -- 직위코드
		                   SF_GET_COMMNAME('01', 'A2', A.JOB_CD)                   AS JOB_NM,      -- 직위
		                   A.HOB_CD,                                                               -- 호봉코드
		                   SF_GET_COMMNAME('01', 'A3', A.HOB_CD)                   AS HOB_NM,      -- 호봉
		                   A.DUTY_CD,                                                              -- 직책코드
		                   SF_GET_COMMNAME('01', 'A7', A.DUTY_CD)                  AS DUTY_NM,     -- 직책
		                   A.SRV_CD,                                                               -- 직무코드
		                   (SELECT DUTY_NM FROM T_CM_DUTYMST WHERE GUBUN = '01' AND DUTY_CD = A.SRV_CD)
		                                                                         AS SRV_NM,      -- 직무
		                   A.PART_CD,                                                              -- 부문코드
		                   SF_GET_COMMNAME('01', 'B1', A.PART_CD)                  AS PART_NM,     -- 부문
		                   NVL(A.CHIEF_YN, 'N')                                    AS CHIEF_YN,    -- 장여부
		                   JCD_CD,                                                               -- 재직구분코드
		                   SF_GET_COMMNAME('01', 'J3', JCD_CD)                   AS JCD_NM,      -- 재직구분
		                   TO_CHAR(TO_DATE(APP_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS APP_YMD,     -- 발령일자
		                   A.REMARK                                                                -- 적요사항
		            FROM   T_CM_AHISTORY A, T_CM_PERSON B
		            WHERE
		            1=1
		            [1]
					AND A.ENO_NO = B.ENO_NO AND B.RET_YMD IS NULL
		            ORDER BY A.ENO_NO, A.STR_YMD DESC, A.SEQ_NO DESC
			            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb060
								* @description : 직무이동 대상자 현황
								***********************************************************************
								* 2007/04/12      방석호        최초작성.
								***********************************************************************
				-->
				<sql name="MISB060_SHR">
								<description>misb060</description>
								<query>
												<![CDATA[
		SELECT
								  TOT
								  ,TIT
								  ,HEAD_NM
								  ,HEAD_SEQ
								  ,(CNT1+CNT2+CNT3+CNT4+CNT5+CNT6+CNT7+CNT8+CNT9+CNT10) AS TOT1
								  ,(CNT1) AS TOT2
								  ,(CNT2) AS TOT3
								  ,(CNT3+CNT6) AS TOT4
								  ,(CNT4+CNT7) AS TOT5
								  ,(CNT5+CNT8) AS TOT6
								  ,(CNT9) AS TOT7
								  ,(CNT10) AS TOT8
								  ,(CNT1+CNT2+CNT3+CNT4+CNT5) AS BTOT1
								  ,(CNT6+CNT7) AS BTOT2
								  ,(CNT8+CNT9+CNT10) AS BTOT3
								  ,CNT1,CNT2,CNT3,CNT4,CNT5,CNT6,CNT7,CNT8,CNT9,CNT10
							FROM
							(
								(
									SELECT
										  '1' AS TOT,
										  '합계' AS TIT,
										  HEAD_CD,
										   SF_GET_DPTSEQ('01','B2', HEAD_CD) AS HEAD_SEQ,

										  SF_GET_DPTNAME('01','B2', HEAD_CD) AS HEAD_NM,
										  SUM( CASE WHEN (JOB_CD = '00')  AND (TERM_YEAR >= 5) THEN 1 ELSE 0 END) AS CNT1
										  ,SUM( CASE WHEN (JOB_CD = '05' AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT2
										  ,SUM( CASE WHEN (JOB_CD = '10' AND (TERM_YEAR >= 5)) THEN 1 ELSE 0 END) AS CNT3
										  ,SUM( CASE WHEN ((JOB_CD = '20') AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT4
										  ,SUM( CASE WHEN ((JOB_CD = '30' ) AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT5

										  ,SUM( CASE WHEN (JOB_CD = '10' AND (TERM_YEAR >= 4) ) THEN 1 ELSE 0 END) AS CNT6
										  ,SUM( CASE WHEN ((JOB_CD = '20') AND (TERM_YEAR >= 4) ) THEN 1 ELSE 0 END) AS CNT7

										  ,SUM( CASE WHEN ((JOB_CD = '30' ) AND (TERM_YEAR >= 3) ) THEN 1 ELSE 0 END) AS CNT8
										  ,SUM( CASE WHEN ((JOB_CD = '40' ) AND (TERM_YEAR >= 3) ) THEN 1 ELSE 0 END) AS CNT9
										  ,SUM( CASE WHEN ((JOB_CD = '50' ) AND (TERM_YEAR >= 3) ) THEN 1 ELSE 0 END) AS CNT10
									FROM
									(
										SELECT
											  HEAD_CD,
											  DUTY_CD,
											  SF_GET_COMMSEQ(GUBUN,'A2',JOB_CD) AS JOB_SEQ,
											  JOB_CD,
											  JPR_YMD,
											  TO_CHAR(JPR_YMD),
											  (trunc(SYSDATE - JPR_YMD) / 365)  AS TERM_YEAR
										FROM VI_T_CM_PERSON2
										WHERE OCC_CD = 'A' AND ((RET_YMD IS NULL)  OR  (RET_YMD > ?))
									)
									WHERE HEAD_CD IS NOT NULL
									GROUP BY  HEAD_CD

								)


								UNION ALL
								(
									SELECT
										  '2' AS TOT,
										  '본사',
										  HEAD_CD,
										   SF_GET_DPTSEQ('01','B2', HEAD_CD) AS HEAD_SEQ,
										  SF_GET_DPTNAME('01','B2', HEAD_CD) AS HEAD_NM,
										  SUM( CASE WHEN (JOB_CD = '00')  AND (TERM_YEAR >= 5) THEN 1 ELSE 0 END) AS CNT1
										  ,SUM( CASE WHEN (JOB_CD = '05' AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT2
										  ,SUM( CASE WHEN (JOB_CD = '10' AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT3
										  ,SUM( CASE WHEN ((JOB_CD = '20' ) AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT4
										  ,SUM( CASE WHEN ((JOB_CD = '30' ) AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT5

										  ,SUM( CASE WHEN (JOB_CD = '10' AND (TERM_YEAR >= 4)) THEN 1 ELSE 0 END) AS CNT6
										  ,SUM( CASE WHEN ((JOB_CD = '20') AND (TERM_YEAR >= 4) ) THEN 1 ELSE 0 END) AS CNT7

										  ,SUM( CASE WHEN ((JOB_CD = '30' ) AND (TERM_YEAR >= 3) ) THEN 1 ELSE 0 END) AS CNT8
										  ,SUM( CASE WHEN ((JOB_CD = '40' ) AND (TERM_YEAR >= 3) ) THEN 1 ELSE 0 END) AS CNT9
										  ,SUM( CASE WHEN ((JOB_CD = '50' ) AND (TERM_YEAR >= 3) ) THEN 1 ELSE 0 END) AS CNT10
									FROM
									(
										SELECT
											  REG_CD,
											  HEAD_CD,
											  DUTY_CD,
											  SF_GET_COMMSEQ(GUBUN,'A2',JOB_CD) AS JOB_SEQ,
											  JOB_CD,
											  JPR_YMD,
											  TO_CHAR(JPR_YMD),
											  (trunc(SYSDATE - JPR_YMD) / 365)  AS TERM_YEAR
										FROM VI_T_CM_PERSON2
										WHERE OCC_CD = 'A' AND ((RET_YMD IS NULL)  OR  (RET_YMD > ?)) AND (REG_CD = '1' )

									)
									WHERE HEAD_CD IS NOT NULL
									GROUP BY   HEAD_CD
								)


								UNION ALL
								(
									SELECT
										  '3' AS TOT,
										  '지방',
										  HEAD_CD,
										   SF_GET_DPTSEQ('01','B2', HEAD_CD) AS HEAD_SEQ,

										  SF_GET_DPTNAME('01','B2', HEAD_CD) AS HEAD_NM,
										  SUM( CASE WHEN (JOB_CD = '00')  AND (TERM_YEAR >= 5) THEN 1 ELSE 0 END) AS CNT1
										  ,SUM( CASE WHEN (JOB_CD = '05' AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT2
										  ,SUM( CASE WHEN (JOB_CD = '10' AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT3
										  ,SUM( CASE WHEN ((JOB_CD = '20') AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT4
										  ,SUM( CASE WHEN ((JOB_CD = '30' ) AND (TERM_YEAR >= 5) ) THEN 1 ELSE 0 END) AS CNT5

										  ,SUM( CASE WHEN (JOB_CD = '10' AND (TERM_YEAR >= 4) ) THEN 1 ELSE 0 END) AS CNT6
										  ,SUM( CASE WHEN ((JOB_CD = '20') AND (TERM_YEAR >= 4) ) THEN 1 ELSE 0 END) AS CNT7

										  ,SUM( CASE WHEN ((JOB_CD = '30' ) AND (TERM_YEAR >= 3) ) THEN 1 ELSE 0 END) AS CNT8
										  ,SUM( CASE WHEN ((JOB_CD = '40' ) AND (TERM_YEAR >= 3) ) THEN 1 ELSE 0 END) AS CNT9
										  ,SUM( CASE WHEN ((JOB_CD = '50' ) AND (TERM_YEAR >= 3) ) THEN 1 ELSE 0 END) AS CNT10
									FROM
									(
										SELECT
											  REG_CD,
											  HEAD_CD,
											  DUTY_CD,
											  SF_GET_COMMSEQ(GUBUN,'A2',JOB_CD) AS JOB_SEQ,
											  JOB_CD,
											  JPR_YMD,
											  TO_CHAR(JPR_YMD),
											  (trunc(SYSDATE - JPR_YMD) / 365)  AS TERM_YEAR
										FROM VI_T_CM_PERSON2
										WHERE OCC_CD = 'A' AND ((RET_YMD IS NULL)  OR  (RET_YMD > ?)) AND (REG_CD != '1'  or reg_cd is null 	)

									)
									WHERE HEAD_CD IS NOT NULL
									GROUP BY HEAD_CD
								)
							)

							ORDER BY TOT ,HEAD_SEQ
							 ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb070
								* @description :계약직명단
								***********************************************************************
								* 2007/04/14     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 계약직명단  -->
				<sql name="MISB070_SHR">
								<description>계약직명단</description>
								<query>
												<![CDATA[

				select DECODE(A.GBN_CD,'1','본사','지방') GBN_NM,
				       A.DPT_NM, A.ENO_NM,
					   A.OCC_NM         AS OCC_CD,
					   DECODE(A.MF_TAG, 'M','남','여') AS MF_NAME,
					   TO_CHAR(A.HIR_YMD,'YYYY/MM/DD') AS HIR_YMD,
					   SF_GET_COMMNAME('01', 'A2', A.JOB_CD)  AS JOBHOB_NM,
					   JIKMU_NM AS JOB_TAG
				FROM VI_T_CM_PERSON A, (SELECT GUBUN, DPT_CD, DPT_NM, SORT_NO FROM T_CM_DEPT WHERE CD_GBN='A4') B
				WHERE A.DPT_CD = B.DPT_CD(+)
				  AND TO_CHAR(HIR_YMD,'YYYYMMDD')    <= ?
                  AND ((RET_YMD IS NULL) OR  (RET_YMD > ? ))
				  AND A.OCC_CD = '3'
        		ORDER BY B.GUBUN, B.SORT_NO , A.JOB_SEQ, A.ENO_NO
              ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb080
								* @description :휴직자현황
								***********************************************************************
								* 2007/04/14     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 휴직자현황  -->
				<sql name="MISB080_SHR">
								<description>휴직자현황</description>
								<query>
												<![CDATA[
            SELECT A.ENO_NO,                                                               -- 사번
                   B.ENO_NM,
                   A.SEQ_NO,                                                               -- SEQ번호
                   A.OCC_CD,                                                               -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', A.OCC_CD)                   AS OCC_NM,      -- 직종
                   SF_GET_COMMNAME('01', 'A2', A.JOB_CD)                   AS JOB_NM,      -- 직위
                   DECODE(SF_GET_DPTNAME('01', 'A4', A.DPT_CD), A.DPT_CD, DECODE(SF_GET_DPTNAME('01', 'A6', A.TEAM_CD), A.TEAM_CD, SF_GET_DPTNAME('01', 'B2', A.HEAD_CD), SF_GET_DPTNAME('01', 'A6', A.DPT_CD)) , SF_GET_DPTNAME('01', 'A4', A.DPT_CD))    AS DPT_NM ,     -- 소속명
                   SF_GET_COMMNAME('01', 'J2', A.APP_CD)                   AS APP_NM,      -- 발령구분
                   SF_GET_COMMNAME('01', 'J3', A.JCD_CD)                   AS JCD_NM,      -- 재직구분
                   (TO_CHAR(TO_DATE(A.STR_YMD, 'YYYY.MM.DD'), 'YYYY.MM.DD') || '∼' || DECODE(A.END_YMD, NULL, '현재',TO_CHAR(TO_DATE(A.END_YMD, 'YYYY.MM.DD'), 'YYYY.MM.DD')) ) AS YMD_TERM    -- 시작일자

            FROM   T_CM_AHISTORY A, T_CM_PERSON B
            WHERE   A.APP_CD  in ('LN1','D3')
                    AND (A.END_YMD is NULL OR A.END_YMD >= ?)
                    AND A.STR_YMD <= ?
                    AND A.ENO_NO = B.ENO_NO
            ORDER BY A.STR_YMD, A.ENO_NO DESC, A.SEQ_NO ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb090
								* @description :노동통계
								***********************************************************************
								* 2007/04/15     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 노동통계  -->
				<sql name="MISB090_SHR">
								<description>노동통계</description>
								<query>
												<![CDATA[
                SELECT  SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
                       ,A.ENO_NO
                       ,A.JOB_CD
                       ,A.KIP_AMT
                       ,A.SANG_AMT
                       ,(A.KIP_AMT + A.SANG_AMT) AS TOT_AMT
                       ,SF_GET_COMMNAME('01', 'A2', A.JOB_CD)AS JOB_NM
                       ,DECODE(B.MF_TAG,'M','남','여') AS MF_NM
                       ,B.ENO_NM
                FROM   (SELECT ENO_NO
                              ,MIN(JOB_CD) AS JOB_CD
                              ,MIN(DPT_CD) AS DPT_CD
                              ,MIN(DECODE(SAL_GBN,0,SALT_AMT)) AS KIP_AMT
                              ,MIN(DECODE(SAL_GBN,1,SALT_AMT)) AS SANG_AMT
                        FROM  (SELECT ENO_NO
                                     ,JOB_CD
                                     ,SALT_AMT
                                     ,SAL_GBN
                                     ,DPT_CD
                               FROM   T_CP_PAYMASTER
                               WHERE  PIS_YY = ?
                               AND    PIS_MM = ?
                               [1]
                               ORDER BY ENO_NO
                              )
                        GROUP BY ENO_NO
                       ) A,
                        T_CM_PERSON B
                WHERE   A.ENO_NO = B.ENO_NO
                [2]
                ORDER BY SF_GET_DPTSEQ('01','A4',A.DPT_CD)
                        ,SF_GET_COMMSEQ('01', 'A2', A.JOB_CD)
                        ,A.ENO_NO
     ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb100
								* @description : 노동력 수요동향조사 보조조사표
								***********************************************************************
								* 2007/04/12      방석호        최초작성.
								***********************************************************************
				-->
				<sql name="MISB100_SHR">
								<description>
												노동력 수요동향조사 보조조사표
								</description>
								<query>
												<![CDATA[
				SELECT
					  MIN(NM) AS NM, COMM_CD AS CD, JOB_GBN, SUM(MCNT) AS MTOT , SUM(WCNT) AS WTOT,
					  MIN(SF_GET_DPTNAME('01', 'A4', DPTCD)) AS DPT_NM, SCH_GBN
				FROM

				(
					SELECT
						  MIN(COMM_NM) AS NM, MIN(DPTCD) AS DPTCD, COMM_CD, DECODE(MF_TAG,'M', SUM(CNT_PERSON), 0) AS MCNT,
					 	  DECODE(MF_TAG,'F', SUM(CNT_PERSON), 0) AS WCNT, SCH_GBN, JOB_GBN
					FROM
					(
						SELECT B.COMM_NM,B. COMM_CD, DPTCD,  A. MF_TAG , A.JOB_CD ,DECODE(A.CNT,NULL,0,A.CNT) AS CNT_PERSON, A.EDGR_CD
						,(CASE WHEN EDGR_CD < '3' THEN '고졸이하' ELSE '대졸이상' END) AS SCH_GBN
						,(CASE WHEN JOB_SEQ >= 100 THEN '차장이하' ELSE SF_GET_COMMNAME('01', 'A2', JOB_CD) END) AS JOB_GBN
						FROM T_CM_COMMON B,
						     (SELECT NSO_CD, MIN(DPT_CD) AS DPTCD, MF_TAG , JOB_CD,  COUNT(ENO_NO) AS CNT , EDGR_CD,
							 		 SF_GET_COMMSEQ(GUBUN, 'A2', JOB_CD) AS JOB_SEQ
							  FROM T_CM_PERSON
							  WHERE ((RET_YMD IS NULL)  OR  (RET_YMD > ?))
							  [1]
							  GROUP BY NSO_CD, MF_TAG, JOB_CD , EDGR_CD, GUBUN)  A
						WHERE B.CD_GBN = 'NS' and A.NSO_CD = B.COMM_CD
					)
					GROUP BY COMM_CD, MF_TAG, SCH_GBN, JOB_GBN
				)
				GROUP BY COMM_CD, JOB_GBN, SCH_GBN
				ORDER BY cd, JOB_GBN, COMM_CD
				            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misb110
								* @description  : 직무분석표
								***********************************************************************
								* 2007/04/15     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 노동통계  -->
				<sql name="MISB110_SHR">
								<description>직무분석표</description>
								<query>
												<![CDATA[
			SELECT
				HIR_YMD,RET_YMD, DPT_NM, ENO_NO, ENO_NM, JOB_NM, TOT_MONTH,
				CASE WHEN NVL(TOT_MONTH, 0) > 1 THEN
				(TRUNC (TOT_MONTH/ 12) || '년 ' ||  TO_CHAR(TRUNC (TOT_MONTH - (TRUNC (TOT_MONTH/ 12)*12))) || '개월')
				END AS DIFF_NM,
				EDGR_NM,JIKMU_NM
				FROM
				(
					SELECT
						  HIR_YMD,RET_YMD, DPT_NM, ENO_NO, ENO_NM, JOB_NM, CAR_MONTH, DIFF, (DECODE(CAR_MONTH,NULL,0,CAR_MONTH) + DECODE(DIFF,NULL,0,DIFF)) AS TOT_MONTH,EDGR_NM,JIKMU_NM,
						  DPT_SEQ,JOB_SEQ,HOB_CD
					FROM
					(
						SELECT A.HIR_YMD,A.RET_YMD, SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM, A.ENO_NO, A.ENO_NM, (CASE WHEN  A.EDGR_CD >3 THEN '대졸이상' ELSE'고졸이하' END) AS EDGR_NM, SF_GET_COMMNAME('01','A2',A.JOB_CD) AS JOB_NM, B.CAR_MONTH
						,MONTHS_BETWEEN( TO_DATE(?),TO_DATE(A.HIR_YMD)) DIFF, (SELECT COMM_NM from T_CM_COMMON WHERE COMM_CD = NSO_CD AND CD_GBN = 'NS') AS JIKMU_NM,
						SF_GET_DPTSEQ(GUBUN, 'A4', A.DPT_CD) AS DPT_SEQ,
						SF_GET_COMMSEQ(GUBUN, 'A2', A.JOB_CD) AS JOB_SEQ,
						A.HOB_CD
						FROM  VI_T_CM_PERSON2 A
						  LEFT OUTER JOIN
						     (SELECT ENO_NO, SUM(DECODE(CAR_YY,NULL,0,CAR_YY) * 12 + DECODE(CAR_MM,NULL,0,CAR_MM)) AS CAR_MONTH FROM  T_CM_BHISTORY GROUP BY ENO_NO) B
							 ON A.ENO_NO = B.ENO_NO
						WHERE TO_CHAR(HIR_YMD,'YYYYMMDD') <= ?
						  AND ((RET_YMD IS NULL) OR  (RET_YMD > ?))
						[1]

					)
					ORDER BY DPT_SEQ ASC,JOB_SEQ ASC,HOB_CD DESC, HIR_YMD ASC
				)
				 ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb120
								* @description  : 개인별명단
								***********************************************************************
								* 2007/04/15     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 개인별명단  -->
				<sql name="MISB120_SHR">
								<description>개인별명단</description>
								<query>
												<![CDATA[
		SELECT A.GBN_NM,A.ENO_NM,A.HIR_YMD,A.RET_YMD,
			SF_GET_DPTNAME('01','A4',A.DPT_CD) AS DPT_NM,
			SF_GET_COMMNAME('01','A2',A.JOB_CD) AS JOB_NM, A.ENO_NO,
			(CASE WHEN  A.EDGR_CD >3 THEN '대졸이상' ELSE'고졸이하' END) AS EDGR_NM,
			SF_GET_COMMNAME('01','A2',A.JOB_CD) AS JOB_NM,
			DECODE(A.MF_TAG,'M','남','여') AS MF_NM,
			(SELECT COMM_NM from T_CM_COMMON WHERE COMM_CD = NSO_CD AND CD_GBN = 'NS') AS JIKMU_NM
						,HEAD_SEQ, DPT_SEQ, JOB_SEQ
		FROM  VI_T_CM_PERSON2 A
		WHERE ((a.RET_YMD IS NULL) OR  (a.RET_YMD > ?)  )
		[1]
		ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, A.ENO_NO

				 ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb130
								* @description : 노동력 수요동향 조사
								***********************************************************************
								* 2007/04/12      방석호        최초작성.
								***********************************************************************
				-->
				<sql name="MISB130_SHR">
								<description>노동력 수요동향 조사</description>
								<query>
												<![CDATA[
				SELECT
					  MIN(NM) AS NM, COMM_CD AS CD, GBN_CD, SUM(MCNT) AS MTOT , SUM(WCNT) AS WTOT,
					  MIN(SF_GET_DPTNAME('01','A4', DPTCD)) AS DPT_NM
				FROM

				(
					SELECT
					MIN(COMM_NM) AS NM, MIN(DPTCD) AS DPTCD,COMM_CD, GBN_CD,  DECODE(MF_TAG,'M', SUM(CNT_PERSON), 0) AS MCNT,
					 DECODE(MF_TAG,'F', SUM(CNT_PERSON), 0) AS WCNT
					FROM
					(
						SELECT B.COMM_NM,B. COMM_CD, DPTCD,  A. MF_TAG , A.GBN_CD ,DECODE(A.CNT,NULL,0,A.CNT) AS CNT_PERSON FROM T_CM_COMMON B
							   LEFT OUTER JOIN (SELECT NSO_CD, MIN(DPT_CD) AS DPTCD, MF_TAG , GBN_CD,  COUNT(ENO_NO) AS CNT FROM T_CM_PERSON
							   								WHERE ((RET_YMD IS NULL)  OR  (RET_YMD > ?))
							   								[1]
							     							GROUP BY NSO_CD, MF_TAG, GBN_CD )  A
						  ON A.NSO_CD = B.COMM_CD
						WHERE B.CD_GBN = 'NS'
					)
					GROUP BY COMM_CD, MF_TAG, GBN_CD
				)
				GROUP BY COMM_CD, GBN_CD
				ORDER BY GBN_CD, COMM_CD
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misb140
								* @description : 사업체근로실태조사
								***********************************************************************
								* 2007/04/12      방석호        최초작성.
								***********************************************************************
				-->
				<sql name="MISB140_SHR">
								<description>misb140</description>
								<query>
												<![CDATA[
					SELECT
					   A.GUBUN
					  ,A.ENO_NO
					  ,A.JOB_SEQ
					  ,A.DPT_SEQ
					  ,A.ENO_NO
					  ,A.OCC_NM
					  ,A.JOB_NM
					  ,A.DPT_NM
					  ,A.ENO_NM
					  ,DECODE(A.MF_TAG,'M','남','여') AS MF_NM
					  ,DECODE(A.WED_YMD, NULL,'미혼','기혼') AS WED_NM
					  ,TO_CHAR(A.BIR_YMD, 'YYYY/MM/DD')               AS BIR_YMD
					  ,TO_CHAR(A.HIR_YMD, 'YYYY/MM/DD')               AS HIR_YMD
					  ,A.EDGR_NM
					  --,SF_GET_COMMNAME('01','NS',A.NSO_CD) AS NSO_NM
					  ,(SELECT DUTY_NM FROM t_cm_dutymst WHERE gubun = '01' AND duty_cd = A.JIKMU_CD) AS NSO_NM
					  ,BAS_AMT, DUTY_AMT,WEL_AMT,OSE_AMT,RUN_AMT,MH_AMT,LSEV_AMT,TB3_AMT,SGF_AMT,
					  OTH_AMT, OT_AMT,
					  SALT_AMT, SANG_AMT,
					  (TO_CHAR(TO_DATE(?,'YYYY-MM-DD') - 365,'YY') || '. ' || B.PIS_MM || '월중 근무조건') AS SUB1,
					  (B.PIS_YY || '. ' || B.PIS_MM || '월 급여') AS SUB2,
					  TO_CHAR(TO_DATE(?,'YYYY-MM-DD') - 365,'YY') AS SUB3
					  ,D.GUNCNT
					  ,D.ATW_CNT
					  ,D.HOW_CNT
					  ,D.SUM_CNT
					FROM VI_T_CM_PERSON2 A,
					  (
					    SELECT ENO_NO,PIS_YY,PIS_MM,
					      BAS_AMT, DUTY_AMT,WEL_AMT,OSE_AMT,RUN_AMT,MH_AMT,LSEV_AMT,TB3_AMT,SGF_AMT,
					      OTH_AMT, OT_AMT,
					      SALT_AMT
					      FROM T_CP_PAYMASTER
					    WHERE SAL_GBN = 0 AND PIS_YY = ? AND PIS_MM=?
					  ) B,
					  (
					    SELECT ENO_NO, SUM(SALT_AMT) AS SANG_AMT
					    FROM T_CP_PAYMASTER
					    WHERE SAL_GBN = 1 AND PIS_YY = TO_CHAR(TO_DATE(?,'YYYY-MM-DD') - 365,'YYYY')
					    GROUP BY ENO_NO
					  ) C,
					  (
					    SELECT ENO_NO,
					      (ATT_A+ATT_B+ATT_C+ATT_D+ATT_E+ATT_F+ATT_G+ATT_H+ATT_I+ATT_J+ATT_K+ATT_L+ATT_M+ATT_N+ATT_O+ATT_P+ATT_Q+ATT_R+ATT_S+ATT_U+ATT_V+ATT_X+ATT_Z+ATW_CNT) AS GUNCNT,
					      ATW_CNT,
					      HOW_CNT,
					      (ATW_CNT+HOW_CNT) AS SUM_CNT
					    FROM T_DI_DILIGENCE WHERE PIS_YY = To_Char(To_Date(?,'YYYY')-365,'YYYY') AND PIS_MM = ?
					  ) D
					WHERE ((RET_YMD IS NULL)  OR  (RET_YMD > ?))
					  AND A.ENO_NO = B.ENO_NO(+) AND A.ENO_NO = C.ENO_NO(+) AND A.ENO_NO = D.ENO_NO(+)
					ORDER BY  DPT_SEQ, A.JOB_SEQ
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misb150
								* @description  : 그룹사인원현황
								***********************************************************************
								* 2007/04/15  7   방석호         최초작성.
								***********************************************************************
				-->
				<!-- 그룹사인원현황  -->
				<sql name="MISB150_SHR">
								<description>그룹사인원현황</description>
								<query>
												<![CDATA[

SELECT
	   GBN_NM
      ,SUM(CNT1 ) AS   CNT1
      ,SUM(CNT2 ) AS   CNT2
      ,SUM(CNT3 ) AS   CNT3
      ,SUM(CNT4 ) AS   CNT4
      ,SUM(CNT5 ) AS   CNT5
      ,SUM(CNT6 ) AS   CNT6
      ,SUM(CNT7 ) AS   CNT7
      ,SUM(CNT8 ) AS   CNT8
      ,SUM(CNT9 ) AS   CNT9
      ,SUM(CNT10) AS   CNT10
      ,SUM(CNT11) AS   CNT11
      ,SUM(CNT12) AS   CNT12
      ,SUM(CNT13) AS   CNT13
      ,SUM(CNT14) AS   CNT14
      ,SUM(CNT15) AS   CNT15
      ,SUM(CNT16) AS   CNT16
      ,SUM(CNT17) AS   CNT17
      ,SUM(CNT18) AS   CNT18
	  ,SUM(CNT1)+SUM(CNT2) +SUM(CNT3)+SUM(CNT4)+SUM(CNT5)+SUM(CNT6)+SUM(CNT7)+SUM(CNT8)+SUM(CNT9)+SUM(CNT10)+SUM(CNT11)+SUM(CNT12)+SUM(CNT13)+SUM(CNT14)+SUM(CNT15)+SUM(CNT16)+SUM(CNT17)+SUM(CNT18) AS TOT_CNT
FROM
(
	SELECT  SF_GET_COMMNAME('01', 'B7', GBN_CD) GBN_NM
		   ,DECODE(JOB_CD, 'B3', COUNT(ENO_NO), 0) CNT1 -- 감사
		   ,DECODE(JOB_CD, 'B1', COUNT(ENO_NO), 0) CNT2 -- 대표이사
		   ,DECODE(JOB_CD, 'A0', COUNT(ENO_NO), 0) CNT3 -- 회장
		   ,DECODE(JOB_CD, 'A1', COUNT(ENO_NO), 0) CNT4 -- 부회장
		   ,DECODE(JOB_CD, 'A2', COUNT(ENO_NO), 0) CNT5 -- 사장
		   ,DECODE(JOB_CD, 'A3', COUNT(ENO_NO), 0) CNT6 -- 부사장
		   ,DECODE(JOB_CD, 'A4', COUNT(ENO_NO), 0) CNT7 -- 전무이사
		   ,DECODE(JOB_CD, 'A5', COUNT(ENO_NO), 0) CNT8 -- 상무이사
		   ,DECODE(JOB_CD, 'A6', COUNT(ENO_NO), 0) CNT9 -- 상무보
		   ,DECODE(JOB_CD, 'A7', COUNT(ENO_NO), 0) CNT10 -- 이사
		   ,DECODE(JOB_CD, '3', COUNT(ENO_NO), 0)  CNT11 -- 고문
		   ,DECODE(JOB_CD, '00', COUNT(ENO_NO), 0) CNT12 -- 부장
		   ,DECODE(JOB_CD, '05', COUNT(ENO_NO), 0) CNT13 -- 부장대우
		   ,DECODE(JOB_CD, '10', COUNT(ENO_NO), 0) CNT14 -- 차장
		   ,DECODE(JOB_CD, '20', COUNT(ENO_NO), 0) CNT15 -- 과장
		   ,DECODE(JOB_CD, '30', COUNT(ENO_NO), 0) CNT16 -- 대리
		   ,DECODE(JOB_CD, '40', COUNT(ENO_NO), 0) CNT17 -- 4급사원
		   ,DECODE(JOB_CD, '50', COUNT(ENO_NO), 0) CNT18 -- 5급사원
	FROM T_CM_PERSON
	WHERE ((RET_YMD IS NULL)  OR  (RET_YMD > ?))
	 GROUP BY JOB_CD, SF_GET_COMMNAME('01', 'B7', GBN_CD)
)
GROUP BY GBN_NM

			 ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb161
								* @description  : 현대택배 인원현황
								***********************************************************************
								* 2007/04/15     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 현대택배 인원현황  -->
				<sql name="MISB161_SHR">
								<description>현대택배 인원현황</description>
								<query>
												<![CDATA[

	SELECT COM_GBN, SF_GET_DPTNAME ('01', 'B2', head_cd) AS head_nm,     -- 본부 명칭
	 DECODE(SF_GET_DPTSEQ('01','B2', head_CD),0,'999',SF_GET_DPTSEQ ('01', 'B2', head_CD)) AS head_SEQ,
     DECODE(GROUPING_ID(COM_GBN, HEAD_CD, DPT_CD),0,SF_GET_DPTNAME('01','A4', DPT_CD),
	  							 DECODE(GROUPING_ID(COM_GBN, HEAD_CD, DPT_CD),'1', '계','합계')) AS DPT_NM,
 	  DECODE(SF_GET_DPTSEQ('01','A4', DPT_CD),0,'999',SF_GET_DPTSEQ('01', 'A4', DPT_CD)) AS DPT_SEQ,
			HEAD_CD, DPT_CD, GROUPING_ID(COM_GBN, HEAD_CD, DPT_CD) as GRP_ID,
			SUM( CNT_A2) AS CNT_A2,
			SUM( CNT_A4) AS CNT_A4,
			SUM( CNT_A5) AS CNT_A5,
			SUM( CNT_A5) AS CNT_AB,
			SUM( CNT_A6) AS CNT_A6,
			SUM( CNT_1C) AS CNT_1C,
			SUM( CNT_1D) AS CNT_1D,
			SUM( CNT_1E) AS CNT_1E,
			SUM(CNT_20)+SUM(CNT_2A)+SUM(CNT_2B) AS CNT_2T,
			SUM(CNT_30)+SUM(CNT_3A)+SUM(CNT_3B) AS CNT_3T,

			SUM(CNT_40M)+SUM(CNT_4AM)+SUM(CNT_4BM) AS CNT_4M,
			SUM(CNT_40W)+SUM(CNT_4AW)+SUM(CNT_4BW) AS CNT_4W,
			SUM(CNT_50M)+SUM(CNT_5AM)+SUM(CNT_5BM) AS CNT_5M,
			SUM(CNT_50W)+SUM(CNT_5AW)+SUM(CNT_5BW) AS CNT_5W,
			SUM( CNT_7B) AS CNT_7B,
			SUM( CNT_8D) AS CNT_8D,
			SUM( CNT_Z1) AS CNT_Z1,
			SUM( CNT_JJ) AS CNT_JJ,
			SUM( CNT_BJ) AS CNT_BJ,
			SUM( CNT_JY) AS CNT_JY,
			SUM( CNT_E1) AS CNT_E1,
				SUM( CNT_PP) AS CNT_PP

			FROM
	(
	SELECT JOB_CD,MF_TAG, DECODE(GBN_CD ,'1','본사','지방') AS COM_GBN, DPT_CD,HEAD_CD,
			SUM(DECODE(JOB_CD,'A2', 1,0)) AS CNT_A2,
			SUM(DECODE(JOB_CD,'A4', 1,0)) AS CNT_A4,
			SUM(DECODE(JOB_CD,'A5', 1,0)) AS CNT_A5,
			SUM(DECODE(JOB_CD,'A6', 1,0)) AS CNT_A6,
			SUM(DECODE(JOB_CD,'AB', 1,0)) AS CNT_AB,
			SUM(DECODE(JOB_CD,'1C', 1,0)) AS CNT_1C,
			SUM(DECODE(JOB_CD,'1D', 1,0)) AS CNT_1D,
			SUM(DECODE(JOB_CD,'1E', 1,0)) AS CNT_1E,
			SUM(DECODE(JOB_CD,'20', 1,0)) AS CNT_20,
			SUM(DECODE(JOB_CD,'2A', 1,0)) AS CNT_2A,
			SUM(DECODE(JOB_CD,'2B', 1,0)) AS CNT_2B,
			SUM(DECODE(JOB_CD,'30', 1,0)) AS CNT_30,
			SUM(DECODE(JOB_CD,'3A', 1,0)) AS CNT_3A,
			SUM(DECODE(JOB_CD,'3B', 1,0)) AS CNT_3B,

			SUM(DECODE(JOB_CD||MF_TAG,'40M', 1,0)) AS CNT_40M,
			SUM(DECODE(JOB_CD||MF_TAG,'40W', 1,0)) AS CNT_40W,
			SUM(DECODE(JOB_CD||MF_TAG,'4AM', 1,0)) AS CNT_4AM,
			SUM(DECODE(JOB_CD||MF_TAG,'4AW', 1,0)) AS CNT_4AW,
			SUM(DECODE(JOB_CD||MF_TAG,'4BM', 1,0)) AS CNT_4BM,
			SUM(DECODE(JOB_CD||MF_TAG,'4BW', 1,0)) AS CNT_4BW,
			SUM(DECODE(JOB_CD||MF_TAG,'50M', 1,0)) AS CNT_50M,
			SUM(DECODE(JOB_CD||MF_TAG,'50W', 1,0)) AS CNT_50W,
			SUM(DECODE(JOB_CD||MF_TAG,'5AM', 1,0)) AS CNT_5AM,
			SUM(DECODE(JOB_CD||MF_TAG,'5AW', 1,0)) AS CNT_5AW,
			SUM(DECODE(JOB_CD||MF_TAG,'5BM', 1,0)) AS CNT_5BM,
			SUM(DECODE(JOB_CD||MF_TAG,'5BW', 1,0)) AS CNT_5BW,
			SUM(DECODE(JOB_CD,'7B', 1,0)) AS CNT_7B,
			SUM(DECODE(JOB_CD,'8D', 1,0)) AS CNT_8D,
			SUM(DECODE(JOB_CD,'Z1', 1,0)) AS CNT_Z1,

			SUM(DECODE(JOB_CD,'JJ', 1,0)) AS CNT_JJ,
			SUM(DECODE(JOB_CD,'BJ', 1,0)) AS CNT_BJ,
			SUM(DECODE(JOB_CD,'JY', 1,0)) AS CNT_JY,
			SUM(DECODE(JOB_CD,'E1', 1,0)) AS CNT_E1,
			SUM(DECODE(JOB_CD,'ZZ', 1,0)) AS CNT_PP

		FROM (select HEAD_CD, DPT_CD, gbn_cd, job_cd , MF_TAG, RET_YMD, PART_CD from VI_T_CM_PERSON2
                union ALL
                select HEAD_CD, DPT_CD, gbn_cd, 'ZZ' as job_cd, MF_TAG, RET_YMD, PART_CD from T_ME_PERSON
              )
		WHERE ((RET_YMD IS NULL)  OR  (RET_YMD > ?))

		GROUP BY JOB_CD,MF_TAG, DECODE(GBN_CD ,'1','본사','지방'), DPT_CD, HEAD_CD
		)
		WHERE SF_GET_DPTNAME ('01', 'B2', head_cd) IS NOT NULL
	GROUP BY ROLLUP(COM_GBN, HEAD_CD, DPT_CD)
ORDER BY COM_GBN, HEAD_SEQ, DPT_SEQ
						 ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misb161
								* @description  : 현대택배 인원현황
								***********************************************************************
								* 2007/04/15     방석호         최초작성.
								***********************************************************************
				-->
				<!-- 현대택배 인원현황  -->
				<sql name="MISB162_SHR">
								<description>현대택배 인원현황</description>
								<query>
												<![CDATA[
select
  *
from
(

   	SELECT
       '1' as idx,
       SF_GET_DPTNAME ('01', 'B2', head_cd) AS head_nm,     -- 본부 명칭
     decode(GROUPING_ID( HEAD_CD, DPT_CD) , 3,'ZZZZ',DECODE(SF_GET_DPTSEQ('01','B2', DPT_CD),0,'Z'||head_CD,SF_GET_DPTSEQ ('01', 'B2', DPT_CD))) AS head_SEQ,


     DECODE(GROUPING_ID( HEAD_CD, DPT_CD),0,SF_GET_DPTNAME('01','A4', DPT_CD),
	  							 DECODE(GROUPING_ID( HEAD_CD, DPT_CD),'1', '계','합계')) AS DPT_NM,
 	  DECODE(SF_GET_DPTSEQ('01','A4', DPT_CD),0, 'Z'||DPT_CD,SF_GET_DPTSEQ ('01', 'A4', DPT_CD)) AS DPT_SEQ,
			HEAD_CD, DPT_CD,  GROUPING_ID( HEAD_CD, DPT_CD) as GRP_ID,

			SUM( CNT_A2) AS CNT_A2,
			SUM( CNT_A4) AS CNT_A4,
			SUM( CNT_A5) AS CNT_A5,
			SUM( CNT_AB) AS CNT_AB,
			SUM( CNT_A6) AS CNT_A6,
			SUM( CNT_1C) AS CNT_1C,
			SUM( CNT_1D) AS CNT_1D,
			SUM( CNT_1E) AS CNT_1E,
			SUM(CNT_20)+SUM(CNT_2A)+SUM(CNT_2B) AS CNT_2T,
			SUM(CNT_30)+SUM(CNT_3A)+SUM(CNT_3B) AS CNT_3T,

			SUM(CNT_40M)+SUM(CNT_4AM)+SUM(CNT_4BM) AS CNT_4M,
			SUM(CNT_40W)+SUM(CNT_4AW)+SUM(CNT_4BW) AS CNT_4W,
			SUM(CNT_50M)+SUM(CNT_5AM)+SUM(CNT_5BM) AS CNT_5M,
			SUM(CNT_50W)+SUM(CNT_5AW)+SUM(CNT_5BW) AS CNT_5W,
			SUM( CNT_7B) AS CNT_7B,
			SUM( CNT_Z1) AS CNT_Z1,
			SUM( CNT_JJ) AS CNT_JJ,
			SUM( CNT_BJ) AS CNT_BJ,
			SUM( CNT_JY) AS CNT_JY,
			SUM( CNT_E1) AS CNT_E1,
			SUM( CNT_PP) AS CNT_PP
			FROM
	(
    	SELECT JOB_CD,MF_TAG,  DPT_CD,HEAD_CD,
			SUM(DECODE(JOB_CD,'A2', 1,0)) AS CNT_A2,
			SUM(DECODE(JOB_CD,'A4', 1,0)) AS CNT_A4,
			SUM(DECODE(JOB_CD,'A5', 1,0)) AS CNT_A5,
			SUM(DECODE(JOB_CD,'AB', 1,0)) AS CNT_AB,
			SUM(DECODE(JOB_CD,'A6', 1,0)) AS CNT_A6,
			SUM(DECODE(JOB_CD,'1C', 1,0)) AS CNT_1C,
			SUM(DECODE(JOB_CD,'1D', 1,0)) AS CNT_1D,
			SUM(DECODE(JOB_CD,'1E', 1,0)) AS CNT_1E,
			SUM(DECODE(JOB_CD,'20', 1,0)) AS CNT_20,
			SUM(DECODE(JOB_CD,'2A', 1,0)) AS CNT_2A,
			SUM(DECODE(JOB_CD,'2B', 1,0)) AS CNT_2B,
			SUM(DECODE(JOB_CD,'30', 1,0)) AS CNT_30,
			SUM(DECODE(JOB_CD,'3A', 1,0)) AS CNT_3A,
			SUM(DECODE(JOB_CD,'3B', 1,0)) AS CNT_3B,

			SUM(DECODE(JOB_CD||MF_TAG,'40M', 1,0)) AS CNT_40M,
			SUM(DECODE(JOB_CD||MF_TAG,'40W', 1,0)) AS CNT_40W,
			SUM(DECODE(JOB_CD||MF_TAG,'4AM', 1,0)) AS CNT_4AM,
			SUM(DECODE(JOB_CD||MF_TAG,'4AW', 1,0)) AS CNT_4AW,
			SUM(DECODE(JOB_CD||MF_TAG,'4BM', 1,0)) AS CNT_4BM,
			SUM(DECODE(JOB_CD||MF_TAG,'4BW', 1,0)) AS CNT_4BW,
			SUM(DECODE(JOB_CD||MF_TAG,'50M', 1,0)) AS CNT_50M,
			SUM(DECODE(JOB_CD||MF_TAG,'50W', 1,0)) AS CNT_50W,
			SUM(DECODE(JOB_CD||MF_TAG,'5AM', 1,0)) AS CNT_5AM,
			SUM(DECODE(JOB_CD||MF_TAG,'5AW', 1,0)) AS CNT_5AW,
			SUM(DECODE(JOB_CD||MF_TAG,'5BM', 1,0)) AS CNT_5BM,
			SUM(DECODE(JOB_CD||MF_TAG,'5BW', 1,0)) AS CNT_5BW,
			SUM(DECODE(JOB_CD,'7B', 1,0)) AS CNT_7B,
			SUM(DECODE(JOB_CD,'Z1', 1,0)) AS CNT_Z1,

			SUM(DECODE(JOB_CD,'JJ', 1,0)) AS CNT_JJ,
			SUM(DECODE(JOB_CD,'BJ', 1,0)) AS CNT_BJ,
			SUM(DECODE(JOB_CD,'JY', 1,0)) AS CNT_JY,
			SUM(DECODE(JOB_CD,'8D', 1,0)) AS CNT_E1,
			SUM(DECODE(JOB_CD,'ZZ', 1,0)) AS CNT_PP

		FROM (select HEAD_CD, DPT_CD, gbn_cd, job_cd , MF_TAG, RET_YMD, PART_CD from VI_T_CM_PERSON2
                union ALL
                select HEAD_CD, DPT_CD, gbn_cd, 'ZZ' as job_cd, MF_TAG, RET_YMD, PART_CD from T_ME_PERSON
              )
		WHERE ((RET_YMD IS NULL)  OR  (RET_YMD > ?))  AND GBN_CD = 1

		GROUP BY JOB_CD,MF_TAG, DECODE(GBN_CD ,'1','본사','지방'), DPT_CD, HEAD_CD



		)
--		WHERE SF_GET_DPTNAME ('01', 'B2', head_cd) IS NOT NULL
	GROUP BY ROLLUP(HEAD_CD, DPT_CD)


union


SELECT
       '2' as idx,
  SF_GET_DPTNAME ('01', 'B2', head_cd) AS head_nm,

  decode(GROUPING_ID( HEAD_CD, PART_CD) , 3,'ZZZZ',DECODE(SF_GET_DPTSEQ('01','B2', head_CD),0,'Z'||head_CD,SF_GET_DPTSEQ ('01', 'B2', head_CD))) AS head_SEQ,


  decode(GROUPING_ID( HEAD_CD, PART_CD) , 3,'합계',1,'계',DECODE(HEAD_CD, '2', SF_GET_COMMNAME('01','B1', PART_CD),'' ))
   AS dpt_nm,
  '' as dpt_seq ,
  head_cd,
  PART_CD as dpt_cd,
  GROUPING_ID( HEAD_CD, PART_CD) as GRP_ID,
  SUM(CNT_A2) AS CNT_A2,
  SUM(CNT_A4) AS CNT_A4,
  SUM(CNT_A5) AS CNT_A5,
  SUM( CNT_AB) AS CNT_AB,
  SUM(CNT_A6) AS CNT_A6,
  SUM(CNT_1C) AS CNT_1C,
  SUM(CNT_1D) AS CNT_1D,
  SUM(CNT_1E) AS CNT_1E,
  SUM(CNT_2T) AS CNT_2T,
  SUM(CNT_3T) AS CNT_3T,
  SUM(CNT_4M) AS CNT_4M,
  SUM(CNT_4W) AS CNT_4W,
  SUM(CNT_5M) AS CNT_5M,
  SUM(CNT_5W) AS CNT_5W,
  SUM(CNT_7B) AS CNT_7B,
  SUM(CNT_Z1) AS CNT_Z1,
  SUM( CNT_JJ) AS CNT_JJ,
  SUM( CNT_BJ) AS CNT_BJ,
  SUM( CNT_JY) AS CNT_JY,
  SUM( CNT_E1) AS CNT_E1,
  SUM( CNT_PP) AS CNT_PP
FROM
(
	SELECT
           DECODE( head_CD, '2', PART_CD, '') AS PART_CD ,
			HEAD_CD, DPT_CD,
			SUM( CNT_A2) AS CNT_A2,
			SUM( CNT_A4) AS CNT_A4,
			SUM( CNT_A5) AS CNT_A5,
			SUM(CNT_AB) AS CNT_AB,
			SUM( CNT_A6) AS CNT_A6,
			SUM( CNT_1C) AS CNT_1C,
			SUM( CNT_1D) AS CNT_1D,
			SUM( CNT_1E) AS CNT_1E,
			SUM(CNT_20)+SUM(CNT_2A)+SUM(CNT_2B) AS CNT_2T,
			SUM(CNT_30)+SUM(CNT_3A)+SUM(CNT_3B) AS CNT_3T,

			SUM(CNT_40M)+SUM(CNT_4AM)+SUM(CNT_4BM) AS CNT_4M,
			SUM(CNT_40W)+SUM(CNT_4AW)+SUM(CNT_4BW) AS CNT_4W,
			SUM(CNT_50M)+SUM(CNT_5AM)+SUM(CNT_5BM) AS CNT_5M,
			SUM(CNT_50W)+SUM(CNT_5AW)+SUM(CNT_5BW) AS CNT_5W,
			SUM( CNT_7B) AS CNT_7B,
			SUM( CNT_Z1) AS CNT_Z1,
			SUM( CNT_JJ) AS CNT_JJ,
			SUM( CNT_BJ) AS CNT_BJ,
			SUM( CNT_JY) AS CNT_JY,
			SUM( CNT_E1) AS CNT_E1,
			SUM( CNT_PP) AS CNT_PP
			FROM
	(
    	SELECT JOB_CD,MF_TAG,  DPT_CD,HEAD_CD, PART_CD,

			SUM(DECODE(JOB_CD,'A2', 1,0)) AS CNT_A2,
			SUM(DECODE(JOB_CD,'A4', 1,0)) AS CNT_A4,
			SUM(DECODE(JOB_CD,'A5', 1,0)) AS CNT_A5,
			SUM(DECODE(JOB_CD,'AB', 1,0)) AS CNT_AB,
			SUM(DECODE(JOB_CD,'A6', 1,0)) AS CNT_A6,
			SUM(DECODE(JOB_CD,'1C', 1,0)) AS CNT_1C,
			SUM(DECODE(JOB_CD,'1D', 1,0)) AS CNT_1D,
			SUM(DECODE(JOB_CD,'1E', 1,0)) AS CNT_1E,
			SUM(DECODE(JOB_CD,'20', 1,0)) AS CNT_20,
			SUM(DECODE(JOB_CD,'2A', 1,0)) AS CNT_2A,
			SUM(DECODE(JOB_CD,'2B', 1,0)) AS CNT_2B,
			SUM(DECODE(JOB_CD,'30', 1,0)) AS CNT_30,
			SUM(DECODE(JOB_CD,'3A', 1,0)) AS CNT_3A,
			SUM(DECODE(JOB_CD,'3B', 1,0)) AS CNT_3B,

			SUM(DECODE(JOB_CD||MF_TAG,'40M', 1,0)) AS CNT_40M,
			SUM(DECODE(JOB_CD||MF_TAG,'40W', 1,0)) AS CNT_40W,
			SUM(DECODE(JOB_CD||MF_TAG,'4AM', 1,0)) AS CNT_4AM,
			SUM(DECODE(JOB_CD||MF_TAG,'4AW', 1,0)) AS CNT_4AW,
			SUM(DECODE(JOB_CD||MF_TAG,'4BM', 1,0)) AS CNT_4BM,
			SUM(DECODE(JOB_CD||MF_TAG,'4BW', 1,0)) AS CNT_4BW,
			SUM(DECODE(JOB_CD||MF_TAG,'50M', 1,0)) AS CNT_50M,
			SUM(DECODE(JOB_CD||MF_TAG,'50W', 1,0)) AS CNT_50W,
			SUM(DECODE(JOB_CD||MF_TAG,'5AM', 1,0)) AS CNT_5AM,
			SUM(DECODE(JOB_CD||MF_TAG,'5AW', 1,0)) AS CNT_5AW,
			SUM(DECODE(JOB_CD||MF_TAG,'5BM', 1,0)) AS CNT_5BM,
			SUM(DECODE(JOB_CD||MF_TAG,'5BW', 1,0)) AS CNT_5BW,
			SUM(DECODE(JOB_CD,'7B', 1,0)) AS CNT_7B,
			SUM(DECODE(JOB_CD,'Z1', 1,0)) AS CNT_Z1,

			SUM(DECODE(JOB_CD,'JJ', 1,0)) AS CNT_JJ,
			SUM(DECODE(JOB_CD,'BJ', 1,0)) AS CNT_BJ,
			SUM(DECODE(JOB_CD,'JY', 1,0)) AS CNT_JY,
			SUM(DECODE(JOB_CD,'8D', 1,0)) AS CNT_E1,
			SUM(DECODE(JOB_CD,'ZZ', 1,0)) AS CNT_PP

		FROM (select HEAD_CD, DPT_CD, gbn_cd, job_cd , MF_TAG, RET_YMD, PART_CD from VI_T_CM_PERSON2
                union ALL
                select HEAD_CD, DPT_CD, gbn_cd, 'ZZ' as job_cd, MF_TAG, RET_YMD, PART_CD from T_ME_PERSON
              )

		WHERE ((RET_YMD IS NULL)  OR  (RET_YMD > ?))  AND GBN_CD <> 1 AND DPT_CD <> 'BK'

		GROUP BY JOB_CD,MF_TAG, DECODE(GBN_CD ,'1','본사','지방'), DPT_CD, HEAD_CD	, PART_CD
		)
--		WHERE SF_GET_DPTNAME ('01', 'B2', head_cd) IS NOT NULL
	GROUP BY HEAD_CD, DPT_CD, PART_CD
)
GROUP BY ROLLUP( HEAD_CD, PART_CD)

union


SELECT
'3' as idx  ,
           SF_GET_DPTNAME ('01', 'B2', head_cd) AS head_nm,
  DECODE(SF_GET_DPTSEQ('01','B2', head_CD),0, 'Z'||head_CD,SF_GET_DPTSEQ ('01', 'B2', head_CD)) AS head_SEQ,
  '북경사무소' AS dpt_nm,
  '' as dpt_seq ,
  head_cd,
 '' as dpt_cd,  0 as GRP_ID,
  SUM(CNT_A2) AS CNT_A2,
  SUM(CNT_A4) AS CNT_A4,
  SUM(CNT_A5) AS CNT_A5,
  SUM(CNT_AB) AS CNT_AB,
  SUM(CNT_A6) AS CNT_A6,
  SUM(CNT_1C) AS CNT_1C,
  SUM(CNT_1D) AS CNT_1D,
  SUM(CNT_1E) AS CNT_1E,
  SUM(CNT_2T) AS CNT_2T,
  SUM(CNT_3T) AS CNT_3T,
  SUM(CNT_4M) AS CNT_4M,
  SUM(CNT_4W) AS CNT_4W,
  SUM(CNT_5M) AS CNT_5M,
  SUM(CNT_5W) AS CNT_5W,
  SUM(CNT_7B) AS CNT_7B,
  SUM(CNT_Z1) AS CNT_Z1,
  SUM( CNT_JJ) AS CNT_JJ,
  SUM( CNT_BJ) AS CNT_BJ,
  SUM( CNT_JY) AS CNT_JY,
  SUM( CNT_E1) AS CNT_E1,
  SUM( CNT_PP) AS CNT_PP
FROM
(
	SELECT
	        DECODE( head_CD, '2', PART_CD, '') AS PART_CD ,
			HEAD_CD, DPT_CD,
			SUM( CNT_A2) AS CNT_A2,
			SUM( CNT_A4) AS CNT_A4,
			SUM( CNT_A5) AS CNT_A5,
   		    SUM(CNT_AB) AS CNT_AB,
			SUM( CNT_A6) AS CNT_A6,
			SUM( CNT_1C) AS CNT_1C,
			SUM( CNT_1D) AS CNT_1D,
			SUM( CNT_1E) AS CNT_1E,
			SUM(CNT_20)+SUM(CNT_2A)+SUM(CNT_2B) AS CNT_2T,
			SUM(CNT_30)+SUM(CNT_3A)+SUM(CNT_3B) AS CNT_3T,

			SUM(CNT_40M)+SUM(CNT_4AM)+SUM(CNT_4BM) AS CNT_4M,
			SUM(CNT_40W)+SUM(CNT_4AW)+SUM(CNT_4BW) AS CNT_4W,
			SUM(CNT_50M)+SUM(CNT_5AM)+SUM(CNT_5BM) AS CNT_5M,
			SUM(CNT_50W)+SUM(CNT_5AW)+SUM(CNT_5BW) AS CNT_5W,
			SUM( CNT_7B) AS CNT_7B,
			SUM( CNT_Z1) AS CNT_Z1,
			SUM( CNT_JJ) AS CNT_JJ,
			SUM( CNT_BJ) AS CNT_BJ,
			SUM( CNT_JY) AS CNT_JY,
			SUM( CNT_E1) AS CNT_E1,
			SUM( CNT_PP) AS CNT_PP
			FROM
	(
    	SELECT JOB_CD,MF_TAG,  DPT_CD,HEAD_CD, PART_CD,

			SUM(DECODE(JOB_CD,'A2', 1,0)) AS CNT_A2,
			SUM(DECODE(JOB_CD,'A4', 1,0)) AS CNT_A4,
			SUM(DECODE(JOB_CD,'A5', 1,0)) AS CNT_A5,
			SUM(DECODE(JOB_CD,'AB', 1,0)) AS CNT_AB,
			SUM(DECODE(JOB_CD,'A6', 1,0)) AS CNT_A6,
			SUM(DECODE(JOB_CD,'1C', 1,0)) AS CNT_1C,
			SUM(DECODE(JOB_CD,'1D', 1,0)) AS CNT_1D,
			SUM(DECODE(JOB_CD,'1E', 1,0)) AS CNT_1E,
			SUM(DECODE(JOB_CD,'20', 1,0)) AS CNT_20,
			SUM(DECODE(JOB_CD,'2A', 1,0)) AS CNT_2A,
			SUM(DECODE(JOB_CD,'2B', 1,0)) AS CNT_2B,
			SUM(DECODE(JOB_CD,'30', 1,0)) AS CNT_30,
			SUM(DECODE(JOB_CD,'3A', 1,0)) AS CNT_3A,
			SUM(DECODE(JOB_CD,'3B', 1,0)) AS CNT_3B,

			SUM(DECODE(JOB_CD||MF_TAG,'40M', 1,0)) AS CNT_40M,
			SUM(DECODE(JOB_CD||MF_TAG,'40W', 1,0)) AS CNT_40W,
			SUM(DECODE(JOB_CD||MF_TAG,'4AM', 1,0)) AS CNT_4AM,
			SUM(DECODE(JOB_CD||MF_TAG,'4AW', 1,0)) AS CNT_4AW,
			SUM(DECODE(JOB_CD||MF_TAG,'4BM', 1,0)) AS CNT_4BM,
			SUM(DECODE(JOB_CD||MF_TAG,'4BW', 1,0)) AS CNT_4BW,
			SUM(DECODE(JOB_CD||MF_TAG,'50M', 1,0)) AS CNT_50M,
			SUM(DECODE(JOB_CD||MF_TAG,'50W', 1,0)) AS CNT_50W,
			SUM(DECODE(JOB_CD||MF_TAG,'5AM', 1,0)) AS CNT_5AM,
			SUM(DECODE(JOB_CD||MF_TAG,'5AW', 1,0)) AS CNT_5AW,
			SUM(DECODE(JOB_CD||MF_TAG,'5BM', 1,0)) AS CNT_5BM,
			SUM(DECODE(JOB_CD||MF_TAG,'5BW', 1,0)) AS CNT_5BW,
			SUM(DECODE(JOB_CD,'7B', 1,0)) AS CNT_7B,
			SUM(DECODE(JOB_CD,'Z1', 1,0)) AS CNT_Z1,

			SUM(DECODE(JOB_CD,'JJ', 1,0)) AS CNT_JJ,
			SUM(DECODE(JOB_CD,'BJ', 1,0)) AS CNT_BJ,
			SUM(DECODE(JOB_CD,'JY', 1,0)) AS CNT_JY,
			SUM(DECODE(JOB_CD,'8D', 1,0)) AS CNT_E1,
			SUM(DECODE(JOB_CD,'ZZ', 1,0)) AS CNT_PP

		FROM (select HEAD_CD, DPT_CD, gbn_cd, job_cd , MF_TAG, RET_YMD, PART_CD from VI_T_CM_PERSON2
                union ALL
                select HEAD_CD, DPT_CD, gbn_cd, 'ZZ' as job_cd, MF_TAG, RET_YMD, PART_CD from T_ME_PERSON
              )
		WHERE ((RET_YMD IS NULL)  OR  (RET_YMD > ?))  AND GBN_CD <> 1 AND DPT_CD = 'BK'

		GROUP BY JOB_CD,MF_TAG, DECODE(GBN_CD ,'1','본사','지방'), DPT_CD, HEAD_CD	, PART_CD
		)
--		WHERE SF_GET_DPTNAME ('01', 'B2', head_cd) IS NOT NULL
	GROUP BY HEAD_CD, DPT_CD, PART_CD
)
GROUP BY HEAD_CD

)

ORDER BY IDX  , HEAD_SEQ DESC , DPT_SEQ DESC, DPT_CD



						 ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb170
								* @description : 직원 변동 조회
								***********************************************************************
								* 2007/04/14      이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 전보자(인쇄) -->
				<sql name="MISB170_SHR_01">
								<description>입퇴사자 현황</description>
								<query>
												<![CDATA[
-- 입/퇴사자 현황
SELECT P.DPT_CD
     , SF_GET_DPTNAME('01', 'A4', P.DPT_CD) AS DPT_NM
     , P.JOB_CD
     , P.CET_NO
     , SF_GET_COMMNAME('01', 'A2', P.JOB_CD) as JOB_NM
     , P.ENO_NM
     , P.HOB_CD
     , SF_GET_COMMNAME('01', 'A3', P.HOB_CD) as HOB_NM
     , TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(BIR_YMD, 'YYYY') as AGE
     , EDGR_CD
     , SF_GET_SCHNM('01', EDGR_CD, SCH_CD) as SCH_NM , EDGR_CD, P.SCH_CD
     , SF_GET_COMMNAME('01', 'E6', P.MAJ_CD) as MAJ_NM
     , TO_CHAR(HIR_YMD, 'YYYY/MM/DD')  as HIR_YMD
     , TO_CHAR(RET_YMD, 'YYYY/MM/DD')  as RET_YMD
     , NULL           as BF_DPT_NM
     , NULL           as ADD_YMD
     , NULL           as ADD_YMD1
     , P.REMARK       as BIGO
  FROM T_CM_PERSON       P
 WHERE  TO_CHAR([1], 'YYYYMMDD') BETWEEN ? AND ?
   AND P.OCC_CD          LIKE '%'||?||'%' -- A 사무직, M 예비직
 ORDER BY [2], SF_GET_DPTSEQ('01', 'A4', DPT_CD)

           ]]>
								</query>
				</sql>

				<!-- 전보자(화면,인쇄) -->
				<sql name="MISB170_SHR_02">
								<description>전보자 현황</description>
								<query>
												<![CDATA[

-- 전보자 현황
SELECT A.DPT_CD
     , SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
     , A.JOB_CD
     , SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
     , P.ENO_NO
     , P.ENO_NM
     , A.HOB_CD
     , A.STR_YMD      as LB1_YMD   -- 전보발령일
     , SF_GET_COMMNAME('01', 'A3', P.HOB_CD) AS HOB_NM
     , P.CET_NO
     , TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(BIR_YMD, 'YYYY') as AGE
     , EDGR_CD
	 , SF_GET_SCHNM('01', EDGR_CD, SCH_CD) AS SCH_NM
     , SF_GET_COMMNAME('01', 'E6', P.MAJ_CD) AS MAJ_NM
     , TO_CHAR(HIR_YMD, 'YYYY/MM/DD')  as HIR_YMD  -- 입사일
     , TO_CHAR(RET_YMD, 'YYYY/MM/DD')  as RET_YMD  -- 퇴사일
     , SF_GET_DPTNAME('01', 'A4', (SELECT DPT_CD
       FROM T_CM_AHISTORY
       WHERE STR_YMD  =	(SELECT MAX(STR_YMD)
       					 FROM T_CM_AHISTORY
                         WHERE STR_YMD < A.STR_YMD
                         AND ENO_NO  = A.ENO_NO
                         AND A.APP_CD  = 'LB1')
                         AND ENO_NO   = A.ENO_NO
                --         AND SEQ_NO = 1
        )) as BF_DPT_NM
     , DECODE(NVL(A.STR_YMD,''),'','',SUBSTR(A.STR_YMD,1,4)||'/'||SUBSTR(A.STR_YMD,5,2)||'/'||SUBSTR(A.STR_YMD,7,2)) as ADD_YMD
     , DECODE(NVL(A.STR_YMD,''),'','',SUBSTR(A.STR_YMD,1,4)||'/'||SUBSTR(A.STR_YMD,5,2)||'/'||SUBSTR(A.STR_YMD,7,2)) as ADD_YMD1
     , P.REMARK as BIGO
  FROM T_CM_PERSON       P
     , T_CM_AHISTORY     A
 WHERE P.ENO_NO        = A.ENO_NO
   AND A.STR_YMD BETWEEN ? AND ?
   AND A.APP_CD        = 'LB1'
   AND P.OCC_CD          LIKE '%'||?||'%' -- A 사무직, M 예비직
 ORDER BY ADD_YMD, SF_GET_DPTSEQ('01','A4',A.DPT_CD), SF_GET_COMMSEQ('01','A2',A.JOB_CD), SF_GET_COMMSEQ('01','A3',A.HOB_CD) DESC, ENO_NO



            ]]>
								</query>
				</sql>

				<!-- 입사자(화면) -->
				<sql name="MISB170_SHR_03">
								<description>입사자</description>
								<query>
												<![CDATA[
			SELECT DPT_CD,
			       DPT_NM,
			       JOB_CD,
			       JOB_NM,
			       ENO_NO,
			       ENO_NM,
			       HOB_CD,
			       HOB_NM,
			       CET_NO,
			       SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),1,4) - TO_NUMBER('19'||SUBSTR(CET_NO,1,2)) AS AGE,
			       SCH_CD,
			       REPLACE(SCH_NM,'고등학교','고') AS SCH_NM,
			       MAJ_CD,
			       MAJ_NM,
			       TO_CHAR(HIR_YMD,'YYYY/MM/DD') AS HIR_YMD,
			       TO_CHAR(RET_YMD,'YYYY/MM/DD') AS RET_YMD,
			       HIR_CD,
			       HIR_NM,
			       ABA_NM,
			       ACC_NO
			FROM   VI_T_CM_PERSON2
			WHERE  HIR_YMD BETWEEN ? AND ?
			AND    NVL(OCC_CD,' ') LIKE '%'||?||'%'
			ORDER BY HIR_YMD, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, ENO_NO
            ]]>
								</query>
				</sql>

				<!-- 퇴사자(화면) -->
				<sql name="MISB170_SHR_04">
								<description>퇴사자</description>
								<query>
												<![CDATA[
			SELECT DPT_CD,
			       DPT_NM,
			       JOB_CD,
			       JOB_NM,
			       ENO_NO,
			       ENO_NM,
			       HOB_CD,
			       HOB_NM,
			       CET_NO,
			       SUBSTR(TO_CHAR(SYSDATE,'YYYYMMDD'),1,4) - TO_NUMBER('19'||SUBSTR(CET_NO,1,2)) AS AGE,
			       SCH_CD,
			       REPLACE(SCH_NM,'고등학교','고') AS SCH_NM,
			       MAJ_CD,
			       MAJ_NM,
			       TO_CHAR(HIR_YMD,'YYYY/MM/DD') AS HIR_YMD,
			       TO_CHAR(RET_YMD,'YYYY/MM/DD') AS RET_YMD,
			       RET_CD,
			       RET_NM,
                   ABA_NM,
                   ACC_NO,
			       RETM_CD,
			       RETM_NM,
			       RETM_REM,
			       (SELECT ENO_NM FROM T_CM_PERSON WHERE ENO_NO=A.RETM_REM) AS RETM_REM_NM,
			       TO_CHAR(RETM_YMD,'YYYY/MM/DD') AS RETM_YMD,
                   TO_CHAR(A.UPT_YMD, 'YYYY/MM/DD')	as UPT_YMD  -- T_CM_PERSON의 UPT_YMD 퇴사자 조치내역 관련
			FROM   VI_T_CM_PERSON2 A
			WHERE  RET_YMD BETWEEN ? AND ?
			AND    NVL(OCC_CD,' ') LIKE '%'||?||'%'
			ORDER BY RET_YMD, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, ENO_NO
            ]]>
								</query>
				</sql>

				<!-- 휴직자(화면) -->
				<sql name="MISB170_SHR_06">
								<description>휴직자</description>
								<query>
												<![CDATA[
            SELECT SF_GET_DPTNAME('01','A4',B.DPT_CD)  DPT_NM,
                   SF_GET_COMMNAME('01','A2',B.JOB_CD) JOB_NM,
                   B.ENO_NO ENO_NO,
                   B.ENO_NM ENO_NM,
                   TO_CHAR(B.HIR_YMD,'YYYY/MM/DD') HIR_YMD,
                   TO_CHAR(B.RET_YMD,'YYYY/MM/DD') RET_YMD,
                   TO_CHAR(TO_DATE(A.STR_YMD,'YYYYMMDD'),'YYYY/MM/DD') STR_YMD,
                   TO_CHAR(TO_DATE(A.END_YMD,'YYYYMMDD'),'YYYY/MM/DD') END_YMD,
                   SF_GET_COMMNAME('01','J3',A.JCD_CD) REMARK
              FROM T_CM_AHISTORY A, T_CM_PERSON B
             WHERE A.ENO_NO = B.ENO_NO
               AND A.APP_CD = 'LN1'
               AND ((STR_YMD BETWEEN ? AND ? OR
                     END_YMD BETWEEN ? AND ?) OR
                    (? BETWEEN STR_YMD AND NVL(END_YMD,'99991231') OR
                     ? BETWEEN STR_YMD AND NVL(END_YMD,'99991231')))
               AND B.OCC_CD LIKE '%'||?||'%'
          ORDER BY SF_GET_DPTSEQ('01','A4',B.DPT_CD), SF_GET_COMMSEQ('01','A2',B.JOB_CD),
                   A.ENO_NO, A.STR_YMD DESC
             ]]>
								</query>
				</sql>


				<!--  직종변경자(화면) -->
				<sql name="MISB170_SHR_07">
								<description>직종변경자</description>
								<query>
												<![CDATA[
            SELECT SF_GET_DPTNAME('01','A4',B.DPT_CD) AS DPT_NM
                  ,SF_GET_COMMNAME('01','A2',B.JOB_CD) AS JOB_NM
                  ,B.ENO_NO
                  ,B.ENO_NM
                  ,TO_CHAR(B.HIR_YMD,'YYYY/MM/DD') AS HIR_YMD
                  ,TO_CHAR(B.RET_YMD,'YYYY/MM/DD') AS RET_YMD
                  ,TO_CHAR(TO_DATE(STR_YMD,'YYYYMMDD'),'YYYY/MM/DD') AS APP_YMD
                  ,A.OCC_CD
            FROM T_CM_AHISTORY A, T_CM_PERSON B
            WHERE A.STR_YMD BETWEEN ? AND ?
              AND A.APP_CD = 'LG1'
              AND A.ENO_NO = B.ENO_NO
              AND B.OCC_CD LIKE '%'||?||'%'
            ORDER BY A.STR_YMD, SF_GET_DPTSEQ('01','A4',B.DPT_CD), SF_GET_COMMSEQ('01','A2',B.JOB_CD), A.ENO_NO
             ]]>
								</query>
				</sql>

				<!--  조직개편대상자(화면) -->
				<sql name="MISB170_SHR_08">
								<description>조직개편대상자</description>
								<query>
												<![CDATA[
-- 조직개편대상자 현황
SELECT A.DPT_CD
     , SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
     , A.JOB_CD
     , SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
     , P.ENO_NO
     , P.ENO_NM
     , A.HOB_CD
     , A.STR_YMD      as LB1_YMD   -- 조직개편 발령일
     , SF_GET_COMMNAME('01', 'A3', P.HOB_CD) AS HOB_NM
     , P.CET_NO
     , TO_CHAR(SYSDATE, 'YYYY') - TO_CHAR(BIR_YMD, 'YYYY') as AGE
     , EDGR_CD
	 , SF_GET_SCHNM('01', EDGR_CD, SCH_CD) AS SCH_NM
     , SF_GET_COMMNAME('01', 'E6', P.MAJ_CD) AS MAJ_NM
     , TO_CHAR(HIR_YMD, 'YYYY/MM/DD')  as HIR_YMD  -- 입사일
     , TO_CHAR(RET_YMD, 'YYYY/MM/DD')  as RET_YMD  -- 퇴사일
     , SF_GET_DPTNAME('01', 'A4', (SELECT MAX(DPT_CD)
       FROM T_CM_AHISTORY
       WHERE STR_YMD  =	(SELECT MAX(STR_YMD)
       					 FROM T_CM_AHISTORY
                         WHERE STR_YMD < A.STR_YMD
                         AND ENO_NO  = A.ENO_NO
                         AND A.APP_CD  = 'LK2')
                         AND ENO_NO   = A.ENO_NO
                --         AND SEQ_NO = 1
        )) as BF_DPT_NM
     , DECODE(NVL(A.STR_YMD,''),'','',SUBSTR(A.STR_YMD,1,4)||'/'||SUBSTR(A.STR_YMD,5,2)||'/'||SUBSTR(A.STR_YMD,7,2)) as ADD_YMD
     , DECODE(NVL(A.STR_YMD,''),'','',SUBSTR(A.STR_YMD,1,4)||'/'||SUBSTR(A.STR_YMD,5,2)||'/'||SUBSTR(A.STR_YMD,7,2)) as ADD_YMD1
     , P.REMARK as BIGO
  FROM T_CM_PERSON       P
     , T_CM_AHISTORY     A
 WHERE P.ENO_NO        = A.ENO_NO
   AND A.STR_YMD BETWEEN ? AND ?
   AND A.APP_CD        = 'LK2'
   AND P.OCC_CD          LIKE '%'||?||'%' -- A 사무직, M 예비직
 ORDER BY ADD_YMD, SF_GET_DPTSEQ('01','A4',A.DPT_CD), SF_GET_COMMSEQ('01','A2',A.JOB_CD), SF_GET_COMMSEQ('01','A3',A.HOB_CD) DESC, ENO_NO


             ]]>
								</query>
				</sql>


				<!-- 퇴사자내역 조치내역 저장 -->
				<sql name="MISB170_UPT">
								<description>퇴사자내역 조치내역 저장</description>
								<query>
												<![CDATA[
			UPDATE T_CM_PERSON
            SET    RETM_CD  = ?,
                   RETM_REM = ?,
                   RETM_YMD = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb180
								* @description : 퇴사자조치내역 조회
								***********************************************************************
								* 2007/05/07      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB180_SHR">
								<description>퇴사자조치내역</description>
								<query>
												<![CDATA[
SELECT SF_GET_DPTNAME('01', 'A4', P.DPT_CD)   as DPT_NM
     , SF_GET_COMMNAME('01', 'A2', P.JOB_CD)   as JOB_NM
     , P.ENO_NM
     , TO_CHAR(P.RET_YMD, 'YYYY/MM/DD')        as RET_YMD
     , CASE WHEN P.RETM_CD = '2' AND RETM_YMD is NOT NULL
            THEN (SELECT SF_GET_COMMNAME('01', 'A2', MAX(JOB_CD))
                    FROM T_CM_AHISTORY
                   WHERE ENO_NO  = P.RETM_REM
                     AND STR_YMD = P.RETM_YMD
                  )
               ||' '||(SELECT ENO_NM FROM T_CM_PERSON WHERE ENO_NO = P.RETM_REM)
               ||CASE WHEN P.RETM_YMD is not NULL THEN '('||P.RETM_YMD||')' END
            WHEN P.RETM_CD = '2' AND RETM_YMD is  NULL
            THEN '충원'
        END                                     as CW -- 충원
     , CASE WHEN P.RETM_CD = '3' THEN '◆' END  as PD -- 파견대체
     , CASE WHEN P.RETM_CD = '5' THEN '◆' END  as JC -- 정원축소
     , CASE WHEN NVL(P.RETM_CD,'0') NOT IN ('2','3','4','5')
            THEN '◆'                      END  as JH -- 진행중
     , CASE WHEN P.RETM_CD = '4' AND RETM_YMD is NOT NULL
            THEN (SELECT SF_GET_COMMNAME('01', 'A2', MAX(JOB_CD))
                    FROM T_CM_AHISTORY
                   WHERE ENO_NO  = P.RETM_REM
                     AND STR_YMD = P.RETM_YMD
                  )
               ||' '||(SELECT ENO_NM FROM T_CM_PERSON WHERE ENO_NO = P.RETM_REM)
               ||CASE WHEN P.RETM_YMD is not NULL THEN '('||P.RETM_YMD||')' END
            WHEN P.RETM_CD = '4' AND RETM_YMD is  NULL
            THEN '전입'
        END                                     as JI -- 전입
     , NULL                                     as BIGO
     , P.DPT_CD
     , P.JOB_CD
     , P.RETM_CD
     , P.RETM_REM
  FROM T_CM_PERSON P
 WHERE TO_CHAR(P.RET_YMD, 'YYYYMMDD') BETWEEN ? AND ?
 ORDER BY RET_YMD
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb190
								* @description : 연도별인원증감현황 조회
								***********************************************************************
								* 2007/04/14      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB190_SHR">
								<description>연도별인원증감현황</description>
								<query>
												<![CDATA[
SELECT '지역'    as GRP_GBN
     ,  SF_GET_COMMNAME('01', 'B7', D.GUBUN)  as GUBUN
     , A.TOT_CNT as TOT_CNT
     , B.TOT_CNT as BYR_CNT
     , C.TOT_CNT as FYR_CNT
     , D.TOT_CNT as PLN_CNT
  FROM (-- 기준일 지역
        SELECT D.GBN_CD as GUBUN
             , COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON   P
             , T_CM_DEPT     D
         WHERE P.DPT_CD    = D.DPT_CD
           AND D.CD_GBN    = 'A4'
           AND D.SORT_NO BETWEEN 100 AND 750
           AND TO_CHAR(P.HIR_YMD,'YYYYMMDD') <=  ?
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD, 'YYYYMMDD') > ?))
         GROUP BY D.GBN_CD
        )      A
     , (-- 전년 지역
        SELECT D.GBN_CD as GUBUN
             , COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON   P
             , T_CM_DEPT     D
         WHERE P.DPT_CD    = D.DPT_CD
           AND D.CD_GBN    = 'A4'
           --AND D.SORT_NO BETWEEN 100 AND 750
           AND TO_CHAR(P.HIR_YMD,'YYYYMMDD') <= ?
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD, 'YYYYMMDD') > ?))
         GROUP BY D.GBN_CD
        )      B
     , (-- 년초 지역
        SELECT D.GBN_CD as GUBUN
             , COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON   P
             , T_CM_DEPT     D
         WHERE P.DPT_CD    = D.DPT_CD
           AND D.CD_GBN    = 'A4'
           --AND D.SORT_NO BETWEEN 100 AND 750
           AND TO_CHAR(P.HIR_YMD,'YYYYMMDD') <= ?
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD, 'YYYYMMDD') > ?))
         GROUP BY D.GBN_CD
        )      C
     , (-- 사업계획지역
        SELECT COMM_CD  as GUBUN
            				    , 0    as TOT_CNT
				    FROM   T_CM_COMMON
				    WHERE  GUBUN = '01'
				    AND    CD_GBN = 'B7'
        )      D
 WHERE D.GUBUN = B.GUBUN(+)
   AND    D.GUBUN = C.GUBUN(+)
   AND    D.GUBUN = A.GUBUN(+)
UNION ALL
SELECT '직종'    as GRP_GBN
     , SF_GET_COMMNAME('01', 'A1', D.GUBUN) as GUBUN
     , A.TOT_CNT as TOT_CNT
     , B.TOT_CNT as BYR_CNT
     , C.TOT_CNT as FYR_CNT
     , D.TOT_CNT as PLN_CNT
  FROM (-- 기준일 지역
        SELECT  OCC_CD  as GUBUN
             , COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON
         WHERE TO_CHAR(HIR_YMD,'YYYYMMDD') <= ?
           AND ((RET_YMD IS NULL) OR (TO_CHAR(RET_YMD, 'YYYYMMDD') > ?))
         GROUP BY  OCC_CD
        )      A
     , (-- 전년 지역
        SELECT  OCC_CD  as GUBUN
             , COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON
         WHERE TO_CHAR(HIR_YMD,'YYYYMMDD') <= ?
           AND ((RET_YMD IS NULL) OR (TO_CHAR(RET_YMD, 'YYYYMMDD') > ?))
         GROUP BY  OCC_CD
        )      B
     , (-- 년초 지역
        SELECT  OCC_CD  as GUBUN
             , COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON
         WHERE TO_CHAR(HIR_YMD,'YYYYMMDD') <= ?
           AND ((RET_YMD IS NULL) OR (TO_CHAR(RET_YMD, 'YYYYMMDD') > ?))
         GROUP BY  OCC_CD
        )      C
     , (-- 사업계획지역
        SELECT COMM_CD  as GUBUN
             , 0    as TOT_CNT
				    FROM   T_CM_COMMON
				    WHERE  GUBUN = '01'
				    AND    CD_GBN = 'A1'
				    AND    COMM_CD <> '9' -- 가채용 퇴사 => 항목제외
        )      D
 WHERE D.GUBUN = B.GUBUN(+)
   AND    D.GUBUN = C.GUBUN(+)
   AND    D.GUBUN = A.GUBUN(+)
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb200
								* @description : 직위별인원증감현황 조회
								***********************************************************************
								* 2007/04/16      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB200_SHR">
								<description>직위별인원증감현황</description>
								<query>
												<![CDATA[
-- -- 직위별 인원증감현황(200)
SELECT J.COMM_NM as GRP_GBN
     , A.SEX_GBN as GUBUN
     , A.TOT_CNT as TOT_CNT
     , B.TOT_CNT as BYR_CNT
     , C.TOT_CNT as FYR_CNT
     , D.TOT_CNT as PLN_CNT
     , J.SORT_NO
  FROM (-- 기준일
        SELECT C.COMM_CD as GUBUN
             , CASE WHEN C.GBN2_TAG IN ('30','40','50') THEN P.MF_TAG ELSE 'H' END as SEX_GBN
             , COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON   P
             , T_CM_COMMON   C
         WHERE P.JOB_CD    = C.COMM_CD
           AND C.CD_GBN    = 'A2'
           AND C.SORT_NO   > 0
           AND TO_CHAR(P.HIR_YMD,'YYYYMMDD') <=  ?
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD, 'YYYYMMDD') > ?))
         GROUP BY C.COMM_CD, (CASE WHEN C.GBN2_TAG IN ('30','40','50') THEN P.MF_TAG ELSE 'H' END)
        )      A
     , (-- 전년
        SELECT C.COMM_CD as GUBUN
             , CASE WHEN C.GBN2_TAG IN ('30','40','50') THEN P.MF_TAG ELSE 'H' END as SEX_GBN
             , COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON   P
             , T_CM_COMMON   C
         WHERE P.JOB_CD    = C.COMM_CD
           AND C.CD_GBN    = 'A2'
           AND C.SORT_NO   > 0
           AND TO_CHAR(P.HIR_YMD,'YYYYMMDD') <= ?
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD, 'YYYYMMDD') > ?))
         GROUP BY C.COMM_CD, (CASE WHEN C.GBN2_TAG IN ('30','40','50') THEN P.MF_TAG ELSE 'H' END)
        )      B
     , (-- 년초
        SELECT C.COMM_CD as GUBUN
             , CASE WHEN C.GBN2_TAG IN ('30','40','50') THEN P.MF_TAG ELSE 'H' END as SEX_GBN
             , COUNT(*)   as TOT_CNT
          FROM T_CM_PERSON   P
             , T_CM_COMMON   C
         WHERE P.JOB_CD    = C.COMM_CD
           AND C.CD_GBN    = 'A2'
           AND C.SORT_NO   > 0
           AND TO_CHAR(P.HIR_YMD,'YYYYMMDD') <= ?
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD, 'YYYYMMDD') > ?))
         GROUP BY C.COMM_CD, (CASE WHEN C.GBN2_TAG IN ('30','40','50') THEN P.MF_TAG ELSE 'H' END)
        )      C
     , (-- 사업계획
        SELECT NULL  as GUBUN
             , 'H'  as SEX_GBN
             , 0     as TOT_CNT
          FROM DUAL
         WHERE ? = ?
        )      D
     , T_CM_COMMON J
 WHERE A.GUBUN    = J.COMM_CD
   AND J.CD_GBN   = 'A2'
   AND J.SORT_NO  > 0
   AND A.GUBUN    = B.GUBUN(+)
   AND A.SEX_GBN  = B.SEX_GBN(+)
   AND A.GUBUN    = C.GUBUN(+)
   AND A.SEX_GBN  = C.SEX_GBN(+)
   AND A.GUBUN    = D.GUBUN(+)
   AND A.SEX_GBN  = D.SEX_GBN(+)
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb210
								* @description : 부서별인원증감현황 조회
								***********************************************************************
								* 2007/04/16      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB210_SHR">
								<description>부서별인원증감현황</description>
								<query>
												<![CDATA[
SELECT Y0.GBN_CODE                        as GRP_GBN
     , Y0.GUBUN
     , Y1.TOT_CNT                         as ST_YY
     , Y2.TOT_CNT                         as CU_YY
     , Y3.TOT_CNT                         as IN_HH
     , Y4.TOT_CNT                         as IN_TS
     , Y5.TOT_CNT                         as RT_HH
     , Y6.TOT_CNT                         as RT_TS
     , Y0.SORT_NO
  FROM (-- 연초인원
        SELECT '지역'                     as GBN_CODE
             , NVL(D.GBN_CD,'0')       as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_PERSON       P
             , T_CM_DEPT         D
         WHERE P.DPT_CD        = D.DPT_CD
           AND D.CD_GBN        = 'A4'
           AND TO_CHAR(P.HIR_YMD, 'YYYYMMDD') <= ? || '01'
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD, 'YYYYMMDD') >= ? || '01'))
         GROUP BY D.GBN_CD
        UNION ALL
        SELECT '직종'                     as GBN_CODE
             , OCC_CD as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_PERSON       P
         WHERE TO_CHAR(P.HIR_YMD, 'YYYYMMDD') <= ? || '01'
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD, 'YYYYMMDD') >= ? || '01'))
         GROUP BY OCC_CD
        )      Y1
     , (-- 기준월인원
        SELECT '지역'                     as GBN_CODE
             , NVL(D.GBN_CD,'0')      as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_PERSON       P
             , T_CM_DEPT         D
         WHERE P.DPT_CD        = D.DPT_CD
           AND D.CD_GBN        = 'A4'
           AND TO_CHAR(P.HIR_YMD, 'YYYYMM') <= ?
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD,'YYYYMM') > ?))
         GROUP BY D.GBN_CD
        UNION ALL
        SELECT '직종'                     as GBN_CODE
             , OCC_CD as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_PERSON       P
         WHERE TO_CHAR(P.HIR_YMD, 'YYYYMM') <= ?
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD,'YYYYMM') > ?))
         GROUP BY OCC_CD
        )      Y2
     , (-- 입사 인원
        SELECT '지역'                     as GBN_CODE
             , NVL(D.GBN_CD,'0')      as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_PERSON       P
             , T_CM_DEPT         D
         WHERE P.DPT_CD        = D.DPT_CD
           AND D.CD_GBN        = 'A4'
           AND TO_CHAR(P.HIR_YMD, 'YYYYMM') BETWEEN ? AND ?
         GROUP BY D.GBN_CD
        UNION ALL
        SELECT '직종'                     as GBN_CODE
             , OCC_CD as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_PERSON       P
         WHERE TO_CHAR(P.HIR_YMD, 'YYYYMM') BETWEEN ? AND ?
         GROUP BY OCC_CD
        )      Y3
     , (-- 증가 T/S
        SELECT '지역'                     as GBN_CODE
             , NVL(D.GBN_CD,'0')        as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_AHISTORY     H
             , T_CM_DEPT         D
         WHERE H.DPT_CD        = D.DPT_CD
           AND D.CD_GBN        = 'A4'
           AND H.APP_CD        = 'LB1'
           AND SUBSTR(H.STR_YMD,1,6) BETWEEN ? AND ?
         GROUP BY D.GBN_CD
        UNION ALL
        SELECT '직종'                     as GBN_CODE
             , OCC_CD as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_AHISTORY     H
         WHERE H.APP_CD        = 'LB1'
           AND SUBSTR(H.STR_YMD,1,6) BETWEEN ? AND ?
         GROUP BY OCC_CD
        )      Y4
     , (-- 퇴사인원
        SELECT '지역'                     as GBN_CODE
             , NVL(D.GBN_CD,'0')        as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_PERSON       P
             , T_CM_DEPT         D
         WHERE P.DPT_CD        = D.DPT_CD
           AND D.CD_GBN        = 'A4'
           AND TO_CHAR(P.RET_YMD, 'YYYYMM') BETWEEN ? AND ?
         GROUP BY D.GBN_CD
        UNION ALL
        SELECT '직종'                     as GBN_CODE
             , OCC_CD as GBN2_TAG
             , COUNT(*)                   as TOT_CNT
          FROM T_CM_PERSON       P
         WHERE TO_CHAR(P.RET_YMD, 'YYYYMM') BETWEEN ? AND ?
         GROUP BY OCC_CD
        )      Y5
     , (-- 감소 T/S
        SELECT '지역'                     as GBN_CODE
             , NVL(D.GBN_CD,'0')        as GBN2_TAG
             , SUM(D_CNT)  as TOT_CNT
          FROM (SELECT DPT_CD
                     , COUNT(*) as D_CNT
                  FROM (SELECT ENO_NO
                             , (SELECT DPT_CD
                                  FROM T_CM_AHISTORY
                                 WHERE ENO_NO  = H.ENO_NO
                                   AND STR_YMD || SEQ_NO = (SELECT MAX(STR_YMD || SEQ_NO)
                                                              FROM T_CM_AHISTORY
                                                             WHERE ENO_NO  = H.ENO_NO
                                                               AND STR_YMD < H.STR_YMD
                                                            )
                               )    as DPT_CD
                          FROM T_CM_AHISTORY     H
                         WHERE H.APP_CD        = 'LB1'
                           AND SUBSTR(H.STR_YMD,1,6) BETWEEN ? AND ?
                        )
                 GROUP BY DPT_CD
                )                H
             , (SELECT DPT_CD
                     , GBN_CD
                  FROM T_CM_DEPT
                 WHERE CD_GBN        = 'A4'
                   AND SORT_NO BETWEEN 100 AND 750
                ) D
         WHERE H.DPT_CD        = D.DPT_CD(+)
         GROUP BY D.GBN_CD
        UNION ALL
        SELECT '직종'                       as GBN_CODE
             , OCC_CD as GBN2_TAG
             , SUM(J_CNT)                   as TOT_CNT
          FROM (SELECT JOB_CD, OCC_CD, COUNT(*) J_CNT
                  FROM (SELECT ENO_NO
                             , (SELECT JOB_CD
                                  FROM T_CM_AHISTORY
                                 WHERE ENO_NO  = H.ENO_NO
                                   AND STR_YMD || SEQ_NO = (SELECT MAX(STR_YMD || SEQ_NO)
                                                              FROM T_CM_AHISTORY
                                                             WHERE ENO_NO  = H.ENO_NO
                                                               AND STR_YMD < H.STR_YMD
                                                            )
                               )    as JOB_CD
                             , (SELECT OCC_CD
                                  FROM T_CM_AHISTORY
                                 WHERE ENO_NO  = H.ENO_NO
                                   AND STR_YMD || SEQ_NO = (SELECT MAX(STR_YMD || SEQ_NO)
                                                              FROM T_CM_AHISTORY
                                                             WHERE ENO_NO  = H.ENO_NO
                                                               AND STR_YMD < H.STR_YMD
                                                            )
                               )    as OCC_CD
                          FROM T_CM_AHISTORY     H
                         WHERE H.APP_CD        = 'LB1'
                           AND SUBSTR(H.STR_YMD,1,6) BETWEEN ? AND ?
                        )
                 GROUP BY JOB_CD, OCC_CD
                )
         GROUP BY OCC_CD
        )      Y6
     , (SELECT DISTINCT
               '지역'                       as GBN_CODE
             , NVL(GBN_CD,'0')            as GBN2_TAG
             , 'A'|| NVL(GBN_CD,'0')      as SORT_NO
             ,  SF_GET_COMMNAME('01', 'B7', GBN_CD)  as GUBUN
          FROM T_CM_DEPT WHERE SORT_NO > 0
          and CD_GBN        = 'A4'
        UNION ALL
        SELECT DISTINCT
               '직종'                       as GBN_CODE
             , OCC_CD as GBN2_TAG
             , 'B' || OCC_CD                as SORT_NO
             , SF_GET_COMMNAME('01', 'A1', OCC_CD) as GUBUN
          FROM T_CM_PERSON
        )      Y0
 WHERE Y0.GBN_CODE = Y1.GBN_CODE(+)
   AND Y0.GBN2_TAG = Y1.GBN2_TAG(+)
   AND Y0.GBN_CODE = Y2.GBN_CODE(+)
   AND Y0.GBN2_TAG = Y2.GBN2_TAG(+)
   AND Y0.GBN_CODE = Y3.GBN_CODE(+)
   AND Y0.GBN2_TAG = Y3.GBN2_TAG(+)
   AND Y0.GBN_CODE = Y4.GBN_CODE(+)
   AND Y0.GBN2_TAG = Y4.GBN2_TAG(+)
   AND Y0.GBN_CODE = Y5.GBN_CODE(+)
   AND Y0.GBN2_TAG = Y5.GBN2_TAG(+)
   AND Y0.GBN_CODE = Y6.GBN_CODE(+)
   AND Y0.GBN2_TAG = Y6.GBN2_TAG(+)
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb220
								* @description : 부서별인원증감현황(본사/지방별) 조회
								***********************************************************************
								* 2007/04/18      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB220_SHR">
								<description>
												부서별인원증감현황(본사/지방별)
								</description>
								<query>
												<![CDATA[
SELECT D.HEAD_NM
     , D.DPT_NM
     , SF_GET_COMMNAME('01', 'B7', D.A_TAG)  as A_TAG
     , CASE WHEN D.HSORT_NO = 0 THEN 999 ELSE D.HSORT_NO END as HSORT_NO
     , CASE WHEN D.DSORT_NO = 0 THEN 999 ELSE D.DSORT_NO END as DSORT_NO
     , ENO_IN.TOT_CNT    as ENO_IN
     , AHIS_IN.LB1       as AHIS_IN
     , AHIS_IN.LH1       as LH1_IN
     , ENO_OUT.TOT_CNT   as ENO_OUT
     , AHIS_OUT.TOT_CNT  as AHIS_OUT
     , AHIS_IN.LH1       as LH1_OUT
     , A.TOT_CNT
     , A.OCCA_CNT        -- 사무직계
     , A.A2              -- 사장
     , A.A4              -- 전무
     , A.A5              -- 상무
     , A.AB              -- 상무보
     , A.C1              -- 부장
     , A.D1              -- 부대
     , A.E1              -- 차장
     , A.S2              -- 과장
     , A.S3              -- 대리
     , A.S4M             -- 4사남
     , A.S4F             -- 4사여
     , A.S5M             -- 5사남
     , A.S5F             -- 5사여
     , A.S7              -- 정규직 기타
     , A.OCCM_CNT        -- 기능직계
     , A.S_CNT           -- 계약직
     , A.Z_CNT           -- 파견
     , A.M_CNT           -- PJT
  FROM (SELECT D.GBN_CD     as A_TAG
             , H.DPT_CD       as HEAD_CD
             , H.DPT_NM       as HEAD_NM
             , D.DPT_CD       as DPT_CD
             , D.DPT_NM       as DPT_NM
             , H.SORT_NO      as HSORT_NO
             , D.SORT_NO      as DSORT_NO
          FROM T_CM_DEPT         H
             , T_CM_DEPT         D
         WHERE H.DPT_CD        = D.UPDPT_CD
           AND H.CD_GBN        = 'B2'
           AND D.CD_GBN        = 'A4'
        )      D
     , (-- 현재원
        SELECT CASE WHEN P.DPT_CD IN ('AA','AV') THEN 'G2' ELSE P.DPT_CD END                                      as DPT_CD
             , COUNT(*)       as TOT_CNT
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2')                                                           THEN 1 END) as OCCA_CNT -- 사무직계
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('000','020')                                      THEN 1 END) as A2       -- 사장
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  = '060'                                     THEN 1 END) as A4       -- 전무
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  = '080'                                      THEN 1 END) as A5       -- 상무
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  = '120'                                      THEN 1 END) as AB       -- 상무보
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('140','150')                                     THEN 1 END) as C1       -- 부장
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('160','170')                                     THEN 1 END) as D1       -- 부대
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('180','190')                                     THEN 1 END) as E1       -- 차장
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('200','210')                                    THEN 1 END) as S2       -- 과장
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('220','230')                                     THEN 1 END) as S3       -- 대리
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('240','245','250') AND MF_TAG  = 'M'                  THEN 1 END) as S4M      -- 4사남
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('240','245','250') AND MF_TAG  = 'F'                   THEN 1 END) as S4F      -- 4사여
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('260','270') AND MF_TAG  = 'M'   THEN 1 END) as S5M      -- 5사남
             , SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('260','270') AND MF_TAG  = 'F'    THEN 1 END) as S5F      -- 5사여
              ,SUM(CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  NOT IN ('000','020','060','080''120','140','150','160','170','180','190','200','210','220','230','240','245','250','260','270')   THEN 1 END) as S7      -- 기타
              ,SUM(CASE WHEN P.OCC_CD not in ('0','1','2')                   THEN 1 END) as OCCM_CNT    -- 기능직계
              ,SUM(CASE WHEN P.OCC_CD = '3'                                      THEN 1 END) as S_CNT  -- 계약직
             , SUM(CASE WHEN P.OCC_CD in ('4','6','7')                   THEN 1 END) as Z_CNT   -- 파견
             ,SUM(CASE WHEN P.OCC_CD = '8'                                      THEN 1 END) as M_CNT  -- PJT
          FROM T_CM_PERSON       P
         WHERE TO_CHAR(P.HIR_YMD,'YYYYMM') <= ?
           AND ((P.RET_YMD IS NULL) OR (TO_CHAR(P.RET_YMD, 'YYYYMM') > ?))
         GROUP BY (CASE WHEN P.DPT_CD IN ('AA','AV') THEN 'G2' ELSE P.DPT_CD END)
        )      A
     , (-- 입사자
        SELECT  DPT_CD
             , COUNT(*) as TOT_CNT
          FROM T_CM_PERSON
         WHERE TO_CHAR(HIR_YMD,'YYYYMM') BETWEEN ? AND ?
         GROUP BY  DPT_CD
        )      ENO_IN

     , (-- 퇴사자
        SELECT CASE WHEN DPT_CD IN ('AA','AV') THEN 'G2' ELSE DPT_CD END     as DPT_CD
             , COUNT(*) as TOT_CNT
          FROM T_CM_PERSON
         WHERE TO_CHAR(RET_YMD, 'YYYYMM') BETWEEN ? AND ?
         GROUP BY (CASE WHEN DPT_CD IN ('AA','AV') THEN 'G2' ELSE DPT_CD END)
        )      ENO_OUT
     , (-- 전입자/직종변경
        SELECT CASE WHEN DPT_CD IN ('AA','AV') THEN 'G2' ELSE DPT_CD END     as DPT_CD
             , SUM(CASE WHEN APP_CD = 'LB1' THEN 1 END) as LB1 -- 전입자
             , SUM(CASE WHEN APP_CD = 'LH1' THEN 1 END) as LH1 -- 직종변경
          FROM T_CM_AHISTORY
         WHERE APP_CD IN ('LB1','LH1')
           AND STR_YMD BETWEEN ? ||'01' AND ? ||'31'
         GROUP BY (CASE WHEN DPT_CD IN ('AA','AV') THEN 'G2' ELSE DPT_CD END)
        )      AHIS_IN
     , (-- 전출자
        SELECT CASE WHEN DPT_CD IN ('AA','AV') THEN 'G2' ELSE DPT_CD END     as DPT_CD
             , COUNT(*) as TOT_CNT
          FROM (SELECT ENO_NO
                     , (SELECT NVL(DPT_CD, 'ZZ') as DPT_CD
                          FROM T_CM_AHISTORY
                         WHERE ENO_NO = A.ENO_NO
                           AND STR_YMD || SEQ_NO = (SELECT MAX(STR_YMD || SEQ_NO)
                                                      FROM T_CM_AHISTORY
                                                     WHERE ENO_NO = A.ENO_NO
                                                       AND STR_YMD || SEQ_NO < A.STR_YMD || A.SEQ_NO
                                                    )
                       ) as DPT_CD
                  FROM T_CM_AHISTORY A
                 WHERE STR_YMD BETWEEN ? ||'01' AND ? ||'31'
                   AND APP_CD = 'LB1'
                )
         GROUP BY (CASE WHEN DPT_CD IN ('AA','AV') THEN 'G2' ELSE DPT_CD END)
        )      AHIS_OUT
WHERE D.DPT_CD  = A.DPT_CD(+)
  AND D.DPT_CD  = ENO_IN.DPT_CD(+)
  AND D.DPT_CD  = ENO_OUT.DPT_CD(+)
  AND D.DPT_CD  = AHIS_IN.DPT_CD(+)
  AND D.DPT_CD  = AHIS_OUT.DPT_CD(+)
  AND NVL(ENO_IN.TOT_CNT,0) + NVL(AHIS_IN.LB1,0) + NVL(AHIS_IN.LH1,0) + NVL(ENO_OUT.TOT_CNT,0) + NVL(AHIS_OUT.TOT_CNT,0) + NVL(AHIS_IN.LH1,0) + NVL(A.TOT_CNT,0) > 0
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misb230
								* @description : 직위별 입퇴사자현황 조회
								***********************************************************************
								* 2007/04/18      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB230_SHR">
								<description>직위별 입퇴사자현황</description>
								<query>
												<![CDATA[
SELECT J.GBN2_TAG
     , J.JOB_NM
     , CASE WHEN J.MF_TAG = 'M' THEN '남'
            WHEN J.MF_TAG IN ('W','F') THEN '여'
       END                                                         as MF_TAG
     , SUM(P.TOT_CNT)                                              as R_CNT -- 퇴사인원
     , SUM(O.A_CNT)                                                as A_CNT -- 결원충원
     , SUM(O.B_CNT)                                                as B_CNT -- 전입충원
     , SUM(O.C_CNT)                                                as C_CNT -- 파견대체
     , SUM(O.D_CNT)                                                as D_CNT -- 정원축소
     , SUM(O.E_CNT)                                                as E_CNT -- 보류
     , SUM(O.TOT_CNT)                                              as O_CNT -- 조치계
     , SUM(I.REM_CNT)                                              as REM_CNT
     , SUM(I.NW_I_CNT)                                             as NW_I_CNT
     , SUM(I.CET_CNT)                                              as CET_CNT
     , SUM(I.TOT_CNT)                                              as I_CNT  -- 충원 계
     , NULL                                                        as BIGO
     , MAX(J.SORT_NO)                                              as SORT_NO
  FROM (SELECT (CASE WHEN  A.GBN2_TAG IN ('AC','A2','A3','A4','A5','AB','1A') THEN 'A'
                     WHEN  A.GBN2_TAG IN ('1C','1N')                          THEN 'B'
                     WHEN  A.GBN2_TAG IN ('1D','1E','20','30','40','50','8D','Z1') THEN A.GBN2_TAG
                     ELSE  'Z1'
                END)       as GBN2_TAG
             , CASE WHEN A.COMM_CD IN ('40','4A','50','5A') THEN 'M'
                    WHEN A.COMM_CD IN ('4B','5B')           THEN 'W'
                    ELSE ' '
               END         as MF_TAG
             , A.COMM_CD   as JOB_CD
             , (CASE WHEN  A.GBN2_TAG IN ('AC','A2','A3','A4','A5','AB','1A') THEN '임원'
                     WHEN  A.GBN2_TAG IN ('1C','1N')                          THEN '부장'
                     WHEN  A.GBN2_TAG IN ('1D','1E','20','30','40','50','8D') THEN B.COMM_NM
                     ELSE  '계약직등'
                END)       as JOB_NM
             , B.SORT_NO
          FROM T_CM_COMMON A
             , T_CM_COMMON B
         WHERE A.GBN2_TAG = B.GBN2_TAG
           AND B.COMM_CD  = B.GBN2_TAG
           AND B.SORT_NO  > 0
           AND B.CD_GBN   = 'A2'
           AND A.SORT_NO  > 0
           AND A.CD_GBN   = 'A2'
        )      J -- 직위그룹
     , (SELECT JOB_CD
             , MF_TAG
             , COUNT(CASE WHEN RETM_REM IS NOT NULL AND TO_CHAR(RET_YMD,'YYYYMMDD') < ? THEN ENO_NO END) as REM_CNT  -- 기간전결원충원
             , COUNT(CASE WHEN CET_NO   IS NOT NULL THEN ENO_NO END)                                     as CET_CNT  -- 파견->계약직전환
             , COUNT(CASE WHEN RETM_REM IS NULL AND CET_NO IS NULL THEN ENO_NO END)                      as NW_I_CNT -- 신규증원
             , COUNT(CASE WHEN NVL(TO_CHAR(RET_YMD,'YYYYMMDD'),'1') < ? THEN ENO_NO END)                 as TOT_CNT
          FROM (SELECT P.JOB_CD
                     , CASE WHEN SUBSTR(P.JOB_CD,1,1) IN ('4','5')
                            THEN P.MF_TAG ELSE ' '
                       END                                         as MF_TAG
                     , G.RETM_REM
                     , H.CET_NO
                     , P.ENO_NO
                     , G.RET_YMD
                  FROM T_CM_PERSON  P
                     , T_CM_PERSON  G -- 결원충원자
                     , T_ME_PERSON  H -- 계약직전환
                 WHERE P.ENO_NO = G.RETM_REM(+)
                   AND P.CET_NO = H.CET_NO(+)
                   AND TO_CHAR(P.HIR_YMD,'YYYYMMDD') BETWEEN ? AND ?
                )
          GROUP BY JOB_CD, MF_TAG
        )       I -- 충원
     , (SELECT JOB_CD
             , MF_TAG
             , COUNT(CASE WHEN RETM_CD = '2' THEN ENO_NO END)      as A_CNT -- 결원충원
             , COUNT(CASE WHEN RETM_CD = '4' THEN ENO_NO END)      as B_CNT -- 전입충원
             , COUNT(CASE WHEN RETM_CD = '3' THEN ENO_NO END)      as C_CNT -- 파견대체
             , COUNT(CASE WHEN RETM_CD = '5' THEN ENO_NO END)      as D_CNT -- 정원축소
             , COUNT(CASE WHEN NVL(RETM_CD, '0') NOT IN ('2','3','4','5') THEN ENO_NO END) as E_CNT -- 보류
             , COUNT(ENO_NO)                                       as TOT_CNT  -- 퇴사인원
          FROM (SELECT P.ENO_NO,
                       CASE WHEN P.RETM_CD IN ('2','4')
                            THEN NVL(H.JOB_CD, P.JOB_CD)
                            ELSE P.JOB_CD
                       END                                         as JOB_CD
                     , CASE WHEN SUBSTR(H.JOB_CD,1,1) IN ('4','5') AND P.RETM_CD IN ('2','4')
                            THEN (SELECT MF_TAG FROM T_CM_PERSON WHERE ENO_NO = NVL(H.ENO_NO, P.ENO_NO))
                            WHEN SUBSTR(P.JOB_CD,1,1) IN ('4','5') AND P.RETM_CD NOT IN ('2','4')
                            THEN P.MF_TAG
                            ELSE ' '
                       END                                         as MF_TAG
                     , RETM_CD
                  FROM T_CM_PERSON   P
                     , T_CM_AHISTORY H
                 WHERE P.RETM_REM         = H.ENO_NO(+)
                   AND TO_CHAR(P.RET_YMD) = H.STR_YMD(+)
                   AND '1'                = H.SEQ_NO(+)
                   AND TO_CHAR(P.RET_YMD,'YYYYMMDD')  BETWEEN ? AND ?
                )
         GROUP BY JOB_CD, MF_TAG
        )      O -- 조치내역
     , (SELECT JOB_CD
             , MF_TAG
             , COUNT(ENO_NO)                                       as TOT_CNT  -- 퇴사인원
          FROM (SELECT ENO_NO
                     , JOB_CD
                     , CASE WHEN SUBSTR(JOB_CD,1,1) IN ('4','5')
                            THEN MF_TAG
                            ELSE ' '
                       END                                         as MF_TAG
                  FROM T_CM_PERSON   P
                 WHERE TO_CHAR(RET_YMD,'YYYYMM')  BETWEEN ? AND ?
                )
         GROUP BY JOB_CD, MF_TAG
        )      P
 WHERE J.JOB_CD = O.JOB_CD(+)
   AND J.MF_TAG = O.MF_TAG(+)
   AND J.JOB_CD = P.JOB_CD(+)
   AND J.MF_TAG = P.MF_TAG(+)
   AND J.JOB_CD = I.JOB_CD(+)
   AND J.MF_TAG = I.MF_TAG(+)
 GROUP BY J.GBN2_TAG, J.JOB_NM, J.MF_TAG
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>



				<!--
								***********************************************************************
								* @UseCase     : misb240
								* @description : 직위별 입퇴사자현황 조회
								***********************************************************************
								* 2007/04/18      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB240_SHR">
								<description>직위별 입퇴사자현황</description>
								<query>
												<![CDATA[
SELECT
            JOB_NM
           ,ICNT as I_CNT-- 총입사자
           ,I110 -- 건설사업본부
           ,I120 -- 관광경협본부
           ,I130 -- 경영지원본부
           ,I140 -- 중역
           ,OCNT as O_CNT -- 총입사자
           ,O110 -- 건설사업본부
           ,O120 -- 관광경협본부
           ,O130 -- 경영지원본부
           ,O140 -- 중역
           ,''     AS BIGO
FROM (
					SELECT
						    COMM_NM AS JOB_NM
						   ,ICNT -- 총입사자
						   ,I110 -- 건설사업본부
						   ,I120 -- 관광경협본부
						   ,I130 -- 경영지원본부
						   ,I140 -- 중역
						   ,OCNT -- 총입사자
						   ,O110 -- 건설사업본부
						   ,O120 -- 관광경협본부
						   ,O130 -- 경영지원본부
						   ,O140 -- 중역
						   ,''     AS BIGO
					FROM
						(
						SELECT *
						FROM T_CM_COMMON
						WHERE  CD_GBN = 'A2' AND SORT_NO > 0
						) A,
						(
						SELECT  JOB_CD
						   ,COUNT(*)                        ICNT -- 총입사자
						   ,SUM(DECODE(HEAD_CD, 'II00', 1, 0)) I110 -- 건설사업본부
						   ,SUM(DECODE(HEAD_CD, 'K000', 1, 0)) I120 --관광경협본부
						   ,SUM(DECODE(HEAD_CD, 'C000', 1, 0)) I130 -- 경영지원본부
						   ,SUM(DECODE(HEAD_CD, 'A600', 1, 0)) I140 -- 중역
						FROM T_CM_PERSON
						WHERE TO_CHAR(HIR_YMD,'YYYYMM') BETWEEN ? AND ?
						GROUP BY JOB_CD
						) B,
						(
						SELECT  JOB_CD
						   ,COUNT(*)                        OCNT -- 총입사자
						   ,SUM(DECODE(HEAD_CD, 'II00', 1, 0)) O110 -- 건설사업본부
						   ,SUM(DECODE(HEAD_CD, 'K000', 1, 0)) O120 --관광경협본부
						   ,SUM(DECODE(HEAD_CD, 'C000', 1, 0)) O130 -- 경영지원본부
						   ,SUM(DECODE(HEAD_CD, 'A600', 1, 0)) O140 -- 중역
						FROM T_CM_PERSON
						where TO_CHAR(RET_YMD,'YYYYMM') BETWEEN ? AND ?
						GROUP BY JOB_CD
						) C
					WHERE A.COMM_CD = B.JOB_CD(+)
					AND   A.COMM_CD = C.JOB_CD(+)
					ORDER BY SORT_NO
					)
where OCNT > 0
   or iCNT > 0

            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb250
								* @description : 월별 인원 현황 조회
								***********************************************************************
								* 2007/04/20      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB250_SHR">
								<description>월별 인원 현황</description>
								<query>
												<![CDATA[
SELECT M.YYYYMM           as REG_YM
     , H.REG_YMD
     , (SELECT COUNT(*)   as I_CNT
          FROM T_CM_PERSON
         WHERE GBN_CD NOT IN ('2','3')
           AND ENO_NO NOT IN ('20300183','20000442') -- 해외파견업 대상자 제외
           AND  TO_CHAR(HIR_YMD,'YYYYMM') <= M.YYYYMM
           AND (TO_CHAR(RET_YMD,'YYYYMM') >= M.YYYYMM Or RET_YMD is NULL)
           AND TO_NUMBER((CASE WHEN TO_CHAR(RET_YMD,'YYYYMMDD') > H.REG_YMD  OR RET_YMD is NULL THEN H.REG_YMD                   ELSE TO_CHAR(RET_YMD,'YYYYMMDD') END))
               -
               TO_NUMBER((CASE WHEN TO_CHAR(HIR_YMD,'YYYYMMDD') > M.YYYYMM||'00'                THEN TO_CHAR(HIR_YMD,'YYYYMMDD') ELSE M.YYYYMM||'01'              END))
               >= 15
           [1]
        )   as TRANS_BUSI
     , (SELECT COUNT(*)   as I_CNT
          FROM T_CM_PERSON
         WHERE GBN_CD     IN ('2','3')
           AND ENO_NO NOT IN ('20300183','20000442') -- 해외파견업 대상자 제외
           AND  TO_CHAR(HIR_YMD,'YYYYMM') <= M.YYYYMM
           AND (TO_CHAR(RET_YMD,'YYYYMM') >= M.YYYYMM Or RET_YMD is NULL)
           AND TO_NUMBER((CASE WHEN TO_CHAR(RET_YMD,'YYYYMMDD') > H.REG_YMD  OR RET_YMD is NULL THEN H.REG_YMD                   ELSE TO_CHAR(RET_YMD,'YYYYMMDD') END))
               -
               TO_NUMBER((CASE WHEN TO_CHAR(HIR_YMD,'YYYYMMDD') > M.YYYYMM||'00'                THEN TO_CHAR(HIR_YMD,'YYYYMMDD') ELSE M.YYYYMM||'01'              END))
               >= 15
           [2]
        )   as SMALL_GOODS
     , (SELECT COUNT(*)   as I_CNT
          FROM T_CM_PERSON
         WHERE ENO_NO     IN ('20300183','20000442') -- 해외파견업 대상자
           AND  TO_CHAR(HIR_YMD,'YYYYMM') <= M.YYYYMM
           AND (TO_CHAR(RET_YMD,'YYYYMM') >= M.YYYYMM Or RET_YMD is NULL)
           [3]
        )   as DISPATCH_ABR
  FROM T_DI_HOLIDAY H
     , (SELECT SUBSTR(REG_YMD,1,6) as YYYYMM
             , MAX(REG_YMD)        as REG_YMD
          FROM T_DI_HOLIDAY
         WHERE SUBSTR(REG_YMD,1,6) BETWEEN ? AND ?
         GROUP BY SUBSTR(REG_YMD,1,6)
        )           M
 WHERE H.REG_YMD  = M.REG_YMD
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb260
								* @description : 임금내역 조회
								***********************************************************************
								* 2007/05/01      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB260_SHR">
								<description>장애인근로자명부</description>
								<query>
												<![CDATA[
SELECT A.ENO_NO
     , A.ENO_NM
     , A.CET_NO
     , SF_GET_COMMNAME('01','SA',A.TRG_CD) AS TRG_CD
     , SF_GET_COMMNAME('01','C6',A.JHDC_CD) AS JHDC_CD
     , SF_GET_COMMNAME('01','SA',A.JHDC_GRA) AS JHDC_GRA
     , Decode(A.SER_STS,'1','Y','Y','Y','N') AS SER_STS
     , TO_CHAR(A.JAN_YMD,'YYYY/MM/DD') as JAN_YMD -- 장애인정일
     , TO_CHAR(A.HIR_YMD,'YYYY/MM/DD') as HIR_YMD
     , TO_CHAR(A.RET_YMD,'YYYY/MM/DD') as RET_YMD
     , SF_GET_COMMNAME('01','SD',A.JOB_OCC) AS JOB_OCC                                -- 근무직종
     , A.DPT_CD
     , A.JOB_CD
     , A.HOB_CD
     , B.GBN2_TAG
     , (SELECT (NVL(BAS_AMT,0) + NVL(DUTY_AMT,0) + NVL(OT_AMT,0) + NVL(WEL_AMT,0) + NVL(OSE_AMT,0) + NVL(RUN_AMT,0) + NVL(MH_AMT,0) + NVL(LAW_AMT,0))
       FROM T_CP_PAYTABLE
       WHERE  A.ENO_NO = ENO_NO AND END_YMD IS NULL) AS SAL_AMT -- 임금
     [1]
FROM T_CM_PERSON A
LEFT JOIN T_CM_COMMON B ON B.CD_GBN='A2'
WHERE A.JOB_CD = B.COMM_CD
  AND (A.RET_YMD IS NULL OR TO_CHAR(A.RET_YMD,'YYYYMMDD') >= ?)
  AND TO_CHAR(A.HIR_YMD,'YYYYMMDD') <= ?
  AND A.TRG_CD > '0'
  [2]
ORDER BY SF_GET_DPTSEQ('01','A4',A.DPT_CD) , SF_GET_COMMSEQ('01','A2',A.JOB_CD)


            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misb270
								* @description : 임금내역 조회
								***********************************************************************
								* 2007/04/20      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISB270_SHR">
								<description>임금내역</description>
								<query>
												<![CDATA[
WITH Q_CP_PAYMASTER AS
       (SELECT PAY.PIS_MM       as PIS_MM
             , PAY.ENO_NO
             , CASE WHEN DPT.GBN_CD IN ('2','3') THEN 'B' ELSE 'A' END as GUBUN
             , REPLACE(PAY.OCC_CD,'M','B') as OCC_CD  -- 사무직/예비직
             , PAY.SAL_GBN                                -- 급상여 구분
             , PAY.SALT_AMT - NVL(PAY.LUN_AMT,0) as SALT_AMT  -- 급상여 총액
             , PAY.LUN_AMT                                -- 중식대
          FROM T_CP_PAYMASTER  PAY,
               T_CM_DEPT       DPT
         WHERE PAY.DPT_CD    = DPT.DPT_CD
           AND DPT.CD_GBN    = 'A4'
           [1]
           AND PAY.PIS_YY    = ?
           AND PAY.ENO_NO  NOT IN ('20300183','20000442') -- 해외파견업 대상자 제외
        )
SELECT GUBUN
     , OCC_CD
     , PIS_MM
     , COUNT(DISTINCT ENO_NO)                         as INWON
     , SUM(CASE WHEN SAL_GBN = '0' THEN SALT_AMT END) as SAL_AMT
     , SUM(CASE WHEN SAL_GBN = '1' THEN SALT_AMT END) as BON_AMT
     , SUM(CASE WHEN SAL_GBN = '4' THEN SALT_AMT END) as MH_AMT
     , SUM(LUN_AMT)                                   as LUN_AMT
  FROM Q_CP_PAYMASTER
 GROUP BY GUBUN, OCC_CD, PIS_MM
UNION ALL
SELECT GUBUN
     , 'C'                                            as OCC_CD
     , PIS_MM
     , COUNT(DISTINCT ENO_NO)                         as INWON
     , SUM(CASE WHEN SAL_GBN = '0' THEN SALT_AMT END) as SAL_AMT
     , SUM(CASE WHEN SAL_GBN = '1' THEN SALT_AMT END) as BON_AMT
     , SUM(CASE WHEN SAL_GBN = '4' THEN SALT_AMT END) as MH_AMT
     , SUM(LUN_AMT)                                   as LUN_AMT
  FROM Q_CP_PAYMASTER
 GROUP BY GUBUN, PIS_MM
UNION ALL
SELECT 'C'                                            as GUBUN
     , OCC_CD
     , PIS_MM
     , COUNT(DISTINCT ENO_NO)                         as INWON
     , SUM(CASE WHEN SAL_GBN = '0' THEN SALT_AMT END) as SAL_AMT
     , SUM(CASE WHEN SAL_GBN = '1' THEN SALT_AMT END) as BON_AMT
     , SUM(CASE WHEN SAL_GBN = '4' THEN SALT_AMT END) as MH_AMT
     , SUM(LUN_AMT)                                   as LUN_AMT
  FROM Q_CP_PAYMASTER
 GROUP BY OCC_CD, PIS_MM
UNION ALL
SELECT 'C'                                            as GUBUN
     , 'C'                                            as OCC_CD
     , PIS_MM
     , COUNT(DISTINCT ENO_NO)                         as INWON
     , SUM(CASE WHEN SAL_GBN = '0' THEN SALT_AMT END) as SAL_AMT
     , SUM(CASE WHEN SAL_GBN = '1' THEN SALT_AMT END) as BON_AMT
     , SUM(CASE WHEN SAL_GBN = '4' THEN SALT_AMT END) as MH_AMT
     , SUM(LUN_AMT)                                   as LUN_AMT
  FROM Q_CP_PAYMASTER
 GROUP BY PIS_MM
UNION ALL
SELECT 'D'                                            as GUBUN
     , 'A'                                            as OCC_CD
     , PIS_MM
     , COUNT(DISTINCT ENO_NO)                         as INWON
     , SUM(CASE WHEN SAL_GBN = '0' THEN SALT_AMT END) as SAL_AMT
     , SUM(CASE WHEN SAL_GBN = '1' THEN SALT_AMT END) as BON_AMT
     , SUM(CASE WHEN SAL_GBN = '4' THEN SALT_AMT END) as MH_AMT
     , SUM(LUN_AMT)                                   as LUN_AMT
  FROM (SELECT PAY.PIS_MM       as PIS_MM
             , PAY.ENO_NO
             , CASE WHEN DPT.GBN_CD IN ('2','3') THEN 'B' ELSE 'A' END as GUBUN
             , REPLACE(PAY.OCC_CD,'M','B') as OCC_CD  -- 사무직/예비직
             , PAY.SAL_GBN                                -- 급상여 구분
             , PAY.SALT_AMT - NVL(PAY.LUN_AMT,0) as SALT_AMT  -- 급상여 총액
             , PAY.LUN_AMT                                -- 중식대
          FROM T_CP_PAYMASTER  PAY,
               T_CM_DEPT       DPT
         WHERE PAY.DPT_CD    = DPT.DPT_CD
           AND DPT.CD_GBN    = 'A4'
           [2]
           AND PAY.PIS_YY    = ?
           AND PAY.ENO_NO   IN ('20300183','20000442') -- 해외파견업 대상자
        )
 GROUP BY PIS_MM
 ORDER BY GUBUN, OCC_CD, PIS_MM
            ]]>
								</query>
				</sql>




				<!--
								***********************************************************************
								* @UseCase     : misb280
								* @description : 통계청분류코드관리
								***********************************************************************
								* 2007/04/04      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 통계청분류코드 데이터 조회 -->
				<sql name="MISB280_SHR">
								<description>통계청분류코드 조회</description>
								<query>
												<![CDATA[
            SELECT SF_GET_DPTNAME('01', 'B2', HEAD_CD)    AS HEAD_NM,
                   SF_GET_DPTNAME('01', 'A4', DPT_CD)      AS DPT_NM,
                   SF_GET_COMMNAME('01', 'A2', JOB_CD)     AS JOB_NM,
                   ENO_NO,
                   SF_GET_ENONAME('01', ENO_NO)            AS ENO_NM,
                   NSO_CD,
                   SF_GET_COMMNAME('01', 'NS', NSO_CD)     AS NSO_NM
            FROM   T_CM_PERSON
            WHERE  GUBUN   = '01'
            AND    ENO_NO  LIKE ?||'%'
            AND    DPT_CD  LIKE ?||'%'
            [1]
            ORDER BY SF_GET_DPTSEQ('01', 'B2', HEAD_CD), SF_GET_DPTSEQ('01', 'A4', DPT_CD), SF_GET_COMMSEQ('01', 'A2', JOB_CD),
                     SF_GET_COMMSEQ('01', 'A3', HOB_CD), HIRG_YMD, ENO_NO
            ]]>
								</query>
				</sql>

				<!-- 통계청분류코드 수정 -->
				<sql name="MISB280_UPT">
								<description>통계청분류코드 수정</description>
								<query>
												<![CDATA[
            UPDATE T_CM_PERSON
            SET    NSO_CD   = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  GUBUN    = '01'
            AND    ENO_NO   = ?
            ]]>
								</query>
				</sql>








<!--
***********************************************************************
* @UseCase     : misb380
* @description : 설문조사현황
***********************************************************************
* 2015/03/26     이동훈         최초작성.
***********************************************************************
-->
<!-- 설문조사현황  -->
		<sql name="MISB380_SHR">
			<description>설문조사현황</description>
				<query>
					<![CDATA[
		            SELECT A.ENO_NO, B.ENO_NM,
		                SF_GET_COMMNAME('01', 'A2', B.JOB_CD) AS JOB_NM,      
                        SF_GET_DPTNAME('01', 'B2', B.HEAD_CD) AS HEAD_NM,     
                        SF_GET_DPTNAME('01', 'A4', B.DPT_CD) AS DPT_NM,      
                        SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM,     
						A.SUB1, 
               			A.SUB2, 
						A.REMARK2
		            FROM   T_SU_SURVEY A, T_CM_PERSON B
		            WHERE   A.ENO_NO = B.ENO_NO AND A.ENO_NO != '2130016'
		            ORDER BY A.ENO_NO
            ]]>
			</query>
		</sql>



				<!--
								***********************************************************************
								* @UseCase     : mis290
								* @description : 부서별 직위별 인원 현황-예비직
								***********************************************************************
								* 2007/05/21     이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 부서별 직위별 인원 현황 조회 -->
				<sql name="MISB290_SHR">
								<description>
												부서별 직위별 인원 현황 조회
								</description>
								<query>
												<![CDATA[
SELECT D.HEAD_NM
     , SF_GET_COMMNAME('01', 'B7', A_TAG)   as A_TAG
     , D.DPT_NM
     , D.HSORT_NO
     , D.A_TAG                                               as ASORT_NO
     , CASE WHEN D.DSORT_NO = 0 THEN 999 ELSE D.DSORT_NO END as DSORT_NO
     , A.TOT_CNT
     , A.OCCA_CNT        -- 사무직계
     , A.C1              -- 부장
     , A.D1              -- 부대
     , A.E1              -- 차장
     , A.S2              -- 과장
     , A.S3              -- 대리
     , A.S4M             -- 4사남
     , A.S4F             -- 4사여
     , A.S5M             -- 5사남
     , A.S5F             -- 5사여
     , A.Z_CNTM          -- 계약직남
     , A.Z_CNTF          -- 계약직
  FROM (SELECT D.GBN_CD     as A_TAG
             , H.DPT_CD       as HEAD_CD
             , H.DPT_NM       as HEAD_NM
             , D.DPT_CD       as DPT_CD
             , D.DPT_NM       as DPT_NM
             , H.SORT_NO      as HSORT_NO
             , D.SORT_NO      as DSORT_NO
          FROM T_CM_DEPT         H
             , T_CM_DEPT         D
         WHERE H.DPT_CD        = D.UPDPT_CD
           AND H.CD_GBN        = 'B2'
           AND D.CD_GBN        = 'A4'
        )      D
     , (-- 현재원
        SELECT P.DPT_CD
             , ENO_NO                                                                         as TOT_CNT
             , CASE WHEN P.OCC_CD in ('0','1','2')                                      			   THEN ENO_NM END as OCCA_CNT -- 사무직계
             , CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('140','150')   THEN ENO_NM END as C1       -- 부장
             , CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('160','170')                          THEN ENO_NM END as D1       -- 부대
             , CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('180','190')                         THEN ENO_NM END as E1       -- 차장
             , CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('200','210')                        	THEN ENO_NM END as S2       -- 과장
             , CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('220','230')                        	THEN ENO_NM END as S3       -- 대리
             , CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('240','245','250') AND MF_TAG  = 'M'       	THEN ENO_NM END as S4M      -- 4사남
             , CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  IN ('240','245','250') AND MF_TAG  = 'F'       	THEN ENO_NM END as S4F      -- 4사여
             , CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  NOT IN ('140','150','160','170','180','190','200','210','220','230','240','245','250')  AND  MF_TAG  = 'M'       	THEN ENO_NM END as S5M      -- 5사남
             , CASE WHEN P.OCC_CD in ('0','1','2') AND P.JOB_CD  NOT IN ('140','150','160','170','180','190','200','210','220','230','240','245','250')  AND  MF_TAG  = 'F'       	THEN ENO_NM END as S5F      -- 5사여
             , CASE WHEN P.OCC_CD not in ('0','1','2')  AND MF_TAG  = 'M'       						THEN ENO_NM END as Z_CNTM   -- 계약직남
             , CASE WHEN P.OCC_CD not in ('0','1','2')  AND MF_TAG  = 'F'								THEN ENO_NM END as Z_CNTF   -- 계약직여
          FROM T_CM_PERSON       P
         WHERE TO_CHAR(P.HIR_YMD,'YYYYMMDD') <= ?
           AND (P.RET_YMD IS NULL OR TO_CHAR(P.RET_YMD,'YYYYMMDD') > ?)
          -- AND P.OCC_CD  = 'A'
        )      A
 WHERE D.DPT_CD  = A.DPT_CD
 ORDER BY HSORT_NO, ASORT_NO, DSORT_NO



            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : mis295
								* @description : 부서별 직위별 인원 현황-예비직
								***********************************************************************
								* 2007/05/21     이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 부서별 직위별 인원 현황 조회 -->
				<sql name="MISB295_SHR">
								<description>
												부서별 직위별 인원 현황 조회
								</description>
								<query>
												<![CDATA[
SELECT CASE WHEN D.DPT_NM LIKE '%부산%' OR D.DPT_NM LIKE '%울산%' OR D.DPT_NM LIKE '%김해%'
            THEN '부산지사'
            ELSE D.HEAD_NM
       END                                                   as HEAD_NM
     , CASE WHEN D.A_TAG = '1' THEN '본사' ELSE '지방' END   as A_TAG
     , D.DPT_NM
     , CASE WHEN D.DPT_NM LIKE '%부산%' OR D.DPT_NM LIKE '%울산%' OR D.DPT_NM LIKE '%김해%'
            THEN 115
            WHEN D.HSORT_NO = 0 THEN 999
            ELSE D.HSORT_NO
       END                                                   as HSORT_NO
     , D.A_TAG                                               as ASORT_NO
     , CASE WHEN D.DSORT_NO = 0 THEN 999 ELSE D.DSORT_NO END as DSORT_NO
     , A.TOT_CNT
     , A.OCCA_CNT        -- 사무직계
     , A.C1              -- 부장
     , A.D1              -- 부대
     , A.E1              -- 차장
     , A.S2              -- 과장
     , A.S3              -- 대리
     , A.S4M             -- 4사남
     , A.S4F             -- 4사여
     , A.S5M             -- 5사남
     , A.S5F             -- 5사여
     , A.Z_CNTM          -- 계약직남
     , A.Z_CNTF          -- 계약직
     , A.S7              -- 장비
     , A.MM_CNT          -- 파견직남
     , A.MF_CNT          -- 파견직여
  FROM (SELECT D.GBN2_TAG     as A_TAG
             , H.DPT_CD       as HEAD_CD
             , H.DPT_NM       as HEAD_NM
             , D.DPT_CD       as DPT_CD
             , D.DPT_NM       as DPT_NM
             , H.SORT_NO      as HSORT_NO
             , D.SORT_NO      as DSORT_NO
          FROM T_CM_DEPT         H
             , T_CM_DEPT         D
         WHERE H.DPT_CD        = D.UPDPT_CD
           AND H.CD_GBN        = 'B2'
           AND D.CD_GBN        = 'A4'
        )      D
     , (-- 현재원
        SELECT CASE WHEN P.DPT_CD IN ('AA','AV') THEN 'G2' ELSE P.DPT_CD END                  as DPT_CD
             , ENO_NO                                                                         as TOT_CNT
             , CASE WHEN P.OCC_CD  = 'M'                                      THEN ENO_NM END as OCCA_CNT -- 예비직계
             , CASE WHEN P.JOB_CD  = '8D'                                     THEN ENO_NM END as C1       -- 영사
             , CASE WHEN P.JOB_CD  = 'BJ'                                     THEN ENO_NM END as D1       -- 반장
             , CASE WHEN P.JOB_CD  = 'JJ'                                     THEN ENO_NM END as E1       -- 직장
             , CASE WHEN P.JOB_CD  = 'JY'                                     THEN ENO_NM END as S2       -- 주임
             , NULL                                                                           as S3       --
             , NULL                                                                           as S4M      --
             , NULL                                                                           as S4F      --
             , NULL                                                                           as S5M      --
             , NULL                                                                           as S5F      --
             , NULL                                                                           as S7       --
             , CASE WHEN P.JOB_CD  = 'Z1'             AND MF_TAG  = 'M'       THEN ENO_NM END as Z_CNTM   -- 계약직남
             , CASE WHEN P.JOB_CD  = 'Z1'             AND MF_TAG IN ('W','F') THEN ENO_NM END as Z_CNTF   -- 계약직여
             , NULL                                                                           as MM_CNT   --
             , NULL                                                                           as MF_CNT   --
          FROM T_CM_PERSON       P
         WHERE TO_CHAR(P.HIR_YMD,'YYYYMMDD') <= ?
           AND (P.RET_YMD IS NULL OR TO_CHAR(P.RET_YMD,'YYYYMMDD') > ?)
           AND P.JOB_CD IN ('8D','BJ','JJ','JY','Z1')
           AND P.OCC_CD  = 'M'
        UNION ALL
        SELECT CASE WHEN P.DPT_CD IN ('AA','AV') THEN 'G2' ELSE P.DPT_CD END                  as DPT_CD
             , ENO_NO                                                                         as TOT_CNT
             , NULL                                                                           as OCCA_CNT -- 예비직계
             , NULL                                                                           as C1       -- 영사
             , NULL                                                                           as D1       -- 반장
             , NULL                                                                           as E1       -- 직장
             , NULL                                                                           as S2       -- 주임
             , NULL                                                                           as S3
             , NULL                                                                           as S4M
             , NULL                                                                           as S4F
             , NULL                                                                           as S5M
             , NULL                                                                           as S5F
             , NULL                                                                           as S7
             , NULL                                                                           as Z_CNTM
             , NULL                                                                           as Z_CNTF
             , CASE WHEN MF_TAG  = 'M'       THEN ENO_NM END                                  as MM_CNT --파견직남
             , CASE WHEN MF_TAG IN ('W','F') THEN ENO_NM END                                  as MF_CNT --파견직여
          FROM T_ME_PERSON       P
          WHERE TO_CHAR(P.HIR_YMD,'YYYYMMDD') <= ?
           AND (P.RET_YMD IS NULL OR TO_CHAR(P.RET_YMD,'YYYYMMDD') > ?)
           AND P.OCC_CD  = 'M'
        )      A
 WHERE D.DPT_CD  = A.DPT_CD
 ORDER BY HSORT_NO, ASORT_NO, DSORT_NO
            ]]>
								</query>
				</sql>



				<!-- 사업계획 -->
				<!--
								***********************************************************************
								* @UseCase     : misc010
								* @description : 사업계획작업관리
								***********************************************************************
								* 2007/04/02      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획작업관리 작업로그 조회 -->
				<sql name="MISC010_SHR">
								<description>
												사업계획작업관리 작업로그 조회
								</description>
								<query>
												<![CDATA[
            SELECT PIS_YY
                 , PIS_MM
                 , OCC_CD
                 , SAL_GBN
                 , PRO_STS
                 , SUBSTR(PAY_YMD,1,4)||'-'||SUBSTR(PAY_YMD,5,2)     AS PAY_YMD
                 , SUBSTR(APY_YMD,1,4)||'-'||SUBSTR(APY_YMD,5,2)     AS APY_YMD
              FROM T_CP_WORKLOG
             WHERE PIS_YY  = ?
               AND PIS_MM  = ' '
               AND OCC_CD  = ' '
               AND SAL_GBN = 'G'
               AND SEQ     = '1'
            ]]>
								</query>
				</sql>

				<!-- 승진작업 재작업을 위한 수정 -->
				<sql name="MISC010_UPT_04">
								<description>
												승진작업 재작업을 위한 수정
								</description>
								<query>
												<![CDATA[
            UPDATE T_MI_PERSON
            SET    PJOB_CD  = ' ',
                   PHOB_CD  = ' ',
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  PIS_YY   = ?
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc020
								* @description : 부서별인원충원계획관리
								***********************************************************************
								* 2007/04/02      박인이        최초작성.
								***********************************************************************
				-->

				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC020_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY
                 , PIS_MM
                 , OCC_CD
                 , SAL_GBN
                 , PRO_STS
                 , SUBSTR(PAY_YMD,1,4)||'-'||SUBSTR(PAY_YMD,5,2)     AS PAY_YMD -- 대상시작일자
                 , SUBSTR(APY_YMD,1,4)||'-'||SUBSTR(APY_YMD,5,2)     AS APY_YMD -- 대상종료일자
              FROM T_CP_WORKLOG
             WHERE PIS_MM  = ' '
               AND OCC_CD  = ' '
               AND SAL_GBN = 'G'
               AND SEQ     = '1'
          ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 부서별인원충원계획관리 데이터 조회 -->
				<sql name="MISC020_SHR">
								<description>
												부서별인원충원계획관리 데이터 조회
								</description>
								<query>
												<![CDATA[
            SELECT A.TSEQ_NO          -- 임시관리번호
                 , A.PIS_YY

                 , SUBSTR(A.HIR_YM,1,4)||'-'||SUBSTR(A.HIR_YM,5,2)  AS HIR_YM
                 , A.JOB_GBN

                 , A.OCC_CD
                 , A.DPT_CD
                 , A.JOB_CD
                 , A.HEAD_CD
                 , A.LEVY_CD
                 , A.JIKMU_CD
                 , A.MF_TAG

                 , SF_GET_COMMNAME('01', 'A1', A.OCC_CD)    AS OCC_NM
                 , SF_GET_DPTNAME ('01', 'A4', A.DPT_CD)    AS DPT_NM
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD)    AS JOB_NM
                 , SF_GET_COMMNAME('01', 'B1', A.HEAD_CD)   AS HEAD_NM
                 , SF_GET_COMMNAME('01', 'G4', A.LEVY_CD)   AS LEVY_NM
                 , DECODE(A.MF_TAG, 'M', '남자', '여자')        AS MF_TNM

                 , (SELECT DUTY_NM
                      FROM T_CM_DUTYMST
                     WHERE DUTY_CD = A.JIKMU_CD
                       AND DUTY_LBL = '4'
                    )                                       AS JIKMU_NM

                 , A.LEVY_TXT
                 , A.REMARK
                 , A.OENO_NO          -- 기존 사번
                 , B.ENO_NM                                 AS OENO_NM
                 , B.OCC_CD                                 AS OOCC_CD
                 , B.DPT_CD                                 AS ODPT_CD
                 , B.JOB_CD                                 AS OJOB_CD

                 , B.OCC_NM                                 AS OOCC_NM
                 , B.DPT_NM                                 AS ODPT_NM
                 , B.JOB_NM                                 AS OJOB_NM

                 , A.NDPT_CD          -- 전환부서
                 , SF_GET_DPTNAME ('01', 'A4', A.NDPT_CD)   AS NDPT_NM
              FROM T_MI_LEVYPLAN A
         LEFT JOIN VI_T_CM_EMPLIST2 B
                ON A.OENO_NO = B.ENO_NO
             WHERE A.PIS_YY   = ?
               AND A.DPT_CD   LIKE ?||'%'
               [1]
          ORDER BY B.DPT_SEQ
                 , B.JOB_SEQ
                 , A.HIR_YM
                 , ENO_NO
            ]]>
								</query>
				</sql>


				<!-- 부서별인원충원계획관리 데이터 생성 -->
				<sql name="MISC020_INS">
								<description>
												부서별인원충원계획관리 생성
								</description>
								<query>
												<![CDATA[
            INSERT
              INTO T_MI_LEVYPLAN
                 ( PIS_YY
                 , DPT_CD
                 , TSEQ_NO
                 , JOB_CD
                 , JOB_GBN
                 , HIR_YM
                 , HEAD_CD
                 , LEVY_CD
                 , JIKMU_CD
                 , OCC_CD
                 , MF_TAG
                 , LEVY_TXT
                 , REMARK
                 , OENO_NO
                 , NDPT_CD
                 , IPT_MAN
                 , IPT_YMD
                 , UPT_MAN
                 , UPT_YMD )
          VALUES ( ?
                 , ?
                    -- 해당년, 소속부서의 관리번호를 생성
                 , (SELECT /*+ INDEX_DESC(T_MI_LEVYPLAN T_MI_LEVYPLAN_IDX) */
                           'N'
                           ||LPAD( NVL( TO_NUMBER(SUBSTR( MAX(TSEQ_NO)
                                                        , 2
                                                        , 5)
                                                  )
                                      , 0) + 1
                                 , 5
                                 , '0')
                      FROM T_MI_LEVYPLAN
                     WHERE PIS_YY   = ? )
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , SYSDATE
                 , ?
                 , SYSDATE )
            ]]>
								</query>
				</sql>

				<!-- 부서별인원충원계획관리 데이터 수정 -->
				<sql name="MISC020_UPT">
								<description>
												부서별인원충원계획관리 생성
								</description>
								<query>
												<![CDATA[
            UPDATE T_MI_LEVYPLAN
            SET    JOB_CD   = ?,
                   JOB_GBN  = ?,
                   HIR_YM   = ?,
                   HEAD_CD  = ?,
                   LEVY_CD  = ?,
                   JIKMU_CD = ?,
                   OCC_CD   = ?,
                   MF_TAG   = ?,
                   LEVY_TXT = ?,
                   REMARK   = ?,
                   OENO_NO  = ?,
                   NDPT_CD  = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  PIS_YY   = ?
            AND    DPT_CD   = ?
            AND    TSEQ_NO  = ?
            ]]>
								</query>
				</sql>

				<!-- 부서별인원충원계획관리 데이터 삭제 -->
				<sql name="MISC020_DEL">
								<description>
												부서별인원충원계획관리 삭제
								</description>
								<query>
												<![CDATA[
            DELETE FROM T_MI_LEVYPLAN
            WHERE  PIS_YY   = ?
            AND    DPT_CD   = ?
            AND    TSEQ_NO  = ?
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc025
								* @description : 부서별 인원 충원계획 관리
								***********************************************************************
								* 2007/04/23      이승욱        최초작성.
								***********************************************************************
				-->
				<sql name="MISC025_SHR">
								<description>
												부서별 인원 충원계획 관리 조회
								</description>
								<query>
												<![CDATA[
            SELECT D.DPT_CD
                 , D.DPT_NM
                 , H.B_CNT          as H_CNT
                 , P.B_CNT          as P_CNT
                 , R.LEVY_CD
                 , R.LEVY_TXT                 -- 충원사유
                 , R.JOB_CD                   -- 직급코드
                 , R.JOB_NM                   --  직급
                                              -- 인원은 이지젠에서 계산..
                 , R.HIR_YM                   -- 채용계획년월
                 , R.JIKMU_CD                 -- 직무코드
                 , R.JIKMU_NM
                 , R.REMARK                   -- 주요업무
                 , R.JOB_SNO
                 , D.SORT_NO
              FROM (-- 부서별 현재
                    SELECT DPT_CD
                         , COUNT(*) as B_CNT
                      FROM T_MI_PERSON  P
                     WHERE PIS_YY = ?
                       AND HIR_YMD < (SELECT PAY_YMD||'01' FROM T_CP_WORKLOG WHERE PIS_MM=' ' AND OCC_CD=' ' AND SAL_GBN='G' AND SEQ='1' AND PIS_YY = P.PIS_YY)
                       AND (RET_YMD is NULL OR RET_YMD > PIS_YY||'0101')
                     GROUP BY DPT_CD
                    )         H
                 , (-- 부서별 계획
                    SELECT DPT_CD
                         , SUM(CASE WHEN RET_YMD is NULL THEN 1 END) as B_CNT
                      FROM T_MI_PERSON
                     WHERE PIS_YY = ?
                     GROUP BY DPT_CD
                    )         P
                    -- 소요인원 요구조건
                 , (SELECT CASE WHEN A.LEVY_CD = '4' THEN A.NDPT_CD ELSE A.DPT_CD END                       as DPT_CD
                         , CASE WHEN A.LEVY_CD = '4' THEN '0' ELSE A.LEVY_CD END                            as LEVY_CD
                         , CASE WHEN A.LEVY_CD = '4'
                                THEN '('||SF_GET_DPTNAME('01', 'A4', A.DPT_CD) ||'인원 전환배치 예정)'
                                WHEN A.LEVY_TXT is NULL
                                THEN SF_GET_COMMNAME('01', 'G4', A.LEVY_CD)
                                ELSE A.LEVY_TXT
                           END                                                                              as LEVY_TXT-- 충원사유
                         , A.JOB_CD   -- 직급코드
                         , SF_GET_COMMNAME('01', 'A2', A.JOB_CD) as JOB_NM --직급
                         , (SELECT SORT_NO FROM T_CM_COMMON WHERE CD_GBN = 'A2' AND COMM_CD = A.JOB_CD)     as JOB_SNO
                         , A.HIR_YM   -- 채용계획년월
                         , A.JIKMU_CD -- 직무코드
                         , (SELECT DUTY_NM FROM T_CM_DUTYMST WHERE DUTY_CD = A.JIKMU_CD AND DUTY_LBL = '4') as JIKMU_NM
                         , A.REMARK   -- 주요업무
                      FROM T_MI_LEVYPLAN A
                     WHERE PIS_YY    = ?
                    UNION ALL
                    SELECT A.DPT_CD
                         , A.LEVY_CD
                         , '(전환배치 예정)'                                                                as LEVY_TXT-- 충원사유
                         , JOB_CD   -- 직급코드
                         , SF_GET_COMMNAME('01', 'A2', A.JOB_CD)  as JOB_NM   --직급
                         , 99    as JOB_SNO
                         , NULL  as HIR_YM   -- 채용계획년월
                         , NULL  as JIKMU_CD -- 직무코드
                         , NULL  as JIKMU_NM
                         , NULL  as REMARK   -- 주요업무
                      FROM T_MI_LEVYPLAN A
                     WHERE PIS_YY    = ?
                       AND A.LEVY_CD = '4'
                )         R
             , T_CM_DEPT  D
         WHERE P.DPT_CD = R.DPT_CD
           AND P.DPT_CD = H.DPT_CD
           AND P.DPT_CD = D.DPT_CD
           AND D.CD_GBN = 'A4'
           [1]
         ORDER BY SORT_NO, JOB_SNO
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc030 (사용안함 MISC020 쿼리와 합침)
								* @description : 전환배치
								***********************************************************************
								* 2007/04/03      박인이        최초작성.
								***********************************************************************
				-->

				<!-- 전환배치 데이터 조회 -->
				<sql name="MISC030_SHR">
								<description>전환배치 데이터 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,
                   DPT_CD,
                   SF_GET_DPTNAME('01', 'A4', DPT_CD)           AS DPT_NM,
                   TENO_NO,
                   (SELECT NAME FROM T_CM_EMPLIST WHERE GUBUN = '01' AND ENO_NO = A.TENO_NO)
                                                                AS TENO_NM,
                   (SELECT SF_GET_COMMNAME('01', 'A1', OCC_CD) FROM T_CM_EMPLIST WHERE GUBUN = '01' AND ENO_NO = A.TENO_NO)
                                                                AS TOCC_NM,
                   SF_GET_COMMNAME('01', 'A2', JOB_CD)          AS TJOB_NM,
                   JOB_CD,
                   SF_GET_COMMNAME('01', 'A2', JOB_CD)          AS JOB_NM,
                   JOB_GBN,
                   SUBSTR(HIR_YM,1,4)||'-'||SUBSTR(HIR_YM,5,2)  AS HIR_YM,
                   HEAD_CD,
                   SF_GET_COMMNAME('01', 'B1', HEAD_CD)         AS HEAD_NM,
                   LEVY_CD,
                   SF_GET_COMMNAME('01', 'G4', LEVY_CD)         AS LEVY_NM,
                   JIKMU_CD,
                  (SELECT DUTY_NM FROM T_CM_DUTYMST WHERE DUTY_CD = A.JIKMU_CD AND DUTY_LBL = '4')
                                                                AS JIKMU_NM,
                   OCC_CD,
                   SF_GET_COMMNAME('01', 'A1', OCC_CD)          AS OCC_NM,
                   MF_TAG,
                   DECODE(MF_TAG, 'M', '남자', 'W', '여자')     AS MF_TNM,
                   LEVY_TXT,
                   REMARK,
                   OENO_NO,
                   SF_GET_ENONAME('01', OENO_NO)                AS OENO_NM,
                   NDPT_CD,
                   SF_GET_DPTNAME('01', 'A4', NDPT_CD)          AS NDPT_NM
            FROM   T_MI_LEVYPLAN A
            WHERE  PIS_YY  = ?
            AND    DPT_CD  LIKE ?||'%'
            AND    LEVY_CD IN ('4', '5')
            ORDER BY HIR_YM, TENO_NO
            ]]>
								</query>
				</sql>

				<!-- 전환배치 데이터 생성 -->
				<sql name="MISC030_INS">
								<description>전환배치 생성</description>
								<query>
												<![CDATA[
            INSERT INTO T_MI_LEVYPLAN
                  (PIS_YY,   DPT_CD,  TENO_NO,  JOB_CD,  JOB_GBN,  HIR_YM,  HEAD_CD,  LEVY_CD,  JIKMU_CD,
                   OCC_CD,   MF_TAG,  LEVY_TXT, REMARK,  OENO_NO,  NDPT_CD, IPT_MAN,  IPT_YMD,  UPT_MAN,  UPT_YMD
                  )
            VALUES
                  (?,        ?,       ?,        ?,       ?,        ?,       ?,        ?,        ?,
                   ?,        ?,       ?,       ?,        ?,        ?,       ?,        SYSDATE,  ?,        SYSDATE
                  )
            ]]>
								</query>
				</sql>

				<!-- 전환배치 데이터 수정 -->
				<sql name="MISC030_UPT">
								<description>전환배치 생성</description>
								<query>
												<![CDATA[
            UPDATE T_MI_LEVYPLAN
            SET    JOB_CD   = ?,
                   JOB_GBN  = ?,
                   HIR_YM   = ?,
                   HEAD_CD  = ?,
                   LEVY_CD  = ?,
                   JIKMU_CD = ?,
                   OCC_CD   = ?,
                   MF_TAG   = ?,
                   LEVY_TXT = ?,
                   REMARK   = ?,
                   OENO_NO  = ?,
                   NDPT_CD  = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  PIS_YY   = ?
            AND    DPT_CD   = ?
            AND    TENO_NO  = ?
            ]]>
								</query>
				</sql>

				<!-- 전환배치 데이터 삭제 -->
				<sql name="MISC030_DEL">
								<description>전환배치 삭제</description>
								<query>
												<![CDATA[
            DELETE FROM T_MI_LEVYPLAN
            WHERE  PIS_YY   = ?
            AND    DPT_CD   = ?
            AND    TENO_NO  = ?
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc040
								* @description : 인원충원계획현황
								***********************************************************************
								* 2007/04/04      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC040_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 인원충원계획현황 조회 -->
				<sql name="MISC040_SHR_02">
								<description>인원충원계획현황 조회</description>
								<query>
												<![CDATA[
            SELECT A.TSEQ_NO          -- 임시관리번호
                 , A.PIS_YY

                 , SUBSTR(A.HIR_YM,1,4)||'-'||SUBSTR(A.HIR_YM,5,2)  AS HIR_YM
                 , A.JOB_GBN

                 , A.OCC_CD
                 , A.DPT_CD
                 , A.JOB_CD
                 , A.HEAD_CD
                 , A.LEVY_CD
                 , A.JIKMU_CD
                 , A.MF_TAG

                 , SF_GET_COMMNAME('01', 'A1', A.OCC_CD)    AS OCC_NM
                 , SF_GET_DPTNAME ('01', 'A4', A.DPT_CD)    AS DPT_NM
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD)    AS JOB_NM
                 , SF_GET_COMMNAME('01', 'B1', A.HEAD_CD)   AS HEAD_NM
                 , SF_GET_COMMNAME('01', 'G4', A.LEVY_CD)   AS LEVY_NM
                 , DECODE(A.MF_TAG, 'M', '남자', '여자')        AS MF_TNM

                 , (SELECT DUTY_NM
                      FROM T_CM_DUTYMST
                     WHERE DUTY_CD = A.JIKMU_CD
                       AND DUTY_LBL = '4'
                    )                                       AS JIKMU_NM

                 , A.LEVY_TXT
                 , A.REMARK
                 , A.OENO_NO          -- 기존 사번
                 , B.ENO_NM                                 AS OENO_NM
                 , B.OCC_CD                                 AS OOCC_CD
                 , B.DPT_CD                                 AS ODPT_CD
                 , B.JOB_CD                                 AS OJOB_CD

                 , B.OCC_NM                                 AS OOCC_NM
                 , B.DPT_NM                                 AS ODPT_NM
                 , B.JOB_NM                                 AS OJOB_NM

                 , A.NDPT_CD          -- 전환부서
                 , SF_GET_DPTNAME ('01', 'A4', A.NDPT_CD)   AS NDPT_NM
              FROM T_MI_LEVYPLAN A
         LEFT JOIN VI_T_CM_EMPLIST2 B
                ON A.OENO_NO    = B.ENO_NO
             WHERE A.PIS_YY     = ?
               AND A.DPT_CD     LIKE ?||'%'
               AND A.HIR_YM     >= ?
               AND A.HIR_YM     <= ?
               AND A.JOB_CD IN (SELECT COMM_CD
                                  FROM T_CM_COMMON
                                 WHERE CD_GBN = 'A2'
                                   AND GBN2_TAG LIKE ?||'%'
                                )
          ORDER BY A.HIR_YM
                 , A.TSEQ_NO
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc050
								* @description : 승진시뮬레이션
								***********************************************************************
								* 2007/04/05      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC050_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 승진시뮬레이션 데이터 조회 -->
				<sql name="MISC050_SHR_02">
								<description>
												승진시뮬레이션 데이터 조회
								</description>
								<query>
												<![CDATA[
            SELECT A.PIS_YY
                 , A.PJOB_CD
                 , A.FJOB_CD
                 , A.BAS_YY
                 , SF_GET_COMMNAME('01', 'A2', A.PJOB_CD)   AS PJOB_NM      --승진 전 직위
                 , SF_GET_COMMNAME('01', 'A2', A.FJOB_CD)   AS FJOB_NM      --승진 후 직위
                 , NVL(C.PMTPCT_NO, 0)                      AS PMTPCT_NO
                 , COUNT(B.TSEQ_NO)                         AS JOB_CNT      -- 직위별 총 인원

                 --총 대상자 수
                 , SUM(CASE
                       WHEN A.BAS_YY <= B.LSE_YY
                       THEN 1
                       ELSE 0
                        END
                       ) AS T_CNT

                 --직위 변경 대상자 수
                 , ROUND(SUM(CASE
                             WHEN A.BAS_YY <= B.LSE_YY
                             THEN 1
                             ELSE 0
                              END
                             ) * NVL(C.PMTPCT_NO, 0) / 100
                         ) AS P_CNT

                 --현 대상자 중 직위가 변경된 사람의 수 체크
                 , SUM(DECODE( NVL( B.PJOB_CD   -- 대상자 리스트에서 승진 후 직위
                                  , B.JOB_CD    -- 현 직위
                                    )
                             , B.JOB_CD
                             , 0, 1
                               )
                       ) AS F_CNT

                 , MAX((SELECT PRO_STS
                          FROM T_CP_WORKLOG
                         WHERE PIS_YY = A.PIS_YY
                           AND PIS_MM = ' '
                           AND OCC_CD = ' '
                           AND SAL_GBN = 'G'
                           AND SEQ = '1'
                        ))  AS PRO_STS

              FROM (SELECT SUBSTR(STR_YMD,0,4) AS PIS_YY
                         , OCC_CD
                         , PJOB_CD          --현 직위 (T_MI_PERSON 이랑 다름)
                         , FJOB_CD          --변경 직위
                         , BAS_YY
                      FROM T_PM_PMTALLOT
                     WHERE  SUBSTR(STR_YMD,0,4)   <= ?
                       AND (SUBSTR(END_YMD,0,4)   >= ?
                        OR  END_YMD IS NULL)
                    ) A
                 , (SELECT C.PIS_YY
                         , C.TSEQ_NO
                         , C.ENO_NO
                         , C.JOB_CD         --현 직위
                         , C.PJOB_CD        --변경 직위
                         , NVL(D.GBN2_TAG, C.JOB_CD)                    AS JOB_GBN2
                         , TRUNC(MONTHS_BETWEEN(SYSDATE, JPR_YMD)/12)   AS LSE_YY       --현직위근무년수
                      FROM T_MI_PERSON C
                         , T_CM_COMMON D
                     WHERE C.PIS_YY     = ?
                       AND D.CD_GBN     = 'A2'
                       AND C.JOB_CD     = D.COMM_CD
                       AND C.EMP_CD     = '1'   --정직원만
                       AND C.RET_YMD    IS NULL
                    ) B
                 , T_MI_PMTBASE C
             WHERE A.PIS_YY     = B.PIS_YY
               AND A.PJOB_CD    = B.JOB_GBN2
               AND A.PIS_YY     = C.PIS_YY(+)
               AND A.PJOB_CD    = C.JOB_CD(+)
          GROUP BY A.PIS_YY
                 , A.OCC_CD
                 , A.PJOB_CD
                 , A.FJOB_CD
                 , A.BAS_YY
                 , C.PMTPCT_NO
          ORDER BY A.OCC_CD
                 , SF_GET_COMMSEQ('01', 'A2', A.PJOB_CD)
            ]]>
								</query>
				</sql>

				<!-- 사업계획승진기초정보 존재여부 CHECK -->
				<sql name="MISC050_SHR_03">
								<description>
												사업계획승진기초정보 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_PMTBASE
            WHERE  PIS_YY = ?
            AND    ROWNUM = 1
            ]]>
								</query>
				</sql>

				<!-- 사업계획승진기초정보 생성 -->
				<sql name="MISC050_INS">
								<description>사업계획승진기초정보 생성</description>
								<query>
												<![CDATA[
            INSERT INTO T_MI_PMTBASE
                 ( PIS_YY,  JOB_CD,  PMTPCT_NO, IPT_MAN,  IPT_YMD, UPT_MAN,  UPT_YMD )
            VALUES
                 ( ?,       ?,       ?,         ?,        SYSDATE, ?,        SYSDATE )
            ]]>
								</query>
				</sql>

				<!-- 사업계획승진기초정보 데이터 삭제 -->
				<sql name="MISC050_DEL">
								<description>사업계획승진기초정보 삭제</description>
								<query>
												<![CDATA[
            DELETE FROM T_MI_PMTBASE
            WHERE  PIS_YY = ?
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc060
								* @description : 승급시뮬레이션
								***********************************************************************
								* 2007/04/05      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC060_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 승급시뮬레이션 데이터 조회 -->
				<sql name="MISC060_SHR_02">
								<description>
												승급시뮬레이션 데이터 조회
								</description>
								<query>
												<![CDATA[
            SELECT A.PIS_YY
                 , A.JOB_CD
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
                 , HOB_CD           AS PHOB_CD      -- 현 호봉
                 , CASE
                   WHEN A.JOB_CD IN ('A7', 'Z1')    -- 사외이사(A7), 사원(Z1)의 호봉은 그대로 유지
                   THEN A.HOB_CD
                   WHEN LPAD(A.HOB_CD+1, 2, '0') >= MAX_HOB
                   THEN A.HOB_CD
                   ELSE LPAD(A.HOB_CD+1, 2, '0')
                    END             AS FHOB_CD      -- 변경호봉

                 , COUNT(TSEQ_NO)   AS P_CNT

                 --현 대상자 중 호봉이 변경된 사람의 수 체크
                 , SUM(DECODE( NVL( A.PHOB_CD   -- 대상자 리스트에서 승진 후 직위
                                  , A.HOB_CD    -- 현 직위
                                    )
                             , A.HOB_CD
                             , 0, 1
                               )
                       ) AS F_CNT

                 , MAX((SELECT PRO_STS
                          FROM T_CP_WORKLOG
                         WHERE PIS_YY = A.PIS_YY
                           AND PIS_MM = ' '
                           AND OCC_CD = ' '
                           AND SAL_GBN = 'G'
                           AND SEQ = '1'
                        ))  AS PRO_STS

              FROM (SELECT C.TSEQ_NO
                         , C.ENO_NO
                         , C.PIS_YY
                         , NVL(D.GBN2_TAG, C.JOB_CD)    AS JOB_CD
                         , C.HOB_CD
                         , C.PHOB_CD
                         , (SELECT MAX(HOB_CD)
                              FROM T_CP_PAYTABLE
                             WHERE JOB_CD   = NVL(D.GBN2_TAG, C.JOB_CD)
                          GROUP BY JOB_CD
                            )   AS MAX_HOB
                      FROM T_MI_PERSON C
                         , T_CM_COMMON D
                     WHERE C.PIS_YY     = ?
                       AND D.CD_GBN     = 'A2'
                       AND C.JOB_CD     = D.COMM_CD
                       AND C.EMP_CD     = '1'       --정직원만
                       AND C.JOB_CD     = C.PJOB_CD --승진 처리가 된 사람들은 호봉 처리에서 제외
                       AND C.RET_YMD    IS NULL
                    ) A
          GROUP BY A.PIS_YY
                 , A.JOB_CD
                 , A.HOB_CD
                 , A.PHOB_CD
                 , A.MAX_HOB
          ORDER BY SF_GET_COMMSEQ('01', 'A2', A.JOB_CD)
                 , HOB_CD
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc070
								* @description : 휴일근무사업계획
								***********************************************************************
								* 2007/04/11      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 휴일근무사업계획 존재여부 CHECK -->
				<sql name="MISC070_SHR_03">
								<description>
												휴일근무사업계획 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_BUDGETMST
            WHERE  PIS_YY  = ?
            AND    SAL_GBN = '1'
            AND    HOL_AMT IS NOT NULL
            AND    ROWNUM  = 1
            ]]>
								</query>
				</sql>

				<!-- 휴일근무수당 추상인상율정보 데이터 생성 -->
				<sql name="MISC070_UPT">
								<description>
												휴일근무수당 추상인상율정보 데이터 생성
								</description>
								<query>
												<![CDATA[
            UPDATE T_MI_PAYBASE
               SET HOL_PCT   = ?
                 , UPT_MAN   = ?
                 , UPT_YMD   = SYSDATE
             WHERE PIS_YY    = ?
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc080
								* @description : 급여사업계획
								***********************************************************************
								* 2007/04/08      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC080_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 급여사업계획 데이터 조회 -->
				<sql name="MISC080_SHR_02">
								<description>급여사업계획 데이터 조회</description>
								<query>
												<![CDATA[
            SELECT A.*

                 , NVL(A.RET_J1_AMT, 0)
                   + NVL(A.EDU_J1_AMT, 0)
                   + NVL(A.END_J1_AMT, 0) AS SUM_J1_AMT

                 , NVL(A.RET_J2_AMT, 0)
                   + NVL(A.EDU_J2_AMT, 0)
                   + NVL(A.END_J2_AMT, 0) AS SUM_J2_AMT

                 , NVL(A.RET_J3_AMT, 0)
                   + NVL(A.EDU_J3_AMT, 0)
                   + NVL(A.END_J3_AMT, 0) AS SUM_J3_AMT

                 , NVL(A.RET_S1_AMT, 0)
                   + NVL(A.EDU_S1_AMT, 0)
                   + NVL(A.END_S1_AMT, 0) AS SUM_S1_AMT

                 , NVL(A.RET_S2_AMT, 0)
                   + NVL(A.EDU_S2_AMT, 0)
                   + NVL(A.END_S2_AMT, 0) AS SUM_S2_AMT

                 , NVL(A.RET_S3_AMT, 0)
                   + NVL(A.EDU_S3_AMT, 0)
                   + NVL(A.END_S3_AMT, 0) AS SUM_S3_AMT

                 , NVL(A.RET_U1_AMT, 0)
                   + NVL(A.EDU_U1_AMT, 0)
                   + NVL(A.END_U1_AMT, 0) AS SUM_U1_AMT

                 , NVL(A.RET_U2_AMT, 0)
                   + NVL(A.EDU_U2_AMT, 0)
                   + NVL(A.END_U2_AMT, 0) AS SUM_U2_AMT

                 , NVL(A.RET_U3_AMT, 0)
                   + NVL(A.EDU_U3_AMT, 0)
                   + NVL(A.END_U3_AMT, 0) AS SUM_U3_AMT

                 , NVL(A.RET_U4_AMT, 0)
                   + NVL(A.EDU_U4_AMT, 0)
                   + NVL(A.END_U4_AMT, 0) AS SUM_U4_AMT

                 , (SELECT PRO_STS
                      FROM T_CP_WORKLOG
                     WHERE PIS_YY = A.PIS_YY
                       AND PIS_MM = ' '
                       AND OCC_CD = ' '
                       AND SAL_GBN = 'G'
                       AND SEQ = '1'
                    )   AS PRO_STS      --사업계획 로그 조회

              FROM T_MI_PAYBASE A
             WHERE PIS_YY = ?
            ]]>
								</query>
				</sql>

				<!-- 사업계획급여인상율정보 존재여부 CHECK -->
				<sql name="MISC080_SHR_03">
								<description>
												사업계획급여인상율정보 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_PAYBASE
            WHERE  PIS_YY = ?
            ]]>
								</query>
				</sql>

				<!-- 사업계획급여인상율정보 데이터 생성 -->
				<sql name="MISC080_INS">
								<description>
												사업계획급여인상율정보 생성
								</description>
								<query>
												<![CDATA[
            MERGE
             INTO T_MI_PAYBASE A
            USING (SELECT ? AS PIS_YY
                        , ? AS PAY_PCT1
                        , ? AS PAY_PCT2
                        , ? AS PAYINC_GBN
                        , ? AS IPT_MAN
                     FROM DUAL
                   ) B
               ON (PIS_YY = B.PIS_YY)
             WHEN MATCHED THEN
           UPDATE
              SET PAY_PCT1      = B.PAY_PCT1
                , PAY_PCT2      = B.PAY_PCT2
                , PAYINC_GBN    = B.PAYINC_GBN
             WHEN NOT MATCHED THEN
           INSERT
                ( PIS_YY
                , PAY_PCT1
                , PAY_PCT2
                , PAYINC_GBN
                , IPT_MAN
                , IPT_YMD
                , UPT_MAN
                , UPT_YMD )
         VALUES ( B.PIS_YY
                , B.PAY_PCT1
                , B.PAY_PCT2
                , B.PAYINC_GBN
                , B.IPT_MAN
                , SYSDATE
                , B.IPT_MAN
                , SYSDATE )
            ]]>
								</query>
				</sql>

				<!-- 사업계획급여인상율정보 데이터 삭제 -->
				<sql name="MISC080_DEL">
								<description>
												사업계획급여인상율정보 데이터 삭제
								</description>
								<query>
												<![CDATA[
            DELETE FROM T_MI_PAYBASE
            WHERE  PIS_YY = ?
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc100
								* @description : 연차수당사업계획
								***********************************************************************
								* 2007/04/11      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 연차수당사업계획 존재여부 CHECK -->
				<sql name="MISC100_SHR_03">
								<description>
												연차수당사업계획 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) AS CNT
              FROM T_MI_BUDGETMST
             WHERE PIS_YY  = ?
               AND HIR_YY  = ?
               AND HIR_MM  = '12'
               AND SAL_GBN = '1'
               AND YBUS_AMT IS NOT NULL
            ]]>
								</query>
				</sql>

				<!-- 휴일근무수당 추상인상율정보 데이터 생성 -->
				<sql name="MISC100_UPT">
								<description>
												휴일근무수당 추상인상율정보 데이터 생성
								</description>
								<query>
												<![CDATA[
            UPDATE T_MI_PAYBASE
               SET A_YRP_PCT    = ?
                 , M_YRP_PCT    = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE PIS_YY       = ?
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc110
								* @description : 복지카드사업계획
								***********************************************************************
								* 2007/04/11      박인이        최초작성.
								***********************************************************************
				-->

				<!-- 복지카드사업계획 존재여부 CHECK -->
				<sql name="MISC110_SHR_03">
								<description>
												복지카드사업계획 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_BUDGETMST
            WHERE  PIS_YY  = ?
            AND    SAL_GBN = '1'
            AND    WELP_AMT IS NOT NULL
            AND    ROWNUM  = 1
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc120
								* @description : 중식대사업계획
								***********************************************************************
								* 2007/04/12      박인이        최초작성.
								***********************************************************************
				-->

				<!-- 중식대사업계획 존재여부 CHECK -->
				<sql name="MISC120_SHR_03">
								<description>
												중식대사업계획 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_BUDGETMST
            WHERE  PIS_YY  = ?
            AND    SAL_GBN = '1'
            AND    LUNC_AMT > 0
            AND    ROWNUM  = 1
            ]]>
								</query>
				</sql>

				<!-- 중식대사업계획 반영 -->
				<sql name="MISC120_UPT">
								<description>중식대사업계획 반영</description>
								<query>
												<![CDATA[
            UPDATE T_MI_BUDGETMST MI
               SET LUNC_AMT = DECODE( (SELECT GBN_CD
                                         FROM T_CM_DEPT
                                        WHERE GUBUN  = '01'
                                          AND CD_GBN = 'A4'
                                          AND DPT_CD = MI.DPT_CD
                                       )
                                    , '1'
                                    , 90000
                                    , 100000
                                      )
                 , UPT_MAN  = ?
                 , UPT_YMD  = SYSDATE
             WHERE PIS_YY   = ?
               AND SAL_GBN  = '1'
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc130
								* @description : 국민연금사업계획
								***********************************************************************
								* 2007/04/11      박인이        최초작성.
								***********************************************************************
				-->


				<!-- 국민연금사업계획 존재여부 CHECK -->
				<sql name="MISC130_SHR_03">
								<description>
												국민연금사업계획 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_BUDGETMST
            WHERE  PIS_YY  = ?
            AND    SAL_GBN = '1'
            AND    NPEN_AMT IS NOT NULL
            AND    ROWNUM  = 1
            ]]>
								</query>
				</sql>


				<!-- 국민연금 인상율 업데이트 -->
				<sql name="MISC130_UPT">
								<description>국민연금 인상율 업데이트</description>
								<query>
												<![CDATA[
            UPDATE T_MI_PAYBASE
               SET NPN_PCT      = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE PIS_YY       = ?
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc150
								* @description : 학자금사업계획
								***********************************************************************
								* 2007/04/17      박인이        최초작성.
								***********************************************************************
				-->

				<!-- 학자금사업계획 존재여부 CHECK -->
				<sql name="MISC150_SHR_03">
								<description>
												학자금사업계획 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_BUDGETMST
            WHERE  PIS_YY  = ?
            AND    SAL_GBN = '1'
            AND    SCH_AMT IS NOT NULL
            AND    ROWNUM  = 1
            ]]>
								</query>
				</sql>

				<!-- 학자금사업계획 데이터 생성 -->
				<sql name="MISC150_UPT">
								<description>
												학자금사업계획 데이터 생성
								</description>
								<query>
												<![CDATA[
            UPDATE T_MI_PAYBASE
               SET RET_J1_AMT = ?
                 , EDU_J1_AMT = ?
                 , END_J1_AMT = ?
                 , RET_J2_AMT = ?
                 , EDU_J2_AMT = ?
                 , END_J2_AMT = ?
                 , RET_J3_AMT = ?
                 , EDU_J3_AMT = ?
                 , END_J3_AMT = ?
                 , RET_S1_AMT = ?
                 , EDU_S1_AMT = ?
                 , END_S1_AMT = ?
                 , RET_S2_AMT = ?
                 , EDU_S2_AMT = ?
                 , END_S2_AMT = ?
                 , RET_S3_AMT = ?
                 , EDU_S3_AMT = ?
                 , END_S3_AMT = ?
                 , RET_U1_AMT = ?
                 , EDU_U1_AMT = ?
                 , END_U1_AMT = ?
                 , RET_U2_AMT = ?
                 , EDU_U2_AMT = ?
                 , END_U2_AMT = ?
                 , RET_U3_AMT = ?
                 , EDU_U3_AMT = ?
                 , END_U3_AMT = ?
                 , RET_U4_AMT = ?
                 , EDU_U4_AMT = ?
                 , END_U4_AMT = ?
                 , UPAY_RATE  = ?
                 , UPT_MAN    = ?
                 , UPT_YMD    = SYSDATE
             WHERE PIS_YY     = ?
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc160
								* @description : 고용보험사업계획
								***********************************************************************
								* 2007/04/11      박인이        최초작성.
								***********************************************************************
				-->

				<!-- 고용보험사업계획 존재여부 CHECK -->
				<sql name="MISC160_SHR_03">
								<description>
												고용보험사업계획 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_BUDGETMST
            WHERE  PIS_YY  = ?
            AND    SAL_GBN = '1'
            AND    HINS_AMT IS NOT NULL
            AND    ROWNUM  = 1
            ]]>
								</query>
				</sql>

				<!-- 고용보험요율정보 데이터 생성 -->
				<sql name="MISC160_UPT">
								<description>
												고용보험요율정보 데이터 생성
								</description>
								<query>
												<![CDATA[
            UPDATE T_MI_PAYBASE
               SET HSI_PCT      = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE PIS_YY       = ?
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc170
								* @description : 건강검진사업계획
								***********************************************************************
								* 2007/04/11      박인이        최초작성.
								***********************************************************************
				-->

				<!-- 건강검진사업계획 존재여부 CHECK -->
				<sql name="MISC170_SHR_03">
								<description>
												건강검진사업계획 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_BUDGETMST
            WHERE  PIS_YY  = ?
            AND    SAL_GBN = '1'
            AND    CHIT_AMT IS NOT NULL
            AND    ROWNUM  = 1
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc180
								* @description : 건강보험사업계획
								***********************************************************************
								* 2007/04/11      박인이        최초작성.
								***********************************************************************
				-->

				<!-- 건강보험사업계획 존재여부 CHECK -->
				<sql name="MISC180_SHR_03">
								<description>
												건강보험사업계획 존재여부 CHECK
								</description>
								<query>
												<![CDATA[
            SELECT COUNT(*) CNT
            FROM T_MI_BUDGETMST
            WHERE  PIS_YY  = ?
            AND    SAL_GBN = '1'
            AND    HINU_AMT IS NOT NULL
            AND    ROWNUM  = 1
            ]]>
								</query>
				</sql>

				<!-- 건강보험요율정보 데이터 생성 -->
				<sql name="MISC180_UPT">
								<description>
												건강보험요율정보 데이터 생성
								</description>
								<query>
												<![CDATA[
            UPDATE T_MI_PAYBASE
               SET HUI_PCT   = ?
                 , UPT_MAN   = ?
                 , UPT_YMD   = SYSDATE
             WHERE PIS_YY    = ?
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc190
								* @description : 월별직종별 인원계획
								***********************************************************************
								* 2007/04/25     이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 월별직종별 인원계획 조회 -->
				<sql name="MISC190_SHR">
								<description>월별직종별 인원계획 조회</description>
								<query>
												<![CDATA[
            SELECT S.HIR_MM                            as HIR_MM
                 , S.OCC_A                             as OCC_SA
                 , S.OCC_M                             as OCC_SM
                 , S.OCC_CNT                           as OCC_SCNT
                 , P.OCC_A                             as OCC_PA
                 , P.OCC_M                             as OCC_PM
                 , P.OCC_CNT                           as OCC_PCNT
              FROM (-- 실적 인원
                    SELECT TO_CHAR(REG_YMD,'MM')       as HIR_MM
                         , (SELECT COUNT(*)
                              FROM T_CM_PERSON
                             WHERE HIR_YMD <= L.REG_YMD
                               AND (RET_YMD is NULL OR RET_YMD >= L.REG_YMD)
                               AND OCC_CD = 'A'
                            )                          as OCC_A
                         , (SELECT COUNT(*)
                              FROM T_CM_PERSON
                             WHERE HIR_YMD <= L.REG_YMD
                               AND (RET_YMD is NULL OR RET_YMD >= L.REG_YMD)
                               AND OCC_CD = 'M'
                            )                          as OCC_M
                         , (SELECT COUNT(*)
                              FROM T_CM_PERSON
                             WHERE HIR_YMD <= L.REG_YMD
                               AND (RET_YMD is NULL OR RET_YMD >= L.REG_YMD)
                               AND OCC_CD IN ('A','M')
                            )                          as OCC_CNT
                      FROM (SELECT SUBSTR(REG_YMD,1,6) as REG_YM
                                 , LAST_DAY(H.REG_YMD) as REG_YMD
                              FROM T_DI_HOLIDAY H
                             WHERE SUBSTR(REG_YMD, 7,2) = '01'
                               AND REG_YMD BETWEEN ?||'0101' AND ?|| '1231'
                               AND SUBSTR(REG_YMD,1,6)   < NVL((SELECT MIN(HIR_YY || HIR_MM)
                                                                  FROM T_MI_BUDGETMST
                                                                 WHERE PIS_YY = ?    -- 계획년도
                                                                   AND HIR_YY = ?    -- 실적년도
                                                                  AND SAL_GBN  = '1'),?|| '12')
                            ) L
                    UNION ALL
                    -- 계획 인원(말인원)
                    SELECT HIR_MM
                         , SUM(CASE WHEN OCC_CD  = 'A' THEN 1 END) as OCC_A
                         , SUM(CASE WHEN OCC_CD  = 'M' THEN 1 END) as OCC_M
                         , COUNT(*)                                as OCC_CNT
                      FROM T_MI_BUDGETMST
                     WHERE PIS_YY = ?    -- 계획년도
                       AND HIR_YY = ?    -- 실적년도
                       AND SAL_GBN  = '1'
                     GROUP BY HIR_MM
                    )      S
                 , (-- 계획인원
                    SELECT HIR_MM
                         , SUM(CASE WHEN OCC_CD  = 'A' THEN 1 END) as OCC_A
                         , SUM(CASE WHEN OCC_CD  = 'M' THEN 1 END) as OCC_M
                         , COUNT(*)                                as OCC_CNT
                      FROM T_MI_BUDGETMST
                     WHERE PIS_YY = ?    -- 계획년도
                       AND HIR_YY = PIS_YY
                       AND SAL_GBN  = '1'
                     GROUP BY HIR_MM
                    )      P
             WHERE S.HIR_MM = P.HIR_MM(+)
            ]]>
								</query>
				</sql>

				<!-- 월별직종별 인원계획 인쇄 -->
				<sql name="MISC190_SHR_PRINT">
								<description>월별직종별 인원계획 조회</description>
								<query>
												<![CDATA[

		            SELECT A.MONTH,CNT1_A, CNT1_M, CNT1_SUM, CNT2_A, CNT_A, CNT_M, CNT_SUM,
				       TRUNC(((B.CNT_A-A.CNT1_A)/A.CNT1_A*100),1) AVR_A,
				       TRUNC(((B.CNT_M-A.CNT1_M)/A.CNT1_M*100),1) AVR_M
FROM
(
 SELECT Decode(MONTH,NULL,'연인원',MONTH) MONTH, Sum(CNT1_A) CNT1_A, Sum(CNT1_M) CNT1_M, Sum(CNT1_SUM) CNT1_SUM, Sum(CNT2_A) CNT2_A
			FROM
			(
	             SELECT '1' AS GUBUN ,'  1월' AS MONTH,
               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
				       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
				       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
		               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '0131' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '0131' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
				 FROM T_MI_PERSON A, T_CM_AHISTORY B
				 WHERE ( A.HIR_YMD <= ? || '0131'
						  AND ( A.RET_YMD >= ? || '0131' OR A.RET_YMD IS NULL ) )
						  AND A.DPT_CD <> 'AA'
		          AND A.ENO_NO = B.ENO_NO
		          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0131'  )
		          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
		                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0131')  )
				GROUP BY B.OCC_CD
				  UNION ALL
				SELECT '1' AS GUBUN ,'  2월' AS MONTH,
               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
				       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
				       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
		               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '0228' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '0228' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
				 FROM T_MI_PERSON A, T_CM_AHISTORY B
				 WHERE ( A.HIR_YMD <= ? || '0228'
						  AND ( A.RET_YMD >= ? || '0228' OR A.RET_YMD IS NULL ) )
						  AND A.DPT_CD <> 'AA'
		          AND A.ENO_NO = B.ENO_NO
		          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0228'  )
		          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
		                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0228')  )
				GROUP BY B.OCC_CD
				  UNION ALL
				SELECT '1' AS GUBUN ,'  3월' AS MONTH,
               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
				       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
				       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
		               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '0331' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '0331' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
				 FROM T_MI_PERSON A, T_CM_AHISTORY B
				 WHERE ( A.HIR_YMD <= ? || '0331'
						  AND ( A.RET_YMD >= ? || '0331' OR A.RET_YMD IS NULL ) )
						  AND A.DPT_CD <> 'AA'
		          AND A.ENO_NO = B.ENO_NO
		          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0331'  )
		          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
		                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0331')  )
				GROUP BY B.OCC_CD
				  UNION ALL
				SELECT '1' AS GUBUN ,'  4월' AS MONTH,
               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
				       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
				       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
		               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '0430' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '0430' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
				 FROM T_MI_PERSON A, T_CM_AHISTORY B
				 WHERE ( A.HIR_YMD <= ? || '0430'
						  AND ( A.RET_YMD >= ? || '0430' OR A.RET_YMD IS NULL ) )
						  AND A.DPT_CD <> 'AA'
		          AND A.ENO_NO = B.ENO_NO
		          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0430'  )
		          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
		                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0430')  )

				GROUP BY B.OCC_CD
				  UNION ALL
				SELECT '1' AS GUBUN ,'  5월' AS MONTH,
               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
				       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
				       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
		               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '0531' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '0531' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
				 FROM T_MI_PERSON A, T_CM_AHISTORY B
				 WHERE ( A.HIR_YMD <= ? || '0531'
						  AND ( A.RET_YMD >= ? || '0531' OR A.RET_YMD IS NULL ) )
						  AND A.DPT_CD <> 'AA'
		          AND A.ENO_NO = B.ENO_NO
		          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0531'  )
		          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
		                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0531')  )
				GROUP BY B.OCC_CD
				  UNION ALL
				SELECT '1' AS GUBUN ,'  6월' AS MONTH,
               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
				       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
				       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
		               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '0630' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '0630' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
				 FROM T_MI_PERSON A, T_CM_AHISTORY B
				 WHERE ( A.HIR_YMD <= ? || '0630'
						  AND ( A.RET_YMD >= ? || '0630' OR A.RET_YMD IS NULL ) )
						  AND A.DPT_CD <> 'AA'
		          AND A.ENO_NO = B.ENO_NO
		          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0630'  )
		          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
		                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0630')  )
				GROUP BY B.OCC_CD
				  UNION ALL
				SELECT '1' AS GUBUN ,'  7월' AS MONTH,
               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
				       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
				       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
		               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '0731' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '0731' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
				 FROM T_MI_PERSON A, T_CM_AHISTORY B
				 WHERE ( A.HIR_YMD <= ? || '0731'
						  AND ( A.RET_YMD >= ? || '0731' OR A.RET_YMD IS NULL ) )
						  AND A.DPT_CD <> 'AA'
		          AND A.ENO_NO = B.ENO_NO
		          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0731'  )
		          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
		                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0731')  )
				GROUP BY B.OCC_CD
				  UNION ALL
				SELECT '1' AS GUBUN ,'  8월' AS MONTH,
               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
				       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
				       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
		               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '0831' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '0831' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
				 FROM T_MI_PERSON A, T_CM_AHISTORY B
				 WHERE ( A.HIR_YMD <= ? || '0831'
						  AND ( A.RET_YMD >= ? || '0831' OR A.RET_YMD IS NULL ) )
						  AND A.DPT_CD <> 'AA'
		          AND A.ENO_NO = B.ENO_NO
		          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0831'  )
		          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
		                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0831')  )
				GROUP BY B.OCC_CD
				  UNION ALL
				SELECT '1' AS GUBUN ,'  9월' AS MONTH,
               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
				       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
				       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
		               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '0930' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '0930' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
				 FROM T_MI_PERSON A, T_CM_AHISTORY B
				 WHERE ( A.HIR_YMD <= ? || '0930'
						  AND ( A.RET_YMD >= ? || '0930' OR A.RET_YMD IS NULL ) )
						  AND A.DPT_CD <> 'AA'
		          AND A.ENO_NO = B.ENO_NO
		          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0930'  )
		          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
		                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '0930')  )
				GROUP BY B.OCC_CD
				  UNION ALL

				SELECT GUBUN, MONTH,
		             NVL((SELECT Count(TSEQ_NO) FROM T_MI_PERSON WHERE PIS_YY = ? AND HIR_YM <= ? || '10' AND OCC_CD = 'A'),0)+CNT1_A ,
		             NVL((SELECT Count(TSEQ_NO) FROM T_MI_PERSON WHERE PIS_YY = ? AND HIR_YM <= ? || '10' AND OCC_CD = 'M'),0)+CNT1_M ,
		             NVL((SELECT Count(TSEQ_NO) FROM T_MI_PERSON WHERE PIS_YY = ? AND HIR_YM <= ? || '10'),0)+CNT1_SUM ,
		             CNT2_A
		      	FROM
		      	(
					SELECT '1' AS GUBUN ,'10월' AS MONTH,
	               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
					       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
					       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
			               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '1031' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '1031' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
					 FROM T_MI_PERSON A, T_CM_AHISTORY B
					 WHERE ( A.HIR_YMD <= ? || '1031'
							  AND ( A.RET_YMD >= ? || '1031' OR A.RET_YMD IS NULL ) )
							  AND A.DPT_CD <> 'AA'
			          AND A.ENO_NO = B.ENO_NO
			          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '1031'  )
			          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
			                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '1031')  )
					GROUP BY B.OCC_CD
				) SUB
				UNION ALL
				SELECT GUBUN, MONTH,
		             NVL((SELECT Count(TSEQ_NO) FROM T_MI_PERSON WHERE PIS_YY = ? AND HIR_YM <= ? || '11' AND OCC_CD = 'A'),0)+CNT1_A ,
		             NVL((SELECT Count(TSEQ_NO) FROM T_MI_PERSON WHERE PIS_YY = ? AND HIR_YM <= ? || '11' AND OCC_CD = 'M'),0)+CNT1_M ,
		             NVL((SELECT Count(TSEQ_NO) FROM T_MI_PERSON WHERE PIS_YY = ? AND HIR_YM <= ? || '11'),0)+CNT1_SUM ,
		             CNT2_A
		      	FROM
		      	(
					SELECT '1' AS GUBUN ,'11월' AS MONTH,
	               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
					       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
					       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
			               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '1130' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '1130' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
					 FROM T_MI_PERSON A, T_CM_AHISTORY B
					 WHERE ( A.HIR_YMD <= ? || '1130'
							  AND ( A.RET_YMD >= ? || '1130' OR A.RET_YMD IS NULL ) )
							  AND A.DPT_CD <> 'AA'
			          AND A.ENO_NO = B.ENO_NO
			          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '1130'  )
			          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
			                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '1030')  )
					GROUP BY B.OCC_CD
				) SUB
				  UNION ALL
				SELECT GUBUN, MONTH,
		             NVL((SELECT Count(TSEQ_NO) FROM T_MI_PERSON WHERE PIS_YY = ? AND HIR_YM <= ? || '12' AND OCC_CD = 'A'),0)+CNT1_A ,
		             NVL((SELECT Count(TSEQ_NO) FROM T_MI_PERSON WHERE PIS_YY = ? AND HIR_YM <= ? || '12' AND OCC_CD = 'M'),0)+CNT1_M ,
		             NVL((SELECT Count(TSEQ_NO) FROM T_MI_PERSON WHERE PIS_YY = ? AND HIR_YM <= ? || '12'),0)+CNT1_SUM ,
		             CNT2_A
		      	FROM
		      	(
					SELECT '1' AS GUBUN ,'12월' AS MONTH,
	               		   Sum(COUNT(CASE WHEN B.OCC_CD = 'A' THEN B.ENO_NO END )) AS CNT1_A,
					       Sum(Count(CASE WHEN B.OCC_CD = 'M' THEN B.ENO_NO END )) AS CNT1_M,
					       Sum(Count(CASE WHEN B.OCC_CD IN ('A','M') THEN B.ENO_NO END )) AS CNT1_SUM,
			               Sum((SELECT COUNT(ENO_NO) FROM T_ME_PERSON WHERE ( To_Char(HIR_YMD,'YYYYMMDD') <= ? || '1231' AND ( To_Char(RET_YMD,'YYYYMMDD') >= ? || '1231' OR RET_YMD IS NULL ) ) ) ) AS CNT2_A
					 FROM T_MI_PERSON A, T_CM_AHISTORY B
					 WHERE ( A.HIR_YMD <= ? || '1231'
							  AND ( A.RET_YMD >= ? || '1231' OR A.RET_YMD IS NULL ) )
							  AND A.DPT_CD <> 'AA'
			          AND A.ENO_NO = B.ENO_NO
			          AND B.STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '1231'  )
			          AND B.SEQ_NO = (SELECT Max(SEQ_NO) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
			                            AND STR_YMD = (SELECT Max(STR_YMD) FROM T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO AND STR_YMD <= ? || '1231')  )
					GROUP BY B.OCC_CD
					) SUB
				) MAIN
		GROUP BY ROLLUP(MONTH)
) A	,
(
SELECT Decode(MONTH,NULL,'연인원',MONTH) MONTH, Sum(CNT_A) CNT_A, Sum(CNT_M) CNT_M, Sum(CNT_SUM) CNT_SUM
				FROM
							(
				          SELECT '1' AS GUBUN ,'  1월' AS MONTH,
				           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
				           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
			           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
			    FROM T_MI_PERSON
				    WHERE ( HIR_YMD <= ? || '0131'
				      AND ( RET_YMD >= ? || '0131' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
				    GROUP BY OCC_CD
				    UNION ALL
				    SELECT '1' AS GUBUN ,'  2월' AS MONTH,
				           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
				           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
				           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
				    FROM T_MI_PERSON
				    WHERE ( HIR_YMD <= ? || '0228'
				      AND ( RET_YMD >= ? || '0228' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
				    GROUP BY OCC_CD
				    UNION ALL
				    SELECT '1' AS GUBUN ,'  3월' AS MONTH,
				           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
				           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
				           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
				    FROM T_MI_PERSON
				    WHERE ( HIR_YMD <= ? || '0331'
				      AND ( RET_YMD >= ? || '0331' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
				    GROUP BY OCC_CD
				    UNION ALL
				    SELECT '1' AS GUBUN ,'  4월' AS MONTH,
			           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
			           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
			           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
			    FROM T_MI_PERSON
			    WHERE 	  ( HIR_YMD <= ? || '0430'
				      AND ( RET_YMD >= ? || '0430' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
			    GROUP BY OCC_CD
			    UNION ALL
			    SELECT '1' AS GUBUN ,'  5월' AS MONTH,
			           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
			           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
			           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
			    FROM T_MI_PERSON
			    WHERE ( HIR_YMD <= ? || '0531'
				      AND ( RET_YMD >= ? || '0531' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
			    GROUP BY OCC_CD
			    UNION ALL
			    SELECT '1' AS GUBUN ,'  6월' AS MONTH,
			           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
			           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
		           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
		    FROM T_MI_PERSON
		    WHERE ( HIR_YMD <= ? || '0630'
				      AND ( RET_YMD >= ? || '0630' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
		    GROUP BY OCC_CD
		    UNION ALL
		    SELECT '1' AS GUBUN ,'  7월' AS MONTH,
		           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
		           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
		           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
		    FROM T_MI_PERSON
		    WHERE ( HIR_YMD <= ? || '0731'
				      AND ( RET_YMD >= ? || '0731' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
		    GROUP BY OCC_CD
		    UNION ALL
		    SELECT '1' AS GUBUN ,'  8월' AS MONTH,
		           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
		           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
		           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
		    FROM T_MI_PERSON
		    WHERE ( HIR_YMD <= ? || '0831'
				      AND ( RET_YMD >= ? || '0831' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
		    GROUP BY OCC_CD
		    UNION ALL
		    SELECT '1' AS GUBUN ,'  9월' AS MONTH,
	           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
	           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
	           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
	    FROM T_MI_PERSON
	    WHERE ( HIR_YMD <= ? || '0930'
				      AND ( RET_YMD >= ? || '0930' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
	    GROUP BY OCC_CD
	    UNION ALL
	    SELECT '1' AS GUBUN ,'10월' AS MONTH,
	           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
	           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
	           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
	    FROM T_MI_PERSON
	    WHERE ( HIR_YMD <= ? || '1031'
				      AND ( RET_YMD >= ? || '1031' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
	    GROUP BY OCC_CD
	    UNION ALL
	    SELECT '1' AS GUBUN ,'11월' AS MONTH,
	           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
	           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
	           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
	    FROM T_MI_PERSON
	    WHERE ( HIR_YMD <= ? || '1130'
				      AND ( RET_YMD >= ? || '1130' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
	    GROUP BY OCC_CD
	    UNION ALL
	    SELECT '1' AS GUBUN ,'12월' AS MONTH,
	           Sum(COUNT(CASE WHEN OCC_CD = 'A' THEN TSEQ_NO END )) AS CNT_A,
	           Sum(Count(CASE WHEN OCC_CD = 'M' THEN TSEQ_NO END )) AS CNT_M,
	           Sum(Count(CASE WHEN OCC_CD IN ('A','M') THEN TSEQ_NO END )) AS CNT_SUM
	    FROM T_MI_PERSON
	    WHERE ( HIR_YMD <= ? || '1231'
				      AND ( RET_YMD >= ? || '1231' OR RET_YMD IS NULL ) )
				      AND PIS_YY = ?
				      AND DPT_CD <> 'AA'
	    GROUP BY OCC_CD
	    ) MAIN
	GROUP BY ROLLUP(MONTH)
) B
WHERE A.MONTH = B.MONTH

	            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc200
								* @description : 실적대비 인원충원계획
								***********************************************************************
								* 2007/04/25     이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 실적대비 인원충원계획 조회 -->
				<sql name="MISC200_SHR">
								<description>
												실적대비 인원충원계획 조회
								</description>
								<query>
												<![CDATA[

            	WITH Q_CP_WORKLOG AS
                 (SELECT PIS_YY,         -- 년도
                         PAY_YMD as STR_YM,        -- 대상시작년월
                         APY_YMD as END_YM,        -- 대상종료년월
                         PRO_STS         -- 상태
                    FROM T_CP_WORKLOG
                   WHERE PIS_MM  = ' '
                     AND OCC_CD  = ' '
                     AND SAL_GBN = 'G'
                     AND SEQ     = '1'
                     AND PIS_YY  = ?
                  )
            SELECT 'A'          as GUBUN                        -- 총계
                 , B.COMM_NM    as HEAD_NM                      -- 부분 코드
                 , CASE WHEN P.OCC_CD = 'A' THEN '사무직' WHEN P.OCC_CD = 'M' THEN '예비직' ELSE '기타' END as OCC_NM                      -- 사무/예비직구분
                 , Q.STR_YM                       -- 시작년월
                 , COUNT(CASE WHEN P.EMP_CD = '1' -- 정규직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SA_CNT       -- 현원정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2' -- 파견직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SB_CNT       -- 현원파견직계
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PA_CNT       -- 년말정규직증감
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PB_CNT       -- 년말파견직증감
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MA_CNT       -- 증감정규직
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MB_CNT       -- 증감파견직
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TA_CNT       -- 추정정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TB_CNT       -- 추정파견직계
                 , B.SORT_NO
              FROM T_MI_PERSON  P
                 , Q_CP_WORKLOG Q
                 , T_CM_COMMON  B
             WHERE P.HEAD_CD  = B.COMM_CD
               AND P.PIS_YY   = Q.PIS_YY
               AND B.CD_GBN   = 'B1'
               AND B.SORT_NO  > 0
               AND ((HIR_YMD <= Q.STR_YM||'31' AND ( RET_YMD IS NULL OR RET_YMD >= Q.STR_YM||'31')) OR HIR_YM IS NOT NULL)
             GROUP BY Q.STR_YM, P.HEAD_CD, B.COMM_NM, P.OCC_CD, B.SORT_NO
            UNION ALL
            SELECT 'A'          as GUBUN                        -- 총계계
                 , '계'         as HEAD_NM                      -- 부분 코드
                 , CASE WHEN P.OCC_CD = 'A' THEN '사무직' WHEN P.OCC_CD = 'M' THEN '예비직' ELSE '기타' END as OCC_NM                      -- 사무/예비직구분
                 , Q.STR_YM                       -- 시작년월
                 , COUNT(CASE WHEN P.EMP_CD = '1' -- 정규직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SA_CNT       -- 현원정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2' -- 파견직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SB_CNT       -- 현원파견직계
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PA_CNT       -- 년말정규직증감
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PB_CNT       -- 년말파견직증감
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MA_CNT       -- 증감정규직
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MB_CNT       -- 증감파견직
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TA_CNT       -- 추정정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TB_CNT       -- 추정파견직계
                 , 99           as SORT_NO
              FROM T_MI_PERSON  P
                 , Q_CP_WORKLOG Q
             WHERE P.PIS_YY   = Q.PIS_YY
           		AND ((HIR_YMD <= Q.STR_YM||'31' AND ( RET_YMD IS NULL OR RET_YMD >= Q.STR_YM||'31')) OR HIR_YM IS NOT NULL)
             GROUP BY Q.STR_YM, P.OCC_CD
            UNION ALL
            SELECT 'B'          as GUBUN                        -- 본사
                 , B.COMM_NM    as HEAD_NM                      -- 부분 코드
                 , CASE WHEN P.OCC_CD = 'A' THEN '사무직' WHEN P.OCC_CD = 'M' THEN '예비직' ELSE '기타' END as OCC_NM                      -- 사무/예비직구분
                 , Q.STR_YM                       -- 시작년월
                 , COUNT(CASE WHEN P.EMP_CD = '1' -- 정규직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SA_CNT       -- 현원정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2' -- 파견직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SB_CNT       -- 현원파견직계
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PA_CNT       -- 년말정규직증감
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PB_CNT       -- 년말파견직증감
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MA_CNT       -- 증감정규직
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MB_CNT       -- 증감파견직
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TA_CNT       -- 추정정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TB_CNT       -- 추정파견직계
                 , B.SORT_NO
              FROM T_MI_PERSON  P
                 , Q_CP_WORKLOG Q
                 , T_CM_COMMON  B
             WHERE P.HEAD_CD  = B.COMM_CD
               AND P.PIS_YY   = Q.PIS_YY
               AND B.CD_GBN   = 'B1'
               AND B.SORT_NO  > 0
               AND P.GBN_CD  IN ('1','5')  -- 본사/지사 구분
               AND ((HIR_YMD <= Q.STR_YM||'31' AND ( RET_YMD IS NULL OR RET_YMD >= Q.STR_YM||'31')) OR HIR_YM IS NOT NULL)
             GROUP BY Q.STR_YM, P.HEAD_CD, B.COMM_NM, P.OCC_CD, B.SORT_NO
            UNION ALL
            SELECT 'B'          as GUBUN                        -- 본사계
                 , '계'         as HEAD_NM                      -- 부분 코드
                 , CASE WHEN P.OCC_CD = 'A' THEN '사무직' WHEN P.OCC_CD = 'M' THEN '예비직' ELSE '기타' END as OCC_NM                      -- 사무/예비직구분
                 , Q.STR_YM                       -- 시작년월
                 , COUNT(CASE WHEN P.EMP_CD = '1' -- 정규직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SA_CNT       -- 현원정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2' -- 파견직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SB_CNT       -- 현원파견직계
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PA_CNT       -- 년말정규직증감
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PB_CNT       -- 년말파견직증감
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MA_CNT       -- 증감정규직
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MB_CNT       -- 증감파견직
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TA_CNT       -- 추정정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TB_CNT       -- 추정파견직계
                 , 99           as SORT_NO
              FROM T_MI_PERSON  P
                 , Q_CP_WORKLOG Q
             WHERE P.PIS_YY   = Q.PIS_YY
               AND P.GBN_CD  IN ('1','5')  -- 본사/지사 구분
               AND ((HIR_YMD <= Q.STR_YM||'31' AND ( RET_YMD IS NULL OR RET_YMD >= Q.STR_YM||'31')) OR HIR_YM IS NOT NULL)
             GROUP BY Q.STR_YM, P.OCC_CD
            UNION ALL
            SELECT 'C'          as GUBUN                        -- 지방
                 , B.COMM_NM    as HEAD_NM                      -- 부분 코드
                 , CASE WHEN P.OCC_CD = 'A' THEN '사무직' WHEN P.OCC_CD = 'M' THEN '예비직' ELSE '기타' END as OCC_NM                      -- 사무/예비직구분
                 , Q.STR_YM                       -- 시작년월
                 , COUNT(CASE WHEN P.EMP_CD = '1' -- 정규직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SA_CNT       -- 현원정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2' -- 파견직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SB_CNT       -- 현원파견직계
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PA_CNT       -- 년말정규직증감
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PB_CNT       -- 년말파견직증감
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MA_CNT       -- 증감정규직
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MB_CNT       -- 증감파견직
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TA_CNT       -- 추정정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TB_CNT       -- 추정파견직계
                 , B.SORT_NO
              FROM T_MI_PERSON  P
                 , Q_CP_WORKLOG Q
                 , T_CM_COMMON  B
             WHERE P.HEAD_CD  = B.COMM_CD
               AND P.PIS_YY   = Q.PIS_YY
               AND B.CD_GBN   = 'B1'
               AND B.SORT_NO  > 0
               AND P.GBN_CD  IN ('2','3','4')  -- 지방
               AND ((HIR_YMD <= Q.STR_YM||'31' AND ( RET_YMD IS NULL OR RET_YMD >= Q.STR_YM||'31')) OR HIR_YM IS NOT NULL)
             GROUP BY Q.STR_YM, P.HEAD_CD, B.COMM_NM, P.OCC_CD, B.SORT_NO
            UNION ALL
            SELECT 'C'          as GUBUN                        -- 지방계
                 , '계'         as HEAD_NM                      -- 부분 코드
                 , CASE WHEN P.OCC_CD = 'A' THEN '사무직' WHEN P.OCC_CD = 'M' THEN '예비직' ELSE '기타' END as OCC_NM                      -- 사무/예비직구분
                 , Q.STR_YM                       -- 시작년월
                 , COUNT(CASE WHEN P.EMP_CD = '1' -- 정규직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SA_CNT       -- 현원정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2' -- 파견직
                               AND P.HIR_YM IS NULL
                              THEN P.TSEQ_NO
                         END)                                  as EMP_SB_CNT       -- 현원파견직계
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PA_CNT       -- 년말정규직증감
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                              THEN P.TSEQ_NO
                         END)                                  as EMP_PB_CNT       -- 년말파견직증감
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MA_CNT       -- 증감정규직
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND  SUBSTR(P.HIR_YM,1,4)       = P.PIS_YY
                              THEN P.TSEQ_NO
                         END)                                  as EMP_MB_CNT       -- 증감파견직
                 , COUNT(CASE WHEN P.EMP_CD = '1'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TA_CNT       -- 추정정규직계
                 , COUNT(CASE WHEN P.EMP_CD = '2'
                               AND ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                              THEN P.TSEQ_NO
                         END)                                  as EMP_TB_CNT       -- 추정파견직계
                 , 99           as SORT_NO
              FROM T_MI_PERSON  P
                 , Q_CP_WORKLOG Q
             WHERE P.PIS_YY   = Q.PIS_YY
               AND P.GBN_CD  IN ('2','3','4')  -- 지방
               AND ((HIR_YMD <= Q.STR_YM||'31' AND ( RET_YMD IS NULL OR RET_YMD >= Q.STR_YM||'31')) OR HIR_YM IS NOT NULL)
             GROUP BY Q.STR_YM, P.OCC_CD
             ORDER BY GUBUN, SORT_NO, OCC_NM

            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc210
								* @description : 직급별 인원충원 현황(직급별 충원내용)
								***********************************************************************
								* 2007/04/25     이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 직급별 인원충원 현황(직급별 충원내용) 조회 -->
				<sql name="MISC210_SHR">
								<description>
												직급별 인원충원 현황(직급별 충원내용) 조회
								</description>
								<query>
												<![CDATA[

            SELECT  A.GUBUN,A.PIS_YY,A.PIS_MN,B.E_CNT,BJ,BD,CJ,GJ,DR,S4,S5M,S5W,CTM,CTW,SAL,ETC
            FROM
			(
			           SELECT SUBSTR(REG_YMD, 1,4) as PIS_YY
			                         , SUBSTR(REG_YMD, 5,2) as PIS_MM
			                         , CASE WHEN SUBSTR(REG_YMD, 1,4) = ? THEN SUBSTR(REG_YMD, 5,2)||'월'
			                                                                   ELSE SUBSTR(REG_YMD, 1,4)||'년 말'
			                                END             as PIS_MN
			                         , SUBSTR(REG_YMD, 1,4) || SUBSTR(REG_YMD, 5,2) as PIS_YM
			                         , CASE WHEN SUBSTR(REG_YMD, 1,4) = ? THEN SUBSTR(REG_YMD, 1,4)||' 년'||CHR(13)||CHR(10)||'신규인원'
			                                                                   ELSE SUBSTR(REG_YMD, 1,4)||' 년'||CHR(13)||CHR(10)||'충원'
			                                END             as GUBUN
			                      FROM T_DI_HOLIDAY
			                     WHERE SUBSTR(REG_YMD,1,6) BETWEEN ?|| '12' AND ?|| '12'
			                       AND SUBSTR(REG_YMD,7,2) > '27'
			                     GROUP BY SUBSTR(REG_YMD, 1,4), SUBSTR(REG_YMD, 5,2)
			) A,
			(
			     SELECT
			                   SubStr(Decode(SUBSTR(A.HIR_YM,1,4),'2008',SUBSTR(A.HIR_YM,1,4)||SUBSTR(A.HIR_YM,5,2),SUBSTR(A.HIR_YM,1,4)||'12'),1,4) HIR_YY
			                 , SubStr(Decode(SUBSTR(A.HIR_YM,1,4),'2008',SUBSTR(A.HIR_YM,1,4)||SUBSTR(A.HIR_YM,5,2),SUBSTR(A.HIR_YM,1,4)||'12'),5,2) HIR_MM
			                 , COUNT(A.TSEQ_NO)                                                                 as E_CNT
			                 , COUNT(CASE WHEN A.JOB_CD IN ('1C','1N')                     THEN A.TSEQ_NO END)  as BJ
			                 , COUNT(CASE WHEN A.JOB_CD  =  '1D'                           THEN A.TSEQ_NO END)  as BD
			                 , COUNT(CASE WHEN A.JOB_CD  =  '1E'                           THEN A.TSEQ_NO END)  as CJ
			                 , COUNT(CASE WHEN A.JOB_CD  =  '20'                           THEN A.TSEQ_NO END)  as GJ
			                 , COUNT(CASE WHEN A.JOB_CD  =  '30'                           THEN A.TSEQ_NO END)  as DR
			                 , COUNT(CASE WHEN A.JOB_CD  =  '40'                           THEN A.TSEQ_NO END)  as S4
			                 , COUNT(CASE WHEN A.JOB_CD  =  '50' AND A.MF_TAG = 'M'        THEN A.TSEQ_NO END)  as S5M
			                 , COUNT(CASE WHEN A.JOB_CD  =  '50' AND A.MF_TAG <> ('M')     THEN A.TSEQ_NO END)  as S5W
			                 , COUNT(CASE WHEN A.JOB_CD  =  'Z1' AND A.MF_TAG = 'M'        THEN A.TSEQ_NO END)  as CTM
			                 , COUNT(CASE WHEN A.JOB_CD  =  'Z1' AND A.MF_TAG <> ('M')     THEN A.TSEQ_NO END)  as CTW
			                 , COUNT(CASE WHEN A.JOB_CD  =  '8D'                           THEN A.TSEQ_NO END)  as SAL
			                 , COUNT(CASE WHEN A.JOB_CD  NOT IN ('1C','1N','1D','1E','20','30','40','50','Z1','8D') THEN A.TSEQ_NO END)  as ETC
	              FROM T_MI_LEVYPLAN A
	             WHERE A.PIS_YY   = ?
	               AND LEVY_CD IN ('1', '2', '3')
	          GROUP BY Decode(SUBSTR(A.HIR_YM,1,4),'2008',SUBSTR(A.HIR_YM,1,4)||SUBSTR(A.HIR_YM,5,2),SUBSTR(A.HIR_YM,1,4)||'12')
	          ORDER BY Decode(SUBSTR(A.HIR_YM,1,4),'2008',SUBSTR(A.HIR_YM,1,4)||SUBSTR(A.HIR_YM,5,2),SUBSTR(A.HIR_YM,1,4)||'12')
			) B
			WHERE A.PIS_YY = B.HIR_YY(+)
			    AND A.PIS_MM = B.HIR_MM(+)


        ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc220
								* @description : 충원사유별 인원내역
								***********************************************************************
								* 2007/04/26     이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 충원사유별 인원내역 조회 -->
				<sql name="MISC220_SHR">
								<description>충원사유별 인원내역</description>
								<query>
												<![CDATA[
            SELECT B.HIR_YY
                 , B.LEVY_CD
                 , MAX(B.LEVY_NM)                               as LEVY_NM
                 , B.OCC_CD
                 , MAX(B.OCC_NM)                                as OCC_NM
                 , NVL(A.DPT_CD,'-')                            as DPT_CD
                 , SF_GET_DPTNAME('01', 'A4', A.DPT_CD)        as DPT_NM
                 , SF_GET_DPTSEQ('01', 'A4', A.DPT_CD)        as DPT_SEQ
                 , A.JOB_CD
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD)        as JOB_NM
                 , COUNT(A.TSEQ_NO)                             as ENO_CNT
              FROM (SELECT SUBSTR(HIR_YM,1,4)                   as HIR_YY
                         , LEVY_CD
                         , SF_GET_COMMNAME('01', 'G4', LEVY_CD) as LEVY_NM
                         , OCC_CD
                         , DPT_CD
                         , JOB_CD
                         , TSEQ_NO
                      FROM T_MI_LEVYPLAN
                     WHERE PIS_YY  = ?
                    )          A
                 , (SELECT H.HIR_YY
                         , L.COMM_CD as LEVY_CD
                         , L.COMM_NM as LEVY_NM
                         , C.COMM_CD as OCC_CD
                         , C.COMM_NM as OCC_NM
                      FROM T_CM_COMMON  L
                         , T_CM_COMMON  C
                         , (SELECT SUBSTR(REG_YMD,1,4) as HIR_YY
                              FROM T_DI_HOLIDAY
                             WHERE REG_YMD BETWEEN ?||'1231' AND ?||'0101'
                             GROUP BY SUBSTR(REG_YMD,1,4)
                            )           H
                     WHERE L.CD_GBN   = 'G4'
                       AND L.SORT_NO  >  0
                       AND L.COMM_CD IN ('1','2','3')
                       AND C.CD_GBN   = 'A1'
                       AND C.SORT_NO  >  0
                    )          B
             WHERE B.OCC_CD  = A.OCC_CD(+)
               AND B.LEVY_CD = A.LEVY_CD(+)
               AND B.HIR_YY  = A.HIR_YY(+)
             GROUP BY B.HIR_YY, B.LEVY_CD, B.OCC_CD, A.DPT_CD, A.JOB_CD
            UNION ALL
            SELECT B.HIR_YY
                 , B.LEVY_CD
                 , MAX(B.LEVY_NM)                               as LEVY_NM
                 , B.OCC_CD
                 , MAX(B.OCC_NM)                                as OCC_NM
                 , NVL(A.DPT_CD,'-')                            as DPT_CD
                 , SF_GET_DPTNAME('01', 'A4', A.DPT_CD)        as DPT_NM
                 , SF_GET_DPTSEQ('01', 'A4', A.DPT_CD)        as DPT_SEQ
                 , A.JOB_CD
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD)        as JOB_NM
                 , COUNT(A.TSEQ_NO)                             as ENO_CNT
              FROM (SELECT SUBSTR(HIR_YM,1,4)                   as HIR_YY
                         , SF_GET_COMMNAME('01', 'G4', LEVY_CD) as LEVY_NM
                         , OCC_CD
                         , DPT_CD
                         , JOB_CD
                         , TSEQ_NO
                      FROM T_MI_LEVYPLAN
                     WHERE PIS_YY  = ?
                       AND LEVY_CD IN ('1','2','3')
                    )          A
                 , (SELECT H.HIR_YY
                         , '9'       as LEVY_CD
                         , '계'      as LEVY_NM
                         , C.COMM_CD as OCC_CD
                         , C.COMM_NM as OCC_NM
                      FROM T_CM_COMMON  C
                         , (SELECT SUBSTR(REG_YMD,1,4) as HIR_YY
                              FROM T_DI_HOLIDAY
                             WHERE REG_YMD BETWEEN ?||'1231' AND ?||'0101'
                             GROUP BY SUBSTR(REG_YMD,1,4)
                            )           H
                     WHERE C.CD_GBN   = 'A1'
                       AND C.SORT_NO  >  0
                    )          B
             WHERE B.OCC_CD  = A.OCC_CD(+)
               AND B.HIR_YY  = A.HIR_YY(+)
             GROUP BY B.HIR_YY, B.LEVY_CD, B.OCC_CD, A.DPT_CD, A.JOB_CD
             ORDER BY HIR_YY, LEVY_CD, OCC_CD, DPT_SEQ
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc230
								* @description : 사업계획(인원)
								***********************************************************************
								* 2007/04/27     이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획(인원) 조회 -->
				<sql name="MISC230_SHR">
								<description>사업계획(인원)</description>
								<query>
												<![CDATA[
            -- 본사
            SELECT CASE WHEN D.GBN2_TAG = '1' THEN '본사' ELSE '지 방' END                                        as GBN2_TAG
                 , REPLACE(D.UPDPT_CD,'Z','17')                                                                  as UPDPT_CD
                 , SF_GET_DPTNAME('01', 'B2', REPLACE(D.UPDPT_CD,'Z','17'))                                     as UPDPT_NM
                 , (SELECT SORT_NO FROM T_CM_DEPT WHERE CD_GBN = 'B2' AND DPT_CD = REPLACE(D.UPDPT_CD,'Z','17')) as UPSORT_NO
                 , D.DPT_CD
                 , D.DPT_NM
                 , TO_CHAR(D.SORT_NO)                                                                            as SORT_NO
                 , (CASE WHEN D.GBN2_TAG = '1' THEN P.HEAD_CD ELSE NULL END)                                     as JIKGUN_CD
                 , SF_GET_COMMNAME('01', 'B1', (CASE WHEN D.GBN2_TAG = '1' THEN P.HEAD_CD ELSE NULL END))        as JIKGUN_NM
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND HIR_YMD < Q.STR_YM||'01'
                              THEN P.ENO_NO
                         END)                                                                                    as HIR_CNT    -- 현인원
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD             < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('A2','A3')
                               AND P.OCC_CD     = 'A'         -- 사무직
                               AND P.EMP_CD     = '1'         -- 정직원
                              THEN P.ENO_NO
                         END)                                                                                    as SJ_HCNT    -- 현원사장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('A2','A3')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SJ_PCNT    -- 충원사장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'A4'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JM_HCNT    -- 현원전무
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'A4'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JM_PCNT    -- 충원전무
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'A5'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SM_HCNT    -- 현원상무
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'A5'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SM_PCNT    -- 충원상무
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'AB'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SB_HCNT    -- 현원상무보
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'AB'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SB_PCNT    -- 충원상무보
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('1C','1N')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as BJ_HCNT    -- 현원부장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('1C','1N')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as BJ_PCNT    -- 충원부장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = '1D'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as BD_HCNT    -- 현원부대
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = '1D'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as BD_PCNT    -- 충원부대
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = '1E'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as CJ_HCNT    -- 현원차장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = '1E'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as CJ_PCNT    -- 충원차장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('20','2A','2B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GJ_HCNT    -- 현원과장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('20','2A','2B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GJ_PCNT    -- 충원과장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('30','3A','3B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as DR_HCNT    -- 현원대리
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('30','3A','3B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as DR_PCNT    -- 충원대리
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S4M_HCNT    -- 현원4사남
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S4M_PCNT    -- 충원4사남
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S4F_HCNT    -- 현원4사여
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S4F_PCNT    -- 충원4사여
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S5M_HCNT    -- 현원5사남
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S5M_PCNT    -- 충원5사남
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S5F_HCNT    -- 현원5사여
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S5F_PCNT    -- 충원5사여
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('7B','7C')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_HCNT    -- 현원장정비
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('7B','7C')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_PCNT    -- 충원장정비
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GG_HCNT    -- 현원고용계약
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GG_PCNT    -- 충원고용계약
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as HT_HCNT    -- 현원사무계
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as HT_PCNT    -- 충원사무계
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = ''
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JK_HCNT    -- 현원직장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'JJ'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JK_PCNT    -- 충원직장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'BJ'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as VJ_HCNT    -- 현원반장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'BJ'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as VJ_PCNT    -- 충원반장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'JY'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JI_HCNT    -- 현원주임
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'JY'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JI_PCNT    -- 충원주임
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = '8D'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as YU_HCNT    -- 현원영업사원
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = '8D'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as YU_PCNT    -- 충원영업사원
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GY_HCNT    -- 현원계약직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GY_PCNT    -- 충원계약직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as TT_HCNT    -- 현원택배계
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as TT_PCNT    -- 충원택배계
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_HCNT    -- 현원파견직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_PCNT    -- 충원파견직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)
                 - COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.EMP_CD     = '1'         -- 정직원
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_UCNT    -- 정직원증감
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)
                 - COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_UCNT    -- 파견직증감
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_YCNT    -- 정직원년말
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_YCNT    -- 파견직년말
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.END_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.END_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_CCNT    -- 충원정규직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.END_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.END_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_CCNT    -- 충원파견직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.END_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.END_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)
                 - COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_JCNT    -- 증감정직원
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.END_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.END_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)
                 - COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_JCNT    -- 증감파견직포함
                 , '('||MAX(SUBSTR(Q.STR_YM,5))||'.01)'                                                          as STR_MD
                 , CASE WHEN D.GBN2_TAG = '1' THEN '1' ELSE '2' END                                              as GBN2_SNO
              FROM T_MI_PERSON  P
                 , T_CM_DEPT    D
                 , T_CM_COMMON  J
                 , (SELECT PIS_YY,         -- 년도
                          PAY_YMD as STR_YM,        -- 대상시작년월
                          APY_YMD as END_YM,        -- 대상종료년월
                          PRO_STS         -- 상태
                     FROM T_CP_WORKLOG
                    WHERE PIS_MM  = ' '
                      AND OCC_CD  = ' '
                      AND SAL_GBN = 'G'
                      AND SEQ     = '1'
                      AND PIS_YY  = ?
                    )          Q
             WHERE P.PIS_YY   = Q.PIS_YY
               AND P.DPT_CD   = D.DPT_CD
               AND P.JOB_CD   = J.COMM_CD
               AND J.CD_GBN   = 'A2'
               AND J.SORT_NO  > 0
               AND D.CD_GBN   = 'A4'
            --   AND D.GBN2_TAG = '9' -- 지방
             GROUP BY D.GBN2_TAG, D.UPDPT_CD, D.DPT_CD, D.DPT_NM, D.SORT_NO, (CASE WHEN D.GBN2_TAG = '1' THEN P.HEAD_CD ELSE NULL END)
            UNION ALL
            -- 지방
            SELECT CASE WHEN D.GBN2_TAG = '1' THEN '본사' ELSE '지방' END                                        as GBN2_TAG
                 , REPLACE(D.UPDPT_CD,'Z','17')                                                                  as UPDPT_CD
                 , SF_GET_DPTNAME('01', 'B2', REPLACE(D.UPDPT_CD,'Z','17'))                                     as UPDPT_NM
                 , (SELECT SORT_NO FROM T_CM_DEPT WHERE CD_GBN = 'B2' AND DPT_CD = REPLACE(D.UPDPT_CD,'Z','17')) as UPSORT_NO
                 , P.HEAD_CD                                                                                     as DPT_CD
                 , SF_GET_COMMNAME('01', 'B1', P.HEAD_CD)                                                        as DPT_NM
                 , P.HEAD_CD                                                                                     as SORT_NO
                 , D.GBN_CD                                                                                      as JIKGUN_CD
                 , DECODE(D.GBN_CD,'2','지점','3','터미널','4','사무소')                                         as JIKGUN_NM
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND HIR_YMD < Q.STR_YM||'01'
                              THEN P.ENO_NO
                         END)                                                                                    as HIR_CNT    -- 현인원
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('A2','A3')
                               AND P.OCC_CD     = 'A'         -- 사무직
                               AND P.EMP_CD     = '1'         -- 정직원
                              THEN P.ENO_NO
                         END)                                                                                    as SJ_HCNT    -- 현원사장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('A2','A3')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SJ_PCNT    -- 충원사장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'A4'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JM_HCNT    -- 현원전무
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'A4'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JM_PCNT    -- 충원전무
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'A5'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SM_HCNT    -- 현원상무
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'A5'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SM_PCNT    -- 충원상무
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'AB'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SB_HCNT    -- 현원상무보
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'AB'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as SB_PCNT    -- 충원상무보
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('1C','1N')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as BJ_HCNT    -- 현원부장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('1C','1N')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as BJ_PCNT    -- 충원부장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = '1D'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as BD_HCNT    -- 현원부대
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = '1D'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as BD_PCNT    -- 충원부대
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = '1E'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as CJ_HCNT    -- 현원차장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = '1E'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as CJ_PCNT    -- 충원차장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('20','2A','2B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GJ_HCNT    -- 현원과장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('20','2A','2B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GJ_PCNT    -- 충원과장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('30','3A','3B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as DR_HCNT    -- 현원대리
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('30','3A','3B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as DR_PCNT    -- 충원대리
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S4M_HCNT    -- 현원4사남
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S4M_PCNT    -- 충원4사남
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S4F_HCNT    -- 현원4사여
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S4F_PCNT    -- 충원4사여
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S5M_HCNT    -- 현원5사남
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S5M_PCNT    -- 충원5사남
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S5F_HCNT    -- 현원5사여
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as S5F_PCNT    -- 충원5사여
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD              IN ('7B','7C')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_HCNT    -- 현원장정비
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD              IN ('7B','7C')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_PCNT    -- 충원장정비
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GG_HCNT    -- 현원고용계약
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GG_PCNT    -- 충원고용계약
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as HT_HCNT    -- 현원사무계
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as HT_PCNT    -- 충원사무계
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = ''
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JK_HCNT    -- 현원직장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'JJ'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JK_PCNT    -- 충원직장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'BJ'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as VJ_HCNT    -- 현원반장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'BJ'
                               AND P.JOB_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as VJ_PCNT    -- 충원반장
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'JY'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JI_HCNT    -- 현원주임
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'JY'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JI_PCNT    -- 충원주임
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = '8D'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as YU_HCNT    -- 현원영업사원
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = '8D'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as YU_PCNT    -- 충원영업사원
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GY_HCNT    -- 현원계약직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as GY_PCNT    -- 충원계약직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as TT_HCNT    -- 현원택배계
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as TT_PCNT    -- 충원택배계
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_HCNT    -- 현원파견직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_PCNT    -- 충원파견직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)
                 - COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.EMP_CD     = '1'         -- 정직원
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_UCNT    -- 정직원증감
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)
                 - COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(ADD_MONTHS(Q.STR_YM||'01',-1)))
                               AND P.HIR_YMD              < Q.STR_YM||'01'
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_UCNT    -- 파견직증감
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_YCNT    -- 정직원년말
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_YCNT    -- 파견직년말
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.END_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.END_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_CCNT    -- 충원정규직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.END_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.END_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_CCNT    -- 충원파견직
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.END_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.END_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)
                 - COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO
                         END)                                                                                    as JJ_JCNT    -- 증감정직원
                 , COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.END_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.END_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)
                 - COUNT(CASE WHEN (P.RET_YMD is NULL    OR P.RET_YMD >= LAST_DAY(SUBSTR(Q.STR_YM,1,4)||'1201'))
                               AND SUBSTR(P.HIR_YMD,1,4) <= SUBSTR(Q.STR_YM,1,4)
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_JCNT    -- 증감파견직포함
                 , NULL                                                                                          as STR_MD
                 , '1'                                                                                           as GBN2_SNO
              FROM T_MI_PERSON  P
                 , T_CM_DEPT    D
                 , T_CM_COMMON  J
                 , (SELECT PIS_YY,         -- 년도
                          PAY_YMD as STR_YM,        -- 대상시작년월
                          APY_YMD as END_YM,        -- 대상종료년월
                          PRO_STS         -- 상태
                     FROM T_CP_WORKLOG
                    WHERE PIS_MM  = ' '
                      AND OCC_CD  = ' '
                      AND SAL_GBN = 'G'
                      AND SEQ     = '1'
                      AND PIS_YY  = ?
                    )          Q
             WHERE P.PIS_YY   = Q.PIS_YY
               AND P.DPT_CD   = D.DPT_CD
               AND P.JOB_CD   = J.COMM_CD
               AND J.CD_GBN   = 'A2'
               AND J.SORT_NO  > 0
               AND D.CD_GBN   = 'A4'
               AND D.GBN2_TAG = '9' -- 지방조건
             GROUP BY D.GBN2_TAG, D.UPDPT_CD, P.HEAD_CD, D.GBN_CD
             ORDER BY GBN2_SNO, GBN2_TAG, UPSORT_NO, SORT_NO
            ]]>
								</query>
				</sql>


				<!-- 사업계획(인원) 조회 -->
				<sql name="MISC230_SHR_PRINT">
								<description>사업계획(인원)</description>
								<query>
												<![CDATA[

            	SELECT Decode(D.GBN2_TAG,'1','본사','지방') AS GBN2_TAG,
       REPLACE(D.UPDPT_CD,'Z','17') as UPDPT_CD,
       SF_GET_DPTNAME('01', 'B2', REPLACE(D.UPDPT_CD,'Z','17'))  as UPDPT_NM,
       (SELECT SORT_NO FROM T_CM_DEPT WHERE CD_GBN = 'B2' AND DPT_CD = REPLACE(D.UPDPT_CD,'Z','17')) as UPSORT_NO,
       D.DPT_CD,
       SF_GET_DPTNAME('01','A4',D.DPT_CD) AS DPT_NM,
       D.HEAD_CD AS JIKGUN_CD,
       SF_GET_COMMNAME('01', 'B1', D.HEAD_CD)        as JIKGUN_NM,
       COUNT(CASE WHEN P.HIR_YM IS NULL AND P.EMP_CD = '1' THEN P.TSEQ_NO END)               as HIR_CNT,    -- 현인원
       COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD IN ('A2','A3')
                               AND P.OCC_CD     = 'A'         -- 사무직
                               AND P.EMP_CD     = '1'         -- 정직원
                              THEN P.TSEQ_NO END)                                                                as SJ_HCNT    -- 현원사장
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD              IN ('A2','A3')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                as SJ_PCNT    -- 말사장
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = 'A4'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                as JM_HCNT    -- 현원전무
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = 'A4'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                 as JM_PCNT    -- 말전무
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = 'A5'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                 as SM_HCNT    -- 현원상무
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = 'A5'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                 as SM_PCNT    -- 말상무
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = 'AB'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                 as SB_HCNT    -- 현원상무보
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = 'AB'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                 as SB_PCNT    -- 말상무보
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD              IN ('1C','1N')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                  as BJ_HCNT    -- 현원부장
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD              IN ('1C','1N')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                  as BJ_PCNT    --  말부장
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = '1D'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                  as BD_HCNT    -- 현원부대
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = '1D'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                  as BD_PCNT    -- 말부대
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = '1E'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                  as CJ_HCNT    -- 현원차장
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = '1E'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                  as CJ_PCNT    -- 충원차장
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD              IN ('20','2A','2B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as GJ_HCNT    -- 현원과장
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD              IN ('20','2A','2B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as GJ_PCNT    -- 충원과장
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD              IN ('30','3A','3B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as DR_HCNT    -- 현원대리
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD              IN ('30','3A','3B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as DR_PCNT    -- 충원대리
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as S4M_HCNT    -- 현원4사남
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as S4M_PCNT    -- 충원4사남
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as S4F_HCNT    -- 현원4사여
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD              IN ('40','4A','4B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as S4F_PCNT    -- 충원4사여
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as S5M_HCNT    -- 현원5사남
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as S5M_PCNT    -- 충원5사남
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as S5F_HCNT    -- 현원5사여
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD              IN ('50','5A','5B')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                   as S5F_PCNT    -- 충원5사여
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD              IN ('7B','7C')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                  as JJ_HCNT    -- 현원장정비
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD              IN ('7B','7C')
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                as JJ_PCNT    -- 충원장정비
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                as GG_HCNT    -- 현원고용계약
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                as GG_PCNT    -- 충원고용계약
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                as HT_HCNT    -- 현원사무계
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.OCC_CD     = 'A'
                               AND P.EMP_CD     = '1'
                              THEN P.TSEQ_NO END)                                                                as HT_PCNT    -- 충원사무계



                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = 'JJ'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO END)                                                           as JK_HCNT    -- 현원직장
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = 'JJ'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO  END)                                                       as JK_PCNT    -- 충원직장
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = 'BJ'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO END)                                                   as VJ_HCNT    -- 현원반장
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = 'BJ'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO END)                                                   as VJ_PCNT    -- 충원반장
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = 'JY'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO END)                                                   as JI_HCNT    -- 현원주임
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = 'JY'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO END)                                                         as JI_PCNT    -- 충원주임
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = '8D'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO END)                                                       as YU_HCNT    -- 현원영업사원
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = '8D'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO  END)                                                            as YU_PCNT    -- 충원영업사원
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO  END)                                                            as GY_HCNT    -- 현원계약직
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.JOB_CD               = 'Z1'
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO END)                                                               as GY_PCNT    -- 충원계약직
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO END)                                                             as TT_HCNT    -- 현원택배계
                 , COUNT(CASE WHEN (P.HIR_YM IS NULL OR P.HIR_YM <= '2007' || '12' )
                               AND P.OCC_CD     = 'M'
                               AND P.EMP_CD     = '1'
                              THEN P.ENO_NO END)                                                            as TT_PCNT    -- 충원택배계
                 , COUNT(CASE WHEN P.HIR_YM IS NULL
                               AND P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_HCNT    -- 현원파견직
                 , COUNT(CASE WHEN P.EMP_CD     = '2'
                              THEN P.ENO_NO
                         END)                                                                                    as PG_PCNT    -- 충원파견직
                 , '('||MAX(SUBSTR(Q.STR_YM,5))||'.01)'                                                          as STR_MD
                 , CASE WHEN D.GBN2_TAG = '1' THEN '1' ELSE '2' END                                              as GBN2_SNO
                 , COUNT(CASE WHEN SubStr(P.HIR_YM,1,4) = '2008'
                               AND P.EMP_CD = '1'
                              THEN P.ENO_NO END)                                                               as P_CNT    -- 증원 정규직
                 , COUNT(CASE WHEN SubStr(P.HIR_YM,1,4) = '2008'
                               AND P.EMP_CD <> '1'
                              THEN P.ENO_NO END)                                                               as H_CNT    -- 증원 파견직
FROM   T_MI_PERSON  P
     , T_CM_DEPT    D
     , T_CM_COMMON  J
     , (SELECT PIS_YY,         -- 년도
              PAY_YMD as STR_YM,        -- 대상시작년월
              APY_YMD as END_YM,        -- 대상종료년월
              PRO_STS         -- 상태
         FROM T_CP_WORKLOG
        WHERE PIS_MM  = ' '
          AND OCC_CD  = ' '
          AND SAL_GBN = 'G'
          AND SEQ     = '1'
          AND PIS_YY  = '2008'
        )          Q
WHERE P.PIS_YY   = Q.PIS_YY
   AND P.DPT_CD   = D.DPT_CD
   AND P.JOB_CD   = J.COMM_CD
   AND J.CD_GBN   = 'A2'
   AND J.SORT_NO  > 0
   AND D.CD_GBN   = 'A4'
--   AND D.GBN2_TAG = '1'
   AND P.PIS_YY = '2008'
GROUP BY D.GBN2_TAG, D.UPDPT_CD, D.DPT_CD,D.HEAD_CD
ORDER BY GBN2_TAG , UPSORT_NO , SF_GET_DPTSEQ('01','A4',D.DPT_CD)


			 ]]>
								</query>
				</sql>


				<!-- 사업계획(인원) 조회 -->
				<sql name="MISC230_SHR_PRINT2">
								<description>사업계획(인원)</description>
								<query>
												<![CDATA[

            	        SELECT *
        FROM
        (
            SELECT CASE WHEN D.GBN2_TAG = '1' THEN '본사' ELSE '지 방' END                                       as GBN2_TAG
                 , SF_GET_DPTNAME('01', 'B2', REPLACE(D.UPDPT_CD,'Z','17'))                                     as UPDPT_NM
                 , CASE WHEN D.GBN2_TAG = '1' THEN D.DPT_NM ELSE SF_GET_COMMNAME('01', 'B1', P.HEAD_CD) END      as DPT_NM
                 , CASE WHEN D.GBN2_TAG = '1' THEN SF_GET_COMMNAME('01', 'B1', P.HEAD_CD) ELSE D.DPT_NM END      as JIKGUN_NM
                 , D.UPDPT_CD                                                                                    as UPDPT_CD
                 , (SELECT SORT_NO FROM T_CM_DEPT WHERE CD_GBN = 'B2' AND DPT_CD = D.UPDPT_CD)                   as UPSORT_NO
                 , CASE WHEN D.GBN2_TAG = '1' THEN D.DPT_CD ELSE P.HEAD_CD END                                   as DPT_CD
                 , CASE WHEN D.GBN2_TAG = '1' THEN TO_CHAR(D.SORT_NO) ELSE P.HEAD_CD END                         as SORT_NO
                 , CASE WHEN D.GBN2_TAG = '1' THEN P.HEAD_CD ELSE D.DPT_CD END                                   as JIKGUN_CD
                 , P.TSEQ_NO AS ENO_NO
                 , P.EMP_CD
                 , J.COMM_CD                                                                                     as JOB_CD
                 , J.COMM_NM                                                                                     as JOB_NM
                 , DECODE(P.MF_TAG,'M','남','여') as MF_TAG
                 , CASE WHEN P.HIR_YM IS NULL
                        THEN P.TSEQ_NO
                    END                                                                                          as HIR_CNT    -- 현인원
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                        THEN P.TSEQ_NO
                    END                                                                                          as YMC_CNT    -- 년말추정인원
                 ,( SELECT SF_GET_COMMNAME('01', 'G4', A.LEVY_CD) AS LEVY_NM
                     FROM T_MI_LEVYPLAN A WHERE A.PIS_YY = P.PIS_YY AND A.DPT_CD = P.DPT_CD AND A.TSEQ_NO = P.TSEQ_NO  ) AS LEVY_NM
                 , CASE WHEN P.HIR_YMD > SubStr(Q.STR_YM,1,4) || '1031'
                         AND P.HIR_YMD <= SubStr(Q.STR_YM,1,4) || '1231'
                         AND ( RET_YMD IS NULL OR RET_YMD > SubStr(Q.STR_YM,1,4) || '1231')
                        THEN P.TSEQ_NO
                    END                                                                                          AS TSEQ_NO    -- 신규충원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'01'
                        THEN 1
                    END                                                                                          as M01_CNT    -- 1월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'02'
                        THEN 1
                    END                                                                                          as M02_CNT    -- 2월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'03'
                        THEN 1
                    END                                                                                          as M03_CNT    -- 3월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'04'
                        THEN 1
                    END                                                                                          as M04_CNT    -- 4월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'05'
                        THEN 1
                    END                                                                                          as M05_CNT    -- 5월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'06'
                        THEN 1
                    END                                                                                          as M06_CNT    -- 6월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'07'
                        THEN 1
                    END                                                                                          as M07_CNT    -- 7월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'08'
                        THEN 1
                    END                                                                                          as M08_CNT    -- 8월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'09'
                        THEN 1
                    END                                                                                          as M09_CNT    -- 9월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'10'
                        THEN 1
                    END                                                                                          as M10_CNT    -- 10월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'11'
                        THEN 1
                    END                                                                                          as M11_CNT    -- 11월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'12'
                        THEN 1
                    END                                                                                          as M12_CNT    -- 12월증원인원
                 , CASE WHEN SUBSTR(P.HIR_YM,1,4)  = SUBSTR(Q.END_YM,1,4)
                        THEN P.TSEQ_NO
                    END                                                                                          as TOT_CNT    -- 인원계
                 , Q.STR_YM
                 , CASE WHEN SUBSTR(P.HIR_YM,1,4)  = SUBSTR(Q.END_YM,1,4)
                        THEN P.TSEQ_NO
                    END                                                                                          as TSM_CNT    -- 신규충원인원
                 ,( SELECT LEVY_TXT
                     FROM T_MI_LEVYPLAN B WHERE B.PIS_YY = P.PIS_YY AND B.DPT_CD = P.DPT_CD AND B.TSEQ_NO = P.TSEQ_NO  ) AS LEVY_TXT
                 , CASE WHEN P.HIR_YM IS NULL
                         AND P.JOB_CD IN ('A2','A3')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                      THEN P.TSEQ_NO END                                                                 as SJ_HCNT    -- 현원사장
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD IN ('A2','A3')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as SJ_PCNT    -- 말사장
                 , CASE WHEN P.JOB_CD     = 'A4'
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as JM_HCNT    -- 현원전무
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD     = 'A4'
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as JM_PCNT    -- 말전무


                 , CASE WHEN P.JOB_CD     = 'A5'
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as SM_HCNT    -- 현원상무
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD     = 'A5'
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as SM_PCNT    -- 말상무
                 , CASE WHEN P.JOB_CD     = 'AB'
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as SB_HCNT    -- 현원상무보
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD     = 'AB'
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as SB_PCNT    -- 말상무보
                 , CASE WHEN P.JOB_CD     IN ('1C','1N')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as BJ_HCNT    -- 현원부장
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD     IN ('1C','1N')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as BJ_PCNT    -- 말부장
                 , CASE WHEN P.JOB_CD     = '1D'
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as BD_HCNT    -- 현원부대
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD     = '1D'
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as BD_PCNT    -- 말부대
                 , CASE WHEN P.JOB_CD     = '1E'
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as CJ_HCNT    -- 현원차장
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD     = '1E'
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as CJ_PCNT    -- 말차장
                 , CASE WHEN P.JOB_CD     IN ('20','2A','2B')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as GJ_HCNT    -- 현원과장
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD     IN ('20','2A','2B')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as GJ_PCNT    -- 말과장
                 , CASE WHEN P.JOB_CD     IN ('30','3A','3B')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as DR_HCNT    -- 현원대리
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD     IN ('30','3A','3B')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as DR_PCNT    -- 말대리
                 , CASE WHEN P.JOB_CD IN ('40','4A')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                         AND P.MF_TAG     = 'M'
                      THEN P.TSEQ_NO END                                                                 as S4M_HCNT    -- 현원4사남
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD IN ('40','4A')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                         AND P.MF_TAG     = 'M'
                      THEN P.TSEQ_NO END                                                                 as S4M_PCNT    -- 말4사남
                 , CASE WHEN P.JOB_CD IN ('40','4B')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                         AND P.MF_TAG     = 'W'
                      THEN P.TSEQ_NO END                                                                 as S4F_HCNT    -- 현원4사여
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD IN ('40','4B')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                         AND P.MF_TAG     = 'W'
                      THEN P.TSEQ_NO END                                                                 as S4F_PCNT    -- 말4사여
                 , CASE WHEN P.JOB_CD IN ('50','5A')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                         AND P.MF_TAG     = 'M'
                      THEN P.TSEQ_NO END                                                                 as S5M_HCNT    -- 현원5사남
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD IN ('50','5A')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                         AND P.MF_TAG     = 'M'
                      THEN P.TSEQ_NO END                                                                 as S5M_PCNT    -- 말5사남
                 , CASE WHEN P.JOB_CD IN ('50','5B')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                         AND P.MF_TAG     = 'W'
                      THEN P.TSEQ_NO END                                                                 as S5F_HCNT    -- 현원5사여
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD IN ('50','5B')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                         AND P.MF_TAG     = 'W'
                      THEN P.TSEQ_NO END                                                                 as S5F_PCNT    -- 말5사여
                 , CASE WHEN P.JOB_CD IN ('7B','7C')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as JJ_HCNT    -- 현원장정비
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD IN ('7B','7C')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as JJ_PCNT    -- 말장정비
                 , CASE WHEN P.JOB_CD IN ( 'Z1','E1','80','1F','A7')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as GG_HCNT    -- 현원고용계약
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD IN ( 'Z1','E1','80','1F','A7')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as GG_PCNT    -- 말고용계약

                 , CASE WHEN P.JOB_CD IN ('40','50','A7','E1','80','1F','A2','A3','A4','A5','AB','1C','1N','1D','1E','20','2A','2B','30','3A','3B','4A','4B','5A','5B','7B','7C','Z1')
                         AND P.OCC_CD     = 'A'         -- 사무직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as SA_HSOCNT    -- 사무현원소계
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD IN ('40','50','A7','E1','80','1F','A2','A3','A4','A5','AB','1C','1N','1D','1E','20','2A','2B','30','3A','3B','4A','4B','5A','5B','7B','7C','Z1')
                         AND P.OCC_CD     = 'A'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as SA_PSOCNT    -- 사무말소계

                 , CASE WHEN P.JOB_CD = 'JJ'
                         AND P.OCC_CD     = 'M'         -- 예비직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as JK_HCNT    -- 현원직장
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD = 'JJ'
                         AND P.OCC_CD     = 'M'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as JK_PCNT    -- 충원직장
                 , CASE WHEN P.JOB_CD = 'BJ'
                         AND P.OCC_CD     = 'M'         -- 예비직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as VJ_HCNT    -- 현원반장
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD = 'BJ'
                         AND P.OCC_CD     = 'M'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as VJ_PCNT    -- 충원반장
                 , CASE WHEN P.JOB_CD = 'JY'
                         AND P.OCC_CD     = 'M'         -- 예비직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as JI_HCNT    -- 현원주임
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD = 'JY'
                         AND P.OCC_CD     = 'M'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as JI_PCNT    -- 충원주임
                 , CASE WHEN P.JOB_CD = '8D'
                         AND P.OCC_CD     = 'M'         -- 예비직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as YU_HCNT    -- 현원영업사원
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD = '8D'
                         AND P.OCC_CD     = 'M'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as YU_PCNT    -- 충원영업사원
                 , CASE WHEN P.JOB_CD = 'Z1'
                         AND P.OCC_CD     = 'M'         -- 예비직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as GY_HCNT    -- 현원계약직
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.JOB_CD = 'Z1'
                         AND P.OCC_CD     = 'M'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as GY_PCNT    -- 충원계약직
                 , CASE WHEN P.OCC_CD     = 'M'         -- 예비직
                         AND P.EMP_CD     = '1'         -- 정직원
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as TT_HCNT    -- 현원택배계
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.OCC_CD     = 'M'
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as TT_PCNT    -- 충원택배계
                 , CASE WHEN P.EMP_CD     = '2'         -- 파견직
                         AND P.HIR_YM IS NULL
                      THEN P.TSEQ_NO END                                                                 as PG_HCNT    -- 현원파견직
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                         AND P.EMP_CD     = '2'         -- 파견직
                      THEN P.TSEQ_NO END                                                                 as PG_PCNT    -- 충원파견직

                 , CASE WHEN P.EMP_CD     = '1' AND P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'
                      THEN P.TSEQ_NO END                                                                 as P_CNT    -- 증감인원정규직

                 , CASE WHEN P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'
                         AND P.EMP_CD     = '2'
                      THEN P.TSEQ_NO END                                                                 as H_CNT    -- 증감인원파견직

                 , CASE WHEN P.EMP_CD     = '1'
                 		 AND (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                      THEN P.TSEQ_NO END                                                                 as YEAR_PCNT    -- 연말추정인원정규직

                 , CASE WHEN P.EMP_CD     IN ('1','2')
						 AND (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                      THEN P.TSEQ_NO END                                                                 as YEAR_HCNT    -- 연말추정인원정규직+파견직

                 , CASE WHEN ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as TOT_PCNT    -- 총원정규직
                 , CASE WHEN ((P.HIR_YMD <= Q.STR_YM || '31' AND (P.RET_YMD      >= Q.STR_YM || '31' OR P.RET_YMD is NULL)) OR (P.HIR_YM IS NOT NULL))
                         AND P.EMP_CD     IN ('1','2')
                      THEN P.TSEQ_NO END                                                                 as TOT_HCNT    -- 총원정규직파견직포함

                 , CASE WHEN (SubStr(P.HIR_YM,1,4) = SubStr(Q.END_YM,1,4))
                         AND P.EMP_CD     = '1'
                      THEN P.TSEQ_NO END                                                                 as INC_PCNT    -- 증감인원정규직
                 , CASE WHEN (SubStr(P.HIR_YM,1,4) = SubStr(Q.END_YM,1,4))
                         AND P.EMP_CD     = '2'
                      THEN P.TSEQ_NO END                                                                 as INC_HCNT    -- 증감인원파견직
              FROM T_MI_PERSON      P
                 , T_CM_DEPT        D
                 , T_CM_COMMON      J
                 , (SELECT PIS_YY,         -- 년도
                           PAY_YMD as STR_YM,        -- 대상시작년월
                           APY_YMD as END_YM,        -- 대상종료년월
                           PRO_STS         -- 상태
                      FROM T_CP_WORKLOG
                     WHERE PIS_MM  = ' '
                       AND OCC_CD  = ' '
                       AND SAL_GBN = 'G'
                       AND SEQ     = '1'
                       AND PIS_YY  = ?
                    )          Q
             WHERE P.PIS_YY   = Q.PIS_YY
               AND P.DPT_CD   = D.DPT_CD
               AND P.JOB_CD   = J.COMM_CD
               AND J.CD_GBN   = 'A2'
               AND D.CD_GBN   = 'A4'
               AND J.SORT_NO > 0
               AND ((HIR_YMD <= Q.STR_YM||'31' AND ( RET_YMD IS NULL OR RET_YMD >= Q.STR_YM||'31')) OR HIR_YM IS NOT NULL)
       ) MAIN
      -- WHERE (HIR_CNT IS NOT NULL AND YMC_CNT IS NOT NULL)
      --    OR TSEQ_NO IS NOT NULL
      --    OR TOT_CNT IS NOT NULL
       ORDER BY MAIN.GBN2_TAG, MAIN.UPSORT_NO,
                      MAIN.SORT_NO, MAIN.JIKGUN_CD, MAIN.SORT_NO

            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc240
								* @description : 인원채용계획
								***********************************************************************
								* 2007/04/30     이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC240_SHR">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
		SELECT MAIN.*
        FROM
        (
            SELECT CASE WHEN D.GBN2_TAG = '1' THEN '본사' ELSE '지 방' END                                       as GBN2_TAG
                 , SF_GET_DPTNAME('01', 'B2', REPLACE(D.UPDPT_CD,'Z','17'))                                     as UPDPT_NM
                 , CASE WHEN D.GBN2_TAG = '1' THEN D.DPT_NM ELSE SF_GET_COMMNAME('01', 'B1', P.HEAD_CD) END      as DPT_NM
                 , CASE WHEN D.GBN2_TAG = '1' THEN SF_GET_COMMNAME('01', 'B1', P.HEAD_CD) ELSE D.DPT_NM END      as JIKGUN_NM
                 , D.UPDPT_CD                                                                                    as UPDPT_CD
                 , (SELECT SORT_NO FROM T_CM_DEPT WHERE CD_GBN = 'B2' AND DPT_CD = D.UPDPT_CD)                   as UPSORT_NO
                 , CASE WHEN D.GBN2_TAG = '1' THEN D.DPT_CD ELSE P.HEAD_CD END                                   as DPT_CD
                 , CASE WHEN D.GBN2_TAG = '1' THEN TO_CHAR(D.SORT_NO) ELSE P.HEAD_CD END                         as SORT_NO
                 , CASE WHEN D.GBN2_TAG = '1' THEN P.HEAD_CD ELSE D.DPT_CD END                                   as JIKGUN_CD
                 , P.TSEQ_NO AS ENO_NO
                 , P.EMP_CD
                 , J.COMM_NM                                                                                     as JOB_CD
                 , DECODE(P.MF_TAG,'M','남','여') as MF_TAG
                 , CASE WHEN P.HIR_YM IS NULL
                        THEN P.TSEQ_NO
                    END                                                                                          as HIR_CNT    -- 현인원
                 , CASE WHEN (P.HIR_YM IS NULL OR (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12'))
                        THEN P.TSEQ_NO
                    END                                                                                          as YMC_CNT    -- 년말추정인원
                 ,( SELECT SF_GET_COMMNAME('01', 'G4', A.LEVY_CD) AS LEVY_NM
                     FROM T_MI_LEVYPLAN A WHERE A.PIS_YY = P.PIS_YY AND A.DPT_CD = P.DPT_CD AND A.TSEQ_NO = P.TSEQ_NO  ) AS LEVY_NM
                 , CASE WHEN (P.HIR_YM BETWEEN Q.STR_YM AND SUBSTR(Q.STR_YM,1,4)||'12')
                        THEN P.TSEQ_NO
                    END                                                                                          AS TSEQ_NO    -- 신규충원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'01'
                        THEN 1
                    END                                                                                          as M01_CNT    -- 1월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'02'
                        THEN 1
                    END                                                                                          as M02_CNT    -- 2월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'03'
                        THEN 1
                    END                                                                                          as M03_CNT    -- 3월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'04'
                        THEN 1
                    END                                                                                          as M04_CNT    -- 4월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'05'
                        THEN 1
                    END                                                                                          as M05_CNT    -- 5월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'06'
                        THEN 1
                    END                                                                                          as M06_CNT    -- 6월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'07'
                        THEN 1
                    END                                                                                          as M07_CNT    -- 7월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'08'
                        THEN 1
                    END                                                                                          as M08_CNT    -- 8월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'09'
                        THEN 1
                    END                                                                                          as M09_CNT    -- 9월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'10'
                        THEN 1
                    END                                                                                          as M10_CNT    -- 10월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'11'
                        THEN 1
                    END                                                                                          as M11_CNT    -- 11월증원인원
                 , CASE WHEN P.HIR_YM  = SUBSTR(Q.END_YM,1,4)||'12'
                        THEN 1
                    END                                                                                          as M12_CNT    -- 12월증원인원
                 , CASE WHEN SUBSTR(P.HIR_YM,1,4)  = SUBSTR(Q.END_YM,1,4)
                        THEN P.TSEQ_NO
                    END                                                                                          as TOT_CNT    -- 인원계
                 , Q.STR_YM
                 , CASE WHEN SUBSTR(P.HIR_YM,1,4)  = SUBSTR(Q.END_YM,1,4)
                        THEN P.TSEQ_NO
                    END                                                                                          as TSM_CNT    -- 신규충원인원
                 ,( SELECT LEVY_TXT AS LEVY_NM
                     FROM T_MI_LEVYPLAN B WHERE B.PIS_YY = P.PIS_YY AND B.DPT_CD = P.DPT_CD AND B.TSEQ_NO = P.TSEQ_NO  ) AS LEVY_TXT
              FROM T_MI_PERSON      P
                 , T_CM_DEPT        D
                 , T_CM_COMMON      J
                 , (SELECT PIS_YY,         -- 년도
                           PAY_YMD as STR_YM,        -- 대상시작년월
                           APY_YMD as END_YM,        -- 대상종료년월
                           PRO_STS         -- 상태
                      FROM T_CP_WORKLOG
                     WHERE PIS_MM  = ' '
                       AND OCC_CD  = ' '
                       AND SAL_GBN = 'G'
                       AND SEQ     = '1'
                       AND PIS_YY  = ?
                    )          Q
             WHERE P.PIS_YY   = Q.PIS_YY
               AND P.DPT_CD   = D.DPT_CD
               AND P.JOB_CD   = J.COMM_CD
               AND J.CD_GBN   = 'A2'
               AND D.CD_GBN   = 'A4'
               AND D.SORT_NO > 0
               AND ((HIR_YMD <= Q.STR_YM||'31' AND ( RET_YMD IS NULL OR RET_YMD >= Q.STR_YM||'31')) OR HIR_YM IS NOT NULL)
        ) MAIN
       --WHERE (HIR_CNT IS NOT NULL AND YMC_CNT IS NOT NULL)
       --   OR TSEQ_NO IS NOT NULL
       --   OR TOT_CNT IS NOT NULL
       ORDER BY MAIN.GBN2_TAG, MAIN.UPSORT_NO,
                      MAIN.SORT_NO, MAIN.JIKGUN_CD, MAIN.SORT_NO
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc250
								* @description : 일반관리비(급상여)인상내역
								***********************************************************************
								* 2007/04/18      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC250_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 일반관리비(급상여)인상내역 조회 -->
				<sql name="MISC250_SHR_02">
								<description>
												일반관리비(급상여)인상내역 조회
								</description>
								<query>
												<![CDATA[
            SELECT DECODE(HEAD_CD, 'ZZZZZZ', '총계', SF_GET_COMMNAME('01', 'B1', HEAD_CD))           AS HEAD_NM,     -- 구분
                   PAY_AMT,                                                                                          -- 기준급여
                   PAY_AMT2,                                                                                         -- 승진분급여
                   DECODE(PAY_AMT, 0, 0, ROUND((PAY_AMT2 / PAY_AMT) * 100,1))                        AS PINC_RATE2,  -- 증감
                   PAY_AMT3,                                                                                         -- 급여인상분
                   DECODE(PAY_AMT, 0, 0, ROUND((PAY_AMT3 / PAY_AMT) * 100,1))                        AS PINC_RATE3,  -- 증감
                   PAY_AMT4,                                                                                         -- 승급분급여
                   DECODE(PAY_AMT, 0, 0, ROUND((PAY_AMT4 / PAY_AMT) * 100,1))                        AS PINC_RATE4,  -- 증감
                   NPAY_AMT,                                                                                         -- 신규급여
                   DECODE(PAY_AMT, 0, 0, ROUND((NPAY_AMT / PAY_AMT) * 100,1))                        AS NPINC_RATE,  -- 증감
                   PAY_AMT2 + PAY_AMT3 + PAY_AMT4 + NPAY_AMT                                         AS SUM_PAY,     -- 급여소계
                   DECODE(PAY_AMT, 0, 0, ROUND(((PAY_AMT2 + PAY_AMT3 + PAY_AMT4 + NPAY_AMT) / PAY_AMT) * 100, 1))
                                                                                                     AS SPAY_RATE,   -- 증감
                   BONUS_AMT,                                                                                        -- 기준상여
                   BONUS_AMT2,                                                                                       -- 승진분상여
                   DECODE(BONUS_AMT, 0, 0, ROUND((BONUS_AMT2 / BONUS_AMT) * 100,1))                  AS BINC_RATE2,  -- 증감
                   BONUS_AMT3,                                                                                       -- 상여인상분
                   DECODE(BONUS_AMT, 0, 0, ROUND((BONUS_AMT3 / BONUS_AMT) * 100,1))                  AS BINC_RATE3,  -- 증감
                   BONUS_AMT4,                                                                                       -- 승급분상여
                   DECODE(BONUS_AMT, 0, 0, ROUND((BONUS_AMT4 / BONUS_AMT) * 100,1))                  AS BINC_RATE4,  -- 증감
                   NBONUS_AMT,                                                                                       -- 신규급여
                   DECODE(BONUS_AMT, 0, 0, ROUND((NBONUS_AMT / BONUS_AMT) * 100,1))                  AS NBINC_RATE,  -- 증감
                   BONUS_AMT2 + BONUS_AMT3 + BONUS_AMT4 + NBONUS_AMT                                 AS SUM_BONUS,   -- 상여소계
                   DECODE(BONUS_AMT, 0, 0, ROUND(((BONUS_AMT2 + BONUS_AMT3 + BONUS_AMT4 + NBONUS_AMT) / BONUS_AMT) * 100, 1))
                                                                                                     AS SBONUS_RATE, -- 증감
                   HOL_AMT,                                                                                          -- 휴일근무
                   PAY_AMT2 + PAY_AMT3 + PAY_AMT4 + NPAY_AMT + BONUS_AMT2 + BONUS_AMT3 + BONUS_AMT4  AS SUM_AMT,     -- 총계
                   DECODE(PAY_AMT + BONUS_AMT, 0, 0, ROUND(((PAY_AMT2 + PAY_AMT3 + PAY_AMT4 + BONUS_AMT2 + BONUS_AMT3 + BONUS_AMT4 + NBONUS_AMT) / (PAY_AMT + BONUS_AMT)) * 100, 1))
                                                                                                     AS SUM_RATE     -- 증감
            FROM ( SELECT DECODE(BB.NO, 1, 'ZZZZZZ', AA.HEAD_CD)                           AS HEAD_CD,
                          ROUND((SUM(AA.PAY_AMT) * 12) / 1000)                             AS PAY_AMT,       -- 기준급여
                          ROUND((SUM(AA.BONUS_AMT) * 8) / 1000)                            AS BONUS_AMT,     -- 기준상여
                          ROUND(((SUM(AA.PAY_AMT2) - SUM(AA.PAY_AMT)) * 12) / 1000)        AS PAY_AMT2,      -- 승진분 급여
                          ROUND(((SUM(AA.BONUS_AMT2) - SUM(AA.BONUS_AMT)) * 8) / 1000)     AS BONUS_AMT2,    -- 승진분 상여
                          ROUND(SUM(AA.PAY_AMT3) / 1000)                                   AS PAY_AMT3,      -- 인상분 급여
                          ROUND(SUM(AA.BONUS_AMT3) / 1000)                                 AS BONUS_AMT3,    -- 인상분 상여
                          ROUND(((SUM(AA.PAY_AMT4) - SUM(AA.PAY_AMT2)) * 10) / 1000)       AS PAY_AMT4,      -- 승급분 급여
                          ROUND(((SUM(AA.BONUS_AMT4) - SUM(AA.BONUS_AMT2)) * 6) / 1000)    AS BONUS_AMT4,    -- 승급분 상여
                          ROUND(SUM(AA.HOL_AMT) / 1000)                                    AS HOL_AMT,       -- 휴일근무수당
                          ROUND(SUM(NVL(AA.NPAY_AMT, 0)) / 1000)                           AS NPAY_AMT,      -- 신규분 급여
                          ROUND(SUM(NVL(AA.NBONUS_AMT, 0)) / 1000)                         AS NBONUS_AMT     -- 신규분 상여,
                   FROM ( SELECT
                               ( SELECT HEAD_CD FROM T_MI_PERSON WHERE PIS_YY = ? AND ENO_NO = A.ENO_NO) AS HEAD_CD,
                                 NVL(A.AMT1,0) AS PAY_AMT,  NVL(A.AMT2,0) AS BONUS_AMT,       -- 기준급여 및 기준상여
                                 NVL(B.AMT1,0) AS PAY_AMT2, NVL(B.AMT2,0) AS BONUS_AMT2,      -- 승진후 급여 및 상여
                                 NVL(C.AMT1,0) AS PAY_AMT3, NVL(C.AMT2,0) AS BONUS_AMT3,      -- 인상분 급여 및 상여 (12개월분)
                                 NVL(D.AMT1,0) AS PAY_AMT4, NVL(D.AMT2,0) AS BONUS_AMT4,      -- 승급후 급여 및 상여
                                 NVL(E.HOL_AMT,0) AS HOL_AMT,                                 -- 휴일근무수당 (12개월분)
                                 0 AS NPAY_AMT,
                                 0 AS NBONUS_AMT
                          FROM ( -- 전년도 기준급여 및 기준상여 (12월분 기준으로 함)
                                 SELECT ENO_NO,
                                        SUM(DECODE(SAL_GBN, '1',  BAS_AMT + DUTY_AMT + OT_AMT + WEL_AMT + OSE_AMT + RUN_AMT + MH_AMT + LSEV_AMT + CAR_AMT + TRAN_AMT + FIELD_AMT + AIRPORT_AMT + JUIM_AMT + BANJ_AMT + JIKJ_AMT, 0)) AMT1,
                                        SUM(DECODE(SAL_GBN, '2',  BAS_AMT + OT_AMT + OSE_AMT + LSEV_AMT, 0)) AS AMT2
                                 FROM   T_MI_BUDGETMST
                                 WHERE  PIS_YY = ?                   -- 사업년도
                                 AND    OCC_CD = 'A'
                                 AND    HIR_YY = ?                   -- 전년도
                                 AND    HIR_MM = '12'
                                 GROUP BY ENO_NO
                               ) A,
                               ( -- 사업년도 승진분
                                 SELECT ENO_NO,
                                        SUM(DECODE(SAL_GBN, '1',  BAS_AMT + DUTY_AMT + OT_AMT + WEL_AMT + OSE_AMT + RUN_AMT + MH_AMT + LSEV_AMT + CAR_AMT + TRAN_AMT + FIELD_AMT + AIRPORT_AMT + JUIM_AMT + BANJ_AMT + JIKJ_AMT, 0)) AMT1,
                                        SUM(DECODE(SAL_GBN, '2',  BAS_AMT + OT_AMT + OSE_AMT + LSEV_AMT, 0)) AS AMT2
                                 FROM   T_MI_BUDGETMST A
                                 WHERE  PIS_YY = ?                   -- 사업년도
                                 AND    OCC_CD = 'A'
                                 AND    HIR_YY = ?                   -- 사업년도
                                 AND    HIR_MM = '01'
                                 AND    NOT EXISTS (SELECT ENO_NO, OENO_NO, HIR_YMD, RET_YMD
                                                    FROM   T_MI_PERSON
                                                    WHERE  PIS_YY = A.PIS_YY
                                                    AND    ENO_NO = A.ENO_NO
                                                    AND    HIR_YMD >= ?||'0101'           -- 사업년도
                                                    AND    OENO_NO IS NULL)               -- 신규자 제외
                                 GROUP BY ENO_NO
                               ) B,
                               ( -- 사업년도 인상분
                                 SELECT ENO_NO,
                                        SUM(DECODE(SAL_GBN, '1',  RBAS_AMT + RDUTY_AMT + ROT_AMT + RWEL_AMT + ROSE_AMT + RRUN_AMT + RMH_AMT + RLSEV_AMT + RCAR_AMT + RTRAN_AMT + RFIELD_AMT + RAIRPORT_AMT + RJUIM_AMT + RBANJ_AMT + RJIKJ_AMT, 0)) AMT1,
                                        SUM(DECODE(SAL_GBN, '2',  RBAS_AMT + ROT_AMT + ROSE_AMT + RLSEV_AMT, 0)) AS AMT2
                                 FROM   T_MI_BUDGETMST A
                                 WHERE  PIS_YY = ?                   -- 사업년도
                                 AND    OCC_CD = 'A'
                                 AND    HIR_YY = ?                   -- 사업년도
                                 AND    NOT EXISTS (SELECT ENO_NO, OENO_NO, HIR_YMD, RET_YMD
                                                    FROM   T_MI_PERSON
                                                    WHERE  PIS_YY = A.PIS_YY
                                                    AND    ENO_NO = A.ENO_NO
                                                    AND    HIR_YMD >= ?||'0101'           -- 사업년도
                                                    AND    OENO_NO IS NULL)               -- 신규자 제외
                                 GROUP BY ENO_NO
                               ) C,
                               ( -- 사업년도 승호분
                                 SELECT ENO_NO,
                                        SUM(DECODE(SAL_GBN, '1',  BAS_AMT + DUTY_AMT + OT_AMT + WEL_AMT + OSE_AMT + RUN_AMT + MH_AMT + LSEV_AMT + CAR_AMT + TRAN_AMT + FIELD_AMT + AIRPORT_AMT + JUIM_AMT + BANJ_AMT + JIKJ_AMT, 0)) AMT1,
                                        SUM(DECODE(SAL_GBN, '2',  BAS_AMT + OT_AMT + OSE_AMT + LSEV_AMT, 0)) AS AMT2
                                 FROM   T_MI_BUDGETMST A
                                 WHERE  PIS_YY = ?                   -- 사업년도
                                 AND    OCC_CD = 'A'
                                 AND    HIR_YY = ?                   -- 사업년도
                                 AND  ((SAL_GBN = '1'
                                 AND    HIR_MM = '03')
                                 OR    (SAL_GBN = '2'
                                 AND    HIR_MM = '04'))
                                 AND    NOT EXISTS (SELECT ENO_NO, OENO_NO, HIR_YMD, RET_YMD
                                                    FROM   T_MI_PERSON
                                                    WHERE  PIS_YY = A.PIS_YY
                                                    AND    ENO_NO = A.ENO_NO
                                                    AND    HIR_YMD >= ?||'0101'           -- 사업년도
                                                    AND    OENO_NO IS NULL)               -- 신규자 제외
                                 GROUP BY ENO_NO
                               ) D,
                               ( -- 사업년도 휴일근무
                                 SELECT ENO_NO,
                                        SUM(NVL(HOL_AMT, 0)) AS HOL_AMT
                                 FROM   T_MI_BUDGETMST A
                                 WHERE  PIS_YY  = ?                   -- 사업년도
                                 AND    SAL_GBN = '1'
                                 AND    OCC_CD  = 'A'
                                 AND    HIR_YY  = ?                   -- 사업년도
                                 GROUP BY ENO_NO
                               ) E
                          WHERE  A.ENO_NO = B.ENO_NO(+)
                          AND    A.ENO_NO = C.ENO_NO(+)
                          AND    A.ENO_NO = D.ENO_NO(+)
                          AND    A.ENO_NO = E.ENO_NO(+)
                          UNION ALL
                          -- 사업년도 신규분 (전환배치 제외한 신규자)
                          SELECT
                               ( SELECT HEAD_CD FROM T_MI_PERSON WHERE PIS_YY = ? AND ENO_NO = A.ENO_NO) AS HEAD_CD,
                                 0 AS PAY_AMT,  0 AS BONUS_AMT,       -- 기준급여 및 기준상여
                                 0 AS PAY_AMT2, 0 AS BONUS_AMT2,      -- 승진후 급여 및 상여
                                 0 AS PAY_AMT3, 0 AS BONUS_AMT3,      -- 인상분 급여 및 상여 (12개월분)
                                 0 AS PAY_AMT4, 0 AS BONUS_AMT4,      -- 승급후 급여 및 상여
                                 0 AS HOL_AMT,                        -- 휴일근무
                                 SUM(DECODE(SAL_GBN, '1',  BAS_AMT + DUTY_AMT + OT_AMT + WEL_AMT + OSE_AMT + RUN_AMT + MH_AMT + LSEV_AMT + CAR_AMT + TRAN_AMT + FIELD_AMT + AIRPORT_AMT + JUIM_AMT + BANJ_AMT + JIKJ_AMT +
                                                           RBAS_AMT + RDUTY_AMT + ROT_AMT + RWEL_AMT + ROSE_AMT + RRUN_AMT + RMH_AMT + RLSEV_AMT + RCAR_AMT + RTRAN_AMT + RFIELD_AMT + RAIRPORT_AMT + RJUIM_AMT + RBANJ_AMT + RJIKJ_AMT, 0)) NPAY_AMT,
                                 SUM(DECODE(SAL_GBN, '2',  BAS_AMT + OT_AMT + OSE_AMT + LSEV_AMT + RBAS_AMT + ROT_AMT + ROSE_AMT + RLSEV_AMT, 0)) AS NBONUS_AMT
                          FROM   T_MI_BUDGETMST A
                          WHERE  PIS_YY = ?                   -- 사업년도
                          AND    OCC_CD = 'A'
                          AND    HIR_YY = ?                   -- 사업년도
                          AND    EXISTS (SELECT ENO_NO, OENO_NO, HIR_YMD, RET_YMD
                                             FROM   T_MI_PERSON
                                             WHERE  PIS_YY = A.PIS_YY
                                             AND    ENO_NO = A.ENO_NO
                                             AND    HIR_YMD >= ?||'0101'           -- 사업년도
                                             AND    OENO_NO IS NULL)
                          GROUP BY A.ENO_NO
                        ) AA,
                        ( SELECT 1 NO FROM DUAL
                          UNION ALL
                          SELECT 2 NO FROM DUAL
                        ) BB
                   GROUP  BY DECODE(BB.NO, 1, 'ZZZZZZ', AA.HEAD_CD)
                 )
            ORDER BY HEAD_CD
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc260
								* @description : 사업구분별항목별집계
								***********************************************************************
								* 2007/04/16      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC260_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 사업구분별항목별집계 조회 -->
				<sql name="MISC260_SHR_02">
								<description>사업구분별항목별집계 조회</description>
								<query>
												<![CDATA[
            SELECT AA.ENO_NO,
                   SF_GET_ENONAME('01', AA.ENO_NO)         AS ENO_NM,
                   SF_GET_DPTNAME('01', 'B2', BB.HEAD_CD) AS HEAD_NM,
                   SF_GET_DPTNAME('01', 'A4', BB.DPT_CD)   AS DPT_NM,
                   SF_GET_COMMNAME('01', 'A2', BB.JOB_CD)  AS JOB_NM,
                   AA.AMT
            FROM ( SELECT A.ENO_NO, DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                       NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                              '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                      -- 중식대
                                              '4', SUM(NVL(HOL_AMT,0)),                                          -- 휴일근무수당
                                              '5', SUM(NVL(YBUS_AMT,0)),                                         -- 연차수당
                                              '6', SUM(NVL(NPEN_AMT,0)),                                         -- 국민연금
                                              '7', SUM(NVL(HINS_AMT,0)),                                         -- 고용보험
                                              '8', SUM(NVL(CHIT_AMT,0)),                                         -- 건강검진
                                              '9', SUM(NVL(HINU_AMT,0)),                                         -- 건강보험
                                             '10', SUM(NVL(SCH_AMT,0))) AS AMT                                   -- 학자금
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '1'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?
                   AND    B.HIR_MM  BETWEEN ? AND ?
                   AND    '2' <> ?
                   AND    A.ENO_NO LIKE ?||'%'
                   GROUP BY A.ENO_NO
                   UNION ALL
                   SELECT A.ENO_NO, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '2'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?
                   AND    B.HIR_MM  BETWEEN ? AND ?
                   AND    '2' = ?
                   AND    A.ENO_NO LIKE ?||'%'
                   GROUP BY A.ENO_NO
                 ) AA,
                 ( SELECT  ENO_NO, (SELECT UPDPT_CD FROM T_CM_DEPT WHERE GUBUN = '01' AND CD_GBN = 'A4' AND DPT_CD = A.DPT_CD) AS HEAD_CD, DPT_CD, JOB_CD
                   FROM    T_MI_BUDGETMST A
                   WHERE ( PIS_YY, ENO_NO, SAL_GBN, OCC_CD, HIR_YY, HIR_MM, SEQ ) =
                         ( SELECT /*+ INDEX_DESC(T_MI_BUDGETMST T_MI_BUDGETMST_IDX) */
                                  PIS_YY, ENO_NO, SAL_GBN, OCC_CD, HIR_YY, HIR_MM, SEQ
                           FROM   T_MI_BUDGETMST
                           WHERE  PIS_YY  = A.PIS_YY
                           AND    ENO_NO  = A.ENO_NO
                           AND    ROWNUM  = 1 )
                 ) BB
            WHERE  AA.ENO_NO = BB.ENO_NO
            ORDER BY SF_GET_DPTSEQ('01', 'B2', BB.HEAD_CD),
                     SF_GET_DPTSEQ('01', 'A4', BB.DPT_CD),
                     SF_GET_COMMSEQ('01', 'A2', BB.JOB_CD), AA.ENO_NO
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc270
								* @description : 사업구분별월별현황
								***********************************************************************
								* 2007/04/16      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC270_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 사업구분별월별현황 조회 -->
				<sql name="MISC270_SHR_02">
								<description>사업구분별월별현황 조회</description>
								<query>
												<![CDATA[
            SELECT AA.ENO_NO,
                   SF_GET_ENONAME('01', AA.ENO_NO)         AS ENO_NM,
                   SF_GET_DPTNAME('01', 'B2', BB.HEAD_CD) AS HEAD_NM,
                   SF_GET_DPTNAME('01', 'A4', BB.DPT_CD)   AS DPT_NM,
                   SF_GET_COMMNAME('01', 'A2', BB.JOB_CD)  AS JOB_NM,
                   AA.AMT01,
                   AA.AMT02,
                   AA.AMT03,
                   AA.AMT04,
                   AA.AMT05,
                   AA.AMT06,
                   AA.AMT07,
                   AA.AMT08,
                   AA.AMT09,
                   AA.AMT10,
                   AA.AMT11,
                   AA.AMT12
            FROM ( SELECT ENO_NO, SUM(DECODE(HIR_MM, '01', AMT, 0)) AMT01,
                                  SUM(DECODE(HIR_MM, '02', AMT, 0)) AMT02,
                                  SUM(DECODE(HIR_MM, '03', AMT, 0)) AMT03,
                                  SUM(DECODE(HIR_MM, '04', AMT, 0)) AMT04,
                                  SUM(DECODE(HIR_MM, '05', AMT, 0)) AMT05,
                                  SUM(DECODE(HIR_MM, '06', AMT, 0)) AMT06,
                                  SUM(DECODE(HIR_MM, '07', AMT, 0)) AMT07,
                                  SUM(DECODE(HIR_MM, '08', AMT, 0)) AMT08,
                                  SUM(DECODE(HIR_MM, '09', AMT, 0)) AMT09,
                                  SUM(DECODE(HIR_MM, '10', AMT, 0)) AMT10,
                                  SUM(DECODE(HIR_MM, '11', AMT, 0)) AMT11,
                                  SUM(DECODE(HIR_MM, '12', AMT, 0)) AMT12
                   FROM ( SELECT A.ENO_NO, B.HIR_MM, DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                                        NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                                               '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                 -- 중식대
                                                               '4', SUM(NVL(HOL_AMT,0)),                                     -- 휴일근무수당
                                                               '5', SUM(NVL(YBUS_AMT,0)),                                    -- 연차수당
                                                               '6', SUM(NVL(NPEN_AMT,0)),                                    -- 국민연금
                                                               '7', SUM(NVL(HINS_AMT,0)),                                    -- 고용보험
                                                               '8', SUM(NVL(CHIT_AMT,0)),                                    -- 건강검진
                                                               '9', SUM(NVL(HINU_AMT,0)),                                    -- 건강보험
                                                              '10', SUM(NVL(SCH_AMT,0))) AS AMT                              -- 학자금
                          FROM   T_MI_PERSON A,
                                 T_MI_BUDGETMST B
                          WHERE  A.PIS_YY = ?
                          AND    A.PIS_YY = B.PIS_YY
                          AND    A.ENO_NO = B.ENO_NO
                          AND    B.SAL_GBN = '1'
                          AND    B.OCC_CD  LIKE '%'||?||'%'
                          AND    B.HIR_YY  = ?
                          AND    '2' <> ?
                          AND    A.ENO_NO LIKE ?||'%'
                          GROUP BY A.ENO_NO, B.HIR_MM
                          UNION ALL
                          SELECT A.ENO_NO, B.HIR_MM, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                          FROM   T_MI_PERSON A,
                                 T_MI_BUDGETMST B
                          WHERE  A.PIS_YY = ?
                          AND    A.PIS_YY = B.PIS_YY
                          AND    A.ENO_NO = B.ENO_NO
                          AND    B.SAL_GBN = '2'
                          AND    B.OCC_CD  LIKE '%'||?||'%'
                          AND    B.HIR_YY  = ?
                          AND    '2' = ?
                          AND    A.ENO_NO LIKE ?||'%'
                          GROUP BY A.ENO_NO, B.HIR_MM
                        )
                   GROUP BY ENO_NO
                 ) AA,
                 ( SELECT  ENO_NO, (SELECT UPDPT_CD FROM T_CM_DEPT WHERE GUBUN = '01' AND CD_GBN = 'A4' AND DPT_CD = A.DPT_CD) AS HEAD_CD, DPT_CD, JOB_CD
                   FROM    T_MI_BUDGETMST A
                   WHERE ( PIS_YY, ENO_NO, SAL_GBN, OCC_CD, HIR_YY, HIR_MM, SEQ ) =
                         ( SELECT /*+ INDEX_DESC(T_MI_BUDGETMST T_MI_BUDGETMST_IDX) */
                                  PIS_YY, ENO_NO, SAL_GBN, OCC_CD, HIR_YY, HIR_MM, SEQ
                           FROM   T_MI_BUDGETMST
                           WHERE  PIS_YY  = A.PIS_YY
                           AND    ENO_NO  = A.ENO_NO
                           AND    ROWNUM  = 1 )
                 ) BB
            WHERE  AA.ENO_NO = BB.ENO_NO
            ORDER BY SF_GET_DPTSEQ('01', 'B2', BB.HEAD_CD),
                     SF_GET_DPTSEQ('01', 'A4', BB.DPT_CD),
                     SF_GET_COMMSEQ('01', 'A2', BB.JOB_CD), AA.ENO_NO
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc280
								* @description : 업무별예산(부문별)
								***********************************************************************
								* 2007/04/16      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC280_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 업무별예산(부문별) 조회 -->
				<sql name="MISC280_SHR_02">
								<description>
												업무별예산(부문별) 조회 (단위 : 천원)
								</description>
								<query>
												<![CDATA[
            SELECT AA.HEAD_CD,
                   SF_GET_COMMNAME('01', 'B1', AA.HEAD_CD)||'경비' AS HEAD_NM,
                   DECODE(NVL(AA.AMT, 0), 0, 0, ROUND((AA.AMT/1000)/12)) AFT_AVG,
                   DECODE(NVL(AA.AMT, 0), 0, 0, ROUND(AA.AMT/1000)) AFT_SUM,
                   DECODE(NVL(DD.AMT, 0), 0, 0, ROUND((DD.AMT/1000)/12)) BEF_AVG,
                   DECODE(NVL(DD.AMT, 0), 0, 0, ROUND(DD.AMT/1000)) BEF_SUM,
                   DECODE(NVL(BB.AMT, 0), 0, 0, ROUND(BB.AMT/1000)) AS BEF1_SUM,
                   DECODE(NVL(CC.AMT, 0), 0, 0, ROUND(CC.AMT/1000)) AS BEF2_SUM,
                   DECODE(NVL(BB.AMT, 0), 0, 0, ROUND(BB.AMT/1000)) + DECODE(NVL(CC.AMT, 0), 0, 0, ROUND(CC.AMT/1000)) AS BEF3_SUM,
                   DECODE(DECODE(NVL(DD.AMT, 0), 0, 0, ROUND(DD.AMT/1000)), 0, 0, ROUND((DECODE(NVL(BB.AMT, 0), 0, 0, ROUND(BB.AMT/1000)) + DECODE(NVL(CC.AMT, 0), 0, 0, ROUND(CC.AMT/1000))) / (DECODE(NVL(DD.AMT, 0), 0, 0, ROUND(DD.AMT/1000))) * 100)) AS BEF_RATE
            FROM ( ----------------------> 사업년도 예산
                   SELECT A.PIS_YY, A.HEAD_CD, DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                                  NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                                         '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                     -- 중식대
                                                         '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                                         '5', SUM(NVL(YBUS_AMT,0)),                                        -- 연차수당
                                                         '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                                         '7', SUM(NVL(HINS_AMT,0)),                                        -- 고용보험
                                                         '8', SUM(NVL(CHIT_AMT,0)),                                        -- 건강검진
                                                         '9', SUM(NVL(HINU_AMT,0)),                                        -- 건강보험
                                                        '10', SUM(NVL(SCH_AMT,0))) AS AMT                                  -- 학자금
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 사업년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '1'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 사업년도
                   AND    '2' <> ?                       -- 상여를 제외한 나머지 항목인 경우
                   GROUP BY A.PIS_YY, A.HEAD_CD
                   UNION ALL
                   SELECT A.PIS_YY, A.HEAD_CD, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '2'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?
                   AND    '2' = ?                        -- 상여인 경우
                   GROUP BY A.PIS_YY, A.HEAD_CD
                 ) AA,                                   -- 사업년도 예산
                 ( ----------------------> 사업년도의 전년도 실적
                   ----> 급여
                   SELECT CP.PIS_YY, MI.HEAD_CD,
                          SUM(NVL(BAS_AMT,0) + NVL(DUTY_AMT,0) + NVL(OT_AMT,0) + NVL(WEL_AMT,0) + NVL(OSE_AMT,0) + NVL(RUN_AMT,0) + NVL(MH_AMT,0) + NVL(LSEV_AMT,0) + NVL(AMT_1,0)) AS AMT -- 급여
                   FROM   T_CP_PAYMASTER CP,
                        ( SELECT OCC_CD, PIS_YY, ENO_NO, SUM(DECODE(AD_TAG, 'A', NVL(AMOUNT, 0), 'D', -1 * NVL(AMOUNT, 0))) AMT_1
                          FROM   T_CP_CHANGE
                          WHERE  OCC_CD  LIKE '%'||?||'%'
                          AND    PIS_YY = ?              -- 전년도
                          AND    SAL_GBN IN ('CA', 'TR', 'JJ', 'BJ', 'JY', 'AB', '20')
                          GROUP BY OCC_CD, PIS_YY, ENO_NO
                        ) CP2,
                          T_MI_PERSON MI
                   WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.PIS_YY = ?                  -- 전년도
                   AND    MI.PIS_YY = ?                  -- 사업년도
                   AND    CP.OCC_CD = CP2.OCC_CD(+)
                   AND    CP.PIS_YY = CP2.PIS_YY(+)
                   AND    CP.ENO_NO = CP2.ENO_NO(+)
                   AND    CP.ENO_NO = MI.ENO_NO
                   AND    CP.SAL_GBN = '0'
                   AND    '1' = ?                        -- 전년도의 급여 실적
                   GROUP BY CP.PIS_YY, MI.HEAD_CD
                   UNION ALL
                   ----> 상여
                   SELECT CP.PIS_YY, MI.HEAD_CD,
                          SUM(NVL(BAS_AMT,0) + NVL(OT_AMT,0) + NVL(OSE_AMT,0) + NVL(LSEV_AMT,0)) AS AMT -- 상여
                   FROM   T_CP_PAYMASTER CP,
                          T_MI_PERSON MI
                   WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.PIS_YY  = ?                 -- 전년도
                   AND    MI.PIS_YY  = ?                 -- 사업년도
                   AND    CP.ENO_NO  = MI.ENO_NO
                   AND    CP.SAL_GBN = '1'
                   AND    '2' = ?                        -- 전년도의 상여 실적
                   GROUP BY CP.PIS_YY, MI.HEAD_CD
                   UNION ALL
                   ----> 연차수당
                   SELECT CP.PIS_YY, MI.HEAD_CD,
                          SUM(NVL(SALT_AMT,0)) AS AMT
                   FROM   T_CP_PAYMASTER CP,
                          T_MI_PERSON MI
                   WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.PIS_YY  = ?
                   AND    MI.PIS_YY  = ?
                   AND    CP.ENO_NO  = MI.ENO_NO
                   AND    CP.SAL_GBN = '4'
                   AND    '5' = ?                        -- 전년도의 연차수당 실적
                   GROUP BY CP.PIS_YY, MI.HEAD_CD
                   UNION ALL
                   ----> 고용보험
                   SELECT A.PIS_YY, HEAD_CD, ROUND(AMT * (HSIPCT_NO / 100)) AS AMT
                   FROM ( SELECT CP.PIS_YY, MI.HEAD_CD,
                                 SUM(NVL(SALT_AMT,0)) - SUM(NVL(SCH_AMT,0)) AS AMT
                          FROM   T_CP_PAYMASTER CP,
                                 T_MI_PERSON MI
                          WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                          AND    CP.PIS_YY  = ?          -- 전년도
                          AND    MI.PIS_YY  = ?          -- 사업년도
                          AND    CP.ENO_NO  = MI.ENO_NO
                          AND    '7' = ?                 -- 전년도의 고용보험 실적
                          GROUP BY CP.PIS_YY, MI.HEAD_CD
                        ) A,
                        ( SELECT TO_CHAR(TO_NUMBER(PIS_YY) - 1) AS PIS_YY, HSIPCT_NO
                          FROM   T_MI_PAYBASE
                          WHERE  PIS_YY = ?
                          AND    ROWNUM = 1              -- 사업년도
                        ) B                              -- 고용보험요율
                   WHERE  A.PIS_YY = B.PIS_YY
                   UNION ALL
                   ----> 건강검진
                   SELECT SUBSTR(CP.PRO_YMD,1,4) AS PIS_YY, MI.HEAD_CD,
                          SUM(NVL(CHIT_AMT,0)) AS AMT
                   FROM   T_CM_BODY CP,
                          T_MI_PERSON MI
                   WHERE  CP.PRO_YMD LIKE ?||'%'  -- 전년도
                   AND    MI.PIS_YY  = ?          -- 사업년도
                   AND    MI.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.ENO_NO  = MI.ENO_NO
                   AND    '8' = ?                 -- 전년도의 고용보험 실적
                   GROUP BY SUBSTR(CP.PRO_YMD,1,4) , MI.HEAD_CD
                   UNION ALL
                   -- 그외 수당
                   SELECT CP.PIS_YY, MI.HEAD_CD,
                          DECODE(?, '3', SUM(NVL(LUN_AMT,0)),                                         -- 중식대
                                    '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                    '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                    '9', SUM(NVL(HINU_AMT,0))) AS AMT                                 -- 건강보험
                   FROM   T_CP_PAYMASTER CP,
                          T_MI_PERSON MI
                   WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.PIS_YY  = ?                 -- 전년도
                   AND    MI.PIS_YY  = ?                 -- 사업년도
                   AND    CP.ENO_NO  = MI.ENO_NO
                   AND    CP.SAL_GBN = '0'
                   AND  ( '1' <> ?
                   AND    '2' <> ?
                   AND    '5' <> ?
                   AND    '7' <> ?
                   AND    '8' <> ?
                        )
                   GROUP BY CP.PIS_YY, MI.HEAD_CD
                 ) BB,                                   -- 전년도 실적
                 ( ----------------------> 사업년도의 전년도 추정실적
                   SELECT A.PIS_YY, A.HEAD_CD, DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                                  NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                                         '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                     -- 중식대
                                                         '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                                         '5', SUM(NVL(YBUS_AMT,0)),                                        -- 연차수당
                                                         '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                                         '7', SUM(NVL(HINS_AMT,0)),                                        -- 고용보험
                                                         '8', SUM(NVL(CHIT_AMT,0)),                                        -- 건강검진
                                                         '9', SUM(NVL(HINU_AMT,0)),                                        -- 건강보험
                                                        '10', SUM(NVL(SCH_AMT,0))) AS AMT                                  -- 학자금
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 사업년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '1'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 전년도
                   AND    '2' <> ?                       -- 상여를 제외한 나머지 항목
                   GROUP BY A.PIS_YY, A.HEAD_CD
                   UNION ALL
                   SELECT A.PIS_YY, A.HEAD_CD, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 사업년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '2'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 전년도
                   AND    '2' = ?                        -- 상여
                   GROUP BY A.PIS_YY, A.HEAD_CD
                 ) CC,                                   -- 전년도 추정실적
                 ( ----------------------> 전년도 예산
                   SELECT A.PIS_YY, A.HEAD_CD, DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                                  NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                                         '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                     -- 중식대
                                                         '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                                         '5', SUM(NVL(YBUS_AMT,0)),                                        -- 연차수당
                                                         '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                                         '7', SUM(NVL(HINS_AMT,0)),                                        -- 고용보험
                                                         '8', SUM(NVL(CHIT_AMT,0)),                                        -- 건강검진
                                                         '9', SUM(NVL(HINU_AMT,0)),                                        -- 건강보험
                                                        '10', SUM(NVL(SCH_AMT,0))) AS AMT                                  -- 학자금
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 전년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '1'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 전년도
                   AND    '2' <> ?                       -- 상여를 제외한 나머지 항목
                   GROUP BY A.PIS_YY, A.HEAD_CD
                   UNION ALL
                   SELECT A.PIS_YY, A.HEAD_CD, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 전년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '2'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 전년도
                   AND    '2' = ?                        -- 상여
                   GROUP BY A.PIS_YY, A.HEAD_CD
                 ) DD                                    -- 전년도 예산
            WHERE  AA.HEAD_CD = BB.HEAD_CD(+)
            AND    AA.HEAD_CD = CC.HEAD_CD(+)
            AND    AA.HEAD_CD = DD.HEAD_CD(+)
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc290
								* @description : 업무별월별예산(부문별)
								***********************************************************************
								* 2007/04/16      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC290_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 업무별월별예산(부문별) 조회 -->
				<sql name="MISC290_SHR_02">
								<description>
												업무별월별예산(부문별) 조회
								</description>
								<query>
												<![CDATA[
            SELECT AA.HEAD_CD,
                   SF_GET_COMMNAME('01', 'B1', AA.HEAD_CD)||'경비' AS HEAD_NM,
                   ROUND(DECODE(AA.AMT01 + AA.AMT02 + AA.AMT03 + AA.AMT04 + AA.AMT05 + AA.AMT06 + AA.AMT07 + AA.AMT08 + AA.AMT09 + AA.AMT10 + AA.AMT11 + AA.AMT12, 0, 0,
                         (AA.AMT01 + AA.AMT02 + AA.AMT03 + AA.AMT04 + AA.AMT05 + AA.AMT06 + AA.AMT07 + AA.AMT08 + AA.AMT09 + AA.AMT10 + AA.AMT11 + AA.AMT12) / 1000)) AS AMT00,
                   ROUND(DECODE(AA.AMT01, 0, 0, AA.AMT01 / 1000)) AS AMT01,
                   ROUND(DECODE(AA.AMT02, 0, 0, AA.AMT02 / 1000)) AS AMT02,
                   ROUND(DECODE(AA.AMT03, 0, 0, AA.AMT03 / 1000)) AS AMT03,
                   ROUND(DECODE(AA.AMT04, 0, 0, AA.AMT04 / 1000)) AS AMT04,
                   ROUND(DECODE(AA.AMT05, 0, 0, AA.AMT05 / 1000)) AS AMT05,
                   ROUND(DECODE(AA.AMT06, 0, 0, AA.AMT06 / 1000)) AS AMT06,
                   ROUND(DECODE(AA.AMT07, 0, 0, AA.AMT07 / 1000)) AS AMT07,
                   ROUND(DECODE(AA.AMT08, 0, 0, AA.AMT08 / 1000)) AS AMT08,
                   ROUND(DECODE(AA.AMT09, 0, 0, AA.AMT09 / 1000)) AS AMT09,
                   ROUND(DECODE(AA.AMT10, 0, 0, AA.AMT10 / 1000)) AS AMT10,
                   ROUND(DECODE(AA.AMT11, 0, 0, AA.AMT11 / 1000)) AS AMT11,
                   ROUND(DECODE(AA.AMT12, 0, 0, AA.AMT12 / 1000)) AS AMT12
            FROM ( SELECT HEAD_CD, SUM(DECODE(HIR_MM, '01', AMT, 0)) AMT01,
                                   SUM(DECODE(HIR_MM, '02', AMT, 0)) AMT02,
                                   SUM(DECODE(HIR_MM, '03', AMT, 0)) AMT03,
                                   SUM(DECODE(HIR_MM, '04', AMT, 0)) AMT04,
                                   SUM(DECODE(HIR_MM, '05', AMT, 0)) AMT05,
                                   SUM(DECODE(HIR_MM, '06', AMT, 0)) AMT06,
                                   SUM(DECODE(HIR_MM, '07', AMT, 0)) AMT07,
                                   SUM(DECODE(HIR_MM, '08', AMT, 0)) AMT08,
                                   SUM(DECODE(HIR_MM, '09', AMT, 0)) AMT09,
                                   SUM(DECODE(HIR_MM, '10', AMT, 0)) AMT10,
                                   SUM(DECODE(HIR_MM, '11', AMT, 0)) AMT11,
                                   SUM(DECODE(HIR_MM, '12', AMT, 0)) AMT12
                   FROM ( SELECT A.PIS_YY, B.HIR_MM, A.HEAD_CD,
                                 DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                    NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                           '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                     -- 중식대
                                           '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                           '5', SUM(NVL(YBUS_AMT,0)),                                        -- 연차수당
                                           '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                           '7', SUM(NVL(HINS_AMT,0)),                                        -- 고용보험
                                           '8', SUM(NVL(CHIT_AMT,0)),                                        -- 건강검진
                                           '9', SUM(NVL(HINU_AMT,0)),                                        -- 건강보험
                                          '10', SUM(NVL(SCH_AMT,0))) AS AMT                                  -- 학자금
                          FROM   T_MI_PERSON A,
                                 T_MI_BUDGETMST B
                          WHERE  A.PIS_YY = ?                   -- 사업년도
                          AND    A.PIS_YY = B.PIS_YY
                          AND    A.ENO_NO = B.ENO_NO
                          AND    B.SAL_GBN = '1'
                          AND    B.OCC_CD  LIKE '%'||?||'%'
                          AND    B.HIR_YY  = ?                  -- 사업년도
                          AND    '2' <> ?                       -- 상여를 제외한 나머지 항목인 경우
                          GROUP BY A.PIS_YY, B.HIR_MM, A.HEAD_CD
                          UNION ALL
                          SELECT A.PIS_YY, B.HIR_MM, A.HEAD_CD, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                          FROM   T_MI_PERSON A,
                                 T_MI_BUDGETMST B
                          WHERE  A.PIS_YY = ?
                          AND    A.PIS_YY = B.PIS_YY
                          AND    A.ENO_NO = B.ENO_NO
                          AND    B.SAL_GBN = '2'
                          AND    B.OCC_CD  LIKE '%'||?||'%'
                          AND    B.HIR_YY  = ?
                          AND    '2' = ?                        -- 상여인 경우
                          GROUP BY A.PIS_YY, B.HIR_MM, A.HEAD_CD
                        )
                   GROUP BY HEAD_CD
                 ) AA
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc300
								* @description : 업무별예산(항세목별)
								***********************************************************************
								* 2007/04/17      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC300_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 업무별예산(항세목별) 조회 -->
				<sql name="MISC300_SHR_02">
								<description>
												업무별예산(항세목별) 조회 (단위 : 천원)
								</description>
								<query>
												<![CDATA[
            SELECT DECODE(?, '1', '급여', '2', '상여', '3', '중식대', '4', '휴일근무수당', '5', '연차수당', '6', '국민연금', '7', '고용보험', '8', '건강검진', '9', '건강보험', '10', '학자금')||
                   DECODE(?, 'A', '(사무직)', 'M', '(예비직)')    AS ITEM_NM,
                   DECODE(NVL(AA.AMT, 0), 0, 0, ROUND((AA.AMT/1000)/12)) AFT_AVG,
                   DECODE(NVL(AA.AMT, 0), 0, 0, ROUND(AA.AMT/1000)) AFT_SUM,
                   DECODE(NVL(DD.AMT, 0), 0, 0, ROUND((DD.AMT/1000)/12)) BEF_AVG,
                   DECODE(NVL(DD.AMT, 0), 0, 0, ROUND(DD.AMT/1000)) BEF_SUM,
                   DECODE(NVL(BB.AMT, 0), 0, 0, ROUND(BB.AMT/1000)) AS BEF1_SUM,
                   DECODE(NVL(CC.AMT, 0), 0, 0, ROUND(CC.AMT/1000)) AS BEF2_SUM,
                   DECODE(NVL(BB.AMT, 0), 0, 0, ROUND(BB.AMT/1000)) + DECODE(NVL(CC.AMT, 0), 0, 0, ROUND(CC.AMT/1000)) AS BEF3_SUM,
                   DECODE(DECODE(NVL(DD.AMT, 0), 0, 0, ROUND(DD.AMT/1000)), 0, 0, ROUND((DECODE(NVL(BB.AMT, 0), 0, 0, ROUND(BB.AMT/1000)) + DECODE(NVL(CC.AMT, 0), 0, 0, ROUND(CC.AMT/1000))) / (DECODE(NVL(DD.AMT, 0), 0, 0, ROUND(DD.AMT/1000))) * 100)) AS BEF_RATE
            FROM ( ----------------------> 사업년도 예산
                   SELECT A.PIS_YY, DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                       NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                              '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                     -- 중식대
                                              '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                              '5', SUM(NVL(YBUS_AMT,0)),                                        -- 연차수당
                                              '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                              '7', SUM(NVL(HINS_AMT,0)),                                        -- 고용보험
                                              '8', SUM(NVL(CHIT_AMT,0)),                                        -- 건강검진
                                              '9', SUM(NVL(HINU_AMT,0)),                                        -- 건강보험
                                             '10', SUM(NVL(SCH_AMT,0))) AS AMT                                  -- 학자금
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 사업년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '1'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 사업년도
                   AND    '2' <> ?                       -- 상여를 제외한 나머지 항목인 경우
                   GROUP BY A.PIS_YY
                   UNION ALL
                   SELECT A.PIS_YY, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '2'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?
                   AND    '2' = ?                        -- 상여인 경우
                   GROUP BY A.PIS_YY
                 ) AA,                                   -- 사업년도 예산
                 ( ----------------------> 사업년도의 전년도 실적
                   ----> 급여
                   SELECT MI.PIS_YY,
                          SUM(NVL(BAS_AMT,0) + NVL(DUTY_AMT,0) + NVL(OT_AMT,0) + NVL(WEL_AMT,0) + NVL(OSE_AMT,0) + NVL(RUN_AMT,0) + NVL(MH_AMT,0) + NVL(LSEV_AMT,0) + NVL(AMT_1,0)) AS AMT -- 급여
                   FROM   T_CP_PAYMASTER CP,
                        ( SELECT OCC_CD, PIS_YY, ENO_NO, SUM(DECODE(AD_TAG, 'A', NVL(AMOUNT, 0), 'D', -1 * NVL(AMOUNT, 0))) AMT_1
                          FROM   T_CP_CHANGE
                          WHERE  OCC_CD  LIKE '%'||?||'%'
                          AND    PIS_YY = ?              -- 전년도
                          AND    SAL_GBN IN ('CA', 'TR', 'JJ', 'BJ', 'JY', 'AB', '20')
                          GROUP BY OCC_CD, PIS_YY, ENO_NO
                        ) CP2,
                          T_MI_PERSON MI
                   WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.PIS_YY = ?                  -- 전년도
                   AND    MI.PIS_YY = ?                  -- 사업년도
                   AND    CP.OCC_CD = CP2.OCC_CD(+)
                   AND    CP.PIS_YY = CP2.PIS_YY(+)
                   AND    CP.ENO_NO = CP2.ENO_NO(+)
                   AND    CP.ENO_NO = MI.ENO_NO
                   AND    CP.SAL_GBN = '0'
                   AND    '1' = ?                        -- 전년도의 급여 실적
                   GROUP BY MI.PIS_YY
                   UNION ALL
                   ----> 상여
                   SELECT MI.PIS_YY,
                          SUM(NVL(BAS_AMT,0) + NVL(OT_AMT,0) + NVL(OSE_AMT,0) + NVL(LSEV_AMT,0)) AS AMT -- 상여
                   FROM   T_CP_PAYMASTER CP,
                          T_MI_PERSON MI
                   WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.PIS_YY  = ?                 -- 전년도
                   AND    MI.PIS_YY  = ?                 -- 사업년도
                   AND    CP.ENO_NO  = MI.ENO_NO
                   AND    CP.SAL_GBN = '1'
                   AND    '2' = ?                        -- 전년도의 상여 실적
                   GROUP BY MI.PIS_YY
                   UNION ALL
                   ----> 연차수당
                   SELECT MI.PIS_YY,
                          SUM(NVL(SALT_AMT,0)) AS AMT
                   FROM   T_CP_PAYMASTER CP,
                          T_MI_PERSON MI
                   WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.PIS_YY  =?
                   AND    MI.PIS_YY  =?
                   AND    CP.ENO_NO  = MI.ENO_NO
                   AND    CP.SAL_GBN = '4'
                   AND    '5' = ?                        -- 전년도의 연차수당 실적
                   GROUP BY MI.PIS_YY
                   UNION ALL
                   ----> 고용보험
                   SELECT A.PIS_YY, ROUND(AMT * (HSIPCT_NO / 100)) AS AMT
                   FROM ( SELECT MI.PIS_YY,
                                 SUM(NVL(SALT_AMT,0)) - SUM(NVL(SCH_AMT,0)) AS AMT
                          FROM   T_CP_PAYMASTER CP,
                                 T_MI_PERSON MI
                          WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                          AND    CP.PIS_YY  = ?          -- 전년도
                          AND    MI.PIS_YY  = ?          -- 사업년도
                          AND    CP.ENO_NO  = MI.ENO_NO
                          AND    '7' = ?                 -- 전년도의 고용보험 실적
                          GROUP BY MI.PIS_YY
                        ) A,
                        ( SELECT PIS_YY, HSIPCT_NO
                          FROM   T_MI_PAYBASE
                          WHERE  PIS_YY = ?
                          AND    ROWNUM = 1              -- 사업년도
                        ) B                              -- 고용보험요율
                   WHERE  A.PIS_YY = B.PIS_YY
                   UNION ALL
                   ----> 건강검진
                   SELECT MI.PIS_YY,
                          SUM(NVL(CHIT_AMT,0)) AS AMT
                   FROM   T_CM_BODY CP,
                          T_MI_PERSON MI
                   WHERE  CP.PRO_YMD LIKE ?||'%'  -- 전년도
                   AND    MI.PIS_YY  = ?          -- 사업년도
                   AND    MI.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.ENO_NO  = MI.ENO_NO
                   AND    '8' = ?                 -- 전년도의 고용보험 실적
                   GROUP BY MI.PIS_YY
                   UNION ALL
                   -- 그외 수당
                   SELECT MI.PIS_YY,
                          DECODE(?, '3', SUM(NVL(LUN_AMT,0)),                                         -- 중식대
                                    '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                    '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                    '9', SUM(NVL(HINU_AMT,0)),                                        -- 건강보험
                                   '10', SUM(NVL(SCH_AMT,0))) AS AMT                                  -- 학자금
                   FROM   T_CP_PAYMASTER CP,
                          T_MI_PERSON MI
                   WHERE  CP.OCC_CD  LIKE '%'||?||'%'
                   AND    CP.PIS_YY  = ?                 -- 전년도
                   AND    MI.PIS_YY  = ?                 -- 사업년도
                   AND    CP.ENO_NO  = MI.ENO_NO
                   AND    CP.SAL_GBN = '0'
                   AND  ( '1' <> ?
                   AND    '2' <> ?
                   AND    '5' <> ?
                   AND    '7' <> ?
                   AND    '8' <> ?
                        )
                   GROUP BY MI.PIS_YY
                 ) BB,                                   -- 전년도 실적
                 ( ----------------------> 사업년도의 전년도 추정실적
                   SELECT A.PIS_YY, DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                       NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                              '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                     -- 중식대
                                              '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                              '5', SUM(NVL(YBUS_AMT,0)),                                        -- 연차수당
                                              '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                              '7', SUM(NVL(HINS_AMT,0)),                                        -- 고용보험
                                              '8', SUM(NVL(CHIT_AMT,0)),                                        -- 건강검진
                                              '9', SUM(NVL(HINU_AMT,0)),                                        -- 건강보험
                                             '10', SUM(NVL(SCH_AMT,0))) AS AMT                                  -- 학자금
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 사업년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '1'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 전년도
                   AND    '2' <> ?                       -- 상여를 제외한 나머지 항목
                   GROUP BY A.PIS_YY
                   UNION ALL
                   SELECT A.PIS_YY, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 사업년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '2'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 전년도
                   AND    '2' = ?                        -- 상여
                   GROUP BY A.PIS_YY
                 ) CC,                                   -- 전년도 추정실적
                 ( ----------------------> 전년도 예산
                   SELECT ? AS PIS_YY, DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                          NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                                 '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                     -- 중식대
                                                 '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                                 '5', SUM(NVL(YBUS_AMT,0)),                                        -- 연차수당
                                                 '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                                 '7', SUM(NVL(HINS_AMT,0)),                                        -- 고용보험
                                                 '8', SUM(NVL(CHIT_AMT,0)),                                        -- 건강검진
                                                 '9', SUM(NVL(HINU_AMT,0)),                                        -- 건강보험
                                                '10', SUM(NVL(SCH_AMT,0))) AS AMT                                  -- 학자금
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 전년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '1'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 전년도
                   AND    '2' <> ?                       -- 상여를 제외한 나머지 항목
                   GROUP BY A.PIS_YY
                   UNION ALL
                   SELECT ? AS PIS_YY, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                   FROM   T_MI_PERSON A,
                          T_MI_BUDGETMST B
                   WHERE  A.PIS_YY = ?                   -- 전년도
                   AND    A.PIS_YY = B.PIS_YY
                   AND    A.ENO_NO = B.ENO_NO
                   AND    B.SAL_GBN = '2'
                   AND    B.OCC_CD  LIKE '%'||?||'%'
                   AND    B.HIR_YY  = ?                  -- 전년도
                   AND    '2' = ?                        -- 상여
                   GROUP BY A.PIS_YY
                 ) DD                                    -- 전년도 예산
            WHERE  AA.PIS_YY = BB.PIS_YY(+)
            AND    AA.PIS_YY = CC.PIS_YY(+)
            AND    AA.PIS_YY = DD.PIS_YY(+)
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : misc310
								* @description : 업무별월별예산(항세목별)
								***********************************************************************
								* 2007/04/16      박인이        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 작업로그 데이터 조회 -->
				<sql name="MISC310_SHR_01">
								<description>사업계획 작업로그 조회</description>
								<query>
												<![CDATA[
            SELECT PIS_YY,         -- 년도
                   PAY_YMD,        -- 대상시작일자
                   APY_YMD,        -- 대상종료일자
                   PRO_STS         -- 상태
            FROM   T_CP_WORKLOG
            WHERE  PIS_MM  = ' '
            AND    OCC_CD  = ' '
            AND    SAL_GBN = 'G'
            AND    SEQ     = '1'
            ORDER BY PIS_YY DESC
            ]]>
								</query>
				</sql>

				<!-- 업무별월별예산(부문별) 조회 -->
				<sql name="MISC310_SHR_02">
								<description>
												업무별월별예산(부문별) 조회
								</description>
								<query>
												<![CDATA[
            SELECT DECODE(?, '1', '급여', '2', '상여', '3', '중식대', '4', '휴일근무수당', '5', '연차수당', '6', '국민연금', '7', '고용보험', '8', '건강검진', '9', '건강보험', '10', '학자금')||
                   DECODE(?, 'A', '(사무직)', 'M', '(예비직)')    AS ITEM_NM,
                   ROUND(DECODE(AA.AMT01 + AA.AMT02 + AA.AMT03 + AA.AMT04 + AA.AMT05 + AA.AMT06 + AA.AMT07 + AA.AMT08 + AA.AMT09 + AA.AMT10 + AA.AMT11 + AA.AMT12, 0, 0,
                         (AA.AMT01 + AA.AMT02 + AA.AMT03 + AA.AMT04 + AA.AMT05 + AA.AMT06 + AA.AMT07 + AA.AMT08 + AA.AMT09 + AA.AMT10 + AA.AMT11 + AA.AMT12) / 1000)) AS AMT00,
                   ROUND(DECODE(AA.AMT01, 0, 0, AA.AMT01 / 1000)) AS AMT01,
                   ROUND(DECODE(AA.AMT02, 0, 0, AA.AMT02 / 1000)) AS AMT02,
                   ROUND(DECODE(AA.AMT03, 0, 0, AA.AMT03 / 1000)) AS AMT03,
                   ROUND(DECODE(AA.AMT04, 0, 0, AA.AMT04 / 1000)) AS AMT04,
                   ROUND(DECODE(AA.AMT05, 0, 0, AA.AMT05 / 1000)) AS AMT05,
                   ROUND(DECODE(AA.AMT06, 0, 0, AA.AMT06 / 1000)) AS AMT06,
                   ROUND(DECODE(AA.AMT07, 0, 0, AA.AMT07 / 1000)) AS AMT07,
                   ROUND(DECODE(AA.AMT08, 0, 0, AA.AMT08 / 1000)) AS AMT08,
                   ROUND(DECODE(AA.AMT09, 0, 0, AA.AMT09 / 1000)) AS AMT09,
                   ROUND(DECODE(AA.AMT10, 0, 0, AA.AMT10 / 1000)) AS AMT10,
                   ROUND(DECODE(AA.AMT11, 0, 0, AA.AMT11 / 1000)) AS AMT11,
                   ROUND(DECODE(AA.AMT12, 0, 0, AA.AMT12 / 1000)) AS AMT12
            FROM ( SELECT PIS_YY, SUM(DECODE(HIR_MM, '01', AMT, 0)) AMT01,
                                  SUM(DECODE(HIR_MM, '02', AMT, 0)) AMT02,
                                  SUM(DECODE(HIR_MM, '03', AMT, 0)) AMT03,
                                  SUM(DECODE(HIR_MM, '04', AMT, 0)) AMT04,
                                  SUM(DECODE(HIR_MM, '05', AMT, 0)) AMT05,
                                  SUM(DECODE(HIR_MM, '06', AMT, 0)) AMT06,
                                  SUM(DECODE(HIR_MM, '07', AMT, 0)) AMT07,
                                  SUM(DECODE(HIR_MM, '08', AMT, 0)) AMT08,
                                  SUM(DECODE(HIR_MM, '09', AMT, 0)) AMT09,
                                  SUM(DECODE(HIR_MM, '10', AMT, 0)) AMT10,
                                  SUM(DECODE(HIR_MM, '11', AMT, 0)) AMT11,
                                  SUM(DECODE(HIR_MM, '12', AMT, 0)) AMT12
                   FROM ( SELECT A.PIS_YY, B.HIR_MM,
                                 DECODE(?, '1', SUM(NVL(BAS_AMT ,0) + NVL(DUTY_AMT ,0) + NVL(OT_AMT ,0) + NVL(WEL_AMT ,0) + NVL(OSE_AMT ,0) + NVL(RUN_AMT ,0) + NVL(MH_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(CAR_AMT ,0) + NVL(TRAN_AMT ,0) + NVL(FIELD_AMT ,0) + NVL(AIRPORT_AMT ,0) + NVL(JUIM_AMT ,0) + NVL(BANJ_AMT ,0) + NVL(JIKJ_AMT,0) +
                                                    NVL(RBAS_AMT ,0) + NVL(RDUTY_AMT ,0) + NVL(ROT_AMT ,0) + NVL(RWEL_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RRUN_AMT ,0) + NVL(RMH_AMT ,0) + NVL(RLSEV_AMT ,0) + NVL(RCAR_AMT ,0) + NVL(RTRAN_AMT ,0) + NVL(RFIELD_AMT ,0) + NVL(RAIRPORT_AMT ,0) + NVL(RJUIM_AMT ,0) + NVL(RBANJ_AMT ,0) + NVL(RJIKJ_AMT, 0)),  -- 급여
                                           '3', SUM(NVL(LUNC_AMT,0) + NVL(RLUNC_AMT,0)),                     -- 중식대
                                           '4', SUM(NVL(HOL_AMT,0)),                                         -- 휴일근무수당
                                           '5', SUM(NVL(YBUS_AMT,0)),                                        -- 연차수당
                                           '6', SUM(NVL(NPEN_AMT,0)),                                        -- 국민연금
                                           '7', SUM(NVL(HINS_AMT,0)),                                        -- 고용보험
                                           '8', SUM(NVL(CHIT_AMT,0)),                                        -- 건강검진
                                           '9', SUM(NVL(HINU_AMT,0)),                                        -- 건강보험
                                          '10', SUM(NVL(SCH_AMT,0))) AS AMT                                  -- 학자금
                          FROM   T_MI_PERSON A,
                                 T_MI_BUDGETMST B
                          WHERE  A.PIS_YY = ?                   -- 사업년도
                          AND    A.PIS_YY = B.PIS_YY
                          AND    A.ENO_NO = B.ENO_NO
                          AND    B.SAL_GBN = '1'
                          AND    B.OCC_CD  LIKE '%'||?||'%'
                          AND    B.HIR_YY  = ?                  -- 사업년도
                          AND    '2' <> ?                       -- 상여를 제외한 나머지 항목인 경우
                          GROUP BY A.PIS_YY, B.HIR_MM
                          UNION ALL
                          SELECT A.PIS_YY, B.HIR_MM, SUM(NVL(BAS_AMT ,0) + NVL(OT_AMT ,0) + NVL(OSE_AMT ,0) + NVL(LSEV_AMT ,0) + NVL(RBAS_AMT ,0) + NVL(ROT_AMT ,0) + NVL(ROSE_AMT ,0) + NVL(RLSEV_AMT,0)) AS AMT      -- 상여
                          FROM   T_MI_PERSON A,
                                 T_MI_BUDGETMST B
                          WHERE  A.PIS_YY = ?
                          AND    A.PIS_YY = B.PIS_YY
                          AND    A.ENO_NO = B.ENO_NO
                          AND    B.SAL_GBN = '2'
                          AND    B.OCC_CD  LIKE '%'||?||'%'
                          AND    B.HIR_YY  = ?
                          AND    '2' = ?                        -- 상여인 경우
                          GROUP BY A.PIS_YY, B.HIR_MM
                        )
                   GROUP BY PIS_YY
                 ) AA
            ]]>
								</query>
				</sql>

				<!--
								***********************************************************************
								* @UseCase     : misc320
								* @description : 정기승진자 인건비 인상현황
								***********************************************************************
								* 2007/05/08     이승욱        최초작성.
								***********************************************************************
				-->
				<!-- 정기승진자 인건비 인상현황 조회 -->
				<sql name="MISC320_SHR">
								<description>
												정기승진자 인건비 인상현황 조회
								</description>
								<query>
												<![CDATA[
SELECT P.PIS_YY
     , CASE WHEN P.OCC_CD = 'A' THEN '사무직' ELSE '예비직' END                              as OCC_CD
     , J.GBN2_TAG
     , J.JOB_NM||J.MF_TAG                                                                    as JOB_NM
     , COUNT(DISTINCT P.ENO_NO)                                                              as ENO_TCNT -- 총인원
--     , 0                                                                                     as ENO_DCNT -- 대상인원
     , COUNT(DISTINCT CASE WHEN J.GBN2_TAG = '1D' AND FLOOR(MONTHS_BETWEEN( ? , P.JPR_YMD)/12)  >= 3
                           THEN P.ENO_NO
                           WHEN J.GBN2_TAG in ('1E','30','40') AND FLOOR(MONTHS_BETWEEN(?, P.JPR_YMD)/12)  >= 4
                           THEN P.ENO_NO
                           WHEN J.GBN2_TAG IN ('20') AND FLOOR(MONTHS_BETWEEN(?, P.JPR_YMD)/12) >= 5
                           THEN P.ENO_NO
                           WHEN J.GBN2_TAG IN ('50') AND FLOOR(MONTHS_BETWEEN(?, P.JPR_YMD)/12) >= 5 AND U.EDGR_CD = 3
                           THEN P.ENO_NO
                           WHEN J.GBN2_TAG IN ('50') AND FLOOR(MONTHS_BETWEEN(?, P.JPR_YMD)/12) >= 3 AND U.EDGR_CD >= 4
                           THEN P.ENO_NO
                           WHEN J.GBN2_TAG IN ('8D','JY') AND FLOOR(MONTHS_BETWEEN(?, P.JPR_YMD)/12) >= 3
                           THEN P.ENO_NO
                           WHEN J.GBN2_TAG IN ('BJ') AND FLOOR(MONTHS_BETWEEN(?, P.JPR_YMD)/12) >= 4
                           THEN P.ENO_NO
                           ELSE ''
                      END) AS ENO_DCNT -- 대상인원
     , SUM(CASE WHEN                           B.HIR_MM = '12' AND B.SAL_GBN = '1'
                THEN (NVL(B.BAS_AMT,0) + NVL(B.DUTY_AMT,0) + NVL(B.OT_AMT,0)  + NVL(B.WEL_AMT,0)
                   +  NVL(B.OSE_AMT,0) + NVL(B.RUN_AMT,0)  + NVL(B.MH_AMT,0)  + NVL(B.LSEV_AMT,0)) * 12
                WHEN                           B.HIR_MM = '12' AND B.SAL_GBN = '2'
                THEN (NVL(B.BAS_AMT,0) + NVL(B.DUTY_AMT,0) + NVL(B.OT_AMT,0)  + NVL(B.WEL_AMT,0)
                   +  NVL(B.OSE_AMT,0) + NVL(B.RUN_AMT,0)  + NVL(B.MH_AMT,0)  + NVL(B.LSEV_AMT,0)) * 8
           END)                                                                              as TOT_AMT -- 인건비 총액
     , SUM(CASE WHEN P.JOB_CD != P.PJOB_CD AND B.HIR_MM = '12' AND B.SAL_GBN = '1'
                THEN (NVL(B.BAS_AMT,0) + NVL(B.DUTY_AMT,0) + NVL(B.OT_AMT,0)  + NVL(B.WEL_AMT,0)
                   +  NVL(B.OSE_AMT,0) + NVL(B.RUN_AMT,0)  + NVL(B.MH_AMT,0)  + NVL(B.LSEV_AMT,0)) *12
                WHEN P.JOB_CD != P.PJOB_CD AND B.HIR_MM = '12' AND B.SAL_GBN = '2'
                THEN (NVL(B.BAS_AMT,0) + NVL(B.DUTY_AMT,0) + NVL(B.OT_AMT,0)  + NVL(B.WEL_AMT,0)
                   +  NVL(B.OSE_AMT,0) + NVL(B.RUN_AMT,0)  + NVL(B.MH_AMT,0)  + NVL(B.LSEV_AMT,0)) *8
           END)                                                                              as BFR_AMT -- 인건비증가전액계
     , SUM(CASE WHEN P.JOB_CD != P.PJOB_CD AND B.HIR_MM = '01' AND B.SAL_GBN = '1'
                THEN (NVL(B.BAS_AMT,0) + NVL(B.DUTY_AMT,0) + NVL(B.OT_AMT,0)  + NVL(B.WEL_AMT,0)
                   +  NVL(B.OSE_AMT,0) + NVL(B.RUN_AMT,0)  + NVL(B.MH_AMT,0)  + NVL(B.LSEV_AMT,0)) *12
                WHEN P.JOB_CD != P.PJOB_CD AND B.HIR_MM = '01' AND B.SAL_GBN = '2'
                THEN (NVL(B.BAS_AMT,0) + NVL(B.DUTY_AMT,0) + NVL(B.OT_AMT,0)  + NVL(B.WEL_AMT,0)
                   +  NVL(B.OSE_AMT,0) + NVL(B.RUN_AMT,0)  + NVL(B.MH_AMT,0)  + NVL(B.LSEV_AMT,0)) *8
           END)                                                                              as BUG_AMT -- 인건비증가액계
     , COUNT(DISTINCT CASE WHEN P.JOB_CD != P.PJOB_CD AND B.HIR_MM = '01' THEN P.ENO_NO END) as ENO_BCNT -- 승진인원
     , MAX(L.PAY_YMD)                                                                        as STR_YMD
     , MAX(J.SORT_NO)                                                                        as SORT_NO
  FROM (SELECT (CASE WHEN A.GBN2_TAG IN ('1C','1N')                     THEN 'B'
                     WHEN A.GBN2_TAG  =  '8D'                           THEN A.COMM_CD
                     WHEN A.GBN2_TAG IN ('1D','1E','20','30','40','50') THEN A.GBN2_TAG
                END)       as GBN2_TAG
             ,  CASE WHEN A.COMM_CD  IN ('50','5A')                     THEN '남'
                     WHEN A.COMM_CD   =  '5B'                           THEN '여'
                     ELSE ' '
                END         as MF_TAG
             ,  A.COMM_CD   as JOB_CD
             , (CASE WHEN A.GBN2_TAG IN ('1C','1N')                     THEN '부장'
                     WHEN A.GBN2_TAG  =  '8D'                           THEN A.COMM_NM
                     WHEN A.GBN2_TAG IN ('1D','1E','20','30','40','50') THEN B.COMM_NM
                END)       as JOB_NM
             , (CASE WHEN B.GBN2_TAG IN ('8D','JY','BJ','JJ')           THEN A.SORT_NO
                     ELSE                                                    B.SORT_NO
                END)       as SORT_NO
          FROM T_CM_COMMON A
             , T_CM_COMMON B
         WHERE A.GBN2_TAG  = B.GBN2_TAG
           AND B.COMM_CD   = B.GBN2_TAG
           AND B.SORT_NO   > 0
           AND B.CD_GBN    = 'A2'
           AND A.SORT_NO   > 0
           AND A.CD_GBN    = 'A2'
           AND A.GBN2_TAG IN ('1C','1N','1D','1E','20','30','40','50','8D')
           AND A.COMM_CD  != 'JJ'
        )      J -- 직위그룹
     , T_MI_PERSON    P
     , T_CP_WORKLOG   L
     , T_MI_BUDGETMST B
     , T_CM_PERSON U
 WHERE P.JOB_CD  = J.JOB_CD
   AND P.PIS_YY  = L.PIS_YY
   AND P.PIS_YY  = B.PIS_YY
   AND P.ENO_NO  = B.ENO_NO
   AND J.JOB_NM is NOT NULL
   AND P.PIS_YY  = ?
   AND P.HIR_YMD < L.PAY_YMD||'01'
   AND B.HIR_YY||B.HIR_MM BETWEEN ? AND ?
   AND B.SAL_GBN IN ('1','2')
   AND P.ENO_NO  = U.ENO_NO
 GROUP BY P.PIS_YY, P.OCC_CD, J.GBN2_TAG, J.JOB_NM, J.MF_TAG
 ORDER BY SORT_NO
            ]]>
								</query>
				</sql>


				<!--
								***********************************************************************
								* @UseCase     : MISC330
								* @description : 사업계획 기준관리
								***********************************************************************
								* 2007/03/15     오대성        최초작성.
								***********************************************************************
				-->
				<!-- 사업계획 기준 조회 -->
				<sql name="MISC330_SHR">
								<description>사업계획 기준 조회</description>
								<query>
												<![CDATA[
            SELECT TO_CHAR(TO_DATE(BASIC_YMD, 'YYYYMMDD'), 'YYYY-MM-DD') AS BASIC_YMD
                 , BAS_CD
                 , BAS_TYPE
                 , DECODE(BAS_TYPE, 'J', BAS_FROM, '') AS JOB_CD_FROM
                 , DECODE(BAS_TYPE, 'J', BAS_TO  , '') AS JOB_CD_TO
                 , DECODE(BAS_TYPE, 'Y', BAS_FROM, '') AS BAS_YY_FROM
                 , DECODE(BAS_TYPE, 'Y', BAS_TO  , '') AS BAS_YY_TO
                 , BAS_AMT
              FROM T_MI_BASIS A
             WHERE BASIC_YMD = (SELECT MAX(BASIC_YMD)
                                  FROM T_MI_BASIS
                                 WHERE BASIC_YMD   <= ?
                                   AND BAS_GBN      = 'MI'
                                )
               AND BAS_GBN  = 'MI'
               AND BAS_CD   = NVL(?, BAS_CD)
          ORDER BY SF_GET_COMMSEQ('01', 'MI', BAS_CD)
                 , DECODE(BAS_TYPE, 'J', SF_GET_COMMSEQ('01', 'A2', BAS_FROM), BAS_FROM)
            ]]>
								</query>
				</sql>

				<!-- 사업계획 기준 저장 -->
				<sql name="MISC330_INS">
								<description>사업계획 기준 저장</description>
								<query>
												<![CDATA[
            INSERT
              INTO T_MI_BASIS
                 ( BAS_GBN
                 , BASIC_YMD
                 , BAS_CD
                 , BAS_TYPE
                 , BAS_FROM
                 , BAS_TO
                 , BAS_AMT
                 , IPT_MAN
                 , IPT_YMD
                 , UPT_MAN
                 , UPT_YMD )
          VALUES ( 'MI'
                 , ?
                 , ?
                 , ?
                 , DECODE(?, 'J', ?, ?)
                 , DECODE(?, 'J', ?, ?)
                 , ?
                 , ?
                 , SYSDATE
                 , ?
                 , SYSDATE )
            ]]>
								</query>
				</sql>

				<!-- 사업계획 기준 수정 -->
				<sql name="MISC330_UPT">
								<description>사업계획 기준 수정</description>
								<query>
												<![CDATA[
            UPDATE T_MI_BASIS
               SET BAS_TO       = DECODE(?, 'J', ?, ?)
                 , BAS_AMT      = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE BAS_GBN      = 'MI'
               AND BASIC_YMD    = ?
               AND BAS_CD       = ?
               AND BAS_TYPE     = ?
               AND BAS_FROM     = DECODE(?, 'J', ?, ?)
            ]]>
								</query>
				</sql>

				<!-- 사업계획 기준 삭제 -->
				<sql name="MISC330_DEL">
								<description>사업계획 기준 삭제</description>
								<query>
												<![CDATA[
            DELETE T_MI_BASIS
             WHERE BAS_GBN      = 'MI'
               AND BASIC_YMD    = ?
               AND BAS_CD       = ?
               AND BAS_TYPE     = ?
               AND BAS_FROM     = DECODE(?, 'J', ?, ?)
            ]]>
								</query>
				</sql>

</sqls>