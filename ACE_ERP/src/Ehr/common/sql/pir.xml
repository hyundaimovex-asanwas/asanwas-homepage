

<sqls>

<!-- 인사기록표 -->
<!--
***********************************************************************
* @UseCase     : pira010
* @description : 인사기록표
***********************************************************************
* 2006/12/21      박인이        최초작성.
***********************************************************************
-->
    <!-- 인사기록표 데이터 조회  -->
    <sql name="PIRA010_SHR">
        <description>인사기록표 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                                 -- 사번
                   ENO_NM,                                                                 -- 성명
                   NAM_CHI,                                                                -- 한문성명
                   TO_CHAR(BIR_YMD, 'YYYY-MM-DD')               AS BIR_YMD,                -- 생년월일
                   --CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1  AGE,    -- 나이
                   --2020.12.17 이동훈 수정 2000년 이후 태어났을 경우 반영
                   CASE WHEN SUBSTR(CET_NO,8,1) NOT IN ('1','2') THEN 
                   CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('20'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1 
                   ELSE 
                   CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1 
                   END AGE,                   
                   BIR_TAG,                                                                -- 양력구분
                   NAM_ENG,                                                                -- 영문성명
                   CET_NO,                                                                 -- 주민번호
                   MF_TAG,                                                                 -- 남녀구분
                   TO_CHAR(HIR_YMD, 'YYYY-MM-DD')               AS HIR_YMD,                -- 입사일
                   HEAD_CD,                                                                -- 본부코드
                   ASNHR.SF_GET_DPTNAME(GUBUN, 'B2', HEAD_CD)        AS HEAD_NM,                 -- 본부명
                   OCC_CD,                                                                 -- 직종코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A1', OCC_CD)         AS OCC_NM,                 -- 직종명
                   TO_CHAR(HIRG_YMD, 'YYYY-MM-DD')              AS HIRG_YMD,               -- 그룹입사일
                   DPT_CD,                                                                 -- 소속코드
                   DECODE(ASNHR.SF_GET_DPTNAME(GUBUN, 'A4', DPT_CD), DPT_CD, ASNHR.SF_GET_DPTNAME(GUBUN, 'B2', DPT_CD), ASNHR.SF_GET_DPTNAME(GUBUN, 'A4', DPT_CD))
                                                                AS DPT_NM,                 -- 소속명
                   JOB_CD,                                                                 -- 직위코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A2', JOB_CD)         AS JOB_NM,                 -- 직위명
                   TO_CHAR(JPR_YMD, 'YYYY-MM-DD')               AS JPR_YMD,                -- 승진일
                   TEAM_CD,                                                                -- 팀코드
                   ASNHR.SF_GET_DPTNAME(GUBUN, 'A6', TEAM_CD)        AS TEAM_NM,                -- 팀명
                   HOB_CD,                                                                 -- 호봉코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A4', HOB_CD)         AS HOB_NM,                 -- 호봉명
                   TO_CHAR(HBA_YMD, 'YYYY-MM-DD')               AS HBA_YMD,                -- 승급일
                   DUTY_CD,                                                                -- 직책코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A7', DUTY_CD)        AS DUTY_NM,                -- 직책명
                   TAX_DPT,                                                                -- 회계부서
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'AD', TAX_DPT)         AS TAX_DPTNM,              -- 회계부서
                   RETM_REM              AS RETP_YMD,                -- 계약만료일
                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST A WHERE A.DUTY_CD = JIKMU_CD) AS JIKMU, --직무 명칭
                   REG_CD
            FROM   ASNHR.T_CM_PERSON
            WHERE ( ENO_NO = ? OR     ENO_NM = ?)
            ]]>
        </query>
    </sql>


    <!-- 인사기록표 데이터 조회  -->
    <sql name="PIRA010_SHR_PRINT">
        <description>인사기록표 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO,                                                                 -- 사번
                   A.ENO_NM,                                                                 -- 성명
                   A.NAM_CHI,                                                                -- 한문성명
                   A.NAM_ENG,                                                                -- 영문성명				   
                   TO_CHAR(A.BIR_YMD, 'YYYY-MM-DD') AS BIR_YMD,                -- 생년월일
                   --CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1  AGE,    -- 나이
                   --2020.12.17 이동훈 수정 2000년 이후 태어났을 경우 반영
                   CASE WHEN SUBSTR(CET_NO,8,1) NOT IN ('1','2') THEN 
                   CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('20'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1 
                   ELSE 
                   CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1 
                   END AGE,  
				   CASE WHEN A.BIR_TAG = 'S' THEN '(양력)  ' ELSE '(음력)  ' END AS BIR_TAG, 
                   CASE WHEN A.MF_TAG = 'M' THEN '남자  ' ELSE '여자  ' END MF_TAG,      -- 남녀구분
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'C1', A.HIR_CD)   AS HIR_NM,      -- 채용구분				   
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A1', A.OCC_CD) AS OCC_NM,                 -- 직종명				   
                   TO_CHAR(A.HIR_YMD, 'YYYY-MM-DD') AS HIR_YMD,                -- 입사일
                   TO_CHAR(A.HIRG_YMD, 'YYYY-MM-DD') AS HIRG_YMD,            -- 그룹입사일
                   TO_CHAR(A.JPR_YMD, 'YYYY-MM-DD') AS JPR_YMD,                -- 승진일
                   ASNHR.SF_GET_DPTNAME(GUBUN, 'B2', A.HEAD_CD) AS HEAD_NM,                 -- 본부명
                   DECODE(ASNHR.SF_GET_DPTNAME(GUBUN, 'A4', A.DPT_CD), DPT_CD, ASNHR.SF_GET_DPTNAME(GUBUN, 'B2', A.DPT_CD), ASNHR.SF_GET_DPTNAME(GUBUN, 'A4', A.DPT_CD)) AS DPT_NM,  -- 소속명
                   ASNHR.SF_GET_DPTNAME(GUBUN, 'A6', A.TEAM_CD) AS TEAM_NM,                -- 팀명
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A2', A.JOB_CD) AS JOB_NM,                 -- 직위명
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A4', A.HOB_CD) AS HOB_NM,                -- 호봉명	
                   A.PER_ADR,                                               -- 본적				   	
                   DECODE(A.RZI_NO,NULL,'',SUBSTR(A.RZI_NO,1,3)||'-'||SUBSTR(A.RZI_NO,4,3)) AS RZI_NO,   -- 실거주지우편번호
                   A.RADR_CT||' '||A.RADR AS ADDRESS,                                                 -- 실거주지주소
                   A.PHN_NO,                                                  -- 전화번호
                   A.EM_PHN_NO,                                               -- 휴대폰
                   A.E_MAIL,                                               -- 이메일주소       	
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'SA', A.TRG_CD)    AS TRG_NM,    -- 장애인정구분
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'SH', A.MPVA_CD)   AS MPVA_NM,	 -- 보훈대상				      
                   A.HOBBY,                                               -- 취미
                   A.SPEC_CD,                                             -- 특기
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'D2', A.REL_CD)  AS REL_NM,     -- 종교									   
                   TO_CHAR(A.RET_YMD, 'YYYY-MM-DD') AS RET_YMD,    -- 퇴사일
                   FLOOR(MONTHS_BETWEEN(DECODE(A.RET_YMD,'',SYSDATE,A.RET_YMD),A.HIR_YMD)/12) AS LSE_YY,				-- 근속기간년수
                   FLOOR(MOD(MONTHS_BETWEEN(DECODE(A.RET_YMD,'',SYSDATE,A.RET_YMD),A.HIR_YMD), 12)) AS LSE_MM, 		-- 근속기간개월												     
                   TO_CHAR(B.EYE_LEF, '0.0') AS EYE_LEF,  -- 좌시력
                   TO_CHAR(B.EYE_RHT, '0.0') AS EYE_RHT,  -- 우시력
                   B.HEIGHT,                                                            -- 신장
                   B.WEIGHT,                                                            -- 체중
                   B.BLD_TYP,                                                           -- 혈액형									      
				   ASNHR.SF_GET_COMMNAME('01', 'F1',C.GUB_CD) AS GUB_NM, -- 구분
                   SUBSTR(C.ENL_YMD, 1, 4) || '/' || SUBSTR(C.ENL_YMD, 5, 2) || '/' || SUBSTR(C.ENL_YMD, 7) AS ENL_YMD,  -- 시작일자
                   SUBSTR(C.MIL_YMD, 1, 4) || '/' || SUBSTR(C.MIL_YMD, 5, 2) || '/' || SUBSTR(C.MIL_YMD, 7) AS MIL_YMD,  -- 종료일자
           	       ASNHR.SF_GET_COMMNAME('01', 'F4',C.MIL_CD) AS MIL_NM, -- 군별
           	       ASNHR.SF_GET_COMMNAME('01', 'F6',C.GRADE)  AS GRADE,  -- 계급
                   ASNHR.SF_GET_COMMNAME('01', 'F7',C.MBK_CD) AS  MBK_NM -- 병과									   
									   
            FROM   ASNHR.T_CM_PERSON A, ASNHR.T_CM_BODY B, ASNHR.T_CM_ARMY C
            WHERE A.ENO_NO = B.ENO_NO 
			AND A.ENO_NO = C.ENO_NO(+)
			AND A.ENO_NO = ?

            ]]>
        </query>
    </sql>



    <!-- 인사기록표 데이터 조회  -->
    <sql name="PIRA010_SHR_PRINT2">
        <description>인사기록표 조회</description>
        <query>
            <![CDATA[
            	SELECT 
                          EDGR_CD,
                          ASNHR.SF_GET_COMMNAME('01', 'E1', EDGR_CD)                   AS EDGR_NM,
                          GURS_YMD, GURE_YMD,  
                          CASE WHEN SCH_NAM IS NOT NULL THEN  SCH_NAM
                               WHEN EDGR_CD = '2' THEN ASNHR.SF_GET_COMMNAME('01', 'E8', SCH_CD)
                               WHEN EDGR_CD = '3' THEN ASNHR.SF_GET_COMMNAME('01', 'E2', SCH_CD)
                               WHEN EDGR_CD = '4' THEN ASNHR.SF_GET_COMMNAME('01', 'E3', SCH_CD)
                               WHEN EDGR_CD = '5' THEN ASNHR.SF_GET_COMMNAME('01', 'E4', SCH_CD)
                               WHEN EDGR_CD = '6' THEN ASNHR.SF_GET_COMMNAME('01', 'E5', SCH_CD)
                               WHEN EDGR_CD = '7' THEN ASNHR.SF_GET_COMMNAME('01', 'E5', SCH_CD)
                               WHEN EDGR_CD = '8' THEN ASNHR.SF_GET_COMMNAME('01', 'E5', SCH_CD)
                               ELSE '' END  AS SCH_NAM,
                          ASNHR.SF_GET_COMMNAME('01', 'E6', MAJ_CD)      AS MAJ_NM,
                          ASNHR.SF_GET_COMMNAME('01', 'E7', GRD_CD)      AS GRD_NM
                   FROM   ASNHR.T_CM_SCHOOL
                   WHERE  ENO_NO   = ?
             ORDER BY EDGR_CD DESC, GURS_YMD
            ]]>
        </query>
    </sql>


    <!-- 인사기록표 데이터 조회  -->
    <sql name="PIRA010_SHR_PRINT3">
        <description>인사기록표 조회</description>
        <query>
            <![CDATA[
	            SELECT 
	                   ASNHR.SF_GET_COMMNAME('01', 'H1', QUA_CD)                   AS QUA_NM,   -- 자격면허
	                   TO_CHAR(TO_DATE(DECODE(GAN_YMD,' ',NULL,GAN_YMD), 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GAN_YMD,  -- 취득일자
	                   QUA_NO,                                                            -- 증서번호
	                   APP_ADM                                                          -- 발행처
	            FROM   ASNHR.T_CM_QUALIFICATION
	            WHERE  ENO_NO   = ?
	            ORDER BY GAN_YMD DESC
            ]]>
        </query>
    </sql>


    <!-- 가족사항 데이터 조회 -->
    <sql name="PIRA010_SHR_PRINT4">
        <description>가족사항 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   ASNHR.SF_GET_COMMNAME('01', 'G1', REL_CD) AS REL_NM,   -- 가족관계
                   ENO_NM,                                                            -- 성명
				   SUBSTR(BIR_YMD, 1, 2) || ' - ' || SUBSTR(BIR_YMD, 3, 2) || ' - ' || SUBSTR(BIR_YMD, 5,2) AS BIR_YMD, 
                   ASNHR.SF_GET_COMMNAME('01', 'E1', EDGR_CD) AS EDGR_NAM,  -- 학력구분
                   OCC_NAM,                                                           -- 근무처
                   DPD_TAG,                                                           -- 부양여부
                   HIU_TAG                                                            -- 의보여부
            FROM   ASNHR.T_CM_FAMILY
            WHERE  ENO_NO   = ?
            ORDER BY DECODE(ASNHR.SF_GET_COMMSEQ('01', 'G1', REL_CD),0,999,ASNHR.SF_GET_COMMSEQ('01', 'G1', REL_CD)), BIR_YMD
            ]]>
        </query>
    </sql>


    <!-- 입사후경력 데이터 조회 -->
    <sql name="PIRA010_SHR_PRINT5">
        <description>입사후경력 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,   SEQ_NO,
                   TO_CHAR(TO_DATE(STR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS STR_YMD,     -- 시작일자
                   ASNHR.SF_GET_COMMNAME('01', 'J2', APP_CD) AS APP_NM,      -- 발령구분
                   ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM,      -- 직위                   
                   DECODE(ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD), DPT_CD, DECODE(ASNHR.SF_GET_DPTNAME('01', 'A6', TEAM_CD), TEAM_CD, ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD), ASNHR.SF_GET_DPTNAME('01', 'A6', DPT_CD)) , ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD))    AS DPT_NM ,     -- 소속명
                   ASNHR.SF_GET_DPTNAME2('01', 'A6', TEAM_CD)  AS TEAM_NM,     -- 팀
                   REMARK        
            FROM   ASNHR.T_CM_AHISTORY
            WHERE  ENO_NO   = ?
            ORDER BY STR_YMD DESC, SEQ_NO DESC
            ]]>
        </query>
    </sql>


    <!-- 입사전경력 데이터 조회 -->
    <sql name="PIRA010_SHR_PRINT6">
        <description>입사전경력 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   SUBSTR(STR_YMD, 1, 4) || '-' || SUBSTR(STR_YMD, 5, 2) || ' ~ ' || SUBSTR(END_YMD, 1, 4) || '-' || SUBSTR(END_YMD, 5, 2)  AS GUN_YM,  -- 근무기간
                   CMP_NAM,                                                           -- 회사명
                   DPT_NAM,                                                           -- 소속
                   JOB_CD,                                                            -- 직위
                   CHG_JOB                                                           -- 담당업무
            FROM   ASNHR.T_CM_BHISTORY
            WHERE  ENO_NO   = ?
            ORDER BY STR_YMD DESC
            ]]>
        </query>
    </sql>


    <!-- 상벌사항 데이터 조회 -->
    <sql name="PIRA010_SHR_PRINT7">
        <description>상벌사항 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,
                   TO_CHAR(TO_DATE(REPU_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS REPU_YMD,  -- 시작일자
                   ASNHR.SF_GET_COMMNAME('01', 'K1', REPU_TAG)                  AS REPU_TNM,  -- 상벌구분
                   SYC_NAM,                                                             -- 수여처
                   REPU_RMK                                                            -- 상벌내역
            FROM   ASNHR.T_CM_REWARD
            WHERE  ENO_NO   = ?
             AND NOT (REPU_TAG IN ('39','40','41','45','47','52','56','57','64','65') AND REPU_YMD < TO_CHAR(ADD_MONTHS(sysdate,-60),'YYYYMMDD'))
            ORDER BY REPU_YMD DESC
            ]]>
        </query>
    </sql>


    <!-- 교육사항 데이터 조회 -->
    <sql name="PIRA010_SHR_PRINT8">
        <description>교육사항 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                                          -- 사번
                   TO_CHAR(TO_DATE(STR_YMD,'YYYYMMDD'),'YYYY-MM-DD') || ' ~ ' || TO_CHAR(TO_DATE(END_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS EDU_YMD, -- 교육일자
                   EDU_NM,  																		-- 교육과정코드명
                   INT_NAM                                                                         -- 시행처
            FROM   ASNHR.T_CM_EDUCATION
            WHERE  ENO_NO = ?
            	AND  DECISION_CD IN ('C','D') AND  EDU_TAG = 'Y'
            ORDER BY STR_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 인사기록표 데이터 생성 -->
    <sql name="PIRA010_INS">
        <description>인사기록표 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_PERSON
                  (GUBUN,    ENO_NO,   OCC_CD,  ENO_NM,  NAM_ENG, NAM_CHI,   MF_TAG,    BIR_YMD,   BIR_TAG,   CET_NO,   HEAD_CD,
                   GBN_CD,
                   REG_CD,   DPT_CD,   JOB_CD,  JPR_YMD, DUTY_CD, TEAM_CD,   HOB_CD,    HBA_YMD,   HIR_YMD,   HIRG_YMD, HIRR_YMD,
                   RCO_YN,   EMAENO,   SOU_CNT, DFM_CNT, TRB_CNT, GOL_CNT,   WCT_CNT,   CHI_CNT,   GOL_CNT70, GOL_CNT65, ESL_TAG,
                   IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD
                  )
            VALUES
                  (?,        ?,        ?,       ?,       ?,       ?,         ?,         ?,         ?,         ?,        ?,
                   (SELECT GBN_CD FROM ASNHR.T_CM_DEPT WHERE GUBUN = '01' AND CD_GBN = 'A4' AND DPT_CD = ?),
                   ?,        ?,        ?,       ?,       ?,       ?,         ?,         ?,         ?,         ?,        ?,
                   'N', '5'||substr(?,2,6), '0',      '0',      '0',     '0',     '0',     '0',     '0',       '0', 	'Y',
                   ?,        SYSDATE,  ?,       SYSDATE
                  )
            ]]>
        </query>
    </sql>

    <!-- 인사기록표 데이터 수정 -->
    <sql name="PIRA010_UPT">
        <description>인사기록표 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_PERSON
            SET    OCC_CD   = ?,
                   ENO_NM   = ?,
                   NAM_ENG  = ?,
                   NAM_CHI  = ?,
                   MF_TAG   = ?,
                   BIR_YMD  = ?,
                   BIR_TAG  = ?,
                   CET_NO   = ?,
                   HEAD_CD  = ?,
                   GBN_CD   = (SELECT GBN_CD FROM ASNHR.T_CM_DEPT WHERE GUBUN = '01' AND CD_GBN = 'A4' AND DPT_CD = ?),
                   REG_CD   = ?,
                   DPT_CD   = ?,
                   JOB_CD   = ?,
                   JPR_YMD  = ?,
                   DUTY_CD  = ?,
                   TEAM_CD  = ?,
                   HOB_CD   = ?,
                   TAX_DPT   = ?,
                   RETM_REM  = ?,
                   HIR_YMD  = ?,
                   HIRG_YMD = ?,
                   ESL_TAG = 'Y',
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 인사기록표 임시 데이터 생성(정규직,파견직 공통) -->
    <sql name="PIRA010_INS_03">
        <description>인사기록표 임시 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_PERSON_TEMP
                  (SEQ_NO,                                              ENO_NO, PSN_GBN,
                   ENO_NM,NAM_ENG,NAM_CHI,MF_TAG,BIR_YMD,BIR_TAG,CET_NO,HIR_YMD,
                   HIRG_YMD,JPR_YMD,HBA_YMD,
                   TERM1_YMD, TERM2_YMD,
                   IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD
                  )
            VALUES
                  ((SELECT COUNT(SEQ_NO)+1 FROM ASNHR.T_CM_PERSON_TEMP WHERE ENO_NO = ? ),    ?,        ?,
                   ?,     ?,      ?,      ?,     ?,      ?,      ?,     ?,
                   ?,       ?,      ?,
                   ?,         ?,
                   ?,SYSDATE,?,SYSDATE
                  )
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira011
* @description : 신입사원
***********************************************************************
* 2006/12/21      박인이        최초작성.
***********************************************************************
-->
    <!-- 채용관리 데이터 조회 -->
    <sql name="PIRA011_SHR">
        <description>채용관리 조회</description>
        <query>
            <![CDATA[
            SELECT REG_NO,                                                                 -- 수험번호
                   JUMIN1,                                                                 -- 주민번호1
                   JUMIN2,                                                                 -- 주민번호2
                   ENO_NM,                                                                 -- 한글성명
                   NAM_ENG,                                                                -- 영문성명
                   NAM_CHI,                                                                -- 한문성명
                   SEXGU,                                                                  -- 성별
                   BIRYMD,                                                                 -- 생년월일
                   BIRTAG,                                                                 -- 양/음력구분
                   FIN_DPT,                                                                -- 배치부서코드
                   SF_GET_DPTNAME('01', 'A4', FIN_DPT)                AS FIN_DPT_NM,       -- 배치부서명
                   SPLIT_FLAG,                                                             -- 신입/경력구분
                   DECODE(SPLIT_FLAG, A, '신입사원', B, '경력사원')   AS SPLIT_NM          -- 구분명
            FROM   ASNHR.T_RC_MASTER
            WHERE  REGYY = ?
            AND    REGCH = ?
            AND  ( PASSTAG3 = 'Y'
            OR     PASSTAG4 = 'Y'
                 )
            ORDER BY SPLIT_FLAG DESC, ENO_NM, REG_NO
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira012
* @description : 인사기본2
***********************************************************************
* 2006/12/22      박인이        최초작성.
***********************************************************************
-->
    <!-- 인사기록표 데이터 조회 -->
    <sql name="PIRA012_SHR">
        <description>인사기본2 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                -- 사번
                   HIR_CD,                                                -- 채용구분코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'C1', HIR_CD)   AS HIR_NM,      -- 채용구분
                   TO_CHAR(RHI_YMD, 'YYYY-MM-DD')         AS RHI_YMD,     -- 재입사일
                   NAT_CD,                                                -- 국적코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'L2', NAT_CD)   AS NAT_NM,      -- 국적명
                   GROUP_CD,                                              -- 그룹사코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'B5', GROUP_CD) AS GROUP_NM,    -- 그룹사명
                   OK_ENO,                                                -- 추천인사번
                   OK_MAN,                                                -- 추천인명
                   EDGR_CD,                                               -- 학력구분코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'E1', EDGR_CD)  AS EDGR_NM,     -- 학력구분
                   SCH_CD,                                                -- 학교코드
                   CASE WHEN SCH_NAM IS NOT NULL THEN  SCH_NAM
                        WHEN EDGR_CD = '2' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E8', SCH_CD)
                        WHEN EDGR_CD = '3' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E2', SCH_CD)
                        WHEN EDGR_CD = '4' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E3', SCH_CD)
                        WHEN EDGR_CD = '5' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E4', SCH_CD)
                        WHEN EDGR_CD = '6' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
                        WHEN EDGR_CD = '7' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
                        WHEN EDGR_CD = '8' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
                        ELSE ''
                   END  AS SCH_NM,                                        -- 학교명
                   MAJ_CD,                                                -- 학과코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'E6', MAJ_CD)   AS MAJ_NM,      -- 학과명
                   GRD_CD,                                                -- 졸업구분코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'E7', GRD_CD)   AS GRD_NM,      -- 졸업구분
                   GUR_YMD         AS GUR_YMD,                            -- 졸업일
                   BCT_CD,                                                -- 출신도코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'B4', BCT_CD)   AS BCT_NM,      -- 출신도
                   HF_NAM,                                                -- 호주
                   HFRE_CD,                                               -- 호주와의관계코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'G1', HFRE_CD)  AS HFRE_NM,     -- 호주와의관계
                   PER_ADR,                                               -- 본적
                   TO_CHAR(JAJ_YMD, 'YYYY-MM-DD')         AS JAJ_YMD,     -- 최종발령일
                   FINJ_CD,                                               -- 재직구분코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'J3', FINJ_CD)  AS FINJ_NM,     -- 재직구분
                   TO_CHAR(TMR_YMD, 'YYYY-MM-DD')         AS TMR_YMD,     -- 휴직일
                   TMR_DD,                                                -- 휴직일수
                   PAS_NO,                                                -- 여권번호
                   PER_JOB,                                               -- 담당업무
                   TO_CHAR(PISS_YMD, 'YYYY-MM-DD')        AS PISS_YMD,    -- 발급일
                   TO_CHAR(PCHG_YMD, 'YYYY-MM-DD')        AS PCHG_YMD,    -- 갱신일
                   TO_CHAR(PDUE_YMD, 'YYYY-MM-DD')        AS PDUE_YMD     -- 만기일
            FROM   ASNHR.T_CM_PERSON
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 인사기본2 데이터 수정 -->
    <sql name="PIRA012_UPT">
        <description>인사기본2 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_PERSON
            SET    HIR_CD   = ?,
                   RHI_YMD  = ?,
                   NAT_CD   = ?,
                   GROUP_CD = ?,
                   OK_ENO   = ?,
                   OK_MAN   = ?,
                   EDGR_CD  = ?,
                   SCH_CD   = ?,
                   MAJ_CD   = ?,
                   GRD_CD   = ?,
                   GUR_YMD  = ?,
                   BCT_CD   = ?,
                   HF_NAM   = ?,
                   HFRE_CD  = ?,
                   PER_ADR  = ?,
                   JAJ_YMD  = ?,
                   FINJ_CD  = ?,
                   TMR_YMD  = ?,
                   TMR_DD   = ?,
                   PAS_NO   = ?,
                   PER_JOB  = ?,
                   PISS_YMD = ?,
                   PCHG_YMD = ?,
                   PDUE_YMD = ?,
                   ESL_TAG = 'Y',
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira013
* @description : 인사기본3
***********************************************************************
* 2006/12/22      박인이        최초작성.
***********************************************************************
-->
    <!-- 인사기본3 데이터 조회 -->
    <sql name="PIRA013_SHR">
        <description>인사기본3 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                  -- 사번
                   DECODE(ZIP_NO,NULL,'',SUBSTR(ZIP_NO,1,3)||'-'||SUBSTR(ZIP_NO,4,3))
                                                               AS ZIP_NO,   -- 등본상우편번호
                   ADDRESS,                                                 -- 등본상주소1
                   ADR_CT,                                                  -- 등본상주소2
                   DECODE(RZI_NO,NULL,'',SUBSTR(RZI_NO,1,3)||'-'||SUBSTR(RZI_NO,4,3))
                                                               AS RZI_NO,   -- 실거주지우편번호
                   RADR,                                                    -- 실거주지주소1
                   RADR_CT,                                                 -- 실거주지주소2
                   PHN_REG,                                                 -- 지역번호
                   PHN_NO,                                                  -- 전화번호
                   EM_PHN_NO,                                               -- 휴대폰
                   E_MAIL,                                                  -- 이메일주소
                   HOU_CD,                                                  -- 주거형태코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'D3', HOU_CD)  AS HOU_NM,         -- 주거형태
                   ROM_CNT,                                                 -- 방수
                   HIU_NO,                                                  -- 건강보험증번호
                   LAN_SPA,                                                 -- 대지(평수)
                   FLR_SPA,                                                 -- 건물(평수)
                   ABA_CD,                                                  -- 급여계좌은행코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'BK', ABA_CD)  AS ABA_NM,         -- 급여계좌은행
                   MOV_AMT,                                                 -- 동산(만원)
                   MOVP_AMT,                                                -- 부동산(만원)
                   ACC_NO                                                   -- 급여계좌번호
            FROM   ASNHR.T_CM_PERSON
            WHERE ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 인사기본3 데이터 수정 -->
    <sql name="PIRA013_UPT">
        <description>인사기본3 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_PERSON
            SET    ZIP_NO    = ?,
                   ADDRESS   = ?,
                   ADR_CT    = ?,
                   RZI_NO    = ?,
                   RADR      = ?,
                   RADR_CT   = ?,
                   PHN_REG   = ?,
                   PHN_NO    = ?,
                   EM_PHN_NO = ?,
                   E_MAIL    = ?,
                   HOU_CD    = ?,
                   ROM_CNT   = ?,
                   HIU_NO    = ?,
                   LAN_SPA   = ?,
                   FLR_SPA   = ?,
                   ABA_CD    = ?,
                   MOV_AMT   = ?,
                   MOVP_AMT  = ?,
                   ACC_NO    = ?,
                   ESL_TAG = 'Y',
                   UPT_MAN   = ?,
                   UPT_YMD   = SYSDATE
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira014
* @description : 인사기본4
***********************************************************************
* 2006/12/26      박인이        최초작성.
***********************************************************************
-->
    <!-- 인사기본4 데이터 조회 -->
    <sql name="PIRA014_SHR">
        <description>인사기본4 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                              -- 사번
                   HOBBY,                                               -- 취미
                   SPEC_CD,                                             -- 특기
                   PART_CD,                                             -- 부문코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'B1', PART_CD) AS PART_NM,    -- 부문
                   TO_CHAR(WED_YMD, 'YYYY-MM-DD')        AS WED_YMD,    -- 결혼일
                   REL_CD,                                              -- 종교코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'D2', REL_CD)  AS REL_NM,     -- 종교
                   COM_PHN_REG,                                         -- 회사전화(지역)
                   COM_PHN_NO,                                          -- 회사전화
                   COM_PHN_IN,                                          -- 내선전화
                   REG_CD,                                              -- 지역구분
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'B3', REG_CD)  AS REG_NM,     -- 지역구분명
                   RET_CD,                                              -- 퇴직사유코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'C2', RET_CD)  AS RET_NM,     -- 퇴직사유
                   TO_CHAR(RET_YMD, 'YYYY-MM-DD')        AS RET_YMD,    -- 퇴사일
                   RETM_REM      AS RETP_YMD,   -- 퇴직처리기준일
                   RETM_CD,                                             -- 퇴직조치코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'CB', RETM_CD) AS RETM_NM,    -- 퇴직조치
                   RETM_REM,                                            -- 조치자사번
                   ASNHR.SF_GET_ENONAME2(GUBUN, RETM_REM)      AS RETM_RNM,   -- 조치자명
                   TO_CHAR(RETM_YMD, 'YYYY-MM-DD')       AS RETM_YMD,   -- 퇴사조치일
                   FLOOR(MONTHS_BETWEEN(SYSDATE,A.HIR_YMD)/12) as LSE_YY,				-- 근속기간년수
				   FLOOR(MOD(MONTHS_BETWEEN(SYSDATE,A.HIR_YMD), 12)) as LSE_MM, 		-- 근속기간개월
                   TO_CHAR(HIRR_YMD, 'YYYY-MM-DD')       AS HIRR_YMD,   -- 퇴직금기준일
                   TO_CHAR(MID_YMD1, 'YYYY-MM-DD')       AS MID_YMD1,   -- 기준일
                   MRE_AMT,
                   MRE_AMT2,
                   TO_CHAR(RAM_YMD, 'YYYY-MM-DD')        AS RAM_YMD,    -- 퇴직금중도정산일
                   TO_CHAR(MID_YMD2, 'YYYY-MM-DD')       AS MID_YMD2,   -- 기준일2
                   MRE_AMT3,
                   TO_CHAR(RAM_YMD2, 'YYYY-MM-DD')       AS RAM_YMD2,   -- 퇴직금중도정산일2
                   TO_CHAR(MID_YMD3, 'YYYY-MM-DD')       AS MID_YMD3,   -- 기준일3
                   TO_CHAR(RAM_YMD3, 'YYYY-MM-DD')       AS RAM_YMD3,   -- 퇴직금중도정산일3
                   COC_NAM,                                             -- 전직처
                   REMARK                                               -- 비고
            FROM   ASNHR.T_CM_PERSON A
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 인사기본4 데이터 수정 -->
    <sql name="PIRA014_UPT">
        <description>인사기본4 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_PERSON
            SET    HOBBY       = ?,
                   SPEC_CD     = ?,
                   PART_CD     = ?,
                   WED_YMD     = ?,
                   REL_CD      = ?,
                   COM_PHN_REG = ?,
                   COM_PHN_NO  = ?,
                   COM_PHN_IN  = ?,
                   RET_CD      = ?,
                   RET_YMD     = ?,
                   RETP_YMD    = ?,
                   RETM_CD     = ?,
                   RETM_REM    = ?,
                   RETM_YMD    = ?,
                   LSE_YY      = ?,
                   LSE_MM      = ?,
                   HIRR_YMD    = ?,
                   MID_YMD1    = ?,
                   MRE_AMT     = ?,
                   RAM_YMD     = ?,
                   MID_YMD2    = ?,
                   MRE_AMT2    = ?,
                   RAM_YMD2    = ?,
                   MID_YMD3    = ?,
                   MRE_AMT3    = ?,
                   RAM_YMD3    = ?,
                   COC_NAM     = ?,
                   REMARK      = ?,
                   REG_CD      = ?,
                   ESL_TAG = 'Y',
                   UPT_MAN     = ?,
                   UPT_YMD     = SYSDATE
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira015
* @description : 인사기본5
***********************************************************************
* 2006/12/26      박인이        최초작성.
***********************************************************************
-->
    <!-- 인사기본5 데이터 조회 -->
    <sql name="PIRA015_SHR">
        <description>인사기본5 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO,                                             -- 사번
                   GET_RSN,                                              -- 취득사유코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'C4', GET_RSN)   AS GET_NM,    -- 취득사유
                   HIR_PATH,                                             -- 채용경로코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'C5', HIR_PATH)  AS HIR_NM,    -- 채용경로
                   TO_CHAR(SAN_YMD, 'YYYY-MM-DD')          AS SAN_YMD,   -- 산재일자
                   SAN_NAM,                                              -- 상병명
                   HDC_CD,                                               -- 장애유형코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'C6', HDC_CD)    AS HDC_NM,    -- 장애유형
                   HDC_GRA,                                              -- 장애등급코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'C7', HDC_GRA)   AS HDC_GNM,   -- 장애등급
                   SAN_HIS,                                              -- 과거병력
                   SAN_REM,                                              -- 발생사유
                   TO_CHAR(JAN_YMD, 'YYYY-MM-DD')          AS JAN_YMD,   -- 장애인정일자
                   TRG_CD,                                               -- 장애인정구분코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'SA', TRG_CD)    AS TRG_NM,    -- 장애인정구분
                   JHDC_CD,                                              -- 장애유형코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'SB', JHDC_CD)   AS JHDC_NM,   -- 장애유형
                   JHDC_GRA,                                             -- 장애등급코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'SE', JHDC_GRA)  AS JHDC_GNM,  -- 장애등급
                   SER_STS,                                              -- 중증여부코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'SC', SER_STS)   AS SER_SNM,   -- 중증여부
                   JOB_OCC,                                              -- 근무직종코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'SD', JOB_OCC)   AS JOB_ONM,   -- 근무직종
                   MPVA_CD,												 -- 보훈대상코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'SH', MPVA_CD)   AS MPVA_NM	 -- 보훈대상
            FROM   ASNHR.T_CM_PERSON A
            WHERE  A.ENO_NO = ?

            ]]>
        </query>
    </sql>

    <!-- 인사기본5 데이터 수정 -->
    <sql name="PIRA015_UPT">
        <description>인사기본5 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_PERSON
            SET    GET_RSN  = ?,
                   HIR_PATH = ?,
                   SAN_YMD  = ?,
                   SAN_NAM  = ?,
                   HDC_CD   = ?,
                   HDC_GRA  = ?,
                   SAN_HIS  = ?,
                   SAN_REM  = ?,
                   JAN_YMD  = ?,
                   TRG_CD   = ?,
                   JHDC_CD  = ?,
                   JHDC_GRA = ?,
                   SER_STS  = ?,
                   JOB_OCC  = ?,
                   MPVA_CD  = ?,
                   ESL_TAG = 'Y',
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira016
* @description : 학력사항
***********************************************************************
* 2006/12/26      박인이        최초작성.
***********************************************************************
-->
    <!-- 학력사항 데이터 조회 -->
    <sql name="PIRA016_SHR">
        <description>학력사항 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                               -- 사번
                   EDGR_CD,                                                              -- 학력구분코드
                   EDGR_NM,                                                              -- 학력구분
                   GURS_YMD,                                                             -- 입학일자
                   GURE_YMD,                                                             -- 졸업일자
                   SCH_CD,                                                               -- 학교코드
                   SCH_NAM,                                                              -- 학교
                   MAJ_CD,                                                               -- 전공코드
                   MAJ_NM,                                                               -- 전공
                   MAJ_CD2,                                                               -- 복수전공코드
                   MAJ_NM2,                                                               -- 복수전공
                   GRD_CD,                                                               -- 졸업코드
                   GRD_NM,                                                               -- 졸업
                   DECODE(GRD_SEQ, 0, 999, GRD_SEQ)         AS GRD_SEQ                   -- 졸업SEQ
            FROM ( SELECT ENO_NO,
                          EDGR_CD,
                          ASNHR.SF_GET_COMMNAME('01', 'E1', EDGR_CD)                   AS EDGR_NM,
                          GURS_YMD,  
                          GURE_YMD,  
                          SCH_CD,
                          CASE WHEN SCH_NAM IS NOT NULL THEN  SCH_NAM
                               WHEN EDGR_CD = '2' THEN ASNHR.SF_GET_COMMNAME('01', 'E8', SCH_CD)
                               WHEN EDGR_CD = '3' THEN ASNHR.SF_GET_COMMNAME('01', 'E2', SCH_CD)
                               WHEN EDGR_CD = '4' THEN ASNHR.SF_GET_COMMNAME('01', 'E3', SCH_CD)
                               WHEN EDGR_CD = '5' THEN ASNHR.SF_GET_COMMNAME('01', 'E4', SCH_CD)
                               WHEN EDGR_CD = '6' THEN ASNHR.SF_GET_COMMNAME('01', 'E5', SCH_CD)
                               WHEN EDGR_CD = '7' THEN ASNHR.SF_GET_COMMNAME('01', 'E5', SCH_CD)
                               WHEN EDGR_CD = '8' THEN ASNHR.SF_GET_COMMNAME('01', 'E5', SCH_CD)
                               ELSE ''
                          END  AS SCH_NAM,
                          MAJ_CD,
                          ASNHR.SF_GET_COMMNAME('01', 'E6', MAJ_CD)      AS MAJ_NM,
                          MAJ_CD2,
                          ASNHR.SF_GET_COMMNAME('01', 'E6', MAJ_CD2)      AS MAJ_NM2,
                          GRD_CD,
                          ASNHR.SF_GET_COMMNAME('01', 'E7', GRD_CD)      AS GRD_NM,
                          ASNHR.SF_GET_COMMSEQ('01', 'E7', GRD_CD)       AS GRD_SEQ
                   FROM   ASNHR.T_CM_SCHOOL
                   WHERE  ENO_NO   = ?
                 )
             ORDER BY ENO_NO, EDGR_CD, GURS_YMD, DECODE(GRD_SEQ, 0, 999, GRD_SEQ)
            ]]>
        </query>
    </sql>

    <!-- 학력사항 데이터 생성 -->
    <sql name="PIRA016_INS">
        <description>학력사항 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_SCHOOL
                 ( ENO_NO,   EDGR_CD,  GURS_YMD,  GURE_YMD, SCH_CD, SCH_NAM, MAJ_CD, MAJ_CD2, GRD_CD, IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,        ?,        ?,         ?,        ?,      ?,       ?,      ?,       ?,      ?,        SYSDATE,  ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 학력사항 데이터 수정 -->
    <sql name="PIRA016_UPT">
        <description>학력사항 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_SCHOOL
            SET    GURS_YMD = ?,
                   GURE_YMD = ?,
                   SCH_CD   = ?,
                   SCH_NAM  = ?,
                   MAJ_CD   = ?,
                   MAJ_CD2  = ?,
                   GRD_CD   = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    EDGR_CD  = ?
            AND    GURE_YMD = ?
            AND    GRD_CD   = ?
            ]]>
        </query>
    </sql>

    <!-- 인사마스터에 최종학력사항 반영 -->
    <sql name="PIRA016_UPT_02">
        <description>인사마스터에 최종학력사항 반영</description>
        <query>
            <![CDATA[
            DECLARE
                oMSG      VARCHAR2(10);
                vEDGR_CD  VARCHAR2(1);
                vGUR_YMD  VARCHAR2(4);
                vSCH_CD   VARCHAR2(3);
                vSCH_NAM  VARCHAR2(50);
                vMAJ_CD   VARCHAR2(3);
                vGRD_CD   VARCHAR2(2);

            BEGIN

                oMSG := '';

                BEGIN

                    SELECT EDGR_CD, GURE_YMD, SCH_CD, MAJ_CD, GRD_CD,SCH_NAM
                    INTO   vEDGR_CD, vGUR_YMD, vSCH_CD, vMAJ_CD, vGRD_CD,vSCH_NAM
                    FROM ( SELECT ENO_NO, EDGR_CD, GURE_YMD, SCH_CD, MAJ_CD, GRD_CD,SCH_NAM
                           FROM   ASNHR.T_CM_SCHOOL A
                           WHERE  ENO_NO = ?
                           AND    GRD_CD NOT IN ('I', 'G')
                           AND    GURE_YMD = (SELECT MAX(GURE_YMD)
                                              FROM   ASNHR.T_CM_SCHOOL
                                              WHERE  ENO_NO = A.ENO_NO
                                              AND    GRD_CD NOT IN ('I','G'))
                         );

                    UPDATE ASNHR.T_CM_PERSON
                    SET    EDGR_CD = vEDGR_CD,
                           GUR_YMD = vGUR_YMD,
                           SCH_CD  = vSCH_CD,
                           MAJ_CD  = vMAJ_CD,
                           GRD_CD  = vGRD_CD,
                           SCH_NAM  = vSCH_NAM,
                           UPT_MAN = ?,
                           UPT_YMD = SYSDATE
                    WHERE  ENO_NO = ?;

                EXCEPTION WHEN NO_DATA_FOUND THEN

                    -- 데이터 미존재시 오류 발생시키지 않기 위함
                    oMSG := 'NOT FOUND';

                    UPDATE ASNHR.T_ME_PERSON
                    SET    EDGR_CD = NULL,
                           GUR_YMD = NULL,
                           SCH_CD  = NULL,
                           MAJ_CD  = NULL,
                           GRD_CD  = NULL,
                           UPT_MAN = ?,
                           UPT_YMD = SYSDATE
                    WHERE  ENO_NO = ?;

                END;

            END;
            ]]>
        </query>
    </sql>

    <!-- 학력사항 데이터 삭제 -->
    <sql name="PIRA016_DEL">
        <description>학력사항 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_SCHOOL
            WHERE  ENO_NO   = ?
            AND    EDGR_CD  = ?
            AND    GURE_YMD = ?
            AND    GRD_CD   = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira017
* @description : 병무사항
***********************************************************************
* 2006/12/27      박인이        최초작성.
***********************************************************************
-->
    <!-- 병무사항 데이터 조회 -->
    <sql name="PIRA017_SHR">
        <description>병무사항 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   GUB_CD,                                                            -- 병무구분코드
                   ASNHR.SF_GET_COMMNAME('01', 'F1', GUB_CD)                   AS GUB_NM,   -- 병무구분
                   MIC_CD,                                                            -- 역종코드
                   ASNHR.SF_GET_COMMNAME('01', 'F2', MIC_CD)                   AS MIC_NM,   -- 역종
                   LOC_CD,                                                            -- 병무청코드
                   ASNHR.SF_GET_COMMNAME('01', 'F3', LOC_CD)                   AS LOC_NM,   -- 병무청
                   MIL_CD,                                                            -- 군별코드
                   ASNHR.SF_GET_COMMNAME('01', 'F4', MIL_CD)                   AS MIL_NM,   -- 군별
                   SUBSTR(ENL_YMD, 1, 4) || '-' || SUBSTR(ENL_YMD, 5, 2) || '-' || SUBSTR(ENL_YMD, 7) AS ENL_YMD,  -- 시작일자
                   SUBSTR(MIL_YMD, 1, 4) || '-' || SUBSTR(MIL_YMD, 5, 2) || '-' || SUBSTR(MIL_YMD, 7) AS MIL_YMD,  -- 종료일자
                   YSE_CD,                                                            -- 전역사유코드
                   ASNHR.SF_GET_COMMNAME('01', 'F5', YSE_CD)                   AS YSE_NM,   -- 전역사유
                   GRADE,                                                             -- 계급코드
                   ASNHR.SF_GET_COMMNAME('01', 'F6', GRADE)                    AS GRADE_NM, -- 계급
                   MIL_NO,                                                            -- 군번
                   MBK_CD,                                                            -- 병과코드
                   ASNHR.SF_GET_COMMNAME('01', 'F7', MBK_CD)                   AS MBK_NM,   -- 병과
                   MIL_DES,                                                           -- 전역구분
                   REMARK                                                             -- 기타사항
            FROM   ASNHR.T_CM_ARMY
            WHERE  ENO_NO   = ?
            ]]>
        </query>
    </sql>

    <!-- 병무사항 데이터 생성 -->
    <sql name="PIRA017_INS">
        <description>병무사항 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_ARMY
                 ( ENO_NO, GUB_CD, MIC_CD, LOC_CD, MIL_CD, ENL_YMD, MIL_YMD, YSE_CD, GRADE, MIL_NO, MBK_CD, MIL_DES, REMARK, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,      ?,      ?,      ?,      ?,      ?,       ?,       ?,      ?,     ?,      ?,      ?,       ?,      ?,       SYSDATE, ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 병무사항 데이터 수정 -->
    <sql name="PIRA017_UPT">
        <description>병무사항 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_ARMY
            SET    GUB_CD   = ?,
                   MIC_CD   = ?,
                   LOC_CD   = ?,
                   MIL_CD   = ?,
                   ENL_YMD  = ?,
                   MIL_YMD  = ?,
                   YSE_CD   = ?,
                   GRADE    = ?,
                   MIL_NO   = ?,
                   MBK_CD   = ?,
                   MIL_DES  = ?,
                   REMARK   = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            ]]>
        </query>
    </sql>

    <!-- 병무사항 데이터 삭제 -->
    <sql name="PIRA017_DEL">
        <description>병무사항 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_ARMY
            WHERE  ENO_NO   = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira018
* @description : 가족사항
***********************************************************************
* 2006/12/26      박인이        최초작성.
***********************************************************************
-->
    <!-- 가족사항 데이터 조회 -->
    <sql name="PIRA018_SHR">
        <description>가족사항 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   REL_CD,                                                            -- 가족관계코드
                   ASNHR.SF_GET_COMMNAME('01', 'G1', REL_CD)                   AS REL_NM,   -- 가족관계
                   ENO_NM,                                                            -- 성명
                   SUBSTR(BIR_YMD, 1, 6) AS BIR_YMD, 
                   EDGR_CD,                                                           -- 학력구분코드
                   ASNHR.SF_GET_COMMNAME('01', 'E1', EDGR_CD)                  AS EDGR_NM,  -- 학력구분
                   OCC_NAM,                                                           -- 근무처
                   JOB_CD,                                                            -- 직위
                   DPD_TAG,                                                           -- 부양여부
                   HIU_TAG                                                            -- 의보여부
            FROM   ASNHR.T_CM_FAMILY
            WHERE  ENO_NO   = ?
            ORDER BY DECODE(ASNHR.SF_GET_COMMSEQ('01', 'G1', REL_CD),0,999,ASNHR.SF_GET_COMMSEQ('01', 'G1', REL_CD)), BIR_YMD
            ]]>
        </query>
    </sql>

    <!-- 가족사항 데이터 생성 -->
    <sql name="PIRA018_INS">
        <description>가족사항 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_FAMILY
                 ( ENO_NO,   REL_CD,  ENO_NM,  BIR_YMD, EDGR_CD, OCC_NAM, JOB_CD,  DPD_TAG, HIU_TAG, IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,        ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,       ?,        SYSDATE,  ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 가족사항 데이터 수정 -->
    <sql name="PIRA018_UPT">
        <description>가족사항 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_FAMILY
            SET    BIR_YMD  = ?,
                   EDGR_CD  = ?,
                   OCC_NAM  = ?,
                   JOB_CD   = ?,
                   DPD_TAG  = ?,
                   HIU_TAG  = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    REL_CD   = ?
            AND    ENO_NM   = ?
            ]]>
        </query>
    </sql>

    <!-- 가족사항 데이터 삭제 -->
    <sql name="PIRA018_DEL">
        <description>가족사항 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_FAMILY
            WHERE  ENO_NO   = ?
            AND    REL_CD   = ?
            AND    ENO_NM   = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira019
* @description : 건강검진
***********************************************************************
* 2006/12/27      박인이        최초작성.
***********************************************************************
-->
    <!-- 건강검진 데이터 조회 -->
    <sql name="PIRA019_SHR">
        <description>건강검진 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   TO_CHAR(TO_DATE(PRO_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS PRO_YMD,  -- 실시일자
                   OCC_CD,                                                            -- 직종코드
                   TO_CHAR(EYE_LEF, '0.0')                               AS EYE_LEF,  -- 좌시력
                   TO_CHAR(EYE_RHT, '0.0')                               AS EYE_RHT,  -- 우시력
                   HEIGHT,                                                            -- 신장
                   WEIGHT,                                                            -- 체중
                   AB_HGT,                                                            -- 흉위
                   CBLD_CD,                                                           -- 색맹코드
                   ASNHR.SF_GET_COMMNAME('01', 'D4', CBLD_CD)                  AS CBLD_NM,  -- 색맹
                   BLD_TYP,                                                           -- 혈액형
                   XRY_RMK,                                                           -- X선소견
                   BLD_PRE,                                                           -- 혈압
                   BLD_DAN,                                                           -- 혈당
                   PH,                                                                -- 뇨검사 pH
                   EXM_HSP,                                                           -- 검사병원
                   DECISION,                                                          -- 판정
                   SPEC,                                                              -- 비고
                   CHIT_AMT                                                           -- 건강검진비용
            FROM   ASNHR.T_CM_BODY
            WHERE  ENO_NO   = ?
            ORDER BY PRO_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 건강검진 데이터 생성 -->
    <sql name="PIRA019_INS">
        <description>건강검진 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_BODY
                 ( ENO_NO,  PRO_YMD, OCC_CD,  EYE_LEF, EYE_RHT,  HEIGHT, WEIGHT,   AB_HGT,  CBLD_CD, BLD_TYP, XRY_RMK,
                   BLD_PRE, BLD_DAN, PH,      EXM_HSP, DECISION, SPEC,   CHIT_AMT, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,       ?,       ?,       ?,       ?,        ?,      ?,        ?,       ?,       ?,       ?,
                   ?,       ?,       ?,       ?,       ?,        ?,      ?,        ?,       SYSDATE, ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 건강검진 데이터 수정 -->
    <sql name="PIRA019_UPT">
        <description>건강검진 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_BODY
            SET    EYE_LEF  = ?,
                   EYE_RHT  = ?,
                   HEIGHT   = ?,
                   WEIGHT   = ?,
                   AB_HGT   = ?,
                   CBLD_CD  = ?,
                   BLD_TYP  = ?,
                   XRY_RMK  = ?,
                   BLD_PRE  = ?,
                   BLD_DAN  = ?,
                   PH       = ?,
                   EXM_HSP  = ?,
                   DECISION = ?,
                   SPEC     = ?,
                   CHIT_AMT = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    PRO_YMD  = ?
            ]]>
        </query>
    </sql>

    <!-- 건강검진 데이터 삭제 -->
    <sql name="PIRA019_DEL">
        <description>건강검진 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_BODY
            WHERE  ENO_NO   = ?
            AND    PRO_YMD  = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira020
* @description : 자격면허
***********************************************************************
* 2006/12/27      박인이        최초작성.
* 2007/06/21                    자격관련 날짜에 빈공란이 들어있어 DECODE 삽입.
***********************************************************************
-->
    <!-- 자격면허 데이터 조회 -->
    <sql name="PIRA020_SHR">
        <description>자격면허 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   QUA_CD,                                                            -- 자격면허코드
                   ASNHR.SF_GET_COMMNAME('01', 'H1', QUA_CD)                   AS QUA_NM,   -- 자격면허
                   TO_CHAR(TO_DATE(DECODE(GAN_YMD,' ',NULL,GAN_YMD), 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GAN_YMD,  -- 취득일자
                   QUA_NO,                                                            -- 증서번호
                   APP_ADM,                                                           -- 발행처
                   ETG_YN,                                                             -- 수당지급여부
                   QUA_AMT
            FROM   ASNHR.T_CM_QUALIFICATION
            WHERE  ENO_NO   = ?
            ORDER BY GAN_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 자격면허 데이터 생성 -->
    <sql name="PIRA020_INS">
        <description>자격면허 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_QUALIFICATION
                 ( ENO_NO,   QUA_CD,  OCC_CD, GAN_YMD, QUA_NO, APP_ADM, ETG_YN, IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD, QUA_AMT )
            VALUES
                 ( ?,        ?,       'A',      ?,       ?,      ?,       ?,      ?,        SYSDATE,  ?,       SYSDATE,    ? )
            ]]>
        </query>
    </sql>

    <!-- 자격면허 데이터 수정 -->
    <sql name="PIRA020_UPT">
        <description>자격면허 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_QUALIFICATION
            SET   
                   QUA_NO   = ?,
                   APP_ADM  = ?,
                   ETG_YN     = ?,
                   QUA_AMT  = ?,                   
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    QUA_CD   = ?
            AND    GAN_YMD  = ?
            ]]>
        </query>
    </sql>

    <!-- 자격면허 데이터 삭제 -->
    <sql name="PIRA020_DEL">
        <description>자격면허 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_QUALIFICATION
            WHERE  ENO_NO   = ?
            AND    QUA_CD   = ?
            AND    GAN_YMD  = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira021
* @description : 보증인
***********************************************************************
* 2006/12/28      박인이        최초작성.
***********************************************************************
-->
    <!-- 보증인 데이터 조회 -->
    <sql name="PIRA021_SHR">
        <description>보증인 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                              -- 사번
                   TO_CHAR(TO_DATE(GURS_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GURS_YMD,  -- 보증시작일자
                   GUR_NAM,                                                             -- 보증인명
                   OCC_CD,                                                              -- 직종코드
                   TO_CHAR(TO_DATE(GURD_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS GURD_YMD,  -- 보증종료일자
                   GUR_TAG,                                                             -- 보증구분코드
                   GUR_COM,                                                             -- 보증회사코드
                   SF_GET_COMMNAME('01', 'BJ', GUR_COM)                   AS GUR_CNM,   -- 보증회사
                   GUR_NO,                                                              -- 증권번호

                   --CASE WHEN TO_DATE(GURD_YMD, 'YYYY-MM-DD') <= SYSDATE THEN 'Y'
                   --ELSE 'N' END                                           AS END_TAG,   -- 종료여부
                   NVL(END_TAG,'N') AS END_TAG,

                   GURR_CD,                                                             -- 보증인관계코드
                   SF_GET_COMMNAME('01', 'G1', GURR_CD)                   AS GURR_NM,   -- 보증인관계
                   GUR_ADR,                                                             -- 보증인주소
                   GUR_CMP,                                                             -- 보증인연락처
                   GURO,                                                                -- 보증인직업
                   CET_NO                                                               -- 보증인주민번호
            FROM   ASNHR.T_CM_QUARANTOR
            WHERE  ENO_NO   = ?
            ORDER BY GURS_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 보증인 데이터 생성 -->
    <sql name="PIRA021_INS">
        <description>보증인 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_QUARANTOR
                 ( ENO_NO, GURS_YMD, GUR_NAM, OCC_CD, GURD_YMD, GUR_TAG, GUR_COM, GUR_NO, GURR_CD, GUR_ADR, GUR_CMP, GURO, CET_NO, END_TAG, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,      ?,        ?,       ?,      ?,        ?,       ?,       ?,      ?,       ?,       ?,       ?,    ?,      ?,       ?,       SYSDATE, ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 보증인 데이터 수정 -->
    <sql name="PIRA021_UPT">
        <description>보증인 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_QUARANTOR
            SET    GURD_YMD = ?,
                   GUR_TAG  = ?,
                   GUR_COM  = ?,
                   GUR_NO   = ?,
                   GURR_CD  = ?,
                   GUR_ADR  = ?,
                   GUR_CMP  = ?,
                   GURO     = ?,
                   CET_NO   = ?,
                   END_TAG  = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    GURS_YMD = ?
            AND    GUR_NAM  = ?
            ]]>
        </query>
    </sql>

    <!-- 보증인 데이터 삭제 -->
    <sql name="PIRA021_DEL">
        <description>보증인 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_QUARANTOR
            WHERE  ENO_NO   = ?
            AND    GURS_YMD = ?
            AND    GUR_NAM  = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira022
* @description : VISA
***********************************************************************
* 2006/12/27      박인이        최초작성.
***********************************************************************
-->
    <!-- VISA 데이터 조회 -->
    <sql name="PIRA022_SHR">
        <description>VISA 조회</description>
        <query>
            <![CDATA[
            SELECT  ENO_NO, NAT_CD, NAT_NM, VISA_NO, ISS_YMD, DUE_YMD, TYPE_CD, TYPE_NM, TMEN_TAG, REMARK
            FROM   (SELECT ENO_NO,                                                            -- 사번
                           NAT_CD,                                                            -- 국가코드
                           SF_GET_COMMNAME('01', 'L2', NAT_CD)                   AS NAT_NM,   -- 국가
                           VISA_NO,                                                           -- 비자번호
                           TO_CHAR(TO_DATE(ISS_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS ISS_YMD,  -- 발급일자
                           TO_CHAR(TO_DATE(DUE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS DUE_YMD,  -- 만기일자
                           TYPE_CD,                                                           -- 비자종류코드
                           SF_GET_COMMNAME('01', 'L5', TYPE_CD)                  AS TYPE_NM,  -- 비자종류
                           CASE WHEN TO_DATE(DUE_YMD, 'YYYY-MM-DD') < SYSDATE THEN ''
                           ELSE '유효' END                                       AS TMEN_TAG, -- 기한경과
                           CASE WHEN TO_DATE(DUE_YMD, 'YYYY-MM-DD') < SYSDATE THEN 'Y'
                           ELSE 'N'    END                                       AS FLAG,     -- 기한경과(검색용)
                           REMARK                                                             -- 비고
                    FROM   ASNHR.T_CM_VISA
                    WHERE  ENO_NO   = ?
                    ORDER BY ISS_YMD DESC)
            WHERE   FLAG LIKE '%'||?||'%'
            ]]>
        </query>
    </sql>

    <!-- VISA 데이터 생성 -->
    <sql name="PIRA022_INS">
        <description>VISA 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_VISA
                 ( ENO_NO,   NAT_CD,  VISA_NO, ISS_YMD, DUE_YMD, TYPE_CD, REMARK, IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,        ?,       ?,       ?,       ?,       ?,       ?,      ?,        SYSDATE,  ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- VISA 데이터 수정 -->
    <sql name="PIRA022_UPT">
        <description>VISA 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_VISA
            SET    VISA_NO  = ?,
                   DUE_YMD  = ?,
                   TYPE_CD  = ?,
                   REMARK   = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    NAT_CD   = ?
            AND    ISS_YMD  = ?
            ]]>
        </query>
    </sql>

    <!-- VISA 데이터 삭제 -->
    <sql name="PIRA022_DEL">
        <description>VISA 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_VISA
            WHERE  ENO_NO   = ?
            AND    NAT_CD   = ?
            AND    ISS_YMD  = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira023
* @description : 해외출장
***********************************************************************
* 2006/12/27      박인이        최초작성.
***********************************************************************
-->
    <!-- 북측출장 데이터 조회 -->
    <sql name="PIRA023_SHR">
        <description>북측출장 조회</description>
        <query>
            <![CDATA[

                                SELECT  ORD_NO
                                           ,NAM_KOR
                                           ,BUT_FR_YMD
                                           ,BUT_TO_YMD
                                           ,COST_TOT
                                           ,BUT_CITY
                                           ,BUT_OBJ
                                FROM
                                        (
                                        SELECT        A.ORD_NO
                                           ,MAX(A.NAM_KOR)              NAM_KOR
                                           ,MAX(A.BUT_FR_YMD)           BUT_FR_YMD
                                           ,MAX(A.BUT_TO_YMD)           BUT_TO_YMD
                                           ,SUM(C.COST_TOT)             COST_TOT
                                           ,MAX(A.BUT_CITY)             BUT_CITY
                                           ,MAX(A.BUT_OBJ)              BUT_OBJ
                                   FROM
                                   ASNHR.T_DI_BUSINESSTRIP A,
                                   ASNHR.T_DI_BUSINESSTRIP_STATE B,
                                   (SELECT ORD_NO, SUM(NVL(COST_AMT,0)) COST_TOT
                                    FROM ASNHR.T_DI_BUSINESSTRIP_ACCOUNT
                                   GROUP BY ORD_NO)     C
                              WHERE     1 = 1
                                    AND A.ENO_NO   = ?
                                    AND A.ORD_NO   = B.ORD_NO
                                    AND B.APP_COMP = 'Y'
                                    AND A.OFFER_GBN = 'Y'
                                    AND A.ORD_NO   = C.ORD_NO(+)
                                    GROUP BY (A.ORD_NO)
                                                )

            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira024
* @description : 입사전경력
***********************************************************************
* 2006/12/28      박인이        최초작성.
***********************************************************************
-->
    <!-- 입사전경력 데이터 조회 -->
    <sql name="PIRA024_SHR">
        <description>입사전경력 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   SUBSTR(STR_YMD, 1, 4) || '-' || SUBSTR(STR_YMD, 5, 2) || '-' || SUBSTR(STR_YMD, 7) AS STR_YMD,  -- 시작일자
                   SUBSTR(END_YMD, 1, 4) || '-' || SUBSTR(END_YMD, 5, 2) || '-' || SUBSTR(END_YMD, 7) AS END_YMD,  -- 종료일자
                   CMP_NAM,                                                           -- 회사명
                   GRP_CD,                                                            -- 그룹사코드
                   ASNHR.SF_GET_COMMNAME('01', 'B5', GRP_CD)                   AS GRP_NM,   -- 그룹사명
                   DPT_NAM,                                                           -- 소속
                   JOB_CD,                                                            -- 직위
                   CHG_JOB,                                                           -- 담당업무
                   CAR_PCT,                                                           -- 경력인정비율
                   CAR_YY,                                                            -- 경력인정년수
                   CAR_MM,                                                            -- 경력인정개월
                   SAL_AMT,                                                           -- 급여
                   REMARK                                                             -- 비고
            FROM   ASNHR.T_CM_BHISTORY
            WHERE  ENO_NO   = ?
            ORDER BY STR_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 입사전경력 데이터 생성 -->
    <sql name="PIRA024_INS">
        <description>입사전경력 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_BHISTORY
                 ( ENO_NO, STR_YMD, END_YMD, CMP_NAM, GRP_CD, DPT_NAM, JOB_CD, CHG_JOB, CAR_PCT, CAR_YY, CAR_MM, SAL_AMT, REMARK, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,      ?,       ?,       ?,       ?,      ?,       ?,      ?,       ?,       ?,      ?,      ?,       ?,      ?,       SYSDATE, ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 입사전경력 데이터 수정 -->
    <sql name="PIRA024_UPT">
        <description>입사전경력 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_BHISTORY
            SET    END_YMD  = ?,
                   CMP_NAM  = ?,
                   GRP_CD   = ?,
                   DPT_NAM  = ?,
                   JOB_CD   = ?,
                   CHG_JOB  = ?,
                   CAR_PCT  = ?,
                   CAR_YY   = ?,
                   CAR_MM   = ?,
                   SAL_AMT  = ?,
                   REMARK   = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?
            ]]>
        </query>
    </sql>

    <!-- 입사전경력 데이터 삭제 -->
    <sql name="PIRA024_DEL">
        <description>입사전경력 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_BHISTORY
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira025
* @description : 입사후경력
***********************************************************************
* 2006/12/28      박인이        최초작성.
***********************************************************************
-->
    <!-- 입사후경력 데이터 조회 -->
    <sql name="PIRA025_SHR">
        <description>입사후경력 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                               -- 사번
                   TO_CHAR(TO_DATE(STR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS STR_YMD,     -- 시작일자
                   SEQ_NO,                                                               -- SEQ번호
                   OCC_CD,                                                               -- 직종코드
                   ASNHR.SF_GET_COMMNAME('01', 'A1', OCC_CD)                   AS OCC_NM,      -- 직종
                   TO_CHAR(TO_DATE(END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS END_YMD,     -- 종료일자
                   APP_CD,                                                               -- 발령구분코드
                   APP_CD                                                AS OLD_APP_CD,  -- 발령구분코드(OLD)
                   ASNHR.SF_GET_COMMNAME('01', 'J2', APP_CD)                   AS APP_NM,      -- 발령구분
                   HEAD_CD,                                                              -- 본부코드
                   ASNHR.SF_GET_DPTNAME2('01', 'B2', HEAD_CD)                  AS HEAD_NM,     -- 본부코드
                   DPT_CD,                                                               -- 소속코드
                   DECODE(ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD), DPT_CD, DECODE(ASNHR.SF_GET_DPTNAME('01', 'A6', TEAM_CD), TEAM_CD, ASNHR.SF_GET_DPTNAME('01', 'B2', HEAD_CD), ASNHR.SF_GET_DPTNAME('01', 'A6', DPT_CD)) , ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD))    AS DPT_NM ,     -- 소속명
                   TEAM_CD,                                                              -- 팀코드
                   ASNHR.SF_GET_DPTNAME2('01', 'A6', TEAM_CD)                  AS TEAM_NM,     -- 팀
                   JOB_CD,                                                               -- 직위코드
                   ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)                   AS JOB_NM,      -- 직위
                   HOB_CD,                                                               -- 호봉코드
                   ASNHR.SF_GET_COMMNAME('01', 'A4', HOB_CD)                 AS HOB_NM,      -- 호봉
                   DUTY_CD,                                                              -- 직책코드
                   ASNHR.SF_GET_COMMNAME('01', 'A7', DUTY_CD)                  AS DUTY_NM,     -- 직책
                   SRV_CD,                                                               -- 직무코드
                   (SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE GUBUN = '01' AND DUTY_CD = A.SRV_CD) AS SRV_NM,      -- 직무
                   PART_CD,                                                              -- 부문코드
                   ASNHR.SF_GET_COMMNAME('01', 'B7', PART_CD)                  AS PART_NM,     -- 부문
                   NVL(CHIEF_YN, 'N')                                    AS CHIEF_YN,    -- 장여부
                   JCD_CD,                                                               -- 재직구분코드
                   ASNHR.SF_GET_COMMNAME('01', 'J3', JCD_CD)                   AS JCD_NM,      -- 재직구분
                   TO_CHAR(TO_DATE(APP_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS APP_YMD,     -- 발령일자
                   REMARK,                                                               -- 적요사항
                   TAX_DPT,                                                              -- 회계부서코드
                   ASNHR.SF_GET_COMMNAME('01', 'AD', TAX_DPT)                  AS TAX_DPTNM    -- 회계부서
            FROM   ASNHR.T_CM_AHISTORY A
            WHERE  ENO_NO   = ?
            ORDER BY ENO_NO, STR_YMD DESC, SEQ_NO DESC
            ]]>
        </query>
    </sql>

    <!-- 입사후경력 데이터 생성 -->
    <sql name="PIRA025_INS">
        <description>입사후경력 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_AHISTORY
                 ( ENO_NO,  STR_YMD,  SEQ_NO, OCC_CD, END_YMD, APP_CD,  HEAD_CD, DPT_CD,  TEAM_CD, DUTY_CD, SRV_CD,
                   PART_CD, CHIEF_YN, JOB_CD,   HOB_CD, JCD_CD,  APP_YMD, REMARK,  TAX_DPT, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,       ?,        ?,      ?,      ?,       ?,       ?,       ?,       ?,       ?,       ?,
                   ?,       ?,        ?,      ?,      ?,       ?,       ?,       ?,       ?,       SYSDATE, ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 입사후경력 데이터 수정 -->
    <sql name="PIRA025_UPT">
        <description>입사후경력 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_AHISTORY
            SET    OCC_CD   = ?,
                   END_YMD  = ?,
                   APP_CD   = ?,
                   HEAD_CD  = ?,
                   DPT_CD   = ?,
                   TEAM_CD  = ?,
                   DUTY_CD  = ?,
                   SRV_CD   = ?,
                   PART_CD  = ?,
                   CHIEF_YN = ?,
                   JOB_CD   = ?,
                   HOB_CD   = ?,
                   JCD_CD   = ?,
                   APP_YMD  = ?,
                   REMARK   = ?,
                   TAX_DPT  = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?
            AND    SEQ_NO   = ?
            ]]>
        </query>
    </sql>

    <!-- 입사후경력 데이터 삭제 -->
    <sql name="PIRA025_DEL">
        <description>입사후경력 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_AHISTORY
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?
            AND    SEQ_NO   = ?
            ]]>
        </query>
    </sql>

    <!-- 재입사여부 조회 -->
    <sql name="PIRA025_SHR_01">
        <description>재입사여부 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                                 -- 사번
                   ENO_NM,                                                                 -- 성명
                   NAM_CHI,                                                                -- 한문성명
                   TO_CHAR(BIR_YMD, 'YYYY-MM-DD')               AS BIR_YMD,                -- 생년월일
                   CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1  AGE,                       -- 나이
                   BIR_TAG,                                                                -- 양력구분
                   NAM_ENG,                                                                -- 영문성명
                   CET_NO,                                                                 -- 주민번호
                   MF_TAG,                                                                 -- 남녀구분
                   TO_CHAR(HIR_YMD, 'YYYY-MM-DD')               AS HIR_YMD,                -- 입사일
                   HEAD_CD,                                                                -- 본부코드
                   ASNHRSF_GET_DPTNAME(GUBUN, 'B2', HEAD_CD)        AS HEAD_NM,                -- 본부명
                   OCC_CD,                                                                 -- 직종코드
                   ASNHRSF_GET_COMMNAME(GUBUN, 'A1', OCC_CD)         AS OCC_NM,                 -- 직종명
                   TO_CHAR(HIRG_YMD, 'YYYY-MM-DD')              AS HIRG_YMD,               -- 그룹입사일
                   DPT_CD,                                                                 -- 소속코드
                   DECODE(SF_GET_DPTNAME(GUBUN, 'A4', DPT_CD), DPT_CD, SF_GET_DPTNAME(GUBUN, 'B2', DPT_CD), SF_GET_DPTNAME(GUBUN, 'A4', DPT_CD)) AS DPT_NM,                 -- 소속명
                   JOB_CD,                                                                 -- 직위코드
                   ASNHRSF_GET_COMMNAME(GUBUN, 'A2', JOB_CD)         AS JOB_NM,                 -- 직위명
                   TO_CHAR(JPR_YMD, 'YYYY-MM-DD')               AS JPR_YMD,                -- 승진일
                   TEAM_CD,                                                                -- 팀코드
                   ASNHRSF_GET_DPTNAME(GUBUN, 'A6', TEAM_CD)        AS TEAM_NM,                -- 팀명
                   TO_CHAR(HBA_YMD, 'YYYY-MM-DD')               AS HBA_YMD,                -- 승급일
                   DUTY_CD,                                                                -- 직책코드
                   ASNHRSF_GET_COMMNAME(GUBUN, 'A7', DUTY_CD)        AS DUTY_NM,                -- 직책명
                   TAX_DPT,                                                                -- 회계부서
                   ASNHRSF_GET_COMMNAME(GUBUN, 'AD', TAX_DPT)         AS TAX_DPTNM,              -- 회계부서
                   REG_CD,                                                                 -- 지역구분
                   ASNHRSF_GET_COMMNAME(GUBUN, 'B3', REG_CD)         AS REG_NM                  -- 지역구분명
            FROM   ASNHR.T_CM_PERSON
            WHERE  CET_NO = (SELECT CET_NO FROM ASNHR.T_CM_PERSON WHERE ENO_NO = ?)
            ORDER BY ENO_NO DESC
            ]]>
        </query>
    </sql>

    <!-- 기존입사일 반영 -->
    <sql name="PIRA025_UPT_01">
        <description>기존입사일 반영</description>
        <query>
            <![CDATA[
		    UPDATE ASNHR.T_CM_PERSON
		    SET    HIR_YMD = ?,
		           HIRG_YMD = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
			WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 인사기록정보가 없으면 신규생성 -->
    <sql name="PIRA025_INS_02">
        <description>인사기록정보가 없으면 신규생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_PERSON
                  (GUBUN,    ENO_NO,   OCC_CD,  ENO_NM,  NAM_ENG, NAM_CHI,   MF_TAG,    BIR_YMD,   BIR_TAG,   CET_NO,   HEAD_CD,
                   GBN_CD,
                   REG_CD,   DPT_CD,   JOB_CD,  JPR_YMD, DUTY_CD, TEAM_CD,   HBA_YMD,   HIR_YMD,   HIRG_YMD, HIRR_YMD,  ESL_TAG,
                   RCO_YN,   EMAENO,   SOU_CNT, DFM_CNT, TRB_CNT, GOL_CNT,   WCT_CNT,   CHI_CNT,   GOL_CNT70, GOL_CNT65,  RETM_REM,
                   IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD, HOB_CD
                  )
            SELECT '01',        ENO_NO,       '',  ENO_NM,  NAM_ENG, NAM_CHI,   MF_TAG,    BIR_YMD,   BIR_TAG,   CET_NO,        '',
                   '',
                   '',           '',       '',  JPR_YMD,      '',      '',    HBA_YMD,   HIR_YMD,   HIRG_YMD,  HIR_YMD,	'Y',
                   'N', '5'||SUBSTR(ENO_NO,2,6), '0',      '0',      '0',     '0',     '0',     '0',     '0',       '0',   TERM1_YMD, 
                   ?,        SYSDATE,        ?, SYSDATE, DECODE(SUBSTR(?,1,1),'3','02','01')
            FROM ASNHR.T_CM_PERSON_TEMP
            WHERE SEQ_NO  = (SELECT MAX(TO_NUMBER(SEQ_NO)) FROM ASNHR.T_CM_PERSON_TEMP WHERE ENO_NO = ?)
            AND   ENO_NO  = ?
            AND   PSN_GBN = '1'
            ]]>
        </query>
    </sql>

            INSERT INTO ASNHR.T_CM_REWARD
                 ( ENO_NO,   REPU_YMD,  OCC_CD, END_YMD,  REPU_CD, REPU_TAG, SYC_NAM, REPU_RMK,  REMARK1, REMARK2, REMARK3, IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,        ?,         ?,      ?,        ?,       ?,        ?,       ?,         ?,       ?,       ?,       ?,        SYSDATE,  ?,       SYSDATE )


    <!-- T_DI_MONTHLY_HISTORY 신규생성 -->
    <sql name="PIRA025_INS_06">
        <description>T_DI_MONTHLY_HISTORY 신규생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_DI_MONTHLY_HISTORY
                  (	ENO_NO,	GET_CNT,	GUBUN )
            VALUES
                  ( ?,       '0',         'G')
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira026
* @description : 상벌사항
***********************************************************************
* 2006/12/28      박인이        최초작성.
***********************************************************************
-->
    <!-- 상벌사항 데이터 조회 -->
    <sql name="PIRA026_SHR">
        <description>상벌사항 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,
                   TO_CHAR(TO_DATE(REPU_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS REPU_YMD,  -- 시작일자
                   OCC_CD,                                                              -- 직종코드
                   TO_CHAR(TO_DATE(END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')  AS END_YMD,   -- 종료일자
                   REPU_CD,                                                             -- 포상코드
                   REPU_TAG,                                                            -- 상벌구분코드
                   ASNHR.SF_GET_COMMNAME('01', 'K1', REPU_TAG)                  AS REPU_TNM,  -- 상벌구분
                   SYC_NAM,                                                             -- 수여처
                   REPU_RMK,                                                            -- 상벌내역
                   REMARK1,                                                             -- 대물
                   REMARK2,                                                             -- 대인
                   REMARK3                                                              -- 비고
            FROM   ASNHR.T_CM_REWARD
            WHERE  ENO_NO   = ?
             -- AND NOT (REPU_TAG IN ('39','40','41','45','47','52','56','57','64','65'))
             -- AND REPU_YMD < TO_CHAR(ADD_MONTHS(sysdate,-60),'YYYYMMDD')
            ORDER BY REPU_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 상벌사항 데이터 생성 -->
    <sql name="PIRA026_INS">
        <description>상벌사항 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_REWARD
                 ( ENO_NO,   REPU_YMD,  OCC_CD, END_YMD,  REPU_CD, REPU_TAG, SYC_NAM, REPU_RMK,  REMARK1, REMARK2, REMARK3, IPT_MAN,  IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,        ?,         ?,      ?,        ?,       ?,        ?,       ?,         ?,       ?,       ?,       ?,        SYSDATE,  ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 상벌사항 데이터 수정 -->
    <sql name="PIRA026_UPT">
        <description>상벌사항 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_REWARD
            SET    END_YMD  = ?,
                   REPU_CD  = ?,
                   SYC_NAM  = ?,
                   REPU_RMK = ?,
                   REMARK1  = ?,
                   REMARK2  = ?,
                   REMARK3  = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    REPU_YMD = ?
            AND    REPU_CD  = ?
            AND    REPU_TAG = ?
            ]]>
        </query>
    </sql>

    <!-- 상벌사항 데이터 삭제 -->
    <sql name="PIRA026_DEL">
        <description>상벌사항 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_REWARD
            WHERE  ENO_NO   = ?
            AND    REPU_YMD = ?
            AND    REPU_CD  = ?
            AND    REPU_TAG = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira027
* @description : 어학성적
***********************************************************************
* 2006/12/26      박인이        최초작성.
***********************************************************************
-->
    <!-- 어학성적 데이터 조회 -->
    <sql name="PIRA027_SHR">
        <description>어학성적 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   TO_CHAR(TO_DATE(PRO_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS PRO_YMD,  -- 시행일자
                   OCC_CD,                                                            -- 직종코드
                   INT_NAM,                                                           -- 시행처
                   SBJ_CD,                                                            -- 시험과목코드
                   ASNHR.SF_GET_COMMNAME('01', 'M1', SBJ_CD)   AS SBJ_NM,                   -- 시험과목
                   SBJ_LSN,                                                           -- 청취
                   SBJ_RED,                                                           -- 필기
                   SBJ_SPC,                                                           -- 말하기
                   SBJ_VOC,                                                           -- 어휘
                   SBJ_IPT,                                                           -- 독해
                   SBJ_TOT,                                                           -- 종합
                   SBJ_ETC,                                                           -- 기타
                   TTL_AVR,                                                           -- 합계
                   GRADE,                                                             -- 급수
                   SBJ_AMT,                                                           -- 시험응시료
                   REMARK                                                             -- 비고
            FROM   ASNHR.T_CM_EXAMINATION
            WHERE  ENO_NO = ?
            ORDER BY PRO_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 어학성적 데이터 생성 -->
    <sql name="PIRA027_INS">
        <description>어학성적 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_EXAMINATION
                 ( ENO_NO,   PRO_YMD,  OCC_CD,  INT_NAM, SBJ_CD,  SBJ_LSN, SBJ_RED, SBJ_SPC,  SBJ_VOC, SBJ_IPT,
                   SBJ_TOT,  SBJ_ETC,  TTL_AVR, GRADE,   SBJ_AMT, REMARK,  IPT_MAN, IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,        ?,        ?,       ?,       ?,       ?,       ?,       ?,        ?,       ?,
                   ?,        ?,        ?,       ?,       ?,       ?,       ?,       SYSDATE,  ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 어학성적 데이터 수정 -->
    <sql name="PIRA027_UPT">
        <description>어학성적 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_EXAMINATION
            SET    INT_NAM  = ?,
                   SBJ_CD   = ?,
                   SBJ_LSN  = ?,
                   SBJ_RED  = ?,
                   SBJ_SPC  = ?,
                   SBJ_VOC  = ?,
                   SBJ_IPT  = ?,
                   SBJ_TOT  = ?,
                   SBJ_ETC  = ?,
                   TTL_AVR  = ?,
                   GRADE    = ?,
                   SBJ_AMT  = ?,
                   REMARK   = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    PRO_YMD  = TO_DATE(?, 'YYYY-MM-DD HH24:MI:SS')
            AND    SBJ_CD   = ?
            ]]>
        </query>
    </sql>

    <!-- 어학성적 데이터 삭제 -->
    <sql name="PIRA027_DEL">
        <description>어학성적 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_EXAMINATION
            WHERE  ENO_NO   = ?
            AND    PRO_YMD  = ?
            AND    SBJ_CD   = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira028
* @description : 교육사항
***********************************************************************
* 2006/12/28      박인이        최초작성.
***********************************************************************
-->
    <!-- 교육사항 데이터 조회 -->
    <sql name="PIRA028_SHR">
        <description>교육사항 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                                          -- 사번
                   OCC_CD,                                                                          -- 직종코드
                   TO_CHAR(TO_DATE(STR_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS STR_YMD, -- 시작일자
                   TO_CHAR(TO_DATE(END_YMD,'YYYYMMDD'),'YYYY-MM-DD') AS END_YMD, -- 종료일자
                   EDU_CD,                                                                          -- 교육과정코드
                   EDU_NM                                  AS EDU_NM,  -- 교육과정코드명
                   SEQ_NO,                                                                          -- 차수
                   PLACE_CD,                                                                        -- 교육장소코드
                   DECODE(PLACE_CD, '1', '사내 ', '2', '사외 ', '3', '인터넷 ', '') AS PLACE_NM,    -- 교육장소
                   INT_NAM,                                                                         -- 시행처
                   EDU_TAG,                                                                         -- 수료여부
                   CASE WHEN EDU_TAG = 'N'
                        THEN '미수료'
                        ELSE '수료'
                   END                                                                    AS EDU_TNM, -- 수료여부
                   APP_VAL,                                                                         -- 평가점수
                   DPT_CD,                                                                          -- 소속코드
                   ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD)                                   AS DPT_NM,  -- 소속
                   JOB_CD,                                                                          -- 직위코드
                   ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)                                  AS JOB_NM,  -- 직위
                   EDU_AMT,                                                                         -- 교육비
                   TRA_AMT,                                                                         -- 교통비
                   BOLO_AMT,                                                                        -- 숙박비
                   EDU_GBN_CD,                                                                     --
                   DECISION_CD,                                                                     -- 결재현황코드
                   ASNHR.SF_GET_COMMNAME('01', 'Q4', DECISION_CD)                             AS DECISION_NM, -- 결재현황
                   CPT_PNT,                                                                           -- 이수점수
                   REMARK                                                                           -- 비고
            FROM   ASNHR.T_CM_EDUCATION
            WHERE  ENO_NO = ?
            	AND  DECISION_CD IN ('C','D')
            	AND  EDU_TAG = 'Y'
            ORDER BY STR_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 교육사항 데이터 생성 -->
    <sql name="PIRA028_INS">
        <description>교육사항 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_EDUCATION
                 ( ENO_NO, 	STR_YMD,     OCC_CD,   END_YMD, EDU_CD,
                   SEQ_NO,  EDU_GBN_CD,  PLACE_CD, CPT_PNT, EDU_NM,  INT_NAM,
                   EDU_TAG, DECISION_CD, IPT_MAN, IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,      ?,      ?,          ?,      ?,
                   ?,      ?,      ?,          ?,      ?,     ?,
                   ?,      ?,      ?,      SYSDATE,    ?,   SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 교육사항 데이터 수정 -->
    <sql name="PIRA028_UPT">
        <description>교육사항 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_EDUCATION
            SET
                   PLACE_CD   = ?,
                   STR_YMD   = ?,
                   END_YMD   = ?,
                   EDU_GBN_CD   = ?,
            	   EDU_TAG  = ?,
            	   EDU_NM  = ?,
                   INT_NAM   = ?,
                   REMARK   = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    EDU_CD   = ?
            AND    SEQ_NO   = ?
            ]]>
        </query>
    </sql>

    <!-- 교육사항 데이터 삭제 -->
    <sql name="PIRA028_DEL">
        <description>교육사항 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_EDUCATION
            WHERE  ENO_NO   = ?
            AND    EDU_CD   = ?
            AND    SEQ_NO   = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira029
* @description : 기술경력
***********************************************************************
* 2006/12/27      박인이        최초작성.
***********************************************************************
-->
    <!-- 기술경력 데이터 조회 -->
    <sql name="PIRA029_SHR">
        <description>기술경력 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
            	   PJT_NM,                                                            -- 참여사업명
                   TO_CHAR(TO_DATE(STR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS STR_YMD,  -- 시작일자
                   TO_CHAR(TO_DATE(END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS END_YMD,  -- 종료일자
                   ODR_NM,															  -- 발주처
                   CMP_NM,															  -- 소속사
                   JOB_NM,															  -- 직위
                   CHG_CD1,															  -- 직무코드1
                   SF_GET_COMMNAME('01', 'S1', CHG_CD1)                  AS CHG_NM1,  -- 직위
                   CHG_CD2,															  -- 직무코드2
                   SF_GET_COMMNAME('01', 'S2', CHG_CD2)                  AS CHG_NM2,  -- 직위
                   CHG_CD3,															  -- 직무코드3
                   SF_GET_COMMNAME('01', 'S3', CHG_CD3)                  AS CHG_NM3,  -- 직위
                   REMARK                                                             -- 기타사항
            FROM   ASNHR.T_CM_CAREER
            WHERE  ENO_NO   = ?
            ORDER BY STR_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 기술경력 데이터 생성 -->
    <sql name="PIRA029_INS">
        <description>기술경력 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_CAREER
                 ( ENO_NO, PJT_NM, STR_YMD, END_YMD, ODR_NM, CMP_NM, JOB_NM, CHG_CD1, CHG_CD2, CHG_CD3, REMARK, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,      ?,      ?,       ?,       ?,       ?,      ?,      ?,       ?,       ?,       ?,      ?,        SYSDATE,  ?,     SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 기술경력 데이터 수정 -->
    <sql name="PIRA029_UPT">
        <description>기술경력 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_CAREER
				SET    ENO_NO  = ?,
				       PJT_NM  = ?,
				       STR_YMD = ?,
				       END_YMD = ?,
				       ODR_NM  = ?,
				       CMP_NM  = ?,
				       JOB_NM  = ?,
				       CHG_CD1 = ?,
				       CHG_CD2 = ?,
				       CHG_CD3 = ?,
				       REMARK  = ?,
				       IPT_MAN = ?,
				       IPT_YMD = SYSDATE,
				       UPT_MAN = ?,
	                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?
            ]]>
        </query>
    </sql>

    <!-- 기술경력 데이터 삭제 -->
    <sql name="PIRA029_DEL">
        <description>기술경력 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_CAREER
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira030
* @description : 공조부조
***********************************************************************
* 2006/12/28      박인이        최초작성.
***********************************************************************
-->
    <!-- 공조부조 데이터 조회 -->
    <sql name="PIRA030_SHR">
        <description>공조부조 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   TO_CHAR(TO_DATE(REQ_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS REQ_YMD,  -- 신청일자
                   AID_CD,                                                            -- 신청사유코드
                   ASNHR.SF_GET_COMMNAME('01', 'R1', AID_CD)                   AS AID_CNM,  -- 신청사유
                   AID_NM,                                                            -- 대상자성명
                   TO_CHAR(TO_DATE(AID_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS AID_YMD,  -- 발생일자
                   HLP1_AMT,                                                          -- 공조부조금
                   HLP2_AMT,                                                          -- 경조금
                   HLP1_AMT + HLP2_AMT                                   AS SUM_AMT,  -- 합계
                   TO_CHAR(TO_DATE(SPL_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS SPL_YMD   -- 지급일자
              FROM ASNHR.T_AD_AIDAPP
             WHERE ENO_NO   = ?
               AND AID_STS = 'E'
          ORDER BY SPL_YMD DESC
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira031
* @description : 급여변경
***********************************************************************
* 2006/12/29      박인이        최초작성.
***********************************************************************
-->
    <!-- 급여변경 데이터 조회 -->
    <sql name="PIRA031_SHR">
        <description>급여변경 조회</description>
        <query>
            <![CDATA[
           SELECT
                B.OCC_CD,
                B.JOB_CD,
                B.ENO_NO,
                B.HINU_AMT,
                B.NPEN_AMT,
                B.OLD_AMT,
                B.HINS_AMT,
                B.ENO_NM,
                ASNHR.SF_GET_COMMNAME('01', 'A1', B.OCC_CD) AS OCC_NM,
                ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD) AS JOB_NM
            FROM  ASNHR.T_CM_PERSON    B
            WHERE B.ENO_NO LIKE '%'||?||'%'
            ]]>
        </query>
    </sql>

    <!-- 호봉테이블 데이터 조회 -->
    <sql name="PIRA031_SHR_02">
        <description>호봉테이블 조회</description>
        <query>
            <![CDATA[
            SELECT BAS_AMT,
                   DUTY_AMT,
                   OT_AMT,
                   WEL_AMT,
                   OSE_AMT,
                   RUN_AMT,
                   MH_AMT
            FROM   ASNHR.T_CP_PAYTABLE
            WHERE  OCC_CD  = ?
            AND    JOB_CD  = (SELECT GBN2_TAG
                              FROM   ASNHR.T_CM_COMMON
                              WHERE  CD_GBN   = 'A2'
                              AND    COMM_CD  = ?
                              AND    (END_YMD IS NULL OR END_YMD >= SYSDATE)
                              AND    GBN2_TAG IS NOT NULL)
            AND    HOB_CD  = ?
            AND    APY_YMD = ?
            ]]>
        </query>
    </sql>

    <!-- 급여변경 데이터 생성 -->
    <sql name="PIRA031_INS">
        <description>급여변경 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CP_PAYTABLE (
            		OCC_CD,
					JOB_CD,
					ENO_NO,
					HOB_CD,
					APY_YMD,
					BAS_AMT,
					DUTY_AMT,
					LAW_AMT,
					BNS_AMT,
					ETC_AMT,
					ETC_AMT3,
					STR_YMD,
        			END_YMD,
					IPT_MAN,
					IPT_YMD,
					UPT_MAN,
					UPT_YMD
			) VALUES (
					(select occ_cd from ASNHR.T_CM_PERSON where eno_no = ?),
					?,
					?,
					(SELECT DECODE(?, SUBSTR(max(HOB_CD), 0, 4), max(HOB_CD)+1, ?||?||'01') FROM ASNHR.T_CP_PAYTABLE
             			WHERE ENO_NO = ?),
                    ?,
					?, ?, ?, ?, ?, ?,
					?, ?,
					?, SYSDATE,
					?, SYSDATE
			)
            ]]>
        </query>
    </sql>

    <!-- 급여변경 데이터 수정 -->
    <sql name="PIRA031_UPT">
        <description>급여변경 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_APY
            SET    BAS_AMT  = ?,
                   OSE_AMT  = ?,
                   APP_CD   = ?,
                   DUT_AMT  = ?,
                   RUN_AMT  = ?,
                   JOB_CD   = ?,
                   OT_AMT   = ?,
                   MH_AMT   = ?,
                   HOB_CD   = ?,
                   WEL_AMT  = ?,
                   LSEV_AMT = ?,
                   BNS_AMT = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    CHN_YMD  = ?
            AND    SEQ_NO   = ?
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 교통비 식대수정 -->
    <sql name="PIRA031_UPT_ETC">
        <description>급여테이블 교통비 식대수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CP_PAYTABLE
            SET    ETC_AMT  = ?,	--교통비
                   ETC_AMT3  = ?,	--식대
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE OCC_CD = ?
              and JOB_CD = ?
              and HOB_CD=?
              and APY_YMD=?
            ]]>
        </query>
    </sql>

    <!-- 급여변경 데이터 삭제 -->
    <sql name="PIRA031_DEL">
        <description>급여변경 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_APY
            WHERE  ENO_NO   = ?
            AND    CHN_YMD  = ?
            AND    SEQ_NO   = ?
            ]]>
        </query>
    </sql>

    <!-- 저장시 종료일자 수정. -->
    <sql name="PIRA031_UPT2">
        <description>저장시 종료일자 수정</description>
        <query>
            <![CDATA[
				UPDATE ASNHR.T_CP_PAYTABLE
					SET    END_YMD  = TO_CHAR(TO_DATE(?) -1, 'YYYYMMDD'), --종료일자
           				UPT_MAN = ?, --최종 수정자
           				UPT_YMD = SYSDATE --최종 수정일시
    			WHERE  HOB_CD = (SELECT HOB_CD
        FROM ASNHR.T_CP_PAYTABLE
        WHERE STR_YMD = (SELECT MAX(STR_YMD) FROM ASNHR.T_CP_PAYTABLE WHERE ENO_NO = ?)
          AND ENO_NO = ?
          AND END_YMD IS NULL
          AND ROWNUM  = 1) --호봉
            ]]>
        </query>
    </sql>

    <!-- 신규입사자여부 -->
    <sql name="PIRA031_SHR_COUNT">
        <description>신규입사자여부</description>
        <query>
            <![CDATA[
				select * from ASNHR.T_cp_paytable
         			where eno_no = ?
            ]]>
        </query>
    </sql>

    <!-- 급여변경 데이터 수정 -->
    <sql name="PIRA031_UPT0">
        <description>급여변경 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CP_PAYTABLE
            SET    BAS_AMT  = ?,
                   DUTY_AMT  = ?,
                   LAW_AMT   = ?,
                   BNS_AMT  = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?

            ]]>
        </query>
    </sql>

    <!-- 국민연금  의료보험 장기요양보험 수정. -->
    <sql name="PIRA031_UPT3">
        <description>국민연금 의료보험 장기요양보험 수정</description>
        <query>
            <![CDATA[
				UPDATE ASNHR.T_CM_PERSON
				      SET HINU_AMT = ?,
                          OLD_AMT = ?,
                          NPEN_AMT = ?,
                          HINS_AMT = ?
                 WHERE ENO_NO = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira032
* @description : 사번생성
***********************************************************************
* 2006/12/21      박인이        최초작성.
***********************************************************************
-->
    <!-- 인사기록표 데이터 조회 (정규직원) -->
    <sql name="PIRA032_SHR">
        <description>인사기록표 조회</description>
        <query>
            <![CDATA[
        SELECT ENO_NO,                                                                 -- 사번
               ENO_NM,                                                                 -- 성명
               ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD)           AS DPT_NM,                 -- 소속명
               ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)          AS JOB_NM,                 -- 직위명
               TO_CHAR(HIR_YMD, 'YYYY-MM-DD')               AS HIR_YMD                 -- 입사일
        FROM   ASNHR.T_CM_PERSON
        WHERE  ENO_NO IN (
                   SELECT DISTINCT  MAX(ENO_NO)   OVER(PARTITION BY SUBSTR(ENO_NO,1,1) ORDER BY ENO_NO DESC) AS ENO_NO
                              FROM ASNHR.T_CM_PERSON
                              WHERE ENO_NO NOT LIKE '199%'
                                AND ENO_NO NOT LIKE '230%'
                                AND ENO_NO NOT LIKE '399%'
                            )
        ORDER BY ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 인사기록표 데이터 조회 (파견사원) -->
    <sql name="PIRA032_SHR_02">
        <description>인사기록표 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                                 -- 사번
                   ENO_NM,                                                                 -- 성명
                   ASNHR.SF_GET_DPTNAME('01', 'A4', DPT_CD)           AS DPT_NM,                 -- 소속명
                   ASNHR.SF_GET_COMMNAME('01', 'A2', JOB_CD)          AS JOB_NM,                 -- 직위명
                   TO_CHAR(HIR_YMD, 'YYYY-MM-DD')               AS HIR_YMD                 -- 입사일
            FROM   ASNHR.T_ME_PERSON
            WHERE (RET_YMD IS NULL
            OR     RET_YMD >= SYSDATE )
            ORDER BY ENO_NO DESC
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira033
* @description : 겸직사항
***********************************************************************
* 2007/01/31      박인이        최초작성.
***********************************************************************
-->
    <!-- 겸직사항 데이터 조회 -->
    <sql name="PIRA033_SHR">
        <description>겸직사항 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                            -- 사번
                   TO_CHAR(TO_DATE(STR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS STR_YMD,  -- 시작일자
                   SEQ_NO,                                                            -- SEQ순번
                   TO_CHAR(TO_DATE(END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS END_YMD,  -- 종료일자
                   HEAD_CD,                                                           -- 본부코드
                   SF_GET_DPTNAME('01', 'B2', HEAD_CD)                   AS HEAD_NM,  -- 본부
                   DPT_CD,                                                            -- 소속1코드
                   SF_GET_DPTNAME('01', 'A4', DPT_CD)                   AS DPT_NM,    -- 소속1
                   DUTY_CD,                                                           -- 직책1코드
                   SF_GET_COMMNAME('01', 'A7', DUTY_CD)                  AS DUTY_NM   -- 직책1
            FROM   ASNHR.T_CM_ADDJOB
            WHERE  ENO_NO   = ?
            ORDER BY ENO_NO, STR_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 겸직사항 데이터 생성 -->
    <sql name="PIRA033_INS">
        <description>겸직사항 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_ADDJOB
                 ( ENO_NO,   STR_YMD, SEQ_NO,  END_YMD,  HEAD_CD,   DPT_CD,  DUTY_CD, IPT_MAN, IPT_YMD,  UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,        ?,       ?,       ?,        ?,         ?,       ?,       ?,       SYSDATE,   ?,      SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 겸직사항 데이터 수정 -->
    <sql name="PIRA033_UPT">
        <description>겸직사항 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_ADDJOB
            SET    END_YMD  = ?,
                   HEAD_CD  = ?,
                   DPT_CD   = ?,
                   DUTY_CD  = ?,
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?
            AND    SEQ_NO   = ?
            ]]>
        </query>
    </sql>

    <!-- 겸직사항 데이터 삭제 -->
    <sql name="PIRA033_DEL">
        <description>겸직사항 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_ADDJOB
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?
            AND    SEQ_NO   = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pira034
* @description : 사회공헌
***********************************************************************
* 2008/02/20      김우태        최초작성.
***********************************************************************
-->
    <!-- 행사참여 데이터 조회 -->
    <sql name="PIRA034_SHR">
        <description>사회공헌 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO,                                                            -- 사번
                   TO_CHAR(TO_DATE(A.STR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') AS STR_YMD,  -- 행사일자
                   A.ATT_SBJ,
                   A.ATT_OFFICE,
                   A.ATT_HOUR
            FROM   ASNHR.T_CM_SERVICE A
            WHERE  A.ENO_NO   = ?
            ORDER BY A.STR_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 행사참여 데이터 생성 -->
    <sql name="PIRA034_INS">
        <description>사회공헌 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_SERVICE
                   (ENO_NO,
                    STR_YMD,
                    ATT_OFFICE,
                    ATT_SBJ,
                    ATT_HOUR,
                    IPT_MAN,
                    IPT_YMD,
                    UPT_MAN,
                    UPT_YMD)
            VALUES (?,
                    ?,
                    ?,
                    ?,
                    NVL(?,0),
                    ?,
                    SYSDATE,
                    ?,
                    SYSDATE)
            ]]>
        </query>
    </sql>

    <!-- 행사참여 데이터 수정 -->
    <sql name="PIRA034_UPT">
        <description>사회공헌 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_SERVICE
            SET    ATT_OFFICE  = ?,
                   ATT_SBJ     = ?,
                   ATT_HOUR    = NVL(?,0),
                   IPT_MAN     = ?,
                   IPT_YMD     = SYSDATE,
                   UPT_MAN     = ?,
                   UPT_YMD     = SYSDATE
            WHERE  ENO_NO      = ?
            AND    STR_YMD     = ?

            ]]>
        </query>
    </sql>


    <!-- 행사참여 데이터 삭제 -->
    <sql name="PIRA034_DEL">
        <description>사회공헌 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_SERVICE
            WHERE  ENO_NO   = ?
            AND    STR_YMD  = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pira035
* @description : 고과결과
***********************************************************************
* 2012/05/30      이동훈        최초작성.
* 2013/12/08      정하나 역량,업적평가 볼 수 있게 수정
***********************************************************************
-->
    <!-- 고과결과 데이터 조회 -->
    <sql name="PIRA035_SHR">
        <description>고과결과 조회</description>
        <query>
            <![CDATA[

	       SELECT A.EMPNO, A.EVAYM,
	                   A.GRADE3 AS GRADE3, B.GRADE3 AS GRADE4
	        FROM   ASNHR.T_EV_RQEMP A
	        FULL OUTER JOIN ASNHR.T_EV_EQEMP B ON A.EMPNO=B.EMPNO AND A.EVAYM=B.EVAYM
	        WHERE  A.EMPNO   = ?
	             AND A.EVAYM = '201511'

            ]]>

        </query>
    </sql>

     <!-- 고과결과 데이터 조회 -->
    <sql name="PIRA035_SHR_01">
        <description>종합평가결과조회</description>
        <query>
            <![CDATA[

	       SELECT A.EMPNO, A.EVAYM,  A.TGRADE
	         FROM ASNHR.T_EV_TOTAL A
	        WHERE A.EMPNO   = ?
	          AND A.EVAYM = '201511'

            ]]>

        </query>
    </sql>
<!-- 조직관리 -->
<!--
***********************************************************************
* @UseCase     : pirb010
* @description : 부서코드관리
***********************************************************************
* 2006/09/28     한학현        최초작성.
***********************************************************************
-->
    <!-- 부서정보 트리구성 데이터 조회 -->
    <sql name="PIRB010_SHR">
        <description>부서 트리 검색(서로 cd_gbn은 다르지만 dpt_cd가 같은거 주의)</description>
        <query>
            <![CDATA[
            SELECT     GUBUN,
                       CD_GBN,
                       DPT_CD,
                       DPT_NM,
                       DECODE(NVL(STR_YMD,''),'','',SUBSTR(STR_YMD,1,4)||'-'||SUBSTR(STR_YMD,5,2)||'-'||SUBSTR(STR_YMD,7,2)) AS STR_YMD,
                       DECODE(NVL(END_YMD,''),'','',SUBSTR(END_YMD,1,4)||'-'||SUBSTR(END_YMD,5,2)||'-'||SUBSTR(END_YMD,7,2)) AS END_YMD,
                       (SELECT CD_GBN FROM ASNHR.T_CM_DEPT B WHERE A.GUBUN=B.GUBUN AND A.UPDPT_CD=B.DPT_CD AND A.CD_GBN<>B.CD_GBN AND A.DPT_LBL > B.DPT_LBL ) AS UPCD_GBN,
                       UPDPT_CD,
                       (SELECT DPT_NM FROM ASNHR.T_CM_DEPT B WHERE A.GUBUN=B.GUBUN AND A.UPDPT_CD=B.DPT_CD AND A.CD_GBN<>B.CD_GBN AND A.DPT_LBL > B.DPT_LBL ) AS UPDPT_NM,
                       DOWNDPT_CD,
                       DPT_LBL,
                       SORT_NO,
                       COUNT_REM,
                       GBN2_TAG,
                       PART_CD,
                       SF_GET_COMMNAME(GUBUN, 'B1', PART_CD) AS PART_NM,
                       REMARK,
                       REMARK2,
                       REMARK3,
                       HEAD_CD,
                       GBN_CD,
                       OFFICE,
                       HEAD_TAG,
                       REG_CD,
                       SF_GET_COMMNAME(GUBUN, 'B3', REG_CD) AS REG_NM,
                       COM_NO
            FROM       ASNHR.T_CM_DEPT A
            WHERE      GUBUN = ? AND SORT_NO != '999' AND COUNT_REM NOT LIKE '999%'
            ORDER BY   COUNT_REM, SORT_NO, DPT_CD
            ]]>
        </query>
    </sql>

    <!-- 부서정보 상세 데이터 조회 -->
    <sql name="PIRB010_SHR_01">
        <description>부서정보 상세 데이터 조회(서로 cd_gbn은 다르지만 dpt_cd가 같은거 주의)</description>
        <query>
            <![CDATA[
            SELECT     GUBUN,
                       CD_GBN,
                       DPT_CD,
                       DPT_NM,
                       DECODE(NVL(STR_YMD,''),'','',SUBSTR(STR_YMD,1,4)||'-'||SUBSTR(STR_YMD,5,2)||'-'||SUBSTR(STR_YMD,7,2)) AS STR_YMD,
                       DECODE(NVL(END_YMD,''),'','',SUBSTR(END_YMD,1,4)||'-'||SUBSTR(END_YMD,5,2)||'-'||SUBSTR(END_YMD,7,2)) AS END_YMD,
                       (SELECT CD_GBN FROM ASNHR.T_CM_DEPT B WHERE A.GUBUN=B.GUBUN AND A.UPDPT_CD=B.DPT_CD AND A.CD_GBN<>B.CD_GBN AND A.DPT_LBL > B.DPT_LBL ) AS UPCD_GBN,
                       UPDPT_CD,
                       (SELECT DPT_NM FROM ASNHR.T_CM_DEPT B WHERE A.GUBUN=B.GUBUN AND A.UPDPT_CD=B.DPT_CD AND A.CD_GBN<>B.CD_GBN AND A.DPT_LBL > B.DPT_LBL ) AS UPDPT_NM,
                       DOWNDPT_CD,
                       DPT_LBL,
                       DECODE(SORT_NO,0,999,SORT_NO) as SORT_NO,   -- SORT_NO,
                       COUNT_REM,
                       GBN2_TAG,
                       PART_CD,
                       SF_GET_COMMNAME(GUBUN, 'B1', PART_CD) AS PART_NM,
                       REMARK,
                       REMARK2,
                       REMARK3,
                       HEAD_CD,
                       GBN_CD,
                       OFFICE,
                       HEAD_TAG,
                       REG_CD,
                       SF_GET_COMMNAME(GUBUN, 'B3', REG_CD) AS REG_NM,
                       COM_NO
            FROM       ASNHR.T_CM_DEPT A
            WHERE      GUBUN = ?
            AND        LENGTH(COUNT_REM)= LENGTH(?)+3
            AND        COUNT_REM LIKE ?
            ORDER BY   SORT_NO, IPT_YMD
            ]]>
        </query>
    </sql>

    <!-- HEAD_TAG 데이터 조회 -->
    <sql name="PIRB010_SHR_02">
        <description>HEAD_TAG 데이터 조회</description>
        <query>
            <![CDATA[
			SELECT CD_GBN, DPT_CD, DPT_NM, UPDPT_CD, GBN_CD, HEAD_TAG, REG_CD, PART_CD
			FROM ASNHR.T_CM_DEPT
			WHERE END_YMD IS NULL
			ORDER BY SORT_NO
            ]]>
        </query>
    </sql>

    <!-- 부서정보가 하나도 없으면 회사정보를 넣는다. -->
    <sql name="PIRB010_INS">
        <description>트리 신규구성을 위한 회사정보 입력</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_DEPT
                 ( GUBUN, CD_GBN, DPT_CD,
                   DPT_NM, STR_YMD, END_YMD, UPDPT_CD, DOWNDPT_CD, DPT_LBL, SORT_NO, COUNT_REM, GBN2_TAG, REMARK,
                   REMARK2, REMARK3, HEAD_CD, GBN_CD, OFFICE, HEAD_TAG, REG_CD, COM_NO, BUSS_OFF,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            SELECT  GUBUN, ' ', ' ',
                    COMP_NM, TO_CHAR(STR_YMD, 'YYYYMMDD'), '', ' ', '1', '1', '', '000', '1', '',
                    ADDRESS_HD||' '||ADDRESS_DT, TEL_NO, '', '', WARD_OFFICE, '', '', TAX_NO, 'Y',
                    ?, SYSDATE,?, SYSDATE
            FROM    ASNHR.T_CM_COMPANY
            WHERE   GUBUN = ?
            ]]>
        </query>
    </sql>

    <!-- 부서정보 신규 저장 -->
    <sql name="PIRB010_INS_01">
        <description>부서정보 신규 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_DEPT
                 ( GUBUN, CD_GBN, DPT_CD,
                   DPT_NM, STR_YMD, END_YMD, UPDPT_CD, DOWNDPT_CD, DPT_LBL, SORT_NO, COUNT_REM, GBN2_TAG,
                   PART_CD, REMARK, REMARK2, REMARK3, HEAD_CD, GBN_CD, OFFICE, HEAD_TAG, REG_CD, COM_NO, BUSS_OFF,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            VALUES
                 ( ?, ?, ?,
                   ?, ?, ?, nvl(?,' '), ' ', ?, ?, ?, ?,
                   ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 'Y',
                   ?, SYSDATE, ?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 부서코드 따른 부서정보 수정 -->
    <sql name="PIRB010_UPT_01">
        <description>부서정보 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_DEPT
            SET    DPT_NM = ?, --부서이름
                   STR_YMD = ?, --등록일
                   END_YMD = ?, --폐기일
                   UPDPT_CD = nvl(?,' '), --상위부서코드
                   --DOWNDPT_CD, 하위부서유무(1:없다,2:있다)
                   DPT_LBL = ?, --레벨
                   SORT_NO = ?, --정렬순서
                   COUNT_REM = ?, --부문별 SUM을 하기위한 SEQ
                   GBN2_TAG = ?, --구분(본사/지방)
                   PART_CD = ?, --부문코드
                   REMARK = ?, --회계부서코드
                   REMARK2 = ?, --부서주소
                   REMARK3 = ?, --전화번호
                   HEAD_CD = ?, --전표구분자
                   GBN_CD = ?, --구분(본사/지점)
                   OFFICE = ?, --관할구청
                   HEAD_TAG = ?, --주민세
                   REG_CD = ?, --지역
                   COM_NO = ?, --지점사업자번호
                   BUSS_OFF = 'Y',
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  GUBUN = ? --회계단위
            AND    CD_GBN = ? --코드구분
            AND    DPT_CD = ? --부서코드
            ]]>
        </query>
    </sql>

    <!-- 상위부서의 하위부서유무 update한다.(상위부서에 하위부서 있다고 update) -->
    <sql name="PIRB010_UPT_02">
        <description>상위 부서정보 하위부서유무(있다) 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_CM_DEPT SET DOWNDPT_CD='2'
            WHERE   GUBUN = ?
            AND     DPT_LBL= ?
            AND     COUNT_REM = ?
            ]]>
        </query>
    </sql>

    <!-- 상위부서의 하위부서유무 update한다.(상위부서에 하위부서 없다고 update) -->
    <sql name="PIRB010_UPT_03">
        <description>상위 부서정보 하위부서유무(없다) 수정</description>
        <query>
            <![CDATA[
            UPDATE  ASNHR.T_CM_DEPT SET DOWNDPT_CD='1'
            WHERE   GUBUN = ?
            AND     COUNT_REM = ?
            AND     1 = (SELECT COUNT(*) FROM ASNHR.T_CM_DEPT WHERE COUNT_REM LIKE ? )
            ]]>
        </query>
    </sql>

    <!-- 부서정보 삭제 -->
    <sql name="PIRB010_DEL_01">
        <description>부서정보 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_CM_DEPT
            WHERE  GUBUN = ?
            AND    CD_GBN = ?
            AND    DPT_CD = ?
            ]]>
        </query>
    </sql>



<!-- 개인정보조회 -->
<!--
***********************************************************************
* @UseCase     : pirc010
* @description : 개인정보조회
***********************************************************************
* 2007/02/15      오대성        최초작성.
***********************************************************************
-->
    <!-- 개인정보조회 -->
    <sql name="PIRC010_SHR">
        <description>개인정보조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                                 -- 사번
                   ENO_NM,                                                                 -- 성명
                   NAM_CHI,                                                                -- 한문성명
                   TO_CHAR(BIR_YMD, 'YYYY-MM-DD')               AS BIR_YMD,                -- 생년월일
                   DECODE(BIR_TAG,'S','양력','M','음력')        AS BIR_TAG,                -- 양력구분
                   NAM_ENG,                                                                -- 영문성명
                   TO_CHAR(HIR_YMD, 'YYYY-MM-DD')               AS HIR_YMD,                -- 입사일
                   DPT_CD,                                                                 -- 소속코드
                   ASNHR.SF_GET_DPTNAME(GUBUN, 'A4', DPT_CD)          AS DPT_NM,                 -- 소속명
                   JOB_CD,                                                                 -- 직위코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A2', JOB_CD)         AS JOB_NM,                 -- 직위명
                   HOB_CD,                                                                 -- 년차코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'A4', HOB_CD)         AS HOB_NM,                 -- 년차
                   TO_CHAR(WED_YMD, 'YYYY-MM-DD')               AS WED_YMD,                -- 결혼일
                   PER_JOB                                                                 -- 개인업무
            FROM   ASNHR.T_CM_PERSON
            WHERE  ENO_NO = ?

            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pirc011
* @description : 기본정보조회
***********************************************************************
* 2007/02/15      오대성        최초작성.
***********************************************************************
-->
    <!-- 기본정보조회 -->
    <sql name="PIRC011_SHR">
        <description>기본정보조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                              -- 사번
                   BCT_CD,                                              -- 출신도코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'B4', BCT_CD)   AS BCT_NM,    -- 출신도
                   HF_NAM,                                              -- 호주
                   HFRE_CD,                                             -- 호주와의관계코드
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'G1', HFRE_CD)  AS HFRE_NM,   -- 호주와의관계
                   PER_ADR,                                             -- 본적
                   DECODE(LENGTH(ZIP_NO)
                          , 6
                          , SUBSTR(ZIP_NO,1,3)||'-'||SUBSTR(ZIP_NO,4,6)
                          , ZIP_NO
                          ) AS ZIP_NO,    -- 등본상우편번호
                   ADDRESS,                                             -- 등본상주소1
                   ADR_CT,                                              -- 등본상주소2
                   DECODE(LENGTH(RZI_NO)
                          , 6
                          , SUBSTR(RZI_NO,1,3)||'-'||SUBSTR(RZI_NO,4,6)
                          , RZI_NO
                          ) AS RZI_NO,    -- 실거주지우편번호
                   RADR,                                                -- 실거주지주소1
                   RADR_CT,                                             -- 실거주지주소2
                   PHN_REG,                                             -- 지역번호
                   PHN_NO,                                              -- 전화번호
                   EM_PHN_NO,                                           -- 휴대폰
                   E_MAIL,                                              -- 이메일주소
                   COM_PHN_REG,                                         -- 회사전화(지역)
                   COM_PHN_NO,                                          -- 회사전화
                   COM_PHN_IN                                           -- 내선전화
            FROM   ASNHR.T_CM_PERSON
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 기본정보수정 -->
    <sql name="PIRC011_UPT">
        <description>기본정보수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_PERSON
            SET    BCT_CD = ?,                     -- 출신도코드
                   HF_NAM = ?,                     -- 호주
                   HFRE_CD = ?,                    -- 호주와의관계코드
                   PER_ADR = ?,                    -- 본적
                   ZIP_NO = ?,                     -- 등본상우편번호
                   ADDRESS = ?,                    -- 등본상주소1
                   ADR_CT = ?,                     -- 등본상주소2
                   RZI_NO = ?,                     -- 실거주지우편번호
                   RADR = ?,                       -- 실거주지주소1
                   RADR_CT = ?,                    -- 실거주지주소2
                   PHN_REG = ?,                    -- 지역번호
                   PHN_NO = ?,                     -- 전화번호
                   EM_PHN_NO = ?,                  -- 휴대폰
                   E_MAIL = ?,                     -- 이메일주소
                   ESL_TAG = 'Y',
                   UPT_MAN  = ?,
                   UPT_YMD  = SYSDATE
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : pirc020
* @description : 급상여지급액조회
***********************************************************************
* 2007/02/20      오대성        최초작성.
***********************************************************************
-->
    <!-- 로그인 사용자의 권한조회 -->
    <sql name="PIRC020_SHR">
        <description>권한조회</description>
        <query>
            <![CDATA[
                        --권한 강제로 넣었음(모든 총무부 직원이 인사팀 권한이 있지 않다)
            SELECT CASE WHEN ENO_NO IN ('6080001') --관리자
                        THEN '1001'
                        WHEN ENO_NO IN ('20600251', --마리나
                                        '20700086', --강효근
                                        '20500553', --박초이
                                        '20600412') --박원영
                        THEN '1002'
                        ELSE '1040'
                        END ROLE_CD
            FROM   ASNHR.T_CM_EMPLIST
            WHERE  GUBUN = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>


    <!-- 지급내역조회 -->
    <sql name="PIRC020_SHR_01">
        <description>지급내역조회</description>
        <query>
            <![CDATA[
            SELECT B.ENO_NO
                 , B.ENO_NM
                 , A.OCC_CD
                 , A.PIS_YY
                 , A.PIS_MM
                 , A.SAL_GBN
                 , A.SEQ
                 , A.SOU_CNT                                    -- 배
                 , A.DFM_CNT                                    -- 부
                 , A.TRB_CNT                                    -- 장
                 , A.GOL_CNT                                    -- 경
                 , A.WCT_CNT                                    -- 부
                 , A.CHI_CNT                                    -- 자
                 , SF_GET_DPTNAMEDH('01', 'AD', B.TAX_DPT) AS DPT_NM   -- 부서명
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM  -- 직위/호봉
                 , A.ACC_NO                                     -- 계좌번호
                 , A.BAS_AMT                                  	-- 기본급
                 , A.DUTY_AMT                                   -- 직책수당 복지수당
                 , A.WEL_AMT                                    -- 복지수당 기술수당
                 , A.OT_AMT                                     -- 시간외수당
                 , A.LSEV_AMT                                   -- 근속수당
                 , A.MH_AMT                                     -- 전산수당 자기개발비
                 , A.PPEN_AMT                                   -- 개인연금
                 , A.SGF_AMT                                    -- 자동지급수당(기타수당)
                 , A.TB3_AMT                                    -- 고정지급수당(기타수당)
                 , A.LAW_AMT                                    -- 법정수당
                 , A.BNS_AMT                                    -- 상여금

                   ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                   WHERE Z.ENO_NO = A.ENO_NO
                   AND Z.PIS_YY = A.PIS_YY
                   AND (Z.AD_TAG = 'A')
                   AND Z.PIS_MM = A.PIS_MM
                   AND Z.SAL_CD IN ( '01'))  AS ETC_AMT01 --자기계발비

                   ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                   WHERE Z.ENO_NO = A.ENO_NO
                   AND Z.PIS_YY = A.PIS_YY
                   AND (Z.AD_TAG = 'A')
                   AND Z.PIS_MM = A.PIS_MM
                   AND Z.SAL_CD IN ( '03'))  AS ETC_AMT03 --남북경협수당

                   ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                   WHERE Z.ENO_NO = A.ENO_NO
                   AND Z.PIS_YY = A.PIS_YY
                   AND (Z.AD_TAG = 'A')
                   AND Z.PIS_MM = A.PIS_MM
                   AND Z.SAL_CD NOT IN ( '01','02','03','07','SA','EA','A1','A2','A3','A4','Y1','AS','JN','21','JQ','06','22','AF','AG','HY'))  AS OTH_AMT --기타공제액

                -- , A.OTH_AMT                                     -- 기타지불

                 , (A.OTH_AMT - A.OSE_AMT  -  A.MONEY_AMT - A.DRIVE_AMT  - A.RUN_AMT - A.SPECIAL_AMT - A.OTH_AMT2 - A.SCH_AMT - A.POSITION_AMT -  A.RETRO_AMT - A.HOL_AMT
                                        - A.T_NORTH_AMT  - A.T_SITE_AMT - A.T_GOAL_AMT )     OTH_AMT_PRN                          -- 기타지불 인쇄용
         	     , A.ETC_AMT                                     -- 차량유지비
         	     , A.ETC_AMT2                                    -- 지역근무수당
         	     , A.ETC_AMT3                                    -- 식대
         	     , A.ETC_AMT4                                    -- 가족부양비
         	    ,A.OSE_AMT  -- 자기계발비
				,A.MONEY_AMT -- 출납수당
				,A.DRIVE_AMT -- 기사수당
				,A.RUN_AMT -- 자격수당
				,A.SPECIAL_AMT -- 남북경협수당
				,A.OTH_AMT2 -- 특수지수당
				,A.SCH_AMT --  학자금
				,A.POSITION_AMT -- 현장직책수당
				,A.RETRO_AMT -- 전월소급
				,A.HOL_AMT -- 휴일근무수당
				,A.T_NORTH_AMT -- 계약_북측근무수당
				,A.T_SITE_AMT -- 계약_현장수당
				,A.T_GOAL_AMT -- 계약_성과금
                 , A.SALT_AMT                                   -- 총지급액
                 , A.DDTT_AMT                                   -- 공제계
                 , A.PAY_AMT                                    -- 실수령액
                 , '1' AS KIND                                  -- 조회구분
                 , TO_CHAR(TO_DATE((SELECT PAY_YMD FROM ASNHR.T_CP_WORKLOG WHERE PIS_YY=A.PIS_YY  AND PIS_MM=A.PIS_MM AND SAL_GBN=A.SAL_GBN AND SEQ=A.SEQ )),'YYYY/MM/DD') AS PAY_YMD --급여지급일 추가
                 , (SELECT REMARK FROM ASNHR.T_CP_WORKLOG WHERE PIS_YY=A.PIS_YY  AND PIS_MM=A.PIS_MM AND SAL_GBN=A.SAL_GBN AND SEQ=A.SEQ ) AS REMARK --공지사항 추가
              FROM (SELECT *
                      FROM ASNHR.T_CP_PAYMASTER
                     WHERE PIS_YY   = ?
                       AND PIS_MM   = ?
                       AND SAL_GBN  = ?
                       AND SEQ      = ?
                    ) A
                 , ASNHR.T_CM_PERSON B
             WHERE B.ENO_NO = A.ENO_NO(+)
               AND B.ENO_NO = ?
            ]]>
        </query>
    </sql>


    <!-- 지급내역조회 -->
    <sql name="PIRC020_SHR_01_16">
        <description>지급내역조회</description>
        <query>
            <![CDATA[
            SELECT B.ENO_NO
                 , B.ENO_NM
                 , A.OCC_CD
                 , A.PIS_YY
                 , A.PIS_MM
                 , A.SAL_GBN
                 , A.SEQ
                 , B.SOU_CNT                                    -- 배
                 , B.DFM_CNT                                    -- 부
                 , B.TRB_CNT                                    -- 장
                 , B.GOL_CNT                                    -- 경
                 , B.WCT_CNT                                    -- 부
                 , B.CHI_CNT                                    -- 자
                 , SF_GET_DPTNAMEDH('01', 'AD', B.TAX_DPT) AS DPT_NM   -- 부서명
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM  -- 직위/호봉
                 , B.ACC_NO                                     -- 계좌번호
                 , A.P01_AMT                                  	-- 기본급
                 , A.P02_AMT
                 , A.P03_AMT
                 , A.P04_AMT
                 , A.P05_AMT
                 , A.CET_AMT
                 , A.CASH_AMT
                 , A.CAR_AMT
                 , A.MEAL_AMT
                 , A.STAY_AMT
                 , A.DRI_AMT
                 , A.BOSS_AMT
         	     , A.DUTY_AMT
				 , A.PPEN_AMT
				 , A.SCH_AMT
				 , A.OTH_AMT
                 , A.SALT_AMT                                   -- 총지급액
                 , A.SUM_DED                                   -- 공제계
                 , A.PAY_AMT                                    -- 실수령액
                 , '1' AS KIND                                  -- 조회구분
                 , TO_CHAR(TO_DATE((SELECT PAY_YMD FROM ASNHR.T_CP_WORKLOG WHERE PIS_YY=A.PIS_YY  AND PIS_MM=A.PIS_MM AND SAL_GBN=A.SAL_GBN AND SEQ=A.SEQ )),'YYYY/MM/DD') AS PAY_YMD --급여지급일 추가
                 , (SELECT REMARK FROM ASNHR.T_CP_WORKLOG WHERE PIS_YY=A.PIS_YY  AND PIS_MM=A.PIS_MM AND SAL_GBN=A.SAL_GBN AND SEQ=A.SEQ ) AS REMARK --공지사항 추가
              FROM (SELECT *
                      FROM ASNHR.T_CP_NPAYMASTER
                     WHERE PIS_YY   = ?
                       AND PIS_MM   = ?
                       AND SAL_GBN  = ?
                       AND SEQ      = ?
                    ) A
                 , ASNHR.T_CM_PERSON B
             WHERE B.ENO_NO = A.ENO_NO(+)
               AND B.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 일반공제내역조회 -->
    <sql name="PIRC020_SHR_02">
        <description>일반공제내역조회</description>
        <query>
            <![CDATA[
            SELECT B.ENO_NO, B.ENO_NM, B.OCC_CD,
                   A.PIS_YY, A.PIS_MM, A.SAL_GBN, A.SEQ,
                   B.JOB_NM||' '||B.HOB_NM AS JOB_NM,            -- 직위/호봉
                   B.ACC_NO,                                     -- 계좌번호
                   B.SOU_CNT,                                    -- 배
                   B.DFM_CNT,                                    -- 부
                   B.TRB_CNT,                                    -- 장
                   B.GOL_CNT,                                    -- 경
                   B.WCT_CNT,                                    -- 부
                   B.CHI_CNT,                                    -- 자
                   A.INCM_TAX, --갑근세
                   A.CITI_TAX, --주민세
                   A.HINU_AMT, --건강보험료
                   NVL(A.NPEN_AMT,0) + NVL(A.NPLE_AMT,0) AS NPEN_AMT,   --국민연금
                   A.HINS_AMT, --고용보험
                   A.DHLP_AMT, --공조회비
                   A.PPED_AMT, --개인연금공제
                   NVL(A.LON_RPY,0) + NVL(A.LON_RPY2,0) AS LON_RPY, --대출상환금
                   NVL(A.LON_INT,0) + NVL(A.LON_INT2,0) AS LON_INT, --대출상환이자

                   (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                   WHERE Z.ENO_NO = A.ENO_NO
                   AND Z.PIS_YY = A.PIS_YY
                   AND (Z.AD_TAG = 'D' OR Z.AD_TAG = 'J')
                   AND Z.PIS_MM = A.PIS_MM
                   AND Z.SAL_CD NOT IN ( 'SA','EA','A1','A2','A3','A4','A6','Y1','AS','JN','21','JQ','06','22','AF','AG'))  AS OTHD_AMT, --기타공제액

                   (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                   WHERE Z.ENO_NO = A.ENO_NO
                   AND Z.PIS_YY = A.PIS_YY
                   AND (Z.AD_TAG = 'D' OR Z.AD_TAG = 'J')
                   AND Z.PIS_MM = A.PIS_MM
                   AND Z.SAL_CD NOT IN ( 'SA','EA','A1','A2','A3','A4','A6','Y1','AS','JN','21','JQ','06','22','AE','AF','AG','PZ','A5'))  AS OTHD_AMT_PRN, --기타공제액

                   A.LAB_AMT,   -- 보증보험
                   A.WOM_AMT, --여직원회비
                   A.SAV_AMT, --저축
                   A.OLD_AMT, --장기요양보험료
			        (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
			         WHERE Z.ENO_NO = A.ENO_NO
			              AND Z.PIS_YY = A.PIS_YY
			              AND Z.AD_TAG = 'D'
			                  AND Z.PIS_MM = A.PIS_MM
			              AND Z.SAL_CD IN ('A1')) AS DRE_INTX,   -- 건강보험
			        (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
			         WHERE Z.ENO_NO = A.ENO_NO
			              AND Z.PIS_YY = A.PIS_YY
			              AND Z.AD_TAG = 'D'
			                  AND Z.PIS_MM = A.PIS_MM
			              AND Z.SAL_CD IN ('A2')) AS DRE_CTTX,   -- 고용보험
			        (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
			         WHERE Z.ENO_NO = A.ENO_NO
			              AND Z.PIS_YY = A.PIS_YY
			              AND Z.AD_TAG = 'D'
			                  AND Z.PIS_MM = A.PIS_MM
			              AND Z.SAL_CD IN ('A3')) AS YC_INT,   -- 연말정산 소득세
			        (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
			         WHERE Z.ENO_NO = A.ENO_NO
			              AND Z.PIS_YY = A.PIS_YY
			              AND Z.AD_TAG = 'D'
			                  AND Z.PIS_MM = A.PIS_MM
			              AND Z.SAL_CD IN ('A4')) AS YC_CTT,   -- 연말정산 주민세
			        (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
			         WHERE Z.ENO_NO = A.ENO_NO
			              AND Z.PIS_YY = A.PIS_YY
			              AND Z.AD_TAG = 'D'
			                  AND Z.PIS_MM = A.PIS_MM
			              AND Z.SAL_CD IN ('A6')) AS ETC_AMT_A6,   -- 연말정산 농특세
			        (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
			         WHERE Z.ENO_NO = A.ENO_NO
			              AND Z.PIS_YY = A.PIS_YY
			              AND Z.AD_TAG = 'D'
			                  AND Z.PIS_MM = A.PIS_MM
			              AND Z.SAL_CD IN ('AF')) AS ETC_AMT_AF,   -- 1월유보
			        (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
			         WHERE Z.ENO_NO = A.ENO_NO
			              AND Z.PIS_YY = A.PIS_YY
			              AND Z.AD_TAG = 'D'
			                  AND Z.PIS_MM = A.PIS_MM
			              AND Z.SAL_CD IN ('AG')) AS ETC_AMT_AG,   -- 자사주잔액
			        (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
			         WHERE Z.ENO_NO = A.ENO_NO
			              AND Z.PIS_YY = A.PIS_YY
			              AND Z.AD_TAG = 'D'
			                  AND Z.PIS_MM = A.PIS_MM
			              AND Z.SAL_CD IN ('PZ')) AS ETC_AMT_PZ,   -- 급여유보(2014.02월까지만)
			        (SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
			         WHERE Z.ENO_NO = A.ENO_NO
			              AND Z.PIS_YY = A.PIS_YY
			              AND Z.AD_TAG = 'D'
			                  AND Z.PIS_MM = A.PIS_MM
			              AND Z.SAL_CD IN ('A5')) AS ETC_AMT_A5,   -- 통근버스
                   A.ITXD_AMT,                                 -- 급여유보(2014.03월이후)
                   A.WEL_POINT, 								 -- 복지카페
                   A.SALT_AMT,                                   -- 총지급액
                   A.DDTT_AMT,                                   -- 공제계
                   A.PAY_AMT,                                    -- 실수령액
                   '2' AS KIND                                   -- 조회구분
            FROM   (SELECT *
                    FROM ASNHR.T_CP_PAYMASTER
                    WHERE  PIS_YY = ?
                    AND    PIS_MM = ?
                    AND    SAL_GBN = ?
                    AND    SEQ = ?
                   ) A,
                   VI_T_CM_PERSON2 B
            WHERE  B.ENO_NO = A.ENO_NO(+)
            AND    B.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 일반공제내역조회 -->
    <sql name="PIRC020_SHR_02_16">
        <description>일반공제내역조회</description>
        <query>
            <![CDATA[
            SELECT B.ENO_NO, B.ENO_NM, B.OCC_CD,
                   A.PIS_YY, A.PIS_MM, A.SAL_GBN, A.SEQ,
                   B.JOB_NM||' '||B.HOB_NM AS JOB_NM,            -- 직위/호봉
                   B.ACC_NO,                                     -- 계좌번호
                   B.SOU_CNT,                                    -- 배
                   B.DFM_CNT,                                    -- 부
                   B.TRB_CNT,                                    -- 장
                   B.GOL_CNT,                                    -- 경
                   B.WCT_CNT,                                    -- 부
                   B.CHI_CNT,                                    -- 자
                   A.INCM_TAX, --갑근세
                   A.CITI_TAX, --주민세
                   A.HINU_DED, --건강보험료
                   A.OLD_DED, --장기요양보험료
                   A.NPEN_DED,   --국민연금
                   A.HINS_DED, --고용보험
                   A.DHLP_DED, --공조회비
                   A.PPEN_DED, --개인연금공제
                   NVL(A.COM_DED,0) + NVL(A.GONG_DED,0) AS LON_RPY, --대출상환금
                   NVL(A.COM_INT,0) + NVL(A.GONG_INT,0) AS LON_INT, --대출상환이자
                   A.LAB_DED,   -- 보증보험
                   A.BUS_DED,
                   A.GIM_DED,
                   A.O7_DED,
                   A.HINU_CAL,
                   A.HINS_CAL,
                   A.DRE_INTX,
                   A.DRE_CTTX,
                   A.DRE_DFTX,
                   A.OTH_DED,
                   A.SALT_AMT,                                   -- 총지급액
                   A.SUM_DED,                                   -- 공제계
                   A.PAY_AMT,                                    -- 실수령액
                   '2' AS KIND                                   -- 조회구분
            FROM   (SELECT *
                    FROM ASNHR.T_CP_NPAYMASTER
                    WHERE  PIS_YY = ?
                    AND    PIS_MM = ?
                    AND    SAL_GBN = ?
                    AND    SEQ = ?
                   ) A,
                   VI_T_CM_PERSON2 B
            WHERE  B.ENO_NO = A.ENO_NO(+)
            AND    B.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 저축/대출내역조회 -->
    <sql name="PIRC020_SHR_03">
        <description>저축/대출내역조회</description>
        <query>
            <![CDATA[
            SELECT DECODE(A.GMK_TAG,'0',DECODE(A.SAL_GBN,'0','급여출자금','1','상여출자금'),'대출금') AS BNK_NM,
                   A.GMKL_NO AS SAV_NM,
                   DECODE(A.GMK_TAG,'0','출자','대출') AS GUBUN,
                   ' ' AS DUE_YMD,
                   NVL(A.GMK_AMT,0) + NVL(A.GMK_INT,0) AS CONM_AMT,
                 DECODE(A.GMK_TAG,'0',B.COUNT,  C.GMK_CNT_SUM) AS SUMP_CNT,
                 DECODE(A.GMK_TAG,'0',B.INV_AMT,C.GMK_AMT_SUM) AS SUM_SAV,
                 DECODE(A.GMK_TAG,'0',NVL(A.GMK_AMT,0),'0') AS GMK_AMT,
                 (A.GMK_BAK)  AS GMK_BAK
                 --(A.GMK_BAK - A.GMK_AMT)  AS GMK_BAK
            FROM   (SELECT AA. ENO_NO, AA.GMK_TAG, AA.SAL_GBN, AA.GMK_AMT, AA.GMK_INT, AA.GMK_BAK, AA.GMKL_NO,
                           BB.SALT_AMT, BB.DDTT_AMT, BB.PAY_AMT
                    FROM   ASNHR.T_AC_LOAN AA,
                           ASNHR.T_CP_PAYMASTER BB
                    WHERE  AA.ENO_NO = BB.ENO_NO
                    AND    AA.PIS_YY = BB.PIS_YY
                    AND    AA.PIS_MM = BB.PIS_MM
                    AND    AA.SAL_GBN = BB.SAL_GBN
                    AND    AA.SEQ = BB.SEQ
                    AND    AA.PIS_YY = ?
                    AND    AA.PIS_MM = ?
                    AND    AA.SAL_GBN = ?
                    AND    AA.SEQ = ?
                    AND    AA.ENO_NO = ?
                   )A,
                   (SELECT ENO_NO,
                                 COUNT(*) COUNT,
                                 SUM(INV_AMT) INV_AMT
                     FROM   ASNHR.T_CP_PAYMASTER
                     WHERE  PIS_YY||PIS_MM||SEQ <= ?||?
                     AND    INV_AMT > 0
                     AND    SAL_GBN = ?
                     AND    ENO_NO = ?
                     GROUP BY ENO_NO ) B,
                   (SELECT A.ENO_NO,SUM(GMK_CNT) AS GMK_CNT_SUM,  SUM(GMK_AMT) AS GMK_AMT_SUM
                     FROM ASNHR.T_AC_LOAN A, ASNHR.T_CM_PERSON B
                     WHERE GMK_TAG  IN ('C','E')
                     AND PIS_YY || PIS_MM <= ?
                     AND A.ENO_NO = B.ENO_NO
                     AND B.ENO_NO = ?
                     GROUP BY A.ENO_NO ) C
            WHERE  A.ENO_NO = B.ENO_NO(+)
            AND    A.ENO_NO = C.ENO_NO(+)
            AND    A.ENO_NO = ?

          UNION

            SELECT A.BNK_NM,
                   A.COMM_NM,
                   '저축' AS GUBUN,
                   A.DUE_YMD,
                   A.PYM_AMT,
                   A.PIN_CNT,
                   B.SUM_PYM,
                   0 AS GMK_AMT,
                   0 AS GMK_BAK
           FROM (SELECT A.ACC_NO, COMM_NM ,TO_CHAR(TO_DATE(B.DUE_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS DUE_YMD, PYM_AMT,PIN_CNT,SF_GET_COMMNAME('01', 'V2', B.SAV_CD2) AS BNK_NM
                 FROM ASNHR.T_SV_SAVEBOOK A ,  ASNHR.T_SV_SAVELIST B , ASNHR.T_CM_COMMON C
                 WHERE A.ENO_NO =B.ENO_NO
                 AND A.BNK_CD = B.BNK_CD
                 AND A.ACC_NO = B.ACC_NO
                 AND A.BNK_CD = C.COMM_CD
                 AND A.DED_YM = ?
                 AND A.ENO_NO = ?) A,
                (SELECT SUM(PYM_AMT) AS SUM_PYM, COUNT(*) PIN_CNT,  ACC_NO
                 FROM ASNHR.T_SV_SAVEBOOK
                 WHERE ENO_NO = ?
                 AND DED_YM <= ?
                 GROUP BY ACC_NO) b
                WHERE A.ACC_NO = b.ACC_NO
            [1]

            ]]>
        </query>
    </sql>


    <!-- 저축/대출내역조회 -->
    <sql name="PIRC020_SHR_03_16">
        <description>저축/대출내역조회</description>
        <query>
            <![CDATA[
            SELECT '대출금' AS BNK_NM,
                   A.GMKL_NO AS SAV_NM,
                   '대출' AS GUBUN,
                   ' ' AS DUE_YMD,
                   NVL(A.GMK_AMT,0) + NVL(A.GMK_INT,0) AS CONM_AMT,
                   C.GMK_CNT_SUM AS SUMP_CNT,
                   C.GMK_AMT_SUM AS SUM_SAV,
                   (A.GMK_BAK)  AS GMK_BAK
            FROM   (SELECT AA. ENO_NO, AA.GMK_TAG, AA.SAL_GBN, AA.GMK_AMT, AA.GMK_INT, AA.GMK_BAK, AA.GMKL_NO,
                           BB.SALT_AMT, BB.SUM_DED, BB.PAY_AMT
                    FROM   ASNHR.T_AC_LOAN AA,
                           ASNHR.T_CP_NPAYMASTER BB
                    WHERE  AA.ENO_NO = BB.ENO_NO
                    AND    AA.PIS_YY = BB.PIS_YY
                    AND    AA.PIS_MM = BB.PIS_MM
                    AND    AA.SAL_GBN = BB.SAL_GBN
                    AND    AA.SEQ = BB.SEQ
                    AND    AA.PIS_YY = ?
                    AND    AA.PIS_MM = ?
                    AND    AA.SAL_GBN = ?
                    AND    AA.SEQ = ?
                    AND    AA.ENO_NO = ?
                   )A,
                   (SELECT A.ENO_NO,SUM(GMK_CNT) AS GMK_CNT_SUM,  SUM(GMK_AMT) AS GMK_AMT_SUM
                     FROM ASNHR.T_AC_LOAN A, ASNHR.T_CM_PERSON B
                     WHERE PIS_YY || PIS_MM <= ?
                     AND A.ENO_NO = B.ENO_NO
                     AND A.GMK_TAG  = 'C'
                     AND B.ENO_NO = ?
                     GROUP BY A.ENO_NO ) C
            WHERE  A.ENO_NO = C.ENO_NO(+)
            AND    A.ENO_NO = ?
			AND A.GMK_TAG  = 'C'

		  UNION

            SELECT '대출금' AS BNK_NM,
                   A.GMKL_NO AS SAV_NM,
                   '대출' AS GUBUN,
                   ' ' AS DUE_YMD,
                   NVL(A.GMK_AMT,0) + NVL(A.GMK_INT,0) AS CONM_AMT,
                   C.GMK_CNT_SUM AS SUMP_CNT,
                   C.GMK_AMT_SUM AS SUM_SAV,
                   (A.GMK_BAK)  AS GMK_BAK
            FROM   (SELECT AA. ENO_NO, AA.GMK_TAG, AA.SAL_GBN, AA.GMK_AMT, AA.GMK_INT, AA.GMK_BAK, AA.GMKL_NO,
                           BB.SALT_AMT, BB.SUM_DED, BB.PAY_AMT
                    FROM   ASNHR.T_AC_LOAN AA,
                           ASNHR.T_CP_NPAYMASTER BB
                    WHERE  AA.ENO_NO = BB.ENO_NO
                    AND    AA.PIS_YY = BB.PIS_YY
                    AND    AA.PIS_MM = BB.PIS_MM
                    AND    AA.SAL_GBN = BB.SAL_GBN
                    AND    AA.SEQ = BB.SEQ
                    AND    AA.PIS_YY = ?
                    AND    AA.PIS_MM = ?
                    AND    AA.SAL_GBN = ?
                    AND    AA.SEQ = ?
                    AND    AA.ENO_NO = ?
                   )A,
                   (SELECT A.ENO_NO,SUM(GMK_CNT) AS GMK_CNT_SUM,  SUM(GMK_AMT) AS GMK_AMT_SUM
                     FROM ASNHR.T_AC_LOAN A, ASNHR.T_CM_PERSON B
                     WHERE PIS_YY || PIS_MM <= ?
                     AND A.ENO_NO = B.ENO_NO
                     AND A.GMK_TAG  = 'E'
                     AND B.ENO_NO = ?
                     GROUP BY A.ENO_NO ) C
            WHERE  A.ENO_NO = C.ENO_NO(+)
            AND    A.ENO_NO = ?
			AND A.GMK_TAG  = 'E'

          UNION

            SELECT A.BNK_NM,
                   A.COMM_NM,
                   '저축' AS GUBUN,
                   A.DUE_YMD,
                   A.PYM_AMT,
                   A.PIN_CNT,
                   B.SUM_PYM,
                   0 AS GMK_BAK
           FROM (SELECT A.ACC_NO, COMM_NM ,TO_CHAR(TO_DATE(B.DUE_YMD,'YYYY-MM-DD'),'YYYY-MM-DD') AS DUE_YMD, PYM_AMT,PIN_CNT,SF_GET_COMMNAME('01', 'V2', B.SAV_CD2) AS BNK_NM
                 FROM ASNHR.T_SV_SAVEBOOK A ,  ASNHR.T_SV_SAVELIST B , ASNHR.T_CM_COMMON C
                 WHERE A.ENO_NO =B.ENO_NO
                 AND A.BNK_CD = B.BNK_CD
                 AND A.ACC_NO = B.ACC_NO
                 AND A.BNK_CD = C.COMM_CD
                 AND A.DED_YM = ?
                 AND A.ENO_NO = ?) A,
                (SELECT SUM(PYM_AMT) AS SUM_PYM, COUNT(*) PIN_CNT,  ACC_NO
                 FROM ASNHR.T_SV_SAVEBOOK
                 WHERE ENO_NO = ?
                 AND DED_YM <= ?
                 GROUP BY ACC_NO) b
                WHERE A.ACC_NO = b.ACC_NO
            [1]

            ]]>
        </query>
    </sql>

    <!-- 작업 완료 여부 조회 -->
    <sql name="PIRC020_SHR_04">
        <description>작업 완료 여부 조회</description>
        <query>
            <![CDATA[
            SELECT A.PRO_STS
            FROM   ASNHR.T_CP_WORKLOG A, VI_T_CM_PERSON2 B
            WHERE  A.PIS_YY = ?
            AND    A.PIS_MM = ?
            AND    A.SAL_GBN = ?
            AND    A.SEQ = ?
            AND    B.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 누계조회 -->
    <sql name="PIRC020_SHR_05">
        <description>누계조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(SUM(NVL(A.SALT_AMT,0))) as SALT_AMT,
                   TO_CHAR(SUM(NVL(A.INCM_TAX,0))) as INCM_TAX,
                   TO_CHAR(SUM(NVL(A.CITI_TAX,0))) as CITI_TAX,
                   TO_CHAR(SUM(NVL(A.HINU_AMT,0)) + SUM(NVL(A.OLD_AMT,0))) as HINU_AMT,
                   TO_CHAR(SUM(NVL(A.NPEN_AMT,0))) as NPEN_AMT,
                   TO_CHAR(SUM(NVL(A.HINS_AMT,0))) as HINS_AMT,

                   TO_CHAR(SUM(NVL(A.SAV_AMT,0))) as SAV_AMT,
                   TO_CHAR(SUM(NVL(A.APP_AMT,0))) as APP_AMT,
                   TO_CHAR(SUM(NVL(A.INV_AMT,0))) as INV_AMT,
                   TO_CHAR(SUM(NVL(A.DHLP_AMT,0))) as DHLP_AMT,
                   TO_CHAR(SUM(NVL(A.PPED_AMT,0))) as PPED_AMT,
                   TO_CHAR(SUM(NVL(A.OTHD_AMT,0))) as OTHD_AMT,
                   TO_CHAR(SUM(NVL(A.OLD_AMT,0))) as OLD_AMT,
                   TO_CHAR(SUM(NVL(A.CONT_AMT,0))) as CONT_AMT,
                   TO_CHAR(SUM(NVL(A.PAY_AMT,0))) as PAY_AMT
              FROM ASNHR.T_CP_PAYMASTER A, ASNHR.T_CP_WORKLOG B
         	 WHERE  A.PIS_YY  = ?
               AND  A.PIS_MM <= ?
               AND  A.ENO_NO  = ?
               AND  A.PIS_YY  = B.PIS_YY
               AND  A.PIS_MM  = B.PIS_MM
               AND  A.SAL_GBN = B.SAL_GBN
               AND  A.SEQ     = B.SEQ
               [1]
               AND  B.PAY_YMD <= NVL(
                                  (SELECT PAY_YMD
                                  FROM   ASNHR.T_CP_WORKLOG
                                  WHERE  PIS_YY  = ?
                                  AND    PIS_MM  = ?
                                  AND    OCC_CD  = ?
                                  AND    SAL_GBN = ?
                                  AND    SEQ     = ?
                                  AND    SAL_GBN IN('0','1','4')),
                                  ?||?||to_number(to_char(last_day(to_date(?||?,'yyyymm')),'dd'))
                                 )--조회조건의 기준일이 없다면(상여가 없는날)해당달의 마지막일을 넣어서 급여가 조회되게 한다.
            ]]>
        </query>
    </sql>

    <!-- 누계조회 -->
    <sql name="PIRC020_SHR_05_16">
        <description>누계조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(SUM(NVL(A.SALT_AMT,0))) as SALT_AMT,
                   TO_CHAR(SUM(NVL(A.INCM_TAX,0))) as INCM_TAX,
                   TO_CHAR(SUM(NVL(A.CITI_TAX,0))) as CITI_TAX,
                   TO_CHAR(SUM(NVL(A.HINU_DED,0)) + SUM(NVL(A.OLD_DED,0))) as HINU_AMT,
                   TO_CHAR(SUM(NVL(A.NPEN_DED,0))) as NPEN_AMT,
                   TO_CHAR(SUM(NVL(A.HINS_DED,0))) as HINS_AMT,
                   TO_CHAR(SUM(NVL(A.PAY_AMT,0))) as PAY_AMT
              FROM ASNHR.T_CP_NPAYMASTER A, ASNHR.T_CP_WORKLOG B
         	 WHERE  A.PIS_YY  = ?
               AND  A.PIS_MM <= ?
               AND  A.ENO_NO  = ?
               AND  A.PIS_YY  = B.PIS_YY
               AND  A.PIS_MM  = B.PIS_MM
               AND  A.SAL_GBN = B.SAL_GBN
               AND  A.SEQ     = B.SEQ
               [1]
               AND  B.PAY_YMD <= NVL(
                                  (SELECT PAY_YMD
                                  FROM   ASNHR.T_CP_WORKLOG
                                  WHERE  PIS_YY  = ?
                                  AND    PIS_MM  = ?
                                  AND    OCC_CD  = ?
                                  AND    SAL_GBN = ?
                                  AND    SEQ     = ?
                                  AND    SAL_GBN IN('0','1','4')),
                                  ?||?||to_number(to_char(last_day(to_date(?||?,'yyyymm')),'dd'))
                                 )--조회조건의 기준일이 없다면 해당달의 마지막일을 넣어서 급여가 조회되게 한다.
            ]]>
        </query>
    </sql>

    <!-- 개인정보 조회 -->
    <sql name="PIRC020_SHR_06">
        <description>개인정보 조회</description>
        <query>
            <![CDATA[
            --개인정보 조회 직위/호봉/부양코드/소속/계좌번호 - PAYMASTER에서 가져옴
            SELECT B.ENO_NO
                 , B.ENO_NM
                 , A.OCC_CD
                 , ? AS PIS_YY
                 , ? AS PIS_MM
                 , ? AS SAL_GBN
                 , ? AS SEQ
                 , SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM   -- 부서명
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM  -- 직위/호봉
                 , A.ACC_NO                                     -- 계좌번호
                 , A.SOU_CNT                                    -- 배
                 , A.DFM_CNT                                    -- 부
                 , A.TRB_CNT                                    -- 장
                 , A.GOL_CNT                                    -- 경
                 , A.WCT_CNT                                    -- 부
                 , A.CHI_CNT                                    -- 자
                 , A.SALT_AMT                                   -- 총지급액
                 , A.DDTT_AMT                                   -- 공제계
                 , A.PAY_AMT                                    -- 실수령액
              FROM (SELECT AA.*
                      FROM ASNHR.T_CP_PAYMASTER AA
                         , (SELECT *
                              FROM ASNHR.T_CP_WORKLOG
                               [1]
                            ) BB
                     WHERE AA.PIS_YY    = ?
                       AND AA.PIS_MM    = ?
                       AND AA.SAL_GBN   = ?
                       AND AA.SEQ       = ?
                       AND AA.PIS_YY    = BB.PIS_YY
                       AND AA.PIS_MM    = BB.PIS_MM
                       AND AA.SAL_GBN   = BB.SAL_GBN
                       AND AA.SEQ       = BB.SEQ
                    ) A
                 , VI_T_CM_PERSON2 B
             WHERE B.ENO_NO = A.ENO_NO(+)
               AND B.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 개인정보 조회 -->
    <sql name="PIRC020_SHR_16">
        <description>개인정보 조회</description>
        <query>
            <![CDATA[
            --개인정보 조회 직위/호봉/부양코드/소속/계좌번호 - PAYMASTER에서 가져옴
            SELECT B.ENO_NO
                 , B.ENO_NM
                 , A.OCC_CD
                 , ? AS PIS_YY
                 , ? AS PIS_MM
                 , ? AS SAL_GBN
                 , ? AS SEQ
                 , SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM   -- 부서명
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM  -- 직위/호봉
                 , A.ACC_NO                                     -- 계좌번호
                 , B.SOU_CNT                                    -- 배
                 , B.DFM_CNT                                    -- 부
                 , B.TRB_CNT                                    -- 장
                 , B.GOL_CNT                                    -- 경
                 , B.WCT_CNT                                    -- 부
                 , B.CHI_CNT                                    -- 자
                 , A.SALT_AMT                                   -- 총지급액
                 , A.SUM_DED                                   -- 공제계
                 , A.PAY_AMT                                    -- 실수령액
              FROM (SELECT AA.*
                      FROM ASNHR.T_CP_NPAYMASTER AA
                         , (SELECT *
                              FROM ASNHR.T_CP_WORKLOG
                               [1]
                            ) BB
                     WHERE AA.PIS_YY    = ?
                       AND AA.PIS_MM    = ?
                       AND AA.SAL_GBN   = ?
                       AND AA.SEQ       = ?
                       AND AA.PIS_YY    = BB.PIS_YY
                       AND AA.PIS_MM    = BB.PIS_MM
                       AND AA.SAL_GBN   = BB.SAL_GBN
                       AND AA.SEQ       = BB.SEQ
                    ) A
                 , VI_T_CM_PERSON2 B
             WHERE B.ENO_NO = A.ENO_NO(+)
               AND B.ENO_NO = ?
            ]]>
        </query>
    </sql>


    <!-- 누계조회 -->
    <sql name="PIRC020_SHR_05_PRINT">
        <description>누계인쇄</description>
        <query>
            <![CDATA[


				SELECT TO_CHAR(SUM(NVL(A.SALT_AMT,0))) as SALT_AMT,
	                   TO_CHAR(SUM(NVL(A.INCM_TAX,0))) as INCM_TAX,
	                   TO_CHAR(SUM(NVL(A.CITI_TAX,0))) as CITI_TAX,
	                   TO_CHAR(SUM(NVL(A.HINU_AMT,0))+SUM(NVL(A.OLD_AMT,0))) as HINU_AMT,
	                   TO_CHAR(SUM(NVL(A.NPEN_AMT,0))) as NPEN_AMT,
	                   TO_CHAR(SUM(NVL(A.HINS_AMT,0))) as HINS_AMT,
	                   TO_CHAR(SUM(NVL(A.SAV_AMT,0))) as SAV_AMT,
                   	   TO_CHAR(SUM(NVL(A.APP_AMT,0))) as APP_AMT,
                   	   TO_CHAR(SUM(NVL(A.INV_AMT,0))) as INV_AMT

               FROM ASNHR.T_CP_PAYMASTER A, ASNHR.T_CP_WORKLOG B

         	   WHERE  A.PIS_YY  = ?
               AND  A.PIS_MM <= ?
               AND  A.ENO_NO  = ?
               AND  A.PIS_YY  = B.PIS_YY
               AND  A.PIS_MM  = B.PIS_MM
               AND  A.SAL_GBN = B.SAL_GBN
               AND  A.SEQ     = B.SEQ
               AND  B.PAY_YMD <= NVL(
               					 (SELECT PAY_YMD
                                  FROM   ASNHR.T_CP_WORKLOG
                                  WHERE  PIS_YY  = ?
                                  AND    PIS_MM  = ?
                                  AND    SAL_GBN = ?
                                  AND    SEQ     = ?
                                  AND    SAL_GBN IN('0','1','4')),
                                  ?||?||to_number(to_char(last_day(to_date(?||?,'yyyymm')),'dd'))
                                  )--조회조건의 기준일이 없다면(상여가 없는날)해당달의 마지막일을 넣어서 급여가 조회되게 한다.
			  ]]>
        </query>
    </sql>


    <!-- 누계조회 -->
    <sql name="PIRC020_SHR_05_PRINT_16">
        <description>누계인쇄</description>
        <query>
            <![CDATA[


				SELECT TO_CHAR(SUM(NVL(A.SALT_AMT,0))) as SALT_AMT,
	                   TO_CHAR(SUM(NVL(A.INCM_TAX,0))) as INCM_TAX,
	                   TO_CHAR(SUM(NVL(A.CITI_TAX,0))) as CITI_TAX,
	                   TO_CHAR(SUM(NVL(A.HINU_DED,0))+SUM(NVL(A.OLD_DED,0))) as HINU_DED,
	                   TO_CHAR(SUM(NVL(A.NPEN_DED,0))) as NPEN_DED,
	                   TO_CHAR(SUM(NVL(A.HINS_DED,0))) as HINS_DED

               FROM ASNHR.T_CP_NPAYMASTER A, ASNHR.T_CP_WORKLOG B

         	   WHERE  A.PIS_YY  = ?
               AND  A.PIS_MM <= ?
               AND  A.ENO_NO  = ?
               AND  A.PIS_YY  = B.PIS_YY
               AND  A.PIS_MM  = B.PIS_MM
               AND  A.SAL_GBN = B.SAL_GBN
               AND  A.SEQ     = B.SEQ
               AND  B.PAY_YMD <= NVL(
               					 (SELECT PAY_YMD
                                  FROM   ASNHR.T_CP_WORKLOG
                                  WHERE  PIS_YY  = ?
                                  AND    PIS_MM  = ?
                                  AND    SAL_GBN = ?
                                  AND    SEQ     = ?
                                  AND    SAL_GBN IN('0','1','4')),
                                  ?||?||to_number(to_char(last_day(to_date(?||?,'yyyymm')),'dd'))
                                  )--조회조건의 기준일이 없다면 해당달의 마지막일을 넣어서 급여가 조회되게 한다.
			  ]]>
        </query>
    </sql>

    <!-- 저축/대출내역조회 (임시)-->
    <sql name="PIRC020_SHR_08">
        <description>저축/대출내역조회</description>
        <query>
            <![CDATA[
            SELECT SF_GET_COMMNAME('01','BK',BNK_CD) AS BNK_NM, --금융기관
                   SF_GET_COMMNAME('01','V1',SAV_CD) AS SAV_NM, --저축종류
                   --구분
                   DUE_YMD,                                     --만기일
                   CONM_AMT,                                    --당월불입액
                   SUMP_CNT,                                    --횟수
                   SUM_SAV                                      --누계액
                   --대출금잔액
            FROM   ASNHR.T_SV_SAVELIST
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pirc021
* @description : 기타내역
***********************************************************************
* 2007/05/29      한학현        최초작성.
***********************************************************************
-->
    <!-- 기타수당내역 -->
    <sql name="PIRC021_SHR_01">
        <description>기타수당내역</description>
        <query>
            <![CDATA[
        SELECT '기타지불액' AS SD_GBN, B.COMM_NM AS SD_NAM,
               A.REMARK AS SD_REMARK, SUM(A.AMOUNT) AS SD_AMT
          FROM ASNHR.T_CP_CHANGE A, ASNHR.T_CM_COMMON B
         WHERE A.PIS_YY = ?
           AND A.PIS_MM = ?
           AND A.SAL_GBN = ?
           AND A.ENO_NO  = ?
           AND A.AD_TAG = 'A'
           AND (NVL(A.TRS_TAG, ' ') = ' ' OR A.TRS_TAG = 'S' OR A.TRS_TAG = 'T')
           AND B.CD_GBN(+) = 'U4'
           AND A.SAL_CD NOT IN ('01','02','03','07','EA','HY')
           AND B.COMM_CD(+)   = A.SAL_CD
      GROUP BY B.COMM_NM, A.REMARK
        UNION ALL
        SELECT '기타수당' AS SD_GBN, B.COMM_NM AS SD_NAM,
               A.REMARK AS SD_REMARK, SUM(A.AMOUNT) AS SD_AMT
          FROM ASNHR.T_CP_CHANGE A, ASNHR.T_CM_COMMON B
         WHERE A.PIS_YY = ?
           AND A.PIS_MM = ?
           AND A.SAL_GBN = ?
           AND A.ENO_NO  = ?
           AND A.AD_TAG = 'A'
           AND (A.TRS_TAG = 'P' OR A.TRS_TAG = 'F')
           AND B.CD_GBN(+) = 'U4'
           AND A.SAL_CD NOT IN ('01','02','03','07','EA','HY')
           AND B.COMM_CD(+)   = A.SAL_CD
      GROUP BY B.COMM_NM, A.REMARK
      ORDER BY 1,3
            ]]>
        </query>
    </sql>

    <!-- 기타수당내역 -->
    <sql name="PIRC021_SHR_01_16">
        <description>기타수당내역</description>
        <query>
            <![CDATA[
        SELECT '기타지불액' AS SD_GBN, B.COMM_NM AS SD_NAM,
               A.REMARK AS SD_REMARK, SUM(A.AMOUNT) AS SD_AMT
          FROM ASNHR.T_CP_NCHANGE A, ASNHR.T_CM_COMMON B
         WHERE A.PIS_YY = ?
           AND A.PIS_MM = ?
           AND A.ENO_NO  = ?
           AND A.AD_TAG = 'A'
           AND B.CD_GBN(+) = 'U8'
           AND B.COMM_CD(+)   = A.SAL_CD
           AND A.SAL_CD NOT IN ('A8','A9')
      GROUP BY B.COMM_NM, A.REMARK
            ]]>
        </query>
    </sql>

    <!-- 기타공제내역 -->
    <sql name="PIRC021_SHR_02">
        <description>기타공제내역</description>
        <query>
            <![CDATA[
        SELECT B.COMM_NM, A.REMARK, SUM(A.AMOUNT) AS AMOUNT
          FROM ASNHR.T_CP_CHANGE A, ASNHR.T_CM_COMMON B
         WHERE A.PIS_YY = ?
           AND A.PIS_MM = ?
           AND A.SAL_GBN = ?
           AND A.BON_NUM = ?
           AND A.ENO_NO  = ?
           AND A.AD_TAG = 'D'
           AND B.CD_GBN(+) = 'U4'
           AND B.COMM_CD(+)= A.SAL_CD
           AND A.SAL_CD NOT IN ('A1','A2','A3','A4')
      GROUP BY B.COMM_NM, A.REMARK
            ]]>
        </query>
    </sql>

    <!-- 기타공제내역 -->
    <sql name="PIRC021_SHR_02_16">
        <description>기타공제내역</description>
        <query>
            <![CDATA[
        SELECT B.COMM_NM, A.REMARK, SUM(A.AMOUNT) AS AMOUNT
          FROM ASNHR.T_CP_NCHANGE A, ASNHR.T_CM_COMMON B
         WHERE A.PIS_YY = ?
           AND A.PIS_MM = ?
           AND A.ENO_NO  = ?
           AND A.AD_TAG = 'D'
           AND B.CD_GBN(+) = 'U8'
           AND B.COMM_CD(+)= A.SAL_CD
      GROUP BY B.COMM_NM, A.REMARK
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pirc030
* @description : 개인별근태집계현황
***********************************************************************
* 2007/02/21      오대성        최초작성.
***********************************************************************
-->
    <!-- 개인별 근태 집계 현황 조회 -->
    <sql name="PIRC030_SHR">
        <description>개인별근태집계현황</description>
        <query>
            <![CDATA[
            SELECT A.PIS_YY||'-'||A.PIS_MM AS PIS_YYMM,
            	  (A.ATT_H+A.ATT_Q+A.ATT_Z+(A.ATT_P*0.5)+(A.ATT_R*0.5)+(A.ATT_V*0.5)) AS YRP_CNT,
                   A.AT1_CD, A.AT2_CD, A.AT3_CD, A.AT4_CD, A.AT5_CD, A.AT6_CD,
                   A.AT7_CD, A.AT8_CD, A.AT9_CD, A.AT10_CD, A.AT11_CD, A.AT12_CD,
                   A.AT13_CD, A.AT14_CD, A.AT15_CD, A.AT16_CD, A.AT17_CD, A.AT18_CD,
                   A.AT19_CD, A.AT20_CD, A.AT21_CD, A.AT22_CD, A.AT23_CD, A.AT24_CD,
                   A.AT25_CD, A.AT26_CD, A.AT27_CD, A.AT28_CD, A.AT29_CD, A.AT30_CD,
                   A.AT31_CD, B.ATT_A, B.ATT_B, B.ATT_C, B.ATT_D, B.ATT_E, B.ATT_F,
                   B.ATT_G, B.ATT_T, B.ATT_I, B.ATT_J, B.ATT_K, B.ATT_L, B.ATT_H,
                   B.ATT_P, B.ATT_R, B.ATT_Y, B.ATT_W, B.ATT_U, B.ATT_Z, B.ATT_S,
                   B.ATT_Q, B.ATT_V,
                   C.OCC_CD, C.OCC_NM, C.DPT_NM, C.JOB_NM, TO_CHAR(C.HIRG_YMD,'YYYY-MM-DD') AS HIRG_YMD,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'01') AS HOL_YN1,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'02') AS HOL_YN2,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'03') AS HOL_YN3,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'04') AS HOL_YN4,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'05') AS HOL_YN5,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'06') AS HOL_YN6,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'07') AS HOL_YN7,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'08') AS HOL_YN8,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'09') AS HOL_YN9,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'10') AS HOL_YN10,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'11') AS HOL_YN11,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'12') AS HOL_YN12,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'13') AS HOL_YN13,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'14') AS HOL_YN14,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'15') AS HOL_YN15,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'16') AS HOL_YN16,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'17') AS HOL_YN17,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'18') AS HOL_YN18,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'19') AS HOL_YN19,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'20') AS HOL_YN20,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'21') AS HOL_YN21,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'22') AS HOL_YN22,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'23') AS HOL_YN23,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'24') AS HOL_YN24,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'25') AS HOL_YN25,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'26') AS HOL_YN26,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'27') AS HOL_YN27,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'28') AS HOL_YN28,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'29') AS HOL_YN29,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'30') AS HOL_YN30,
                   ( SELECT HOL_YN
                     FROM   ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'31') AS HOL_YN31
            FROM   ASNHR.T_DI_DILIGENCE A,
                   ( SELECT SUM(ATT_A) AS ATT_A,    -- 유결
                            SUM(ATT_B) AS ATT_B,    -- 무결
                            SUM(ATT_C) AS ATT_C,    -- 지각
                            SUM(ATT_D) AS ATT_D,    -- 조퇴
                            SUM(ATT_E) AS ATT_E,    -- 출장
                            SUM(ATT_F) AS ATT_F,    -- 교육
                            SUM(ATT_G) AS ATT_G,    -- 훈련
                            SUM(HOW_CNT) AS ATT_T,  -- 대체휴가
                            SUM(ATT_I) AS ATT_I,    -- 특별휴가
                            SUM(ATT_J) AS ATT_J,    -- 여직원휴가
                            SUM(ATT_K) AS ATT_K,    -- 휴직
                            SUM(ATT_L) AS ATT_L,    -- 기타
                            SUM(ATT_H) AS ATT_H,    -- 년차
                            SUM(ATT_P) AS ATT_P,    -- 오전연반차
                            SUM(ATT_R) AS ATT_R,    -- 오후연반차
                            SUM(HOL_CNT) AS ATT_Y,  -- 휴일
                            SUM(ATW_CNT) AS ATT_W,  -- 정상근무
                            SUM(ATT_U) AS ATT_U,    -- 대체반차
                            SUM(ATT_Z) AS ATT_Z,    -- Refresh휴가
                            SUM(ATT_S) AS ATT_S,    -- 유급휴가
                            SUM(ATT_Q) AS ATT_Q,    -- 기념휴가
                            SUM(ATT_V) AS ATT_V     -- 대체+연반차
                     FROM   ASNHR.T_DI_DILIGENCE
                     WHERE  PIS_YY = ?
                     AND    PIS_MM >= ?
                     AND    PIS_MM <= ?
                     AND    ENO_NO = ? ) B,
                   VI_T_CM_EMPLIST2 C
            WHERE  A.PIS_YY = ?
            AND    A.PIS_MM >= ?
            AND    A.PIS_MM <= ?
            AND    A.ENO_NO = ?
            AND    C.ENO_NO = A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 개인별 휴가 사용 현황 조회 -->
    <sql name="PIRC030_SHR_01">
        <description>개인별휴가사용현황</description>
        <query>
            <![CDATA[
            SELECT B.OCC_NM,
                   B.JOB_NM,
                   B.DPT_NM,
                   TO_CHAR(B.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                   (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT,
                   (A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+
                    A.ATT_H11+A.ATT_H12) AS YRP_ATT_H,
                   (A.YRP_CNT-A.AYRP_CNT-(A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+
                    A.ATT_H11+A.ATT_H12)) AS REM_YRP,
                   A.ATT_H1,A.ATT_H2, A.ATT_H3, A.ATT_H4, A.ATT_H5, A.ATT_H6, A.ATT_H7,A.ATT_H8, A.ATT_H9, A.ATT_H10,
                   A.ATT_H11, A.ATT_H12
            FROM   ( SELECT AA.ENO_NO, AA.YRP_CNT, AA.AYRP_CNT,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '01'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H1,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '02'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H2,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '03'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H3,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '04'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H4,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '05'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H5,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '06'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H6,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '07'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H7,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '08'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H8,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '09'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H9,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '10'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H10,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '11'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H11,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '12'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H12
                   FROM   ASNHR.T_DI_YEARLY AA
                   WHERE  AA.PIS_YY = ?
                   AND    AA.ENO_NO = ?) A,
                   VI_T_CM_PERSON2 B
            WHERE  A.ENO_NO = B.ENO_NO
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pirc040
* @description : 개인별휴가사용현황
***********************************************************************
* 2007/02/21      오대성        최초작성.
***********************************************************************
-->
    <!-- 개인별 휴가 사용 현황 조회 -->
    <sql name="PIRC040_SHR">
        <description>개인별휴가사용현황</description>
        <query>
            <![CDATA[
            SELECT B.OCC_NM,
                   B.JOB_NM,
                   B.DPT_NM,
                   TO_CHAR(B.HIRG_YMD,'YYYY-MM-DD') AS HIRG_YMD,
                   (A.YRP_CNT-A.AYRP_CNT) AS YRP_CNT,
                   (A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+
                    A.ATT_H11+A.ATT_H12) AS ATT_H,
                   (A.YRP_CNT-A.AYRP_CNT-(A.ATT_H1+A.ATT_H2+A.ATT_H3+A.ATT_H4+A.ATT_H5+A.ATT_H6+A.ATT_H7+A.ATT_H8+A.ATT_H9+A.ATT_H10+
                    A.ATT_H11+A.ATT_H12)) AS REM_YRP,
                   A.ATT_H1,A.ATT_H2, A.ATT_H3, A.ATT_H4, A.ATT_H5, A.ATT_H6, A.ATT_H7,A.ATT_H8, A.ATT_H9, A.ATT_H10,
                   A.ATT_H11, A.ATT_H12
            FROM   ( SELECT AA.ENO_NO, AA.YRP_CNT, AA.AYRP_CNT,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '01'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H1,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '02'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H2,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '03'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H3,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '04'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H4,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '05'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H5,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '06'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H6,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '07'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H7,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '08'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H8,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '09'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H9,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '10'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H10,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '11'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H11,
                            NVL(( SELECT ATT_H+ATT_Q+ATT_Z+(ATT_P*0.5)+(ATT_R*0.5)+(ATT_V*0.5)
                                  FROM   ASNHR.T_DI_DILIGENCE
                                  WHERE  PIS_YY = AA.PIS_YY
                                  AND    PIS_MM = '12'
                                  AND    ENO_NO = AA.ENO_NO ),0) AS ATT_H12
                   FROM   ASNHR.T_DI_YEARLY AA
                   WHERE  AA.PIS_YY = ?
                   AND    AA.ENO_NO = ?) A,
                   VI_T_CM_PERSON2 B
            WHERE  A.ENO_NO = B.ENO_NO
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pirc060
* @description : 수정요청
***********************************************************************
* 2007/02/20      오대성        최초작성.
***********************************************************************
-->
    <!-- 일련번호 및 개인정보 조회 -->
    <sql name="PIRC060_SHR_01">
        <description>일련번호</description>
        <query>
            <![CDATA[
            SELECT A.SEQ_NO, B.ENO_NO, B.ENO_NM, B.OCC_NM, B.JOB_NM, B.DPT_NM
            FROM   ( SELECT TO_CHAR(SYSDATE, 'YYYYMMDD')||
                            LPAD(DECODE(MAX(SEQ_NO), NULL, 1,
                            TO_NUMBER(MAX(SUBSTR(SEQ_NO, 9, 3)))+1), 3, '0') AS SEQ_NO
                     FROM   ASNHR.T_CM_UPRQST
                     WHERE  SEQ_NO LIKE TO_CHAR(SYSDATE, 'YYYYMMDD')||'%' ) A,
                   VI_T_CM_PERSON B
            WHERE  B.GUBUN = ?
            AND    B.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 개인정보 수정요청 조회 -->
    <sql name="PIRC060_SHR_02">
        <description>개인정보 수정요청 조회</description>
        <query>
            <![CDATA[
            SELECT A.SEQ_NO, A.WORK_GBN, A.UPDATE_TXT, A.STS_GBN, A.REPLY_TXT,
                   B.ENO_NO, B.ENO_NM, B.OCC_NM, B.JOB_NM, B.DPT_NM
            FROM   ASNHR.T_CM_UPRQST A, VI_T_CM_PERSON B
            WHERE  A.ENO_NO LIKE '%'||?||'%'
            AND    B.GUBUN = ?
            AND    B.ENO_NO = A.ENO_NO
            [1]
            [2]
            ORDER BY A.STS_GBN
                   , A.IPT_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 일련번호 및 개인정보 조회 -->
    <sql name="PIRC060_SHR_03">
        <description>일련번호</description>
        <query>
            <![CDATA[
            SELECT A.SEQ_NO, B.ENO_NO, B.ENO_NM, B.OCC_NM, B.JOB_NM, B.DPT_NM
            FROM   ( SELECT TO_CHAR(SYSDATE, 'YYYYMMDD')||
                            LPAD(DECODE(MAX(SEQ_NO), NULL, 1,
                            TO_NUMBER(MAX(SUBSTR(SEQ_NO, 9, 3)))+1), 3, '0') AS SEQ_NO
                     FROM   ASNHR.T_CM_UPRQST
                     WHERE  SEQ_NO LIKE TO_CHAR(SYSDATE, 'YYYYMMDD')||'%' ) A,
                   VI_T_CM_PERSON B
            WHERE  B.GUBUN = ?
            AND    B.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 개인정보 수정요청 저장 -->
    <sql name="PIRC060_INS">
        <description>개인정보 수정요청 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_UPRQST
            ( SEQ_NO, ENO_NO, UPDATE_TXT, WORK_GBN, STS_GBN, REPLY_TXT,
              IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
            ( ?     , ?     , ?         , ?       , ?      , ?        ,
              ?      , SYSDATE, ?      , SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 개인정보 수정요청 수정 -->
    <sql name="PIRC060_UPT">
        <description>개인정보 수정요청 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_UPRQST
            SET    UPDATE_TXT = ?,
                   WORK_GBN = ?,
                   STS_GBN = ?,
                   REPLY_TXT = ?,
                   UPT_MAN = ?,
                   UPT_YMD = SYSDATE
            WHERE  SEQ_NO = ?
            AND    ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 개인정보 수정요청 삭제 -->
    <sql name="PIRC060_DEL">
        <description>개인정보 수정요청 삭제</description>
        <query>
            <![CDATA[
		DELETE FROM ASNHR.T_CM_UPRQST
            WHERE  SEQ_NO = ?
            AND    ENO_NO = ?

            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pirc070
* @description : 개인소득세율신청
***********************************************************************
* 2015/07/07      정영식        최초작성.
***********************************************************************
 -->

  <!-- 개인정보 가져온다. -->
    <sql name="PIRC070_SHR_01">
        <description>개인정보 가져온다.</description>
        <query>
            <![CDATA[
            SELECT ENO_NO, ENO_NM, LUN_CHK
            FROM ASNHR.T_CM_PERSON
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>


  <!-- 패스워드 초기화 -->
    <sql name="PIRC070_UPT">
        <description>개인소득세율업데이터</description>
        <query>
            <![CDATA[
          UPDATE ASNHR.T_CM_PERSON
          SET LUN_CHK = ?
          WHERE ENO_NO =  ?
            ]]>
        </query>
    </sql>




<!--
***********************************************************************
* @UseCase     : pirc080
* @description : 연봉계약서
***********************************************************************
* 2015/12/22      정영식        최초작성.
***********************************************************************
 -->
<!-- 연봉계약서 조회 -->
    <sql name="PIRC080_SHR">
        <description>연봉계약서</description>
        <query>
            <![CDATA[
            SELECT A.PIS_YY,A.ENO_NO, B.ENO_NM, A.DPT_CD, C.DPT_NM, --SF_GET_DPTNAME( '01', 'A4', A.DPT_CD) AS DPT_NM,
			       A.JOB_CD,  SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,
			       TO_CHAR(A.FROM_YMD,'YYYY-MM-DD')FROM_YMD,TO_CHAR(A.TO_YMD,'YYYY-MM-DD')TO_YMD,
			       A.MONTH, A.P01_AMT,A.P02_AMT,A.P03_AMT,A.P04_AMT,A.P05_AMT,A.P06_AMT,A.SUM_AMT,
			       A.P01_AMT*TO_NUMBER(A.MONTH) AS Y01_AMT,
		           A.P02_AMT*TO_NUMBER(A.MONTH) AS Y02_AMT,
		           A.P03_AMT*TO_NUMBER(A.MONTH) AS Y03_AMT,
		           A.P04_AMT*TO_NUMBER(A.MONTH) AS Y04_AMT,
		           A.P05_AMT*TO_NUMBER(A.MONTH) AS Y05_AMT,
		           A.SUM_AMT*TO_NUMBER(A.MONTH) AS YSUM_AMT,
			       A.PAY_DAY,
			       TO_CHAR(CASE WHEN A.CON_YMD IS NULL THEN SYSDATE ELSE A.CON_YMD END,'YYYYMMDD')CON_YMD,
			       A.CADDR,A.CADDR_CT,A.WORK_TEL,A.SIGN_NM,A.SIGN_YMD,
			       A.IPT_MAN,A.IPT_YMD,A.UPT_MAN,A.UPT_YMD,
			       TO_CHAR(A.FROM_YMD,'YYYYMMDD')FROM_YMD_1,TO_CHAR(A.TO_YMD,'YYYYMMDD')TO_YMD_1
			  FROM ASNHR.T_CM_CONTRACT A ,  ASNHR.T_CM_PERSON B , ASNHR.T_CM_DEPT C
			 WHERE A.PIS_YY = ?
			   AND A.ENO_NO = ?
			   AND A.ENO_NO (+)= B.ENO_NO
			   AND A.DPT_CD = C.DPT_CD

            ]]>
        </query>
    </sql>


     <!-- 패스워드 초기화 -->
    <sql name="PIRC080_UPT">
        <description>연봉계약서 서명 서명일자</description>
        <query>
            <![CDATA[
          UPDATE ASNHR.T_CM_CONTRACT
          SET CON_YMD = ?
             ,SIGN_NM = ?
             ,SIGN_YMD = SYSDATE
             ,UPT_MAN = ?
             ,UPT_YMD = SYSDATE
          WHERE PIS_YY = ?
            AND ENO_NO =  ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pirc090
* @description : 패스워드초기화
***********************************************************************
* 2008/01/22      김경주        최초작성.
***********************************************************************
 -->


    <!-- 개인정보 가져온다. -->
    <sql name="PIRC090_SHR_01">
        <description>개인정보 가져온다.</description>
        <query>
            <![CDATA[
            SELECT SF_GET_COMMNAME('01', 'A1', OCC_CD)                                   AS OCC_NM,
                   SF_GET_DPTNAME( '01', 'A4', DPT_CD)                                   AS DPT_NM,
                   SF_GET_COMMNAME('01', 'A2', JOB_CD)                                   AS JOB_NM,
                   CET_NO
            FROM ASNHR.T_CM_EMPLIST
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>


  <!-- 패스워드 초기화 -->
    <sql name="PIRC090_UPT">
        <description>패스워드업데이트</description>
        <query>
            <![CDATA[
          UPDATE ASNHR.T_CM_EMPLIST
          SET PWD_NO = SUBSTR(CET_NO, 8, 7),
              PWD_HLC_CNT = 0
          WHERE ENO_NO =  ?
            ]]>
        </query>
    </sql>


   <!--문자메시지 테이블 정보를 넣어준다
    <sql name="PIRC090_INS">
        <description>문자메시지 테이블 정보</description>
        <query>
            <![CDATA[
          INSERT INTO TSMSMSTR
                 (CUST_CD
                 ,PRCS_FLAG
                 ,PRCS_YMD
                 ,PRCS_TME
                 ,PRCS_SEQ
                 ,INV_NO
                 ,PRCS_BRNSHP
                 ,PRCS_EMP
                 ,PRCS_PHONE
                 ,TRAN_PR
                 ,TRAN_REFKEY
                 ,TRAN_ID
                 ,TRAN_PHONE
                 ,TRAN_CALLBACK
                 ,TRAN_STATUS
                 ,TRAN_DATE
                 ,TRAN_RSLTDATE
                 ,TRAN_REPORTDATE
                 ,TRAN_RSLT
                 ,TRAN_MSG
                 ,TRAN_ETC1
                 ,TRAN_ETC2
                 ,TRAN_ETC3
                 ,TRAN_ETC4
                 ,TRAN_TYPE
                 ,ETC1
                 ,ETC2
                 ,ETC3
                 ,FLG1
                 ,FLG2
                 ,FLG3
                 )
           VALUES (''
                 ,''
                 ,TO_CHAR(SYSDATE,'YYYYMMDD')
                 ,'000000'
                 ,'001'
                 ,''
                 ,''
                 , ?
                 ,'0221703355'
                 ,'001'
                 ,''
                 ,'90000160'
                 ,(SELECT REPLACE(EM_PHN_NO,'-','') FROM ASNHR.T_CM_EMPLIST WHERE ENO_NO = ?)
                 ,'0221703355'
                 ,'1'
                 ,SYSDATE
                 ,''
                 ,''
                 ,''
                 ,?
                 ,''
                 ,''
                 ,''
                 ,''
                 ,'1'
                 ,'SKT'
                 ,''
                 ,''
                 ,''
                 ,''
                 ,'HRMS'
                 )
               ]]>
        </query>
    </sql> -->


<!-- 인사정보출력 -->
<!--
***********************************************************************
* @UseCase     : pird010
* @description : 인사기록카드
***********************************************************************
* 2007/01/08      박인이        최초작성.
***********************************************************************
-->
    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR">
        <description>인사기록카드 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD,                                                               -- 직종코드
                   OCC_NM,                                                               -- 직종
                   DPT_CD,                                                               -- 소속코드
                   DPT_NM,                                                               -- 소속
                   JOB_CD,                                                               -- 직위코드
                   JOB_NM,                                                               -- 직위
                   HOB_CD,                                                               -- 호봉코드
                   HOB_NM,                                                               -- 호봉
                   ENO_NO,                                                               -- 사번
                   ENO_NM,                                                               -- 성명
                   PRT_KIND,                                                             -- 출력종류
                   PRT_SELT,                                                             -- 출력선택
                   PRT_YN1,                                                              -- 고과이력
                   PRT_YN2,                                                              -- 공조부조
                   PRT_YN3,                                                              -- 지인현황
                   PRT_YN4,                                                              -- 행사참여도
                   PRT_YN5                                                               -- 미참여교육
            FROM ( SELECT OCC_CD,
                          SF_GET_COMMNAME('01', 'A1', OCC_CD)                                   AS OCC_NM,
                          SF_GET_COMMSEQ('01', 'A1', OCC_CD)                                    AS OCC_SEQ,
                          DPT_CD,
                          SF_GET_DPTNAME('01', 'A4', DPT_CD)                                    AS DPT_NM,
                          SF_GET_DPTSEQ('01', 'A4', DPT_CD)                                     AS DPT_SEQ,
                          JOB_CD,
                          SF_GET_COMMNAME('01', 'A2', JOB_CD)                                   AS JOB_NM,
                          SF_GET_COMMSEQ('01', 'A2', JOB_CD)                                    AS JOB_SEQ,
                          HOB_CD,
                          SF_GET_COMMNAME('01', 'A3', HOB_CD)                                   AS HOB_NM,
                          SF_GET_COMMSEQ('01', 'A3', HOB_CD)                                    AS HOB_SEQ,
                          ENO_NO,
                          ENO_NM,
                          DECODE(?,'1',' 기록카드','2',' 기록카드[1장]', '3',' 종합물류업')     AS PRT_KIND,
                          DECODE(?,'1',' 개인별','2',' 소속별','3',' 직위별')                   AS PRT_SELT,
                          ?                                                                     AS PRT_YN1,
                          ?                                                                     AS PRT_YN2,
                          ?                                                                     AS PRT_YN3,
                          ?                                                                     AS PRT_YN4,
                          ?                                                                     AS PRT_YN5
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  GUBUN  = ?
                   AND    OCC_CD LIKE ? || '%'
                   AND  ( RET_YMD IS NULL
                   OR     RET_YMD >= sysdate
                        )
                   [1]
                 )
            ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, ENO_NO
            ]]>
        </query>
    </sql>


<!-- 인사정보출력 -->
<!--
***********************************************************************
* @UseCase     : pird010_PR
* @description : 인사기록카드 출력
***********************************************************************
* 2007/05/10     이승욱        최초작성.
***********************************************************************
-->
    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR01">
        <description>인사기본정보 조회</description>
        <query>
            <![CDATA[
            SELECT P.ENO_NO
                 , SF_GET_COMMNAME('01','C1',P.HIR_CD)           as HIR_NM
                 , SF_GET_COMMNAME('01', 'A1', OCC_CD)   AS   OK_MAN  -- 추천인 근로구분 대체
                 , TO_CHAR(P.HIR_YMD,'YYYY/MM/DD')               as HIR_YMD
                 , TO_CHAR(P.HIRG_YMD,'YYYY/MM/DD')              as HIRG_YMD
            	 , SF_GET_DPTNAME('01','B2',P.HEAD_CD)           as HEAD_NM
            	 , SF_GET_DPTNAME('01', 'A4',P.DPT_CD)           as DPT_NM
                 , SF_GET_COMMNAME('01','A2',P.JOB_CD)           as JOB_NM
                 , SF_GET_COMMNAME(GUBUN, 'A3', HOB_CD)           as GROUP_NM -- 호봉 대체
                 , TO_CHAR(P.JPR_YMD,'YYYY/MM/DD')               as JPR_YMD
                 , SF_GET_DPTNAME('01','A6',P.TEAM_CD)             as REG_NM  -- 근무지  팀명 대체
                 , P.ENO_NM
                 , TO_CHAR(P.BIR_YMD,'YYYY/MM/DD')               as BIR_YMD
                 , CASE WHEN P.BIR_TAG = 'S' THEN '　 ○'
                        WHEN P.BIR_TAG = 'M' THEN '○ 　'
                   END                                           as BIR_TAG
                 , '(만'||(CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1)||'세)'   AGE     -- 나이
                 , P.NAM_CHI
                 , SUBSTR(P.CET_NO,1,7) || '*******' AS CET_NO
                 , P.NAM_ENG
                 , CASE WHEN P.MF_TAG  =  'M'      THEN '남자'
                        WHEN P.MF_TAG IN ('W','F') THEN '여자'
                   END                                           as MF_TAG
            	     , P.E_MAIL
                 , P.PER_ADR
                 , P.HF_NAM
                 , SF_GET_COMMNAME('01', 'G1', P.HFRE_CD)        as HFRE_NM
                 , SUBSTR(P.ZIP_NO,1,3)||'-'||SUBSTR(P.ZIP_NO,4) as RZI_NO
                 , P.PHN_NO
           	     , SUBSTR(P.EM_PHN_NO,1,9) || '****'             as EM_PHN_NO
          	     , P.ADR_CT||' '||P.ADDRESS                      as RADDR
           	---- 병역사항
           	     , SF_GET_COMMNAME('01', 'F1',A.GUB_CD)          as GUB_NM -- 구분
                 ,  SUBSTR(ENL_YMD, 1, 4) || '/' || SUBSTR(ENL_YMD, 5, 2) || '/' || SUBSTR(ENL_YMD, 7) AS ENL_YMD  -- 시작일자
                 ,  SUBSTR(MIL_YMD, 1, 4) || '/' || SUBSTR(MIL_YMD, 5, 2) || '/' || SUBSTR(MIL_YMD, 7) AS MIL_YMD  -- 종료일자
           	 --    , TO_CHAR(TO_DATE(A.ENL_YMD,'YYYYMMDD'),'YYYY/MM/DD')               as ENL_YMD -- 복무기간S
           	 --    , TO_CHAR(TO_DATE(A.MIL_YMD,'YYYYMMDD'),'YYYY/MM/DD')               as MIL_YMD -- 복무기간E
           	     , A.MIL_NO                                        -- 군번
           	     , SF_GET_COMMNAME('01', 'F4',A.MIL_CD)          as MIL_NM -- 군별
           	     , SF_GET_COMMNAME('01', 'F6',A.GRADE)           as GRADE  -- 계급
                 , SF_GET_COMMNAME('01', 'F7',A.MBK_CD)          as MBK_NM -- 병과
            -- 취미/특기등
                 , P.HOBBY
                 , P.SPEC_CD         as SPEC_NM -- 특기
                 , SF_GET_COMMNAME('01', 'D2',P.REL_CD)          as REL_NM  -- 종교
                 , SF_GET_COMMNAME('01', 'H6',C.CLUB_CD1)         as CLU_NM1 -- 동호회1
                 , SF_GET_COMMNAME('01', 'H6',C.CLUB_CD2)         as CLU_NM2 -- 동호회2
                 , SF_GET_COMMNAME('01', 'H6',C.CLUB_CD3)         as CLU_NM3 -- 동호회3
            -- 퇴직사항
                 , TO_CHAR(P.RET_YMD,'YYYY/MM/DD')               as RET_YMD -- 퇴직 일자
                 , (SELECT SF_GET_COMMNAME('01','J2',APP_CD)
                      FROM ASNHR.T_CM_AHISTORY
                     WHERE ENO_NO  = P.ENO_NO
                       AND STR_YMD = P.RET_YMD
                       AND APP_CD IN ('LP1','LP2','LP3','LP4')
                    )                                            as RET_GUB -- 퇴직구분
                 , P.RTR_AMT                                     as RTR_AMT -- 퇴직금

				 , FLOOR(MONTHS_BETWEEN(SYSDATE,P.HIR_YMD)/12) as LSE_YY
				 , FLOOR(MOD(MONTHS_BETWEEN(SYSDATE,P.HIR_YMD), 12)) as LSE_MM

                 --, P.LSE_YY                                      as LSE_YY  -- 근속 년
                 --, CASE WHEN NVL(P.LSE_YY,'0') < '1' AND P.LSE_MM = '0'THEN NULL ELSE P.LSE_MM END  as LSE_MM  -- 근속 월

                 , SF_GET_COMMNAME('01','C2',P.RET_CD)           as RET_NM  -- 퇴직 사유
                 , P.COC_NAM                                     as COC_NAM -- 전직처
            	 , SF_GET_DPTSEQ('01','B2',P.HEAD_CD)           as HEAD_SEQ
            	 , SF_GET_DPTSEQ('01','A4',P.DPT_CD)            as DEPT_SEQ
                 , SF_GET_COMMSEQ('01','A2',P.JOB_CD)            as JOB_SEQ
                 , TO_CHAR(SYSDATE,'YYYY/MM/DD')                 as PRT_YMD
              FROM ASNHR.T_CM_PERSON   P
                 , ASNHR.T_CM_ARMY     A
                 , (SELECT ENO_NO
                         , MAX(CASE WHEN Q_LANK = 1 THEN CLUB_CD END) as CLUB_CD1
                         , MAX(CASE WHEN Q_LANK = 2 THEN CLUB_CD END) as CLUB_CD2
                         , MAX(CASE WHEN Q_LANK = 3 THEN CLUB_CD END) as CLUB_CD3
                      FROM (SELECT ENO_NO
                                 , CLUB_CD
                                 , STR_YMD
                                 , RANK() OVER (PARTITION BY ENO_NO ORDER BY STR_YMD, CLUB_CD DESC) as Q_LANK
                              FROM ASNHR.T_WL_CLUBLIST
                             WHERE END_YMD is NULL
                               AND ENO_NO IN (SELECT ENO_NO
                                                FROM ASNHR.T_CM_PERSON
                                               WHERE OCC_CD   LIKE '%' || [1] || '%'
                                                 [2]
                                              )
                            )
                     GROUP BY ENO_NO
                   )            C
             WHERE P.ENO_NO    = A.ENO_NO(+)
               AND P.ENO_NO    = C.ENO_NO(+)
               AND P.OCC_CD   LIKE '%' || [3] || '%'
               [4]
             ORDER BY HEAD_SEQ, DEPT_SEQ, JOB_SEQ, ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR02">
        <description>건강검진 조회</description>
        <query>
            <![CDATA[
            SELECT B.ENO_NO
                 , TO_CHAR(TO_DATE(RPAD(B.PRO_YMD,8,'01'),'YYYYMMDD'),'YYYY/MM')    as PRO_YM    -- 건강검진년월
                 , '좌:'||TRIM(TO_CHAR(B.EYE_LEF,'0.9'))||
                  ' 우:'||TRIM(TO_CHAR(B.EYE_RHT,'0.9'))                 as EYE_SIGHT -- 시력
                 , B.HEIGHT                                              -- 신장
                 , B.WEIGHT                                              -- 체중
                 , SF_GET_COMMNAME('01','D4',B.CBLD_CD)     as CBLD_NM   -- 색맹
                 , B.BLD_TYP                                             -- 혈액형
                 , TO_CHAR(TO_DATE(RPAD(B.PRO_YMD,8,'01'),'YYYYMMDD'),'YYYY/MM/DD') as PRO_YMD   -- 일자
                 , B.EXM_HSP                                             -- 검진기관
                 , B.DECISION                                            -- 판정
                 , B.BLD_PRE                                             -- 혈압
                 , B.BLD_DAN                                             -- 혈당
                 , B.PH                                                  -- PH
                 , B.SPEC                                                -- 특이사항
                 , RANK() OVER (PARTITION BY B.ENO_NO ORDER BY B.PRO_YMD DESC) as Q_RANK
              FROM ASNHR.T_CM_BODY B
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1] || '%'
                       [2]
                    )        P
             WHERE B.ENO_NO = P.ENO_NO
             ORDER BY ENO_NO, PRO_YM DESC
            ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR03">
        <description>급여변경 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO                                  as ENO_NO
                 , TO_CHAR(TO_DATE(STR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')  as CHN_YMD
                 , SF_GET_COMMNAME('01','A2',A.JOB_CD)       as JOB_NM   	-- 직위
                 , NVL(A.BAS_AMT,0)                          as BAS_AMT  	-- 기본급, 본봉
                 , NVL(A.LAW_AMT,0)                          as OT_AMT   	-- 법정수당
                 , NVL(A.BNS_AMT,0)						     as DUT_WEL_AMT -- 상여금
                 , NVL(A.ETC_AMT,0) 					     as ETC_AMT 	-- 교통비
                 , NVL(DUTY_AMT,0)        					as ETCS_AMT 	-- 직무수당
                 , NVL(A.BAS_AMT,0) + NVL(A.DUTY_AMT, 0) + NVL(A.BNS_AMT,0) +NVL(A.LAW_AMT,0) +NVL(A.ETC_AMT,0) as TOT_AMT -- 급여계
                 , RANK() OVER (PARTITION BY A.ENO_NO ORDER BY A.STR_YMD DESC) as Q_RANK
              FROM ASNHR.T_CP_PAYTABLE  A
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1] || '%'
                       [2]
                    )        P
             WHERE A.ENO_NO = P.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR04">
        <description>학력사항 조회</description>
        <query>
            <![CDATA[
            SELECT '학력'                                    as GRP_GBN
                 , S.ENO_NO                                  as ENO_NO   -- 사원번호
                 , CASE WHEN S.GRD_CD IN ('G','H','I')
                        THEN
                        	CASE WHEN S.GURS_YMD IS NULL
                        	THEN ' '
                        	ELSE SUBSTR(S.GURS_YMD,1,4)
                        	END
                        ELSE
                        	CASE WHEN S.GURE_YMD IS NULL
                        	THEN ' '
                        	ELSE SUBSTR(S.GURE_YMD,1,4)
                        	END

                   END                                       as GURE_YMD -- 날짜
                 , CASE WHEN S.SCH_NAM IS NOT NULL THEN  SCH_NAM
                        WHEN EDGR_CD = '2' THEN SF_GET_COMMNAME('01', 'E8', SCH_CD)
                        WHEN EDGR_CD = '3' THEN SF_GET_COMMNAME('01', 'E2', SCH_CD)
                        WHEN EDGR_CD = '4' THEN SF_GET_COMMNAME('01', 'E3', SCH_CD)
                        WHEN EDGR_CD = '5' THEN SF_GET_COMMNAME('01', 'E4', SCH_CD)
                        WHEN EDGR_CD = '6' THEN SF_GET_COMMNAME('01', 'E5', SCH_CD)
                        WHEN EDGR_CD = '7' THEN SF_GET_COMMNAME('01', 'E5', SCH_CD)
                        WHEN EDGR_CD = '8' THEN SF_GET_COMMNAME('01', 'E5', SCH_CD)
                        ELSE ''
                   END                                       as SCH_NAM
                 , SF_GET_COMMNAME('01','E1',S.EDGR_CD)      as EDGR_NM  -- 학력구분
                 , Replace(SF_GET_COMMNAME('01','E7',S.GRD_CD),'(',CHR(13)||CHR(10)||'(')       as GRD_NM   -- 졸업구분
                 , SF_GET_COMMNAME('01','E6',S.MAJ_CD)       as MAJ_NM   -- 전공
                 , RANK() OVER (PARTITION BY S.ENO_NO ORDER BY CASE WHEN S.GRD_CD = 'G' THEN S.GURS_YMD ELSE S.GURE_YMD END) as Q_RANK
              FROM ASNHR.T_CM_SCHOOL S
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1] || '%'
                       [2]
                    )        P
             WHERE S.ENO_NO = P.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR05">
        <description>가족관계 조회</description>
        <query>
            <![CDATA[
            SELECT '가족'                                   as GRP_GBN
                 , F.ENO_NO                                 as ENO_NO  -- 사원번호
                 , Replace(SF_GET_COMMNAME('01','G1',F.REL_CD),'(',CHR(13)||CHR(10)||'(')      as REL_NM  -- 관계
                 , F.ENO_NM                                 as ENO_NM  -- 성명
                 , CASE WHEN F.BIR_YMD is NOT NULL
                        THEN SUBSTR(F.BIR_YMD,1,2)||'/'||SUBSTR(F.BIR_YMD,3,2)||'/'||SUBSTR(F.BIR_YMD,5,2)
                   END                                      as BIR_YMD -- 생년월일
                 , SF_GET_COMMNAME('01','E1',F.EDGR_CD)     as EDGR_NM -- 학력
                 , F.OCC_NAM                                as OCC_NAM -- 직업/근무처
                 , SF_GET_COMMNAME('01','A2',F.JOB_CD)      as JOB_NM  -- 직위
                 , F.HIU_TAG                                as HIU_TAG -- 의보여부
                 , F.DPD_TAG                                as DPD_TAG -- 부양여부
                 , RANK() OVER (PARTITION BY F.ENO_NO ORDER BY DECODE(SF_GET_COMMSEQ('01', 'G1', REL_CD),'0','999',SF_GET_COMMSEQ('01', 'G1', REL_CD))) as Q_RANK
              FROM ASNHR.T_CM_FAMILY F
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1] || '%'
                       [2]
                    )        P
             WHERE F.ENO_NO  = P.ENO_NO
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR06">
        <description>자격면허 조회</description>
        <query>
            <![CDATA[
            SELECT '자격면허'                               as GRP_GBN  -- 구분
                 , Q.ENO_NO                                 as ENO_NO  -- 사원번호
                 , DECODE(length(Q.GAN_YMD),1,'',TO_CHAR(TO_DATE(Q.GAN_YMD,'YYYYMMDD'),'YYYY/MM/DD')) as A -- 취득일
                 , SF_GET_COMMNAME('01','H1',Q.QUA_CD)      as B -- 자격,면허
                 , Q.APP_ADM                                as C -- 발행처
                 , Q.QUA_NO                                 as D -- 증서번호
                 , RANK() OVER (PARTITION BY Q.ENO_NO ORDER BY Q.GAN_YMD DESC) as Q_RANK
              FROM ASNHR.T_CM_QUALIFICATION Q
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1] || '%'
                       [2]
                    )         P
             WHERE Q.ENO_NO = P.ENO_NO
             ORDER BY ENO_NO, A DESC
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR07">
        <description>입사전경력 조회</description>
        <query>
            <![CDATA[
            SELECT '입사전경력'                             as GRP_GBN  -- 구분
                 , Q.ENO_NO                                 as ENO_NO  -- 사원번호
                 , SUBSTR(STR_YMD, 1, 4) || '/' || SUBSTR(STR_YMD, 5, 2) || '/' || SUBSTR(STR_YMD, 7) || ' ~ '  ||
                   SUBSTR(END_YMD, 1, 4) || '/' || SUBSTR(END_YMD, 5, 2) || '/' || SUBSTR(END_YMD, 7)  as A -- 근무기간   -- 시작일자종료일자
              --   , TO_CHAR(TO_DATE(Q.STR_YMD,'YYYYMMDD'),'YYYY/MM/DD')||' ~ '
              --   ||TO_CHAR(TO_DATE(Q.END_YMD,'YYYYMMDD'),'YYYY/MM/DD') as A -- 근무기간
                 , Q.CMP_NAM                                as B -- 직장명
                 , SF_GET_COMMNAME('01','A2',Q.JOB_CD)      as C -- 직위
                 , Q.CHG_JOB                                as D -- 담당업무
                 , RANK() OVER (PARTITION BY Q.ENO_NO ORDER BY Q.END_YMD DESC) as Q_RANK
              FROM ASNHR.T_CM_BHISTORY Q
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1] || '%'
                       [2]
                    )         P
             WHERE Q.ENO_NO = P.ENO_NO
             ORDER BY ENO_NO, A DESC
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR08">
        <description>근태 조회</description>
        <query>
            <![CDATA[
            SELECT '근태'                           as GRP_GBN  -- 구분
                 , D.ENO_NO                         as ENO_NO
                 , D.PIS_YY                         as A -- 년도
                 , SUM(D.ATT_B)                     as B -- 합계(무결)
                 , SUM(D.ATT_A)                     as C -- 합계(유결)
                 , SUM(D.ATT_C)                     as D -- 합계(지각)
                 , SUM(D.ATT_D)                     as E -- 합계(조퇴)
                 , SUM(D.ATT_K)                     as F -- 합계(휴직)
              FROM ASNHR.T_DI_DILIGENCE D
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1] || '%'
                       [2]
                    )         P
             WHERE D.ENO_NO = P.ENO_NO
               AND D.PIS_YY BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYY') AND TO_CHAR(SYSDATE,'YYYY')
             GROUP BY D.ENO_NO, D.PIS_YY
             ORDER BY ENO_NO, A DESC
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR09">
        <description>어학성적 조회</description>
        <query>
            <![CDATA[
            SELECT '어학'                              as GRP_GBN -- 구분
                 , E.ENO_NO                                       -- 사번
                 , TO_CHAR(TO_DATE(E.PRO_YMD,'YYYYMMDD'), 'YYYY') as A       -- 시행연도
                 , SF_GET_COMMNAME('01', 'M1', SBJ_CD) as B       -- 시험과목
                 , CASE WHEN E.GRADE is NOT NULL
                        THEN E.GRADE||'급'
                        ELSE TO_CHAR(E.TTL_AVR)
                   END                                 as C
                 , RANK() OVER (PARTITION BY E.ENO_NO ORDER BY E.PRO_YMD DESC) as Q_RANK
              FROM ASNHR.T_CM_EXAMINATION E
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE E.ENO_NO = P.ENO_NO
             ORDER BY ENO_NO, A DESC
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR10">
        <description>입사후경력 조회</description>
        <query>
            <![CDATA[
            SELECT '입사후경력'                              as GRP_GBN -- 구분
                 , H.ENO_NO                                  as ENO_NO
                 , TO_CHAR(TO_DATE(H.STR_YMD,'YYYYMMDD'),'YYYY/MM/DD')  as A -- 발령일자
                 , H.SEQ_NO
                 , SF_GET_COMMNAME('01','J2',H.APP_CD)       as B -- 발령구분
                 , SF_GET_COMMNAME('01','A2',H.JOB_CD)       as C -- 직위
          --       , SF_GET_DPTNAME('01' ,'A4',H.DPT_CD)       as D -- 소속
                 , DECODE(SF_GET_DPTNAME('01', 'A4', H.DPT_CD), H.DPT_CD, DECODE(SF_GET_DPTNAME('01', 'A6', H.DPT_CD), H.DPT_CD, SF_GET_DPTNAME('01', 'B2', H.DPT_CD),SF_GET_DPTNAME('01', 'A6', H.DPT_CD)) , SF_GET_DPTNAME('01', 'A4', H.DPT_CD))    AS D     -- 소속명
                 , H.REMARK                                  as E -- 담당업무





                 , DECODE(SF_GET_DPTNAME('01', 'A6', H.TEAM_CD), H.TEAM_CD, DECODE(SF_GET_DPTNAME('01', 'B2', H.TEAM_CD), H.TEAM_CD, '',SF_GET_DPTNAME('01', 'B2', H.TEAM_CD)) , DECODE(SF_GET_DPTNAME('01', 'A6', H.TEAM_CD), H.TEAM_CD, '',SF_GET_DPTNAME('01', 'A6', H.TEAM_CD)))    AS F     -- 소속명

         --        , SF_GET_DPTNAME('01' ,'A6',H.TEAM_CD)      as F -- 팀
                 , RANK() OVER (PARTITION BY H.ENO_NO ORDER BY H.STR_YMD DESC, H.SEQ_NO DESC) as Q_RANK
              FROM ASNHR.T_CM_AHISTORY H
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE H.ENO_NO = P.ENO_NO
                   AND H.APP_CD <> 'LK1'   -- 급여조정 항목은 필요하지 않습니다.

             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR11">
        <description>교육참여 조회</description>
        <query>
            <![CDATA[
            SELECT '교육참여'                                as GRP_GBN -- 구분
                 , E.ENO_NO                                  as ENO_NO
                 , TO_CHAR(TO_DATE(E.STR_YMD,'YYYYMMDD'),'YYYY/MM/DD')||'-'
                 ||TO_CHAR(TO_DATE(E.END_YMD,'YYYYMMDD'),'YYYY/MM/DD')  as A -- 기간
                 , EDU_NM       as B -- 과정명
                 , E.INT_NAM                                 as C -- 시행처
                 , RANK() OVER (PARTITION BY E.ENO_NO ORDER BY E.STR_YMD DESC) as Q_RANK
              FROM ASNHR.T_CM_EDUCATION E
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE E.ENO_NO = P.ENO_NO
             AND E.EDU_TAG = 'Y'
             ORDER BY ENO_NO, A DESC
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR12">
        <description>해외출장 조회</description>
        <query>
            <![CDATA[
            SELECT '해외출장'                                as GRP_GBN -- 구분
                 , O.ENO_NO                                 as ENO_NO
                 , TO_CHAR(TO_DATE(O.STR_YMD,'YYYYMMDD'),'YYYY/MM/DD')||'-'
                 ||TO_CHAR(TO_DATE(O.END_YMD,'YYYYMMDD'),'YYYY/MM/DD')  as A -- 기간
                 , O.NAT_NAM                                 as B -- 출장지
                 , O.JOB_OBJ                                 as C -- 출장목적
                 , TO_CHAR(O.COST_AMT,'FM99,999,999')||'  '||EXCH_UNIT    as D -- 출장비
                 , RANK() OVER (PARTITION BY O.ENO_NO ORDER BY O.STR_YMD DESC) as Q_RANK
              FROM ASNHR.T_CM_OVERSEAS O
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE O.ENO_NO = P.ENO_NO

             UNION

             SELECT '해외출장', A.ENO_NO,
                     TO_CHAR(TO_DATE(B.BUT_FR_YMD,'YYYYMMDD'),'YYYY/MM/DD')||'~'||
                     TO_CHAR(TO_DATE(B.BUT_TO_YMD,'YYYYMMDD'),'YYYY/MM/DD'),
                     B.BUT_CITY_DTL, B.BUT_OBJ, TO_CHAR(A.BUT_CNT_fOR,'FM99,999,999')||'  '||E.COMM_NM,
                     RANK() OVER (PARTITION BY a.ENO_NO ORDER BY b.but_fr_ymd DESC) as Q_RANK
               FROM ASNHR.T_DI_OVERSEASBT_DTL A, ASNHR.T_DI_OVERSEASBT B, ASNHR.T_CM_COMMON C, ASNHR.T_CM_BASIS D, ASNHR.T_CM_COMMON E
              WHERE A.ORD_NO = B.ORD_NO
                AND B.BUT_CITY_CD = C.COMM_CD
                AND C.CD_GBN = 'L2'
                AND C.GBN2_TAG = D.BAS_CD
                AND SF_GET_COMMSEQ('01','A2',A.JOB_CD) BETWEEN SF_GET_COMMSEQ('01','A2',D.JOB_CD_FROM) AND SF_GET_COMMSEQ('01','A2',D.JOB_CD_TO)
                AND D.BAS_CD2 = E.COMM_CD
                AND E.CD_GBN = 'EX'
                AND D.BASIC_YMD = (SELECT MAX(BASIC_YMD) FROM ASNHR.T_CM_BASIS WHERE BAS_GBN = 'LT')
                    [3]

             ORDER BY ENO_NO, A DESC
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR13">
        <description>표창상훈/징계 조회</description>
        <query>
            <![CDATA[
            SELECT '표상징계'                                as GRP_GBN -- 구분
                 , R.ENO_NO                                  as ENO_NO
                 , CASE WHEN R.REPU_CD = '1' THEN '포상(사내)'
                        WHEN R.REPU_CD = '2' THEN '포상(사외)'
                        WHEN R.REPU_CD = '3' THEN '징계(사내)'
                   END                                       as GRP_CD
                 --, TO_CHAR(TO_DATE(R.REPU_YMD,'YYYY-MM-DD'),'YYYY/MM/DD') as A -- 일자
				 , SUBSTR(R.REPU_YMD,1,4)||'-'||SUBSTR(R.REPU_YMD,5,2)||'-'||SUBSTR(R.REPU_YMD,7,2) AS A
                 , SF_GET_COMMNAME('01','K1',R.REPU_TAG)                as B -- 표상/징계명
                 , R.SYC_NAM                                 as C-- 수여/징계처
                 , R.REPU_RMK                                as D-- 내용/사유
                 , RANK() OVER (PARTITION BY R.ENO_NO, R.REPU_CD ORDER BY R.REPU_YMD DESC) as Q_RANK
              FROM ASNHR.T_CM_REWARD R
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE R.ENO_NO = P.ENO_NO
             AND NOT (R.REPU_TAG IN ('39','40','41','45','47','52','56','57','64','65')
             AND R.REPU_YMD < TO_CHAR(ADD_MONTHS(sysdate,-60),'YYYYMMDD'))
             ORDER BY REPU_YMD DESC
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR14">
        <description>고과 조회</description>
        <query>
            <![CDATA[
            SELECT '고과'                                                              as GRP_GBN -- 구분
                 , E.ENO_NO
                 , E.EVL_YY                                                            as A
                 , MAX(CASE WHEN EVL_GBN = '1' AND E.EVL_FRQ = 1 THEN E.FINAL_GRD END) as B
                 , MAX(CASE WHEN EVL_GBN = '1' AND E.EVL_FRQ = 2 THEN E.FINAL_GRD END) as C
                 , MAX(CASE WHEN EVL_GBN = '2' AND E.EVL_FRQ = 1 THEN E.FINAL_GRD END) as D
                 , MAX(CASE WHEN EVL_GBN = '2' AND E.EVL_FRQ = 2 THEN E.FINAL_GRD END) as E
              FROM ASNHR.T_EV_ABLRST E
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE E.ENO_NO = P.ENO_NO
               AND E.GUBUN = '01'
               AND ((E.EVL_GBN = '1' AND E.EVL_FRQ < 3) OR (E.EVL_GBN = '2' AND E.EVL_FRQ < 3))
               AND E.EVL_YY BETWEEN TO_CHAR(SYSDATE,'YYYY')-4 AND TO_CHAR(SYSDATE,'YYYY')
             GROUP BY E.ENO_NO, E.EVL_YY
             ORDER BY ENO_NO, EVL_YY DESC
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR15">
        <description>기술경력 조회</description>
        <query>
            <![CDATA[
               SELECT '기술'                                    as GRP_GBN  -- 구분
                       , A.ENO_NO                               as ENO_NO   -- 사번
                       , A.PJT_NM                               as A        -- 참여사업명
                       , TO_CHAR(TO_DATE(A.STR_YMD, 'YY/MM/DD'), 'YY/MM/DD') || '~' ||  TO_CHAR(TO_DATE(A.END_YMD, 'YY/MM/DD'), 'YY/MM/DD') AS B  -- 참여기간
                       , A.ODR_NM                                as C       -- 발주처
                       , A.CMP_NM                                as D       -- 소속사
                       , A.JOB_NM                                as E       -- 직위
                       , TO_CHAR(SF_GET_COMMNAME('01', 'S1', A.CHG_CD1) || '>' || SF_GET_COMMNAME('01', 'S2', A.CHG_CD2) || '>' || SF_GET_COMMNAME('01', 'S3', A.CHG_CD3)) as F --수행업무
                       , RANK() OVER (PARTITION BY A.ENO_NO ORDER BY A.STR_YMD DESC) as Q_RANK
                FROM   ASNHR.T_CM_CAREER A
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE A.ENO_NO = P.ENO_NO
             ORDER BY ENO_NO, A.STR_YMD DESC
             ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR16">
        <description>미참여 교육 조회</description>
        <query>
            <![CDATA[
                 SELECT '교육미참여'                                as GRP_GBN -- 구분
                 , E.ENO_NO                                  as ENO_NO
                 , TO_CHAR(TO_DATE(E.STR_YMD,'YYYYMMDD'),'YYYY/MM/DD')||'-'
                 ||TO_CHAR(TO_DATE(E.END_YMD,'YYYYMMDD'),'YYYY/MM/DD')  as A -- 기간
                 , SF_GET_COMMNAME('01','Q1',E.EDU_CD)       as B -- 과정명
                 , E.INT_NAM                                 as C -- 시행처
                 , RANK() OVER (PARTITION BY E.ENO_NO ORDER BY E.STR_YMD DESC) as Q_RANK
              FROM ASNHR.T_CM_EDUCATION E
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD [1]
                       [2]
                    )         P
             WHERE E.ENO_NO = P.ENO_NO
             	   AND E.EDU_TAG <> 'Y'
                   ORDER BY ENO_NO, A DESC
             ]]>

        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR17">
        <description>지인 조회</description>
        <query>
            <![CDATA[
            SELECT '지인'                                      as GRP_GBN -- 구분
                 , A.ENO_NO                                    as ENO_NO
                 , A.ENO_NM                                    as A -- 지인성명
                 , A.REL_NM                                    as B -- 관계
                 , A.COM_NM                                    as C -- 기관명
                 , CASE WHEN A.HP_NO is NULL THEN A.TEL_NO ELSE A.HP_NO END as D -- 연락처
                 , A.E_MAIL                                    as E -- E_MAIL 주소
                 , A.SEQ_NO -- 일련번호
                 , RANK() OVER (PARTITION BY A.ENO_NO ORDER BY A.SEQ_NO) as Q_RANK
              FROM ASNHR.T_AQ_ACQUAINT A
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE A.ENO_NO = P.ENO_NO
             ORDER BY ENO_NO, SEQ_NO DESC
            ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR18">
        <description>공조부조 조회</description>
        <query>
            <![CDATA[
            SELECT '공조부조'                               as GRP_GBN -- 구분
                 , A.ENO_NO                                              -- 사번
                 , TO_CHAR(TO_DATE(A.REQ_YMD,'YYYYMMDD'),'YYYY/MM/DD') as A -- 신청일자
                 , SF_GET_COMMNAME('01','R1',A.AID_CD)      as B -- 신청사유
                 , A.AID_NM                                 as C -- 대상자
                 , A.HLP1_AMT                               as F -- 공조부조금
                 , A.HLP2_AMT                               as G -- 경조금
                 , A.HLP1_AMT + A.HLP2_AMT                  as H -- 합계
                 , RANK() OVER (PARTITION BY A.ENO_NO ORDER BY A.REQ_YMD DESC) as Q_RANK
              FROM ASNHR.T_AD_AIDAPP A
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE A.ENO_NO = P.ENO_NO
               AND A.AID_STS = 'E'
             ORDER BY ENO_NO, A DESC
            ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD010_SHR_PR19">
        <description>연대보증 조회</description>
        <query>
            <![CDATA[
            SELECT '연대보증'                                as GRP_GBN -- 구분
                 , Q.ENO_NO
                 , Q.GUR_NAM                                 as A  -- 보증인
                 , CASE WHEN Q.GUR_TAG = 'M' THEN SF_GET_COMMNAME('01','G1',Q.GURR_CD)
                        WHEN Q.GUR_TAG = 'I' THEN SF_GET_COMMNAME('01','BJ',Q.GUR_COM)
                   END                                       as B  -- 관계
                 , TO_CHAR(TO_DATE(Q.GURD_YMD,'YYYYMMDD'),'YYYY/MM/DD') as C -- 만기일
                 , RANK() OVER (PARTITION BY Q.ENO_NO ORDER BY Q.GURD_YMD||ROWNUM DESC) as Q_RANK
              FROM ASNHR.T_CM_QUARANTOR Q
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE OCC_CD LIKE '%' || [1]
                       [2]
                    )         P
             WHERE Q.ENO_NO = P.ENO_NO
               AND Q.GURD_YMD >= TO_CHAR(SYSDATE,'YYYYMMDD')
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pird020
* @description : 어학성적
***********************************************************************
* 2007/01/08      박인이        최초작성.
***********************************************************************
-->
    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR">
        <description>어학성적 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD,                                                               -- 직종코드
                   OCC_NM,                                                               -- 직종
                   DPT_CD,                                                               -- 소속코드
                   DPT_NM,                                                               -- 소속
                   JOB_CD,                                                               -- 직위코드
                   JOB_NM,                                                               -- 직위
                   HOB_CD,                                                               -- 호봉코드
                   HOB_NM,                                                               -- 호봉
                   ENO_NO,                                                               -- 사번
                   ENO_NM,                                                               -- 성명
                   CET_NO,                                                               -- 주민번호
                   SBJ_LSN,                                                              -- L/C
                   SBJ_RED,                                                              -- R/C
                   TOT_PNT,                                                              -- 합계
                   PRO_YMD,                                                              -- 응시일
                   SBJ_NM,                                                               -- 시험종류
                   PRT_GBN                                                               -- 출력구분
            FROM ( SELECT B.OCC_CD,
                          SF_GET_COMMNAME('01', 'A1', B.OCC_CD)                          AS OCC_NM,
                          SF_GET_COMMSEQ('01', 'A1', B.OCC_CD)                           AS OCC_SEQ,
                          B.DPT_CD,
                          SF_GET_DPTNAME('01', 'A4', B.DPT_CD)                           AS DPT_NM,
                          SF_GET_DPTSEQ('01', 'A4', B.DPT_CD)                            AS DPT_SEQ,
                          B.JOB_CD,
                          SF_GET_COMMNAME('01', 'A2', B.JOB_CD)                          AS JOB_NM,
                          SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)                           AS JOB_SEQ,
                          B.HOB_CD,
                          SF_GET_COMMNAME('01', 'A3', B.HOB_CD)                          AS HOB_NM,
                          SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)                           AS HOB_SEQ,
                          A.ENO_NO,
                          B.ENO_NM,
                          B.CET_NO,
                          A.SBJ_LSN,
                          A.SBJ_RED,
                          A.SBJ_LSN + A.SBJ_LSN                                          AS TOT_PNT,
                          TO_CHAR(TO_DATE(A.PRO_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')        AS PRO_YMD,
                          DECODE(?, '1', 'TOEIC', '2', '4급승진')                        AS SBJ_NM,
                          DECODE(?, '1', '소속별', '2', '직위별', '3', '성적순')         AS PRT_GBN
                   FROM   ASNHR.T_CM_EXAMINATION A,
                          ASNHR.T_CM_PERSON B
                   WHERE  A.ENO_NO  = B.ENO_NO
                   AND    A.OCC_CD  = ?
                   AND    A.PRO_YMD BETWEEN ? AND ?
                   [1]
                 )
            [2]
            ]]>
        </query>
    </sql>


<!-- 인사정보출력 -->
<!--
***********************************************************************
* @UseCase     : pird020_PR
* @description : 파견사원 인사기록카드 출력
***********************************************************************
* 2007/05/15     이승욱        최초작성.
***********************************************************************
-->
    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR_PR01">
        <description>파견사원 인사기본정보 조회</description>
        <query>
            <![CDATA[
            SELECT P.ENO_NO                                                                 -- 사번
                 , SF_GET_COMMNAME('01',  'C1', P.HIR_CD)                  as HIR_NM        -- 채용구분
                 , P.HIR_TAG                                                                -- 채용사유코드
                 , SF_GET_COMMNAME('01',  'C1', P.HIR_TAG)                 as HIR_TNM       -- 채용사유
                 , SF_GET_ENONAME2('01',  P.OK_ENO)                        as OK_MAN        -- 추천인명
                 , TO_CHAR(P.HIR_YMD,  'YYYY/MM/DD')                       as HIR_YMD       -- 당사투입일
                 , TO_CHAR(P.TERM1_YMD,'YYYY/MM/DD')                       as TERM1_YMD     -- 1차계약기간
                 , TO_CHAR(P.TERM2_YMD,'YYYY/MM/DD')                       as TERM2_YMD     -- 2차계약기간
            -- 부문부서...
                 , SF_GET_DPTNAME('01', 'B2', P.HEAD_CD)                  as HEAD_NM       -- 부문
                 , SF_GET_DPTNAME('01', 'A4', P.DPT_CD)                    as DPT_NM        -- 부서
                 , SF_GET_COMMNAME('01',  'CA', P.DISCOMP_CD)              as DISCOMP_NM    -- 파견업체
                 , P.ENO_NM                                                                 -- 성명
                 , P.NAM_CHI                                                                -- 한문성명
                 , P.NAM_ENG                                                                -- 영문성명
                 , P.E_MAIL                                                                 -- E-mail
                 , SF_GET_COMMNAME('01','C8',P.DISJOB_CD)                  AS DISJOB_CD     -- 담당업무코드
                 , P.JOB_TAG                                                                -- 담당업무
                 , SF_GET_COMMNAME('01', 'A2', P.JOB_CD)                   as JOB_NM        -- 직위명
                 , SF_GET_COMMNAME('01', 'B3', P.REG_CD)                   as REG_NM        -- 근무지역
                 , TO_CHAR(P.BIR_YMD, 'YYYY-MM-DD')                        as BIR_YMD       -- 생년월일
                 , CASE WHEN P.BIR_TAG = 'S' THEN '　○'
                        WHEN P.BIR_TAG = 'M' THEN '○　'
                   END                                                     as BIR_TAG
                 , P.CET_NO                                                                 -- 주민번호
                 , CASE WHEN P.MF_TAG  =  'M'      THEN '남자'
                        WHEN P.MF_TAG IN ('W','F') THEN '여자'
                   END                                                     as MF_TAG        -- 성별
            -- 본적/주소
                 , P.PER_ADR                                                                -- 본적
                 , P.HF_NAM                                                                 -- 호주
                 , SF_GET_COMMNAME('01',  'G1', P.HFRE_CD)                 as HFRE_NM       -- 호주와의관계
                 , DECODE(P.RZI_NO,NULL,'',SUBSTR(P.RZI_NO,1,3)||'-'||SUBSTR(P.RZI_NO,4,3))
                                                                           as ZIP_NO        -- 우편번호
                 , P.PHN_NO                                                                 -- 전화번호
                 , P.EM_PHN_NO                                                              -- 휴대폰
                 , P.RADR_CT||' '||P.RADR                                  as ADDRESS       -- 주소
            -- 건강검진
                 , TO_CHAR(TO_DATE(PRO_YMD), 'YYYY/MM')                    as PRO_YM
                 , '좌:'||TO_CHAR(P.EYE_LEF, '0.0')||'우:'||TO_CHAR(P.EYE_RHT, '0.0') as EYE_SIGHT -- 시력
                 , P.HEIGHT                                                                 -- 신장
                 , P.WEIGHT                                                                 -- 체중
                 , SF_GET_COMMNAME('01', 'D4', P.CBLD_CD)                  as CBLD_NM       -- 색맹
                 , P.BLD_TYP                                                                -- 혈액형
            -- 병역
                 , SF_GET_COMMNAME('01', 'F1', A.GUB_CD)                   as GUB_NM        -- 병무구분
                 , SF_GET_COMMNAME('01', 'F4', A.MIL_CD)                   as MIL_NM        -- 군별
                 , TO_CHAR(TO_DATE(A.ENL_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') as ENL_YMD       -- 복무기간(FROM)
                 , TO_CHAR(TO_DATE(A.MIL_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') as MIL_YMD       -- 복무기간(TO)
                 , SF_GET_COMMNAME('01', 'F6', A.GRADE)                    as GRADE_NM      -- 계급
                 , A.MIL_NO                                                                 -- 군번
                 , SF_GET_COMMNAME('01', 'F7', A.MBK_CD)                   as MBK_NM        -- 병과
            -- 취미특기동호회
                 , P.HOBBY                                                                  -- 취미
                 , SF_GET_COMMNAME('01',  'D1', P.SPEC_CD)                 as SPEC_NM       -- 특기
                 , SF_GET_COMMNAME('01',  'D2', P.REL_CD)                  as REL_NM        -- 종교

                 , SF_GET_COMMNAME('01',  'H6', W.CLU_CD1)                 as CLU_NM1       -- 동호회1
                 , SF_GET_COMMNAME('01',  'H6', W.CLU_CD2)                 as CLU_NM2       -- 동호회2
                 , SF_GET_COMMNAME('01',  'H6', W.CLU_CD3)                 as CLU_NM3       -- 동호회3

            -- 퇴직사항
                 , TO_CHAR(P.RET_YMD, 'YYYY-MM-DD')                        as RET_YMD       -- 퇴사일
                 , SF_GET_COMMNAME('01',  'C2', P.RET_CD)                  as RET_NM        -- 퇴직사유

                 , FLOOR(MONTHS_BETWEEN(SYSDATE,P.HIR_YMD)/12)as LSE_YY				-- 근속기간년수
				 , FLOOR(MOD(MONTHS_BETWEEN(SYSDATE,P.HIR_YMD), 12)) as LSE_MM 		-- 근속기간개월

                 --, P.LSE_YY                                                as LSE_YY        -- 근속 년
                 --, P.LSE_MM                                                as LSE_MM        -- 근속 월



                 , P.COC_NAM                                                                -- 전직처
                 , C.ENO_NM                                                as SYENO_NM      -- 관리책임자
                 , SF_GET_COMMNAME('01','B3',C.REG_CD)                     as SY_REG_NM     -- 소재지
                 , TO_CHAR(SYSDATE,'YYYY/MM/DD')                           as PRT_YMD
              FROM ASNHR.T_ME_PERSON  P
                 , ASNHR.T_ME_ARMY    A
                 , ASNHR.T_CM_PERSON  C
                 ,(SELECT ENO_NO,
                          MAX(DECODE(NO, 1, CLUB_CD, '')) AS CLU_CD1,
                          MAX(DECODE(NO, 2, CLUB_CD, '')) AS CLU_CD2,
                          MAX(DECODE(NO, 3, CLUB_CD, '')) AS CLU_CD3
                   FROM
                   (
                   SELECT ROWNUM NO, ENO_NO, CLUB_CD
                   FROM   ASNHR.T_WL_CLUBLIST
                   WHERE  END_YMD IS NULL
                   )
                   GROUP BY ENO_NO
                  ) W
             WHERE P.ENO_NO   = A.ENO_NO(+)
               AND P.SYENO_NO = C.ENO_NO(+)
               AND P.SYENO_NO = W.ENO_NO(+)
               AND P.OCC_CD  IN ([1])
               [2]
            ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR_PR02">
        <description>파견사원 용역비변경 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO                                                       -- 사번
                 , TO_CHAR(TO_DATE(A.CHN_YMD), 'YYYY/MM/DD')               as A   -- 변경일자
                 , TO_CHAR(TO_DATE(A.CHN_YMD), 'YYYYMM')                   as G   -- 변경년월
                 , A.BAS_AMT                                               as B   -- 용역비
                 , NVL(CASE WHEN P.TERM_YMD_VAL >= 18 THEN LSEV_AMT3
                                  WHEN P.TERM_YMD_VAL >= 12 THEN LSEV_AMT2
                                  WHEN P.TERM_YMD_VAL >= 6  THEN LSEV_AMT1
                                  ELSE 0 END, 0)                           as C   -- 근속장려금
                 , A.WEL_AMT                                               as D   -- 기타수당
                 , A.BAS_AMT + NVL(CASE WHEN P.TERM_YMD_VAL >= 18 THEN LSEV_AMT3
                                  WHEN P.TERM_YMD_VAL >= 12 THEN LSEV_AMT2
                                  WHEN P.TERM_YMD_VAL >= 6  THEN LSEV_AMT1
                                  ELSE 0 END, 0) + A.WEL_AMT               as E   -- 합계액
                 , A.REMARK                                                as F   -- 구분
                 , RANK() OVER (PARTITION BY A.ENO_NO ORDER BY A.CHN_YMD DESC, A.SEQ_NO DESC) as Q_RANK
              FROM ASNHR.T_ME_APY     A
                 , (SELECT ENO_NO,
                 			CASE WHEN LAST_DAY(TO_CHAR(SYSDATE,'YYYYMMDD')) > RET_YMD
                               THEN MONTHS_BETWEEN(RET_YMD, HIR_YMD)
                               ELSE MONTHS_BETWEEN(LAST_DAY(TO_CHAR(SYSDATE,'YYYYMMDD')), HIR_YMD)
                               END AS TERM_YMD_VAL
                      FROM ASNHR.T_ME_PERSON
                     WHERE OCC_CD IN ([1])
                       [2]
                    )           P
             WHERE P.ENO_NO = A.ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR_PR03">
        <description>파견사원 학력 조회</description>
        <query>
            <![CDATA[
            SELECT S.ENO_NO
                 , CASE WHEN S.GRD_CD = 'G'
                        THEN SUBSTR(S.GURS_YMD,1,4)||'/'||SUBSTR(S.GURE_YMD,5,2)||'/'||SUBSTR(S.GURE_YMD,7)
                        ELSE SUBSTR(S.GURE_YMD,1,4)||'/'||SUBSTR(S.GURE_YMD,5,2)||'/'||SUBSTR(S.GURE_YMD,7)
                   END                                                      as A -- 일자
                 , CASE WHEN S.SCH_NAM IS NOT NULL THEN S.SCH_NAM
                        WHEN S.EDGR_CD = '2' THEN SF_GET_COMMNAME('01', 'E8', S.SCH_CD)
                        WHEN S.EDGR_CD = '3' THEN SF_GET_COMMNAME('01', 'E2', S.SCH_CD)
                        WHEN S.EDGR_CD = '4' THEN SF_GET_COMMNAME('01', 'E3', S.SCH_CD)
                        WHEN S.EDGR_CD = '5' THEN SF_GET_COMMNAME('01', 'E4', S.SCH_CD)
                        WHEN S.EDGR_CD = '6' THEN SF_GET_COMMNAME('01', 'E5', S.SCH_CD)
                        WHEN S.EDGR_CD = '7' THEN SF_GET_COMMNAME('01', 'E5', S.SCH_CD)
                        WHEN S.EDGR_CD = '8' THEN SF_GET_COMMNAME('01', 'E5', S.SCH_CD)
                        ELSE ''
                   END                                                      as B -- 학교
                 , SF_GET_COMMNAME('01', 'E1', S.EDGR_CD)                   as C -- 학력구분
                 , SF_GET_COMMNAME('01', 'E7', S.GRD_CD)                    as D -- 구분
                 , SF_GET_COMMNAME('01', 'E6', S.MAJ_CD)                    as E -- 전공
                 , S.EDGR_CD
                 , RANK() OVER (PARTITION BY S.ENO_NO ORDER BY S.EDGR_CD, CASE WHEN S.GRD_CD='G' THEN S.GURS_YMD ELSE S.GURE_YMD END) as Q_RANK
              FROM ASNHR.T_ME_SCHOOL  S
                 , (SELECT ENO_NO
                      FROM ASNHR.T_ME_PERSON
                     WHERE OCC_CD IN ([1])
                       [2]
                    )           P
             WHERE P.ENO_NO = S.ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR_PR04">
        <description>파견사원 가족 조회</description>
        <query>
            <![CDATA[
            SELECT F.ENO_NO                                                             -- 사번
                 , SF_GET_COMMNAME('01', 'G1', F.REL_CD)                   as A    -- 가족관계
                 , F.ENO_NM                                                as B    -- 성명
                 , TO_CHAR(TO_DATE(F.BIR_YMD),'YYYY/MM/DD')                as C    -- 생년월일
                 , SF_GET_COMMNAME('01', 'E1', F.EDGR_CD)                  as D    -- 학력
                 , F.OCC_NAM                                               as E    -- 근무처
                 , F.JOB_CD                                                as F    -- 직위
                 , F.HIU_TAG                                               as G    -- 의보여부
                 , F.DPD_TAG                                               as H    -- 부양여부
                 , F.REL_CD
                 , RANK() OVER (PARTITION BY F.ENO_NO ORDER BY F.REL_CD, F.BIR_YMD) as Q_RANK
              FROM ASNHR.T_ME_FAMILY  F
                 , (SELECT ENO_NO
                      FROM ASNHR.T_ME_PERSON
                     WHERE OCC_CD IN ([1])
                       [2]
                    )           P
             WHERE P.ENO_NO = F.ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR_PR05">
        <description>파견사원 자격면허 조회</description>
        <query>
            <![CDATA[
            SELECT Q.ENO_NO                                                        -- 사번
                 , SF_GET_COMMNAME('01', 'H1', Q.QUA_CD)                   as A    -- 자격면허
                 , TO_CHAR(TO_DATE(Q.GAN_YMD ),'YYYY/MM/DD')               as B    -- 취득일자
                 , Q.APP_ADM                                               as C    -- 발행처
                 , Q.QUA_NO                                                as D    -- 증서번호
                 , RANK() OVER (PARTITION BY Q.ENO_NO ORDER BY Q.GAN_YMD DESC) as Q_RANK
              FROM ASNHR.T_ME_QUALIFICATION Q
                 , (SELECT ENO_NO
                      FROM ASNHR.T_ME_PERSON
                     WHERE OCC_CD IN ([1])
                       [2]
                    )           P
             WHERE P.ENO_NO = Q.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR_PR06">
        <description>근태 조회</description>
        <query>
            <![CDATA[
            SELECT '근태'                           as GRP_GBN  -- 구분
                 , D.ENO_NO                         as ENO_NO
                 , D.PIS_YY                         as A -- 년도
                 , SUM(D.ATT_B)                     as B -- 합계(무결)
                 , SUM(D.ATT_A)                     as C -- 합계(유결)
                 , SUM(D.ATT_C)                     as D -- 합계(지각)
                 , SUM(D.ATT_D)                     as E -- 합계(조퇴)
                 , SUM(D.ATT_K)                     as F -- 합계(휴직)
              FROM ASNHR.T_DI_DILIGENCE D
                 , (SELECT ENO_NO
                      FROM ASNHR.T_ME_PERSON
                     WHERE OCC_CD IN ([1])
                       [2]
                    )         P
             WHERE D.ENO_NO = P.ENO_NO
               AND D.PIS_YY BETWEEN TO_CHAR(ADD_MONTHS(SYSDATE,-5),'YYYY') AND TO_CHAR(SYSDATE,'YYYY')
             GROUP BY D.ENO_NO, D.PIS_YY
             ORDER BY ENO_NO, A DESC
             ]]>
        </query>
    </sql>


    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR_PR07">
        <description>파견사원 입사전경력 조회</description>
        <query>
            <![CDATA[
            SELECT B.ENO_NO                                                             -- 사번
                 , TO_CHAR(TO_DATE(B.STR_YMD), 'YYYY/MM/DD')||'-'||TO_CHAR(TO_DATE(B.END_YMD), 'YYYY/MM/DD') as A -- 근무기간
                 , B.CMP_NAM                                               as B   -- 회사명
                 , B.JOB_CD                                                as C   -- 직위
                 , B.CHG_JOB                                               as D   -- 담당업무
                 , RANK() OVER (PARTITION BY B.ENO_NO ORDER BY B.STR_YMD DESC) as Q_RANK
              FROM ASNHR.T_ME_BHISTORY B
                 , (SELECT ENO_NO
                      FROM ASNHR.T_ME_PERSON
                     WHERE OCC_CD IN ([1])
                       [2]
                    )           P
             WHERE P.ENO_NO = B.ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR_PR08">
        <description>파견사원 입사후경력 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO                                                       -- 사번
                 , TO_CHAR(TO_DATE(A.STR_YMD), 'YYYY/MM/DD')               as A   -- 발령일자
                 , A.SEQ_NO                                                       -- SEQ번호
                 , SF_GET_COMMNAME('01', 'J2', A.APP_CD)                   as B   -- 발령구분
                 , SF_GET_COMMNAME('01', 'A2', A.JOB_CD)                   as C   -- 직위
                 , SF_GET_DPTNAME('01', 'A4', A.DPT_CD)                   as D   -- 소속
                 , A.REMARK                                                as E   -- 담당업무
                 , RANK() OVER (PARTITION BY A.ENO_NO ORDER BY A.STR_YMD DESC, A.SEQ_NO DESC) as Q_RANK
              FROM ASNHR.T_ME_AHISTORY A
                 , (SELECT ENO_NO
                      FROM ASNHR.T_ME_PERSON
                     WHERE OCC_CD IN ([1])
                       [2]
                    )           P
             WHERE P.ENO_NO = A.ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 인사기록카드 데이터 조회 -->
    <sql name="PIRD020_SHR_PR09">
        <description>파견사원 교육참여 조회</description>
        <query>
            <![CDATA[
            SELECT E.ENO_NO                                                             -- 사번
                 , TO_CHAR(TO_DATE(E.STR_YMD), 'YYYY/MM/DD')||'-'||TO_CHAR(TO_DATE(E.END_YMD), 'YYYY/MM/DD') as A   -- 기간
                 , SF_GET_COMMNAME('01', 'Q1', E.SBJ_CD)                   as B    -- 교육과정
                 , E.INT_NAM                                               as C             -- 시행처
                 , RANK() OVER (PARTITION BY E.ENO_NO ORDER BY E.STR_YMD)  as Q_RANK
              FROM ASNHR.T_ME_EDUCATION E
                 , (SELECT ENO_NO
                      FROM ASNHR.T_ME_PERSON
                     WHERE OCC_CD IN ([1])
                       [2]
                    )           P
             WHERE P.ENO_NO = E.ENO_NO
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : pird030
* @description : 여권발급현황
***********************************************************************
* 2007/01/08      박인이        최초작성.
***********************************************************************
-->
    <!-- 여권발급현황 데이터 조회 -->
    <sql name="PIRD030_SHR">
        <description>여권발급현황 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD,                                                               -- 직종코드
                   OCC_NM,                                                               -- 직종
                   DPT_CD,                                                               -- 소속코드
                   DPT_NM,                                                               -- 소속
                   JOB_CD,                                                               -- 직위코드
                   JOB_NM,                                                               -- 직위
                   HOB_CD,                                                               -- 호봉코드
                   HOB_NM,                                                               -- 호봉
                   ENO_NO,                                                               -- 사번
                   ENO_NM,                                                               -- 성명
                   PAS_NO,                                                               -- 여권번호
                   ISS_YMD,                                                              -- 발급일자
                   DUE_YMD,                                                              -- 만기일자
                   NAT_CD,                                                               -- 국가코드
                   NAT_NM,                                                               -- 국가
                   VISA_NO                                                               -- VISA번호
            FROM ( SELECT '1' GUBUN,
                          OCC_CD,
                          SF_GET_COMMNAME('01', 'A1', OCC_CD)                            AS OCC_NM,
                          SF_GET_DPTSEQ('01', 'B2', HEAD_CD)                            AS HEAD_SEQ,
                          DPT_CD,
                          SF_GET_DPTNAME('01', 'A4', DPT_CD)                             AS DPT_NM,
                          SF_GET_DPTSEQ('01', 'A4', DPT_CD)                              AS DPT_SEQ,
                          JOB_CD,
                          SF_GET_COMMNAME('01', 'A2', JOB_CD)                            AS JOB_NM,
                          SF_GET_COMMSEQ('01', 'A2', JOB_CD)                             AS JOB_SEQ,
                          HOB_CD,
                          SF_GET_COMMNAME('01', 'A3', HOB_CD)                            AS HOB_NM,
                          SF_GET_COMMSEQ('01', 'A3', HOB_CD)                             AS HOB_SEQ,
                          ENO_NO,
                          ENO_NM,
                          PAS_NO,
                          TO_CHAR(PISS_YMD, 'YYYY-MM-DD')                                AS ISS_YMD,
                          TO_CHAR(PDUE_YMD, 'YYYY-MM-DD')                                AS DUE_YMD,
                          ''                                                             AS NAT_CD,
                          ''                                                             AS NAT_NM,
                          ''                                                             AS VISA_NO,
                          HIRG_YMD
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  OCC_CD  LIKE ?||'%'
                   AND  ( RET_YMD IS NULL
                   OR     RET_YMD >= sysdate
                        )
                   [1]                                                                   -- 여권조회
                   UNION ALL
                   SELECT '2' GUBUN,
                          OCC_CD,
                          SF_GET_COMMNAME('01', 'A1', B.OCC_CD)                          AS OCC_NM,
                          SF_GET_DPTSEQ('01', 'B2', B.HEAD_CD)                          AS HEAD_SEQ,
                          B.DPT_CD,
                          SF_GET_DPTNAME('01', 'A4', B.DPT_CD)                           AS DPT_NM,
                          SF_GET_DPTSEQ('01', 'A4', B.DPT_CD)                            AS DPT_SEQ,
                          B.JOB_CD,
                          SF_GET_COMMNAME('01', 'A2', B.JOB_CD)                          AS JOB_NM,
                          SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)                           AS JOB_SEQ,
                          B.HOB_CD,
                          SF_GET_COMMNAME('01', 'A3', B.HOB_CD)                          AS HOB_NM,
                          SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)                           AS HOB_SEQ,
                          A.ENO_NO,
                          B.ENO_NM,
                          ''                                                             AS PAS_NO,
                          TO_CHAR(TO_DATE(A.ISS_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')        AS ISS_YMD,
                          TO_CHAR(TO_DATE(A.DUE_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')        AS DUE_YMD,
                          A.NAT_CD,
                          SF_GET_COMMNAME('01', 'L2', A.NAT_CD)                          AS NAT_NM,
                          A.VISA_NO,
                          B.HIRG_YMD
                   FROM   ASNHR.T_CM_VISA A,
                          ASNHR.T_CM_PERSON B
                   WHERE  A.ENO_NO  = B.ENO_NO
                   AND    B.OCC_CD  LIKE ?||'%'
                   AND  ( RET_YMD IS NULL
                   OR     RET_YMD >= sysdate)
                   [2]                                                                   -- 비자조회
                 )
            ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO, GUBUN
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pird040
* @description : 주거정보현황
***********************************************************************
* 2007/01/09      박인이        최초작성.
***********************************************************************
-->
    <!-- 주거정보현황 데이터 조회 -->
    <sql name="PIRD040_SHR">
        <description>주거정보현황 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD,                                                               -- 직종코드
                   OCC_NM,                                                               -- 직종
                   DPT_CD,                                                               -- 소속코드
                   DPT_NM,                                                               -- 소속
                   JOB_CD,                                                               -- 직위코드
                   JOB_NM,                                                               -- 직위
                   HOB_CD,                                                               -- 호봉코드
                   HOB_NM,                                                               -- 호봉
                   ENO_NO,                                                               -- 사번
                   ENO_NM,                                                               -- 성명
                   PHN_NO,                                                               -- 전화번호
                   EM_PHN_NO,                                                            -- 핸드폰
                   MOV_COM_NO,                                                           -- 호출기
                   ADDRESS                                                               -- 주소
            FROM ( SELECT OCC_CD,
                          SF_GET_COMMNAME('01', 'A1', OCC_CD)                            AS OCC_NM,
                          SF_GET_COMMSEQ('01', 'A1', OCC_CD)                             AS OCC_SEQ,
                          DPT_CD,
                          SF_GET_DPTNAME('01', 'A4', DPT_CD)                             AS DPT_NM,
                          SF_GET_DPTSEQ('01', 'A4', DPT_CD)                              AS DPT_SEQ,
                          JOB_CD,
                          SF_GET_COMMNAME('01', 'A2', JOB_CD)                            AS JOB_NM,
                          SF_GET_COMMSEQ('01', 'A2', JOB_CD)                             AS JOB_SEQ,
                          HOB_CD,
                          SF_GET_COMMNAME('01', 'A3', HOB_CD)                            AS HOB_NM,
                          SF_GET_COMMSEQ('01', 'A3', HOB_CD)                             AS HOB_SEQ,
                          ENO_NO,
                          ENO_NM,
                          DECODE(PHN_REG,NULL,'',PHN_REG||') '||PHN_NO)                  AS PHN_NO,
                          EM_PHN_NO,
                          MOV_COM_NO,
                          RADR_CT||' '||RADR                                             AS ADDRESS
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  GUBUN  = ?
                   AND    OCC_CD LIKE ? || '%'
                   AND  ( RET_YMD IS NULL
                   OR     RET_YMD >= sysdate
                        )
                   [1]
                 )
            ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, ENO_NO
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pird050
* @description : 교육사항
***********************************************************************
* 2007/01/09      박인이        최초작성.
***********************************************************************
-->
    <!-- 교육사항 데이터 조회 -->
    <sql name="PIRD050_SHR">
        <description>교육사항 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD,                                                               -- 직종코드
                   OCC_NM,                                                               -- 직종
                   DPT_CD,                                                               -- 소속코드
                   DPT_NM,                                                               -- 소속
                   JOB_CD,                                                               -- 직위코드
                   JOB_NM,                                                               -- 직위
                   HOB_CD,                                                               -- 호봉코드
                   HOB_NM,                                                               -- 호봉
                   ENO_NO,                                                               -- 사번
                   ENO_NM,                                                               -- 성명
                   EDU_YMD,                                                              -- 교육기간
                   EDU_CD,                                                               -- 교육구분코드
                   EDU_NM,                                                               -- 교육구분
                   INT_NAM,                                                              -- 시행처
                   SBJ_CD,                                                               -- 과정코드
                   SBJ_NM,                                                               -- 과정
                   EDU_TAG,                                                              -- 수료여부
                   APP_VAL,                                                              -- 점수
                   REMARK                                                                -- 비고
            FROM ( SELECT B.OCC_CD,
                          SF_GET_COMMNAME('01', 'A1', B.OCC_CD)                          AS OCC_NM,
                          SF_GET_COMMSEQ('01', 'A1', B.OCC_CD)                           AS OCC_SEQ,
                          B.DPT_CD,
                          SF_GET_DPTNAME('01', 'A4', B.DPT_CD)                           AS DPT_NM,
                          SF_GET_DPTSEQ('01', 'A4', B.DPT_CD)                            AS DPT_SEQ,
                          B.JOB_CD,
                          SF_GET_COMMNAME('01', 'A2', B.JOB_CD)                          AS JOB_NM,
                          SF_GET_COMMSEQ('01', 'A2', B.JOB_CD)                           AS JOB_SEQ,
                          B.HOB_CD,
                          SF_GET_COMMNAME('01', 'A3', B.HOB_CD)                          AS HOB_NM,
                          SF_GET_COMMSEQ('01', 'A3', B.HOB_CD)                           AS HOB_SEQ,
                          A.ENO_NO,
                          B.ENO_NM,
                          TO_CHAR(TO_DATE(A.STR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD') || '~' || TO_CHAR(TO_DATE(A.END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')  AS EDU_YMD,
                          A.EDU_CD,
                          DECODE(A.EDU_CD, '1', '사내', '2', '사외', '3', '인터넷', '')  AS EDU_NM,
                          A.INT_NAM,
                          A.SBJ_CD,
                          SF_GET_COMMNAME('01', 'Q1', A.SBJ_CD)                          AS SBJ_NM,
                          A.EDU_TAG,
                          A.APP_VAL,
                          A.REMARK
                   FROM   ASNHR.T_CM_EDUCATION A,
                          ASNHR.T_CM_PERSON B
                   WHERE  A.ENO_NO  = B.ENO_NO
                   AND    A.OCC_CD  = ?
                   AND  (( A.STR_YMD BETWEEN ? AND ? )
                   OR    ( A.END_YMD BETWEEN ? AND ? ))
                 )
            ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, ENO_NO, EDU_YMD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pird080
* @description : 사원증발급
***********************************************************************
* 2007/03/27      방석호         최초작성.
***********************************************************************
-->
    <!-- 사원증발급 데이터 조회 -->
    <sql name="PIRD080_SHR">
        <description>직원인명사진첩 조회</description>
        <query>
            <![CDATA[
            SELECT   MIN (DECODE (C_GRP, 1, eno_no)) eno_no_1
                   , MIN (DECODE (C_GRP, 1, head_nm)) head_nm_1
                   , MIN (DECODE (C_GRP, 1, eno_nm)) eno_nm_1
                   , MIN (DECODE (C_GRP, 1, cet_no)) cet_no_1
                   , MIN (DECODE (C_GRP, 1, nam_eng)) nam_eng_1
                   , MIN (DECODE (C_GRP, 2, eno_no)) eno_no_2
                   , MIN (DECODE (C_GRP, 2, head_nm)) head_nm_2
                   , MIN (DECODE (C_GRP, 2, eno_nm)) eno_nm_2
                   , MIN (DECODE (C_GRP, 2, cet_no)) cet_no_2
                   , MIN (DECODE (C_GRP, 2, nam_eng)) nam_eng_2
                   , MIN (DECODE (C_GRP, 3, eno_no)) eno_no_3
                   , MIN (DECODE (C_GRP, 3, head_nm)) head_nm_3
                   , MIN (DECODE (C_GRP, 3, eno_nm)) eno_nm_3
                   , MIN (DECODE (C_GRP, 3, cet_no)) cet_no_3
                   , MIN (DECODE (C_GRP, 3, nam_eng)) nam_eng_3
            FROM   (SELECT eno_no, head_nm , eno_nm, cet_no, nam_eng, MOD(ROWNUM - 1, 3) + 1 C_GRP, CEIL (ROWNUM / 3) R_GRP
                      FROM (SELECT eno_no, dpt_nm as head_nm , eno_nm, cet_no, nam_eng, HEAD_SEQ, DPT_SEQ, JOB_SEQ
                              FROM VI_T_CM_PERSON
                             [1]
                             ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ
                            )
                    )
            GROUP BY R_GRP
            ORDER BY R_GRP

            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : pird090
* @description : 직원인명사진첩
***********************************************************************
* 2007/01/09      박인이        최초작성.
* 2007/04/08      김학수        본적(PER_ADR) 추가.
***********************************************************************
-->
    <!-- 직원인명사진첩 데이터 조회 -->
    <sql name="PIRD090_SHR">
        <description>직원인명사진첩 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD,                                                               -- 직종코드
                   OCC_NM,                                                               -- 직종
                   DPT_CD,                                                               -- 소속코드
                   DPT_NM,                                                               -- 소속
                   JOB_CD,                                                               -- 직위코드
                   JOB_NM,                                        						 -- 직위
                   HOB_CD,                                                               -- 호봉코드
                   HOB_NM,                                                               -- 호봉
                   ENO_NO,                                                               -- 사번
                   ENO_NM,                                                               -- 성명
                   BIR_YMD,                                                              -- 생년월일
                   HIRG_YMD,                                                             -- 그룹입사일
                   HIR_YMD,                                                              -- 입사일
                   JPR_YMD,                                                              -- 승진일
                   DPA_YMD,                                                              -- 발령일
                   EDGR_CD,                                                              -- 학력코드
                   SCH_CD,                                                               -- 학교코드
                   SCH_NAM || EDGR_NM          AS SCH_NM,                                -- 학교
                   MAJ_CD,                                                               -- 전공코드
                   MAJ_NM,                                                               -- 전공
                   ADDRESS,                                                              -- 주소
                   PER_ADR                                                                 -- 본적   ----------------------> 보고서추가부분
            FROM ( SELECT OCC_CD,
                          SF_GET_COMMNAME('01', 'A1', OCC_CD)                            AS OCC_NM,
                          SF_GET_DPTSEQ('01', 'B2', HEAD_CD)                            AS HEAD_SEQ,
                          DPT_CD,
                          SF_GET_DPTNAME('01', 'A4', DPT_CD)                             AS DPT_NM,
                          SF_GET_DPTSEQ('01', 'A4', DPT_CD)                              AS DPT_SEQ,
                          JOB_CD,
                          SF_GET_COMMNAME('01', 'A2', JOB_CD)                            AS JOB_NM,
                          SF_GET_COMMSEQ('01', 'A2', JOB_CD)                             AS JOB_SEQ,
                          HOB_CD,
                          SF_GET_COMMNAME('01', 'A3', HOB_CD)                            AS HOB_NM,
                          SF_GET_COMMSEQ('01', 'A3', HOB_CD)                             AS HOB_SEQ,
                          ENO_NO,
                          ENO_NM,
                          TO_CHAR(BIR_YMD, 'YYYY-MM-DD')                                 AS BIR_YMD,
                          TO_CHAR(HIRG_YMD, 'YYYY-MM-DD')                                AS HIRG_YMD,
                          TO_CHAR(HIR_YMD, 'YYYY-MM-DD')                                 AS HIR_YMD,
                          TO_CHAR(JPR_YMD, 'YYYY-MM-DD')                                 AS JPR_YMD,
                          TO_CHAR(DPA_YMD, 'YYYY-MM-DD')                                 AS DPA_YMD,
                          EDGR_CD,
                          SF_GET_COMMNAME('01', 'E1', EDGR_CD)                           AS EDGR_NM,
                          SCH_CD,
                          CASE WHEN SCH_NAM IS NOT NULL THEN  SCH_NAM
                          	   WHEN EDGR_CD = '2' THEN SF_GET_COMMNAME('01', 'E8', SCH_CD)
                               WHEN EDGR_CD = '3' THEN SF_GET_COMMNAME('01', 'E2', SCH_CD)
                               WHEN EDGR_CD = '4' THEN SF_GET_COMMNAME('01', 'E3', SCH_CD)
                               WHEN EDGR_CD = '5' THEN SF_GET_COMMNAME('01', 'E4', SCH_CD)
                               WHEN EDGR_CD = '6' THEN SF_GET_COMMNAME('01', 'E5', SCH_CD)
                               WHEN EDGR_CD = '7' THEN SF_GET_COMMNAME('01', 'E5', SCH_CD)
                               WHEN EDGR_CD = '8' THEN SF_GET_COMMNAME('01', 'E5', SCH_CD)
                               ELSE ''
                          END  AS SCH_NAM,
                          MAJ_CD,
                          SF_GET_COMMNAME('01', 'E6', MAJ_CD)                            AS MAJ_NM,
                          RADR_CT||' '||RADR                                             AS ADDRESS,
                          RET_YMD,
                          PER_ADR
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  ENO_NO   LIKE ? ||'%'
                 )
        --            WHERE  ENO_NO IN ('6060002', '2070011','3050013','3050012','3070043','2030018','4080006','4110003')


            WHERE  ( ? IS NULL                                              -- 출력구분이 전체인 경우는 현직원 전체
           AND      HEAD_SEQ > 0
            AND      ( RET_YMD IS NULL
            OR         RET_YMD >= sysdate
                     )
          AND      DPT_CD NOT IN ('AA')
                   )
            OR     ( ? IS NOT NULL                                          -- 출력구분이 선택인 경우는 해당 사번이 현직원/퇴사자에 관계없이 조회
            AND      1 = 1
                   )


            ORDER BY HEAD_SEQ, DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, ENO_NO
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : misd010
* @description : 노동임금통계조사
***********************************************************************
* 2007/02/07      박인이        최초작성.
***********************************************************************
-->
    <!-- 노동임금통계조사 데이터 조회 -->
    <sql name="MISD010_SHR">
        <description>노동임금통계조사 조회</description>
        <query>
            <![CDATA[
            SELECT DECODE(DPT_NM, '', '총계', DPT_NM) AS DPT_NM,
                   DECODE(DPT_NM, '', '', DECODE(JOB_NM, '', '소계', ROW_NUMBER() OVER(PARTITION BY DPT_NM ORDER BY DPT_SEQ, JOB_SEQ))) RNUM,
                   JOB_NM,
                   ENO_NO,
                   ENO_NM,
                   MF_TAG,
                   SALT_AMT1,
                   SALT_AMT2,
                   SUM_AMT
            FROM ( SELECT DPT_CD,
                          DECODE(DPT_CD, '9999', 999, SF_GET_DPTSEQ('01', 'A4', DPT_CD))  AS DPT_SEQ,
                          DECODE(JOB_CD, '9999', 999, SF_GET_COMMSEQ('01', 'A2', JOB_CD)) AS JOB_SEQ,
                          DECODE(HOB_CD, '9999', 999, SF_GET_COMMSEQ('01', 'A3', HOB_CD)) AS HOB_SEQ,
                          DECODE(DPT_CD, '9999', '', SF_GET_DPTNAME('01', 'A4', DPT_CD))  AS DPT_NM,
                          DECODE(JOB_CD, '9999', '', SF_GET_COMMNAME('01', 'A2', JOB_CD)) AS JOB_NM,
                          ENO_NO,
                          ENO_NM,
                          MF_TAG,
                          SALT_AMT1,
                          SALT_AMT2,
                          SALT_AMT1+SALT_AMT2 SUM_AMT
                   FROM ( SELECT DECODE(NO, 1, '9999', AA.DPT_CD)         AS DPT_CD,
                                 DECODE(NO, 1, '', 2, '9999', AA.JOB_CD)  AS JOB_CD,
                                 DECODE(NO, 1, '', 2, '', AA.HOB_CD)      AS HOB_CD,
                                 DECODE(NO, 1, '', 2, '', AA.ENO_NO)      AS ENO_NO,
                                 DECODE(NO, 1, '', 2, '', AA.ENO_NM)      AS ENO_NM,
                                 DECODE(NO, 1, '', 2, '', AA.MF_TAG)      AS MF_TAG,
                                 SUM(SALT_AMT1)                           AS SALT_AMT1,
                                 SUM(SALT_AMT2)                           AS SALT_AMT2
                          FROM ( SELECT A.DPT_CD,
                                        A.JOB_CD,
                                        A.HOB_CD,
                                        A.ENO_NO,
                                        SF_GET_ENONAME('01', A.ENO_NO)               AS ENO_NM,
                                       (SELECT MF_TAG FROM ASNHR.T_CM_PERSON WHERE GUBUN = '01' AND ENO_NO = A.ENO_NO) MF_TAG,
                                        SUM(DECODE(A.SAL_GBN, '0', A.SALT_AMT, 0)) AS SALT_AMT1,
                                        SUM(DECODE(A.SAL_GBN, '1', A.SALT_AMT, 0)) AS SALT_AMT2
                                 FROM   ASNHR.T_CP_PAYMASTER A
                                 WHERE  A.PIS_YY  = ?
                                 AND    A.PIS_MM  = ?
                                 [1]
                                 GROUP BY A.DPT_CD, A.JOB_CD, A.HOB_CD, A.ENO_NO
                               ) AA,
                               ( SELECT 1 NO FROM DUAL        -- 총계
                                 UNION ALL
                                 SELECT 2 NO FROM DUAL        -- 부서별 소계
                                 UNION ALL
                                 SELECT 3 NO FROM DUAL        -- 개인
                               ) BB
                          GROUP BY DECODE(NO, 1, '9999', AA.DPT_CD),
                                   DECODE(NO, 1, '', 2, '9999', AA.JOB_CD),
                                   DECODE(NO, 1, '', 2, '', AA.HOB_CD),
                                   DECODE(NO, 1, '', 2, '', AA.ENO_NO),
                                   DECODE(NO, 1, '', 2, '', AA.ENO_NM),
                                   DECODE(NO, 1, '', 2, '', AA.MF_TAG)
                        )
                 )
            ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, ENO_NO
            ]]>
        </query>
    </sql>

<!-- 인사관리 -->
<!--
***********************************************************************
* @UseCase     : PIRE010
* @description : 신원보증만기현황
***********************************************************************
* 2007/01/09     오대성        최초작성.
***********************************************************************
-->
    <!-- 신원보증만기현황을 조회 한다. -->
    <sql name="PIRE010_SHR_01">
        <description>신원보증만기현황 조회</description>
        <query>
            <![CDATA[
            SELECT A.DPT_CD
                 , A.DPT_NM
                 , A.JOB_CD
                 , A.JOB_NM
                 , A.ENO_NO
                 , A.ENO_NM
                 , A.CET_NO
                 , TO_CHAR(A.HIR_YMD, 'YYYY/MM/DD') AS HIR_YMD
                 , A.ADR_CT||' '||A.ADDRESS AS ADDRESS
                 , NVL(TRIM(A.PHN_NO),A.EM_PHN_NO) AS PHN_NO
                 , B.GUR_NAM
                 , B.GURR_CD
                 , B.GURR_NM
                 , B.GURO
                 , B.GURD_YMD
              FROM VI_T_CM_PERSON2 A
                 , (SELECT ENO_NO
                         , GUR_ADR
                         , GUR_CMP
                         , GUR_NAM
                         , GURR_CD
                         , SF_GET_COMMNAME('01', 'G1', GURR_CD) AS GURR_NM
                         , GURO
                         , TO_CHAR(TO_DATE(GURD_YMD, 'YYYYMMDD'), 'YYYY/MM/DD') AS GURD_YMD
                      FROM ASNHR.T_CM_QUARANTOR
                     WHERE NVL(END_TAG, ' ') <> 'Y'
                       AND SUBSTR(GURD_YMD,1,6) >= ?
                       AND SUBSTR(GURD_YMD,1,6) <= ?
                    ) B
             WHERE B.ENO_NO     = A.ENO_NO
               --AND A.HIR_YMD   <= SYSDATE --입사일자 고려않함(20070821 김우태 대리)
               AND (A.RET_YMD IS NULL
                OR  A.RET_YMD  >= SYSDATE)
               AND A.OCC_CD     = NVL(?, A.OCC_CD)
          ORDER BY A.JOB_SEQ
                  ,A.HOB_SEQ DESC
                  ,A.HIR_YMD
                  ,A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 신원보증만기현황을 조회 한다. -->
    <sql name="PIRE010_SHR_02">
        <description>신원보증만기현황 조회(미등록자)</description>
        <query>
            <![CDATA[
            SELECT A.DPT_CD
                 , A.DPT_NM
                 , A.JOB_CD
                 , A.JOB_NM
                 , A.ENO_NO
                 , A.ENO_NM
                 , A.CET_NO
                 , TO_CHAR(A.HIR_YMD, 'YYYY/MM/DD') AS HIR_YMD
                 , '' AS ADDRESS
                 , '' AS PHN_NO
                 , '' AS GUR_NAM
                 , '' AS GURR_CD
                 , '' AS GURR_NM
                 , '' AS GURO
                 , '' AS GURD_YMD
              FROM VI_T_CM_PERSON A
                 , (SELECT ENO_NO
                      FROM ASNHR.T_CM_PERSON
                     WHERE (RET_YMD IS NULL
                        OR  RET_YMD >= TO_CHAR(SYSDATE,'YYYYMMDD'))
                       AND DPT_CD <> 'AA'
                       AND JOB_CD NOT IN ('AC','A1','A2')
                     MINUS
                    SELECT ENO_NO
                      FROM ASNHR.T_CM_QUARANTOR
                     WHERE GURD_YMD >= TO_CHAR(SYSDATE,'YYYYMMDD')
                    ) B
             WHERE A.ENO_NO = B.ENO_NO
               AND A.OCC_CD = NVL(?, A.OCC_CD)
          ORDER BY A.JOB_SEQ
                 , A.HOB_SEQ DESC
                 , A.HIR_YMD
                 , A.ENO_NO
            ]]>
        </query>
    </sql>

<!-- 인사관리 -->
<!--
***********************************************************************
* @UseCase     : PIRE020
* @description : 사회공헌활동
***********************************************************************
* 2008/03/04     김우태        최초작성.
***********************************************************************
-->
    <!-- 사회공헌활동을 조회 한다. -->
    <sql name="PIRE020_SHR">
        <description>사회공헌활동 조회</description>
        <query>
            <![CDATA[
            SELECT SF_GET_DPTNAME('01','B2',B.HEAD_CD) HEAD_NM,
                   SF_GET_DPTNAME('01','A4',B.DPT_CD)  DPT_NM,
                   SF_GET_COMMNAME('01','A2',B.JOB_CD) JOB_NM,
                   B.ENO_NO ENO_NO, B.ENO_NM ENO_NM, TO_CHAR(TO_DATE(A.STR_YMD,'YYYYMMDD'),'YYYY-MM-DD') STR_YMD,
                   ATT_OFFICE, ATT_SBJ, ATT_HOUR
              FROM ASNHR.T_CM_SERVICE A, ASNHR.T_CM_PERSON B
             WHERE A.ENO_NO = B.ENO_NO
               AND B.HEAD_CD LIKE ?
               AND B.DPT_CD LIKE ?
               AND B.ENO_NO LIKE ?
               AND A.STR_YMD BETWEEN ? AND ?
               AND (B.RET_YMD IS NULL OR B.RET_YMD >= SYSDATE)
          ORDER BY SF_GET_DPTSEQ('01','B2',B.HEAD_CD), SF_GET_DPTSEQ('01','A4',B.DPT_CD),
                   SF_GET_COMMSEQ('01','A2',B.JOB_CD), A.ENO_NO, A.STR_YMD DESC
            ]]>
        </query>
    </sql>

    <!-- 사회공헌활동을 저장 한다. -->
    <sql name="PIRE020_SAV">
        <description>사회공헌활동 조회</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_SERVICE (
			   ENO_NO, STR_YMD, ATT_CD,
			   ATT_OFFICE, ATT_SBJ, ATT_HOUR,
			   IPT_MAN, IPT_YMD, UPT_MAN,
			   UPT_YMD)
			VALUES ( ?, ?, ?,
			    ?, ?, ?,
			    ?, SYSDATE, ?, SYSDATE)
            ]]>
        </query>
    </sql>
<!--
***********************************************************************
* @UseCase     : PIRE030
* @description : 자격증/전공현황 조회
***********************************************************************
* 2008/08/18     김경주        최초작성.
***********************************************************************
-->
     <!-- 자격증현황을 조회한다. -->
     <sql name="PIRE030_SHR_01">
         <description>자격증현황 조회</description>
         <query>
               <![CDATA[
               SELECT SF_GET_DPTNAME('01','A4',DPT_CD)  AS DPT_NM,  --소속
                      SF_GET_COMMNAME('01','A2',JOB_CD) AS JOB_NM,  --직위
                      B.ENO_NO,
                      A.NAME AS ENO_NM,
                      SF_GET_COMMNAME('01','H1',QUA_CD) AS QUA_NM   --자격면허
               FROM ASNHR.T_CM_EMPLIST A, ASNHR.T_CM_QUALIFICATION B, ASNHR.T_CM_COMMON C
               WHERE A.ENO_NO = B.ENO_NO
                 AND C.CD_GBN ='H1'
                 AND B.QUA_CD = C.COMM_CD
                 AND A.RET_YMD IS NULL
                 AND COMM_NM LIKE '%'||?||'%'
                 [1]
               ORDER BY QUA_CD,  SF_GET_DPTSEQ('01','A4',A.DPT_CD),SF_GET_COMMSEQ('01','A2',A.JOB_CD), ENO_NO
               ]]>
         </query>
     </sql>

     <!-- 전공현황을 조회한다. -->
     <sql name="PIRE030_SHR_02">
          <description>전공현황 조회</description>
          <query>
                 <![CDATA[
                 SELECT SF_GET_COMMNAME('01', 'E6', MAJ_CD)      AS MAJ_NM,
                        SF_GET_DPTNAME('01','A4',DPT_CD)         AS DPT_NM,  --소속
                        SF_GET_COMMNAME('01','A2',JOB_CD)        AS JOB_NM,   --직위
                        ENO_NO,
                        ENO_NM,
                        SF_GET_SCHNM('01',EDGR_CD, SCH_CD) AS SCH_NAM
                   FROM ASNHR.T_CM_PERSON A , ASNHR.T_CM_COMMON B
                  WHERE RET_YMD IS NULL
                    AND MAJ_CD IS NOT NULL
                    AND A.MAJ_CD = B.COMM_CD
                    AND CD_GBN = 'E6'
                    AND COMM_NM LIKE '%'||?||'%'
                    [1]
                  ORDER BY MAJ_CD,  SF_GET_DPTSEQ('01','A4',DPT_CD),SF_GET_COMMSEQ('01','A2',JOB_CD), ENO_NO

                 ]]>
          </query>
     </sql>

     <!-- 자격증 트리 조회. -->
     <sql name="PIRE031_SHR_01">
         <description>자격증트리조회</description>
         <query>
               <![CDATA[
               SELECT COMM_CD, COMM_NM, CD_GBN
               FROM ASNHR.T_CM_COMMON
               WHERE CD_GBN ='H1'
               ORDER BY COMM_NM
               ]]>
         </query>
     </sql>

     <!-- 전공 상세내역 조회. -->
     <sql name="PIRE031_SHR_02">
         <description>전공트리조회</description>
         <query>
               <![CDATA[
               SELECT COMM_CD, COMM_NM, CD_GBN
                 FROM ASNHR.T_CM_COMMON
                WHERE CD_GBN ='E6'
                ORDER BY COMM_NM
               ]]>
         </query>
     </sql>

      <!-- 텍스트상세내역 조회. -->
     <sql name="PIRE031_SHR_03">
         <description>텍스트조회</description>
         <query>
               <![CDATA[
                 SELECT  COMM_CD,
                         COMM_NM,
                         CD_GBN
                 FROM    ASNHR.T_CM_COMMON
                 WHERE   CD_GBN  = ?
                 AND     COMM_NM LIKE '%'||?||'%'
                ]]>
         </query>
     </sql>
<!--
***********************************************************************
* @UseCase     : PIRE040
* @description : 보훈/장애인 현황
***********************************************************************
* 2009/08/28     장문열        최초작성.
***********************************************************************
-->

	 <!--  보훈 대상자 현황 조회 -->
     <sql name="PIRE040_SHR_01">
         <description>보훈대상자현황조회</description>
         <query>
               <![CDATA[
					SELECT     ENO_NO
								, ENO_NM
								, CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1  AGE
								, SF_GET_SCHNM('01',EDGR_CD, SCH_CD)  AS SCH_NAM
								, SF_GET_COMMNAME('01', 'E6', MAJ_CD) AS MAJ_NM
								, GUR_YMD				  AS GRD_YY
					            , SF_GET_DPTNAME('01', 'A4', DPT_CD)  AS DPT_NM
					            , TO_CHAR(HIR_YMD, 'YYYY-MM-DD') AS HIR_YMD
					            , TO_CHAR(RET_YMD, 'YYYY-MM-DD') AS RET_YMD
					            , SF_GET_COMMNAME('01', 'A1', OCC_CD) AS OCC_NM
					            , SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM
					            , SF_GET_COMMNAME('01', 'SH', MPVA_CD) AS MPVA_NM
					FROM 		T_CM_PERSON A
					WHERE   	(RET_YMD IS NULL OR EXTRACT(YEAR FROM RET_YMD) >= NVL(?, '0000'))
					AND			EXTRACT(YEAR FROM HIR_YMD) <= NVL(?, '9999')
					AND			TRIM(MPVA_CD) IS NOT NULL
					ORDER BY    HIR_YMD, SF_GET_DPTSEQ('01','A4',DPT_CD),SF_GET_COMMSEQ('01','A2',JOB_CD), ENO_NO
               ]]>
         </query>
     </sql>

	 <!-- 장애인 근로자 현황 조회 -->
     <sql name="PIRE040_SHR_02">
         <description>장애인근로자현황조회</description>
         <query>
               <![CDATA[
					SELECT		ENO_NO
								, ENO_NM
								, CET_NO
								, EM_PHN_NO
								, SF_GET_COMMNAME('01', 'SA', TRG_CD)   AS TRG_NM
								, SF_GET_COMMNAME('01', 'SB', JHDC_CD)  AS JHDC_NM
								, SF_GET_COMMNAME('01', 'SE', JHDC_GRA)	AS JHDC_GRA
								, SF_GET_COMMNAME('01', 'SC', SER_STS)	AS SER_STS
								, TO_CHAR(JAN_YMD, 'YYYY-MM-DD') AS JAN_YMD
								, TO_CHAR(HIR_YMD, 'YYYY-MM-DD') AS HIR_YMD
								, TO_CHAR(RET_YMD, 'YYYY-MM-DD') AS RET_YMD
								, SF_GET_COMMNAME('01', 'SD', JOB_OCC) AS JOB_ONM
								, '월급제'	AS	SAL_GBN
					FROM		T_CM_PERSON
					WHERE		(TRIM(TRG_CD) IS NOT NULL
					OR			TRIM(JHDC_CD) IS NOT NULL
					OR			TRIM(JHDC_GRA) IS NOT NULL
					OR			TRIM(JHDC_GRA) IS NOT NULL
					OR			TRIM(JAN_YMD) IS NOT NULL)
					AND			(RET_YMD IS NULL OR EXTRACT(YEAR FROM RET_YMD) >= NVL(?, '0000'))
					AND			EXTRACT(YEAR FROM HIR_YMD) <= NVL(?, '9999')
					ORDER BY	HIR_YMD
               ]]>
         </query>
     </sql>

	 <!-- 장애인 근로자 현황 조회 -->
     <sql name="PIRE040_PRT">
         <description>장애인근로자현황조회</description>
         <query>
               <![CDATA[
					SELECT		ROWNUM
								, ENO_NM
								, CET_NO
								, EM_PHN_NO
								, TRG_CD
								, JHDC_CD
								, JHDC_GRA
								, SER_STS
								, TO_CHAR(JAN_YMD, 'YYYY-MM-DD') AS JAN_YMD
								, TO_CHAR(HIR_YMD, 'YYYY-MM-DD') AS HIR_YMD
								, TO_CHAR(RET_YMD, 'YYYY-MM-DD') AS RET_YMD
								, JOB_OCC
								, '2'	AS	SAL_GBN
					FROM		T_CM_PERSON
					WHERE		(TRIM(TRG_CD) IS NOT NULL
					OR			TRIM(JHDC_CD) IS NOT NULL
					OR			TRIM(JHDC_GRA) IS NOT NULL
					OR			TRIM(JHDC_GRA) IS NOT NULL
					OR			TRIM(JAN_YMD) IS NOT NULL)
					AND			(RET_YMD IS NULL OR EXTRACT(YEAR FROM RET_YMD) >= NVL(?, '0000'))
					AND			EXTRACT(YEAR FROM HIR_YMD) <= NVL(?, '9999')
					ORDER BY	HIR_YMD

               ]]>
         </query>
     </sql>




<!--
***********************************************************************
* @UseCase     : PIRH010
* @description : 직급별,연령별인원현황
***********************************************************************
* 2007/01/04     채갑병        최초작성.
***********************************************************************
-->
    <!-- 직급별,연령별인원현황을 조회 한다. -->
    <sql name="PIRH010_SHR">
        <description>직급별,연령별인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT *
             FROM   VI_T_CM_PERSON
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : PIRH020
* @description : 직급별,출신학교별인원현황
***********************************************************************
* 2007/01/03     채갑병        최초작성.
***********************************************************************
-->
    <!-- 직급별,출신학교별인원현황을 조회 한다. -->
    <sql name="PIRH020_SHR">
        <description>직급별,출신학교별인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT '구분' JOB_NM
                   ,'총원' CNT_TOT
                   ,MAX(DECODE(D.RN, '1',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_01
                   ,MAX(DECODE(D.RN, '2',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_02
                   ,MAX(DECODE(D.RN, '3',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_03
                   ,MAX(DECODE(D.RN, '4',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_04
                   ,MAX(DECODE(D.RN, '5',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_05
                   ,MAX(DECODE(D.RN, '6',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_06
                   ,MAX(DECODE(D.RN, '7',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_07
                   ,MAX(DECODE(D.RN, '8',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_08
                   ,MAX(DECODE(D.RN, '9',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_09
                   ,MAX(DECODE(D.RN,'10',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_10
                   ,MAX(DECODE(D.RN,'11',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_11
                   ,MAX(DECODE(D.RN,'12',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_12
                   ,MAX(DECODE(D.RN,'13',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_13
                   ,MAX(DECODE(D.RN,'14',SF_GET_COMMNAME('01', ?, D.SCH_CD),'')) SCH_14
--  학력구분에 모두 추가시 아래부분으로 대치요망
--                   ,MAX(DECODE(D.RN, '1',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_01
--                   ,MAX(DECODE(D.RN, '2',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_02
--                   ,MAX(DECODE(D.RN, '3',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_03
--                   ,MAX(DECODE(D.RN, '4',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_04
--                   ,MAX(DECODE(D.RN, '5',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_05
--                   ,MAX(DECODE(D.RN, '6',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_06
--                   ,MAX(DECODE(D.RN, '7',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_07
--                   ,MAX(DECODE(D.RN, '8',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_08
--                   ,MAX(DECODE(D.RN, '9',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_09
--                   ,MAX(DECODE(D.RN,'10',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_10
--                   ,MAX(DECODE(D.RN,'11',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_11
--                   ,MAX(DECODE(D.RN,'12',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_12
--                   ,MAX(DECODE(D.RN,'13',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_13
--                   ,MAX(DECODE(D.RN,'14',SF_GET_COMMNAME('01', DECODE(D.EDGR_CD,'2','E8','3','E2','4','E3','5','E4','6','E5','7','E5','8','E5',''), D.SCH_CD),'')) SCH_14
                   ,'기타' CNT_ETC
                   , 0
             FROM ( SELECT SCH_CD, ROW_NUMBER() OVER(ORDER BY COUNT(*) DESC,SCH_CD) RN, EDGR_CD
                    FROM   VI_T_CM_PERSON2 VI
                    WHERE  1=1
                    [1]
                    GROUP  BY SCH_CD, EDGR_CD
                   ) D
             WHERE  D.RN <= 14
             UNION  ALL
             SELECT SF_GET_COMMNAME('01', 'A2', A.JOB_CD)
                   ,TO_CHAR(SUM(A.CNT)) CNT_TOT
                   ,TO_CHAR(SUM(DECODE(B.RN, 1,A.CNT))) SCH_01
                   ,TO_CHAR(SUM(DECODE(B.RN, 2,A.CNT))) SCH_02
                   ,TO_CHAR(SUM(DECODE(B.RN, 3,A.CNT))) SCH_03
                   ,TO_CHAR(SUM(DECODE(B.RN, 4,A.CNT))) SCH_04
                   ,TO_CHAR(SUM(DECODE(B.RN, 5,A.CNT))) SCH_05
                   ,TO_CHAR(SUM(DECODE(B.RN, 6,A.CNT))) SCH_06
                   ,TO_CHAR(SUM(DECODE(B.RN, 7,A.CNT))) SCH_07
                   ,TO_CHAR(SUM(DECODE(B.RN, 8,A.CNT))) SCH_08
                   ,TO_CHAR(SUM(DECODE(B.RN, 9,A.CNT))) SCH_09
                   ,TO_CHAR(SUM(DECODE(B.RN,10,A.CNT))) SCH_10
                   ,TO_CHAR(SUM(DECODE(B.RN,11,A.CNT))) SCH_11
                   ,TO_CHAR(SUM(DECODE(B.RN,12,A.CNT))) SCH_12
                   ,TO_CHAR(SUM(DECODE(B.RN,13,A.CNT))) SCH_13
                   ,TO_CHAR(SUM(DECODE(B.RN,14,A.CNT))) SCH_14
                   ,TO_CHAR(SUM(CASE WHEN B.RN > 14
                                     THEN A.CNT
                                     WHEN A.SCH_CD IS NULL
                                     THEN A.CNT
                                END)) CNT_ETC
                   , COUNT(*) OVER (ORDER BY job_seq)
             FROM (
                    SELECT VI.JOB_CD AS JOB_CD, VI.JOB_SEQ AS JOB_SEQ, VI.SCH_CD, COUNT(*) CNT, A2.GBN2_TAG AS TJOB_CD
                    FROM   VI_T_CM_PERSON2 VI
                    LEFT JOIN ASNHR.T_CM_COMMON A2 ON A2.CD_GBN='A2'
                    WHERE  1=1
                    AND    VI.JOB_CD = A2.COMM_CD
                    [2]
                    GROUP  BY VI.JOB_CD, VI.JOB_SEQ, VI.SCH_CD, A2.GBN2_TAG
                   ) A,
                  ( SELECT SCH_CD, ROW_NUMBER() OVER(ORDER BY COUNT(*) DESC,SCH_CD) RN
                    FROM   VI_T_CM_PERSON2 VI
                    WHERE  1=1
                    [4]
                    GROUP  BY SCH_CD
                   ) B
             WHERE A.SCH_CD = B.SCH_CD(+)
             GROUP BY A.JOB_SEQ, A.JOB_CD
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : PIRH030
* @description : 근속년수별인원현황
***********************************************************************
* 2007/01/04     채갑병        최초작성.
***********************************************************************
-->
    <!-- 근속년수별인원현황을 조회 한다. -->
    <sql name="PIRH030_SHR">
        <description>근속년수별인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT  DECODE(J.NO, 1, RN   , RN) AS RN
                    ,DECODE(J.NO, 1, JOB_NM   , JOB_NM) AS JOB_NM
                    ,DECODE(J.NO, 1, HIR_TOT  , ROUND( (HIR_TOT/(MAX(HIR_TOT) OVER (PARTITION BY J.NO) )* 100),1)) AS HIR_TOT
                    ,DECODE(J.NO, 1, FLOOR((HIR_MON/HIR_TOT)/12) ||'년 '|| FLOOR(MOD(HIR_MON/HIR_TOT,12))||'개월', '') AS HIR_AVG
                    ,DECODE(J.NO, 1, DECODE(HIR_01, NULL, '', HIR_01) , DECODE(HIR_01, NULL, '', ROUND( (HIR_01/HIR_TOT)*100,1)||'%') ) AS HIR_01
                    ,DECODE(J.NO, 1, DECODE(HIR_02, NULL, '', HIR_02) , DECODE(HIR_02, NULL, '', ROUND( (HIR_02/HIR_TOT)*100,1)||'%') ) AS HIR_02
                    ,DECODE(J.NO, 1, DECODE(HIR_03, NULL, '', HIR_03) , DECODE(HIR_03, NULL, '', ROUND( (HIR_03/HIR_TOT)*100,1)||'%') ) AS HIR_03
                    ,DECODE(J.NO, 1, DECODE(HIR_04, NULL, '', HIR_04) , DECODE(HIR_04, NULL, '', ROUND( (HIR_04/HIR_TOT)*100,1)||'%') ) AS HIR_04
                    ,DECODE(J.NO, 1, DECODE(HIR_05, NULL, '', HIR_05) , DECODE(HIR_05, NULL, '', ROUND( (HIR_05/HIR_TOT)*100,1)||'%') ) AS HIR_05
                    ,DECODE(J.NO, 1, DECODE(HIR_06, NULL, '', HIR_06) , DECODE(HIR_06, NULL, '', ROUND( (HIR_06/HIR_TOT)*100,1)||'%') ) AS HIR_06
                    ,DECODE(J.NO, 1, DECODE(HIR_07, NULL, '', HIR_07) , DECODE(HIR_07, NULL, '', ROUND( (HIR_07/HIR_TOT)*100,1)||'%') ) AS HIR_07
                    ,DECODE(J.NO, 1, DECODE(HIR_08, NULL, '', HIR_08) , DECODE(HIR_08, NULL, '', ROUND( (HIR_08/HIR_TOT)*100,1)||'%') ) AS HIR_08
                    ,DECODE(J.NO, 1, DECODE(HIR_09, NULL, '', HIR_09) , DECODE(HIR_09, NULL, '', ROUND( (HIR_09/HIR_TOT)*100,1)||'%') ) AS HIR_09
                    ,DECODE(J.NO, 1, DECODE(HIR_10, NULL, '', HIR_10) , DECODE(HIR_10, NULL, '', ROUND( (HIR_10/HIR_TOT)*100,1)||'%') ) AS HIR_10
                    ,DECODE(J.NO, 1, DECODE(HIR_11, NULL, '', HIR_11) , DECODE(HIR_11, NULL, '', ROUND( (HIR_11/HIR_TOT)*100,1)||'%') ) AS HIR_11
                    ,DECODE(J.NO, 1, DECODE(HIR_12, NULL, '', HIR_12) , DECODE(HIR_12, NULL, '', ROUND( (HIR_12/HIR_TOT)*100,1)||'%') ) AS HIR_12
                    ,DECODE(J.NO, 1, DECODE(HIR_13, NULL, '', HIR_13) , DECODE(HIR_13, NULL, '', ROUND( (HIR_13/HIR_TOT)*100,1)||'%') ) AS HIR_13
                    ,DECODE(J.NO, 1, DECODE(HIR_14, NULL, '', HIR_14) , DECODE(HIR_14, NULL, '', ROUND( (HIR_14/HIR_TOT)*100,1)||'%') ) AS HIR_14
                    ,DECODE(J.NO, 1, DECODE(HIR_15, NULL, '', HIR_15) , DECODE(HIR_15, NULL, '', ROUND( (HIR_15/HIR_TOT)*100,1)||'%') ) AS HIR_15
                    ,DECODE(J.NO, 1, DECODE(HIR_16, NULL, '', HIR_16) , DECODE(HIR_16, NULL, '', ROUND( (HIR_16/HIR_TOT)*100,1)||'%') ) AS HIR_16
                    ,DECODE(J.NO, 1, DECODE(HIR_17, NULL, '', HIR_17) , DECODE(HIR_17, NULL, '', ROUND( (HIR_17/HIR_TOT)*100,1)||'%') ) AS HIR_17
                    ,DECODE(J.NO, 1, DECODE(HIR_18, NULL, '', HIR_18) , DECODE(HIR_18, NULL, '', ROUND( (HIR_18/HIR_TOT)*100,1)||'%') ) AS HIR_18
                    ,DECODE(J.NO, 1, DECODE(HIR_19, NULL, '', HIR_19) , DECODE(HIR_19, NULL, '', ROUND( (HIR_19/HIR_TOT)*100,1)||'%') ) AS HIR_19
                    ,DECODE(J.NO, 1, DECODE(HIR_20, NULL, '', HIR_20) , DECODE(HIR_20, NULL, '', ROUND( (HIR_20/HIR_TOT)*100,1)||'%') ) AS HIR_20
                    ,DECODE(J.NO, 1, DECODE(HIR_21, NULL, '', HIR_21) , DECODE(HIR_21, NULL, '', ROUND( (HIR_21/HIR_TOT)*100,1)||'%') ) AS HIR_21
             FROM (
                   SELECT  DECODE(L.NO, 1, ROW_NUMBER() OVER(ORDER BY L.NO), '') RN
                          ,DECODE(L.NO, 1, K.JOB_SEQ, 999) JOB_SEQ
                          ,DECODE(L.NO, 1, K.JOB_NM, '합계') JOB_NM
                          ,DECODE(L.NO, 1, SUM(K.HIR_MON), SUM(K.HIR_MON) ) AS HIR_MON
                          ,SUM(K.HIR_TOT) AS HIR_TOT
                          ,SUM(K.HIR_01)  AS HIR_01
                          ,SUM(K.HIR_02)  AS HIR_02
                          ,SUM(K.HIR_03)  AS HIR_03
                          ,SUM(K.HIR_04)  AS HIR_04
                          ,SUM(K.HIR_05)  AS HIR_05
                          ,SUM(K.HIR_06)  AS HIR_06
                          ,SUM(K.HIR_07)  AS HIR_07
                          ,SUM(K.HIR_08)  AS HIR_08
                          ,SUM(K.HIR_09)  AS HIR_09
                          ,SUM(K.HIR_10)  AS HIR_10
                          ,SUM(K.HIR_11)  AS HIR_11
                          ,SUM(K.HIR_12)  AS HIR_12
                          ,SUM(K.HIR_13)  AS HIR_13
                          ,SUM(K.HIR_14)  AS HIR_14
                          ,SUM(K.HIR_15)  AS HIR_15
                          ,SUM(K.HIR_16)  AS HIR_16
                          ,SUM(K.HIR_17)  AS HIR_17
                          ,SUM(K.HIR_18)  AS HIR_18
                          ,SUM(K.HIR_19)  AS HIR_19
                          ,SUM(K.HIR_20)  AS HIR_20
                          ,SUM(K.HIR_21)  AS HIR_21
                   FROM (
                         SELECT A.JOB_NM, A.JOB_SEQ, A.HIR_TOT
                               ,( DECODE(T01.HIR_MON,NULL,0,T01.HIR_MON) + DECODE(T02.HIR_MON,NULL,0,T02.HIR_MON) + DECODE(T03.HIR_MON,NULL,0,T03.HIR_MON)
                                + DECODE(T04.HIR_MON,NULL,0,T04.HIR_MON) + DECODE(T05.HIR_MON,NULL,0,T05.HIR_MON) + DECODE(T06.HIR_MON,NULL,0,T06.HIR_MON)
                                + DECODE(T07.HIR_MON,NULL,0,T07.HIR_MON) + DECODE(T08.HIR_MON,NULL,0,T08.HIR_MON) + DECODE(T09.HIR_MON,NULL,0,T09.HIR_MON)
                                + DECODE(T10.HIR_MON,NULL,0,T10.HIR_MON) + DECODE(T11.HIR_MON,NULL,0,T11.HIR_MON) + DECODE(T12.HIR_MON,NULL,0,T12.HIR_MON)
                                + DECODE(T13.HIR_MON,NULL,0,T13.HIR_MON) + DECODE(T14.HIR_MON,NULL,0,T14.HIR_MON) + DECODE(T15.HIR_MON,NULL,0,T15.HIR_MON)
                                + DECODE(T16.HIR_MON,NULL,0,T16.HIR_MON) + DECODE(T17.HIR_MON,NULL,0,T17.HIR_MON) + DECODE(T18.HIR_MON,NULL,0,T18.HIR_MON)
                                + DECODE(T19.HIR_MON,NULL,0,T19.HIR_MON) + DECODE(T20.HIR_MON,NULL,0,T20.HIR_MON) + DECODE(T21.HIR_MON,NULL,0,T21.HIR_MON)
                                ) AS HIR_MON
                               ,T01.HIR_01,T02.HIR_02,T03.HIR_03,T04.HIR_04,T05.HIR_05,T06.HIR_06,T07.HIR_07,T08.HIR_08,T09.HIR_09,T10.HIR_10
                               ,T11.HIR_11,T12.HIR_12,T13.HIR_13,T14.HIR_14,T15.HIR_15,T16.HIR_16,T17.HIR_17,T18.HIR_18,T19.HIR_19,T20.HIR_20,T21.HIR_21
                         FROM  ( SELECT JOB_NM, MAX(JOB_SEQ) AS JOB_SEQ, COUNT(*) AS HIR_TOT
                                 FROM   VI_T_CM_PERSON
                                 WHERE  1=1
                                 [1]
                                 GROUP BY  JOB_NM
                                ) A
                              ,( SELECT JOB_NM, COUNT(*) HIR_01, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 1
                                 [2]
                                 GROUP BY JOB_NM
                                ) T01
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_02, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 1
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 2
                                 [3]
                                 GROUP BY JOB_NM
                                ) T02
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_03, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 2
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 3
                                 [4]
                                 GROUP BY JOB_NM
                                ) T03
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_04, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 3
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 4
                                 [5]
                                 GROUP BY JOB_NM
                                ) T04
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_05, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 4
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 5
                                 [6]
                                 GROUP BY JOB_NM
                                ) T05
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_06, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 5
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 6
                                 [7]
                                 GROUP BY JOB_NM
                                ) T06
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_07, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 6
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 7
                                 [8]
                                 GROUP BY JOB_NM
                                ) T07
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_08, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 7
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 8
                                 [9]
                                 GROUP BY JOB_NM
                                ) T08
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_09, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 8
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 9
                                 [10]
                                 GROUP BY JOB_NM
                                ) T09
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_10, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 9
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 10
                                 [11]
                                 GROUP BY JOB_NM
                                ) T10
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_11, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 10
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 11
                                 [12]
                                 GROUP BY JOB_NM
                                ) T11
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_12, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 11
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 12
                                 [13]
                                 GROUP BY JOB_NM
                                ) T12
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_13, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 12
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 13
                                 [14]
                                 GROUP BY JOB_NM
                                ) T13
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_14, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 13
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 14
                                 [15]
                                 GROUP BY JOB_NM
                                ) T14
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_15, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 14
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 15
                                 [16]
                                 GROUP BY JOB_NM
                                ) T15
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_16, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 15
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 16
                                 [17]
                                 GROUP BY JOB_NM
                                ) T16
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_17, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 16
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 17
                                 [18]
                                 GROUP BY JOB_NM
                                ) T17
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_18, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 17
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 18
                                 [19]
                                 GROUP BY JOB_NM
                                ) T18
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_19, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 18
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 19
                                 [20]
                                 GROUP BY JOB_NM
                                ) T19
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_20, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 19
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 20
                                 [21]
                                 GROUP BY JOB_NM
                                ) T20
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_21, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 20
                                 [22]
                                 GROUP BY JOB_NM
                                ) T21
                         WHERE  A.JOB_NM = T01.JOB_NM(+)
                         AND    A.JOB_NM = T02.JOB_NM(+)
                         AND    A.JOB_NM = T03.JOB_NM(+)
                         AND    A.JOB_NM = T04.JOB_NM(+)
                         AND    A.JOB_NM = T05.JOB_NM(+)
                         AND    A.JOB_NM = T06.JOB_NM(+)
                         AND    A.JOB_NM = T07.JOB_NM(+)
                         AND    A.JOB_NM = T08.JOB_NM(+)
                         AND    A.JOB_NM = T09.JOB_NM(+)
                         AND    A.JOB_NM = T10.JOB_NM(+)
                         AND    A.JOB_NM = T11.JOB_NM(+)
                         AND    A.JOB_NM = T12.JOB_NM(+)
                         AND    A.JOB_NM = T13.JOB_NM(+)
                         AND    A.JOB_NM = T14.JOB_NM(+)
                         AND    A.JOB_NM = T15.JOB_NM(+)
                         AND    A.JOB_NM = T16.JOB_NM(+)
                         AND    A.JOB_NM = T17.JOB_NM(+)
                         AND    A.JOB_NM = T18.JOB_NM(+)
                         AND    A.JOB_NM = T19.JOB_NM(+)
                         AND    A.JOB_NM = T20.JOB_NM(+)
                         AND    A.JOB_NM = T21.JOB_NM(+)
                         ORDER  BY JOB_SEQ
                        ) K,
                       ( SELECT 1 AS NO FROM DUAL UNION ALL
                         SELECT 2 AS NO FROM DUAL
                        ) L
                   GROUP BY L.NO, DECODE(L.NO, 1, K.JOB_SEQ, 999), DECODE(L.NO, 1, K.JOB_NM, '합계')
                  ) I,
                 ( SELECT 1 AS NO FROM DUAL UNION ALL
                   SELECT 2 AS NO FROM DUAL
                  ) J
            ORDER BY I.JOB_SEQ,DECODE(J.NO, 1, FLOOR((HIR_MON/HIR_TOT)/12) ||'년 '|| FLOOR(MOD(HIR_MON/HIR_TOT,12))||'개월', '')
            ]]>
        </query>
    </sql>

    <!-- 근속년수별인원현황을 조회 한다. -->
    <sql name="PIRH030_10_SHR">
        <description>근속년수별인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT  DECODE(J.NO, 1, RN   , RN) AS RN
                    ,DECODE(J.NO, 1, JOB_NM   , JOB_NM) AS JOB_NM
                    ,DECODE(J.NO, 1, HIR_TOT  , ROUND( (HIR_TOT/(MAX(HIR_TOT) OVER (PARTITION BY J.NO) )* 100),1)) AS HIR_TOT
                    ,DECODE(J.NO, 1, FLOOR((HIR_MON/HIR_TOT)/12) ||'년 '|| FLOOR(MOD(HIR_MON/HIR_TOT,12))||'개월', '') AS HIR_AVG
                    ,DECODE(J.NO, 1, DECODE(HIR_01, NULL, '', HIR_01) , DECODE(HIR_01, NULL, '', ROUND( (HIR_01/HIR_TOT)*100,1)||'%') ) AS HIR_01
                    ,DECODE(J.NO, 1, DECODE(HIR_02, NULL, '', HIR_02) , DECODE(HIR_02, NULL, '', ROUND( (HIR_02/HIR_TOT)*100,1)||'%') ) AS HIR_02
                    ,DECODE(J.NO, 1, DECODE(HIR_03, NULL, '', HIR_03) , DECODE(HIR_03, NULL, '', ROUND( (HIR_03/HIR_TOT)*100,1)||'%') ) AS HIR_03
                    ,DECODE(J.NO, 1, DECODE(HIR_04, NULL, '', HIR_04) , DECODE(HIR_04, NULL, '', ROUND( (HIR_04/HIR_TOT)*100,1)||'%') ) AS HIR_04
                    ,DECODE(J.NO, 1, DECODE(HIR_05, NULL, '', HIR_05) , DECODE(HIR_05, NULL, '', ROUND( (HIR_05/HIR_TOT)*100,1)||'%') ) AS HIR_05
                    ,DECODE(J.NO, 1, DECODE(HIR_06, NULL, '', HIR_06) , DECODE(HIR_06, NULL, '', ROUND( (HIR_06/HIR_TOT)*100,1)||'%') ) AS HIR_06
                    ,DECODE(J.NO, 1, DECODE(HIR_07, NULL, '', HIR_07) , DECODE(HIR_07, NULL, '', ROUND( (HIR_07/HIR_TOT)*100,1)||'%') ) AS HIR_07
                    ,DECODE(J.NO, 1, DECODE(HIR_08, NULL, '', HIR_08) , DECODE(HIR_08, NULL, '', ROUND( (HIR_08/HIR_TOT)*100,1)||'%') ) AS HIR_08
                    ,DECODE(J.NO, 1, DECODE(HIR_09, NULL, '', HIR_09) , DECODE(HIR_09, NULL, '', ROUND( (HIR_09/HIR_TOT)*100,1)||'%') ) AS HIR_09
                    ,DECODE(J.NO, 1, DECODE(HIR_10, NULL, '', HIR_10) , DECODE(HIR_10, NULL, '', ROUND( (HIR_10/HIR_TOT)*100,1)||'%') ) AS HIR_10
                    ,DECODE(J.NO, 1, DECODE(HIR_11, NULL, '', HIR_11) , DECODE(HIR_11, NULL, '', ROUND( (HIR_11/HIR_TOT)*100,1)||'%') ) AS HIR_11
                    ,DECODE(J.NO, 1, DECODE(HIR_12, NULL, '', HIR_12) , DECODE(HIR_12, NULL, '', ROUND( (HIR_12/HIR_TOT)*100,1)||'%') ) AS HIR_12
                    ,DECODE(J.NO, 1, DECODE(HIR_13, NULL, '', HIR_13) , DECODE(HIR_13, NULL, '', ROUND( (HIR_13/HIR_TOT)*100,1)||'%') ) AS HIR_13
                    ,DECODE(J.NO, 1, DECODE(HIR_14, NULL, '', HIR_14) , DECODE(HIR_14, NULL, '', ROUND( (HIR_14/HIR_TOT)*100,1)||'%') ) AS HIR_14
                    ,DECODE(J.NO, 1, DECODE(HIR_15, NULL, '', HIR_15) , DECODE(HIR_15, NULL, '', ROUND( (HIR_15/HIR_TOT)*100,1)||'%') ) AS HIR_15
                    ,DECODE(J.NO, 1, DECODE(HIR_16, NULL, '', HIR_16) , DECODE(HIR_16, NULL, '', ROUND( (HIR_16/HIR_TOT)*100,1)||'%') ) AS HIR_16
                    ,DECODE(J.NO, 1, DECODE(HIR_17, NULL, '', HIR_17) , DECODE(HIR_17, NULL, '', ROUND( (HIR_17/HIR_TOT)*100,1)||'%') ) AS HIR_17
                    ,DECODE(J.NO, 1, DECODE(HIR_18, NULL, '', HIR_18) , DECODE(HIR_18, NULL, '', ROUND( (HIR_18/HIR_TOT)*100,1)||'%') ) AS HIR_18
                    ,DECODE(J.NO, 1, DECODE(HIR_19, NULL, '', HIR_19) , DECODE(HIR_19, NULL, '', ROUND( (HIR_19/HIR_TOT)*100,1)||'%') ) AS HIR_19
                    ,DECODE(J.NO, 1, DECODE(HIR_20, NULL, '', HIR_20) , DECODE(HIR_20, NULL, '', ROUND( (HIR_20/HIR_TOT)*100,1)||'%') ) AS HIR_20
                    ,DECODE(J.NO, 1, DECODE(HIR_21, NULL, '', HIR_21) , DECODE(HIR_21, NULL, '', ROUND( (HIR_21/HIR_TOT)*100,1)||'%') ) AS HIR_21
             FROM (
                   SELECT  DECODE(L.NO, 1, ROW_NUMBER() OVER(ORDER BY L.NO), '') RN
                          ,DECODE(L.NO, 1, K.JOB_SEQ, 999) JOB_SEQ
                          ,DECODE(L.NO, 1, K.JOB_NM, '합계') JOB_NM
                          ,DECODE(L.NO, 1, SUM(K.HIR_MON), SUM(K.HIR_MON) ) AS HIR_MON
                          ,SUM(K.HIR_TOT) AS HIR_TOT
                          ,SUM(K.HIR_01)  AS HIR_01
                          ,SUM(K.HIR_02)  AS HIR_02
                          ,SUM(K.HIR_03)  AS HIR_03
                          ,SUM(K.HIR_04)  AS HIR_04
                          ,SUM(K.HIR_05)  AS HIR_05
                          ,SUM(K.HIR_06)  AS HIR_06
                          ,SUM(K.HIR_07)  AS HIR_07
                          ,SUM(K.HIR_08)  AS HIR_08
                          ,SUM(K.HIR_09)  AS HIR_09
                          ,SUM(K.HIR_10)  AS HIR_10
                          ,SUM(K.HIR_11)  AS HIR_11
                          ,SUM(K.HIR_12)  AS HIR_12
                          ,SUM(K.HIR_13)  AS HIR_13
                          ,SUM(K.HIR_14)  AS HIR_14
                          ,SUM(K.HIR_15)  AS HIR_15
                          ,SUM(K.HIR_16)  AS HIR_16
                          ,SUM(K.HIR_17)  AS HIR_17
                          ,SUM(K.HIR_18)  AS HIR_18
                          ,SUM(K.HIR_19)  AS HIR_19
                          ,SUM(K.HIR_20)  AS HIR_20
                          ,SUM(K.HIR_21)  AS HIR_21
                   FROM (
                         SELECT A.JOB_NM, A.JOB_SEQ, A.HIR_TOT
                               ,( DECODE(T01.HIR_MON,NULL,0,T01.HIR_MON) + DECODE(T02.HIR_MON,NULL,0,T02.HIR_MON) + DECODE(T03.HIR_MON,NULL,0,T03.HIR_MON)
                                + DECODE(T04.HIR_MON,NULL,0,T04.HIR_MON) + DECODE(T05.HIR_MON,NULL,0,T05.HIR_MON) + DECODE(T06.HIR_MON,NULL,0,T06.HIR_MON)
                                + DECODE(T07.HIR_MON,NULL,0,T07.HIR_MON) + DECODE(T08.HIR_MON,NULL,0,T08.HIR_MON) + DECODE(T09.HIR_MON,NULL,0,T09.HIR_MON)
                                + DECODE(T10.HIR_MON,NULL,0,T10.HIR_MON) + DECODE(T11.HIR_MON,NULL,0,T11.HIR_MON) + DECODE(T12.HIR_MON,NULL,0,T12.HIR_MON)
                                + DECODE(T13.HIR_MON,NULL,0,T13.HIR_MON) + DECODE(T14.HIR_MON,NULL,0,T14.HIR_MON) + DECODE(T15.HIR_MON,NULL,0,T15.HIR_MON)
                                + DECODE(T16.HIR_MON,NULL,0,T16.HIR_MON) + DECODE(T17.HIR_MON,NULL,0,T17.HIR_MON) + DECODE(T18.HIR_MON,NULL,0,T18.HIR_MON)
                                + DECODE(T19.HIR_MON,NULL,0,T19.HIR_MON) + DECODE(T20.HIR_MON,NULL,0,T20.HIR_MON) + DECODE(T21.HIR_MON,NULL,0,T21.HIR_MON)
                                ) AS HIR_MON
                               ,T01.HIR_01,T02.HIR_02,T03.HIR_03,T04.HIR_04,T05.HIR_05,T06.HIR_06,T07.HIR_07,T08.HIR_08,T09.HIR_09,T10.HIR_10
                               ,T11.HIR_11,T12.HIR_12,T13.HIR_13,T14.HIR_14,T15.HIR_15,T16.HIR_16,T17.HIR_17,T18.HIR_18,T19.HIR_19,T20.HIR_20,T21.HIR_21
                         FROM  ( SELECT JOB_NM, MAX(JOB_SEQ) AS JOB_SEQ, COUNT(*) AS HIR_TOT
                                 FROM   VI_T_CM_PERSON
                                 WHERE  1=1
                                 [1]
                                 GROUP BY  JOB_NM
                                ) A
                              ,( SELECT JOB_NM, COUNT(*) HIR_01, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 1
                                 [2]
                                 GROUP BY JOB_NM
                                ) T01
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_02, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 1
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 2
                                 [3]
                                 GROUP BY JOB_NM
                                ) T02
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_03, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 2
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 3
                                 [4]
                                 GROUP BY JOB_NM
                                ) T03
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_04, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 3
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 4
                                 [5]
                                 GROUP BY JOB_NM
                                ) T04
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_05, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 4
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 5
                                 [6]
                                 GROUP BY JOB_NM
                                ) T05
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_06, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 5
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 6
                                 [7]
                                 GROUP BY JOB_NM
                                ) T06
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_07, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 6
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 7
                                 [8]
                                 GROUP BY JOB_NM
                                ) T07
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_08, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 7
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 8
                                 [9]
                                 GROUP BY JOB_NM
                                ) T08
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_09, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 8
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 9
                                 [10]
                                 GROUP BY JOB_NM
                                ) T09
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_10, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 9
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 10
                                 [11]
                                 GROUP BY JOB_NM
                                ) T10
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_11, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 10
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 11
                                 [12]
                                 GROUP BY JOB_NM
                                ) T11
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_12, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 11
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 12
                                 [13]
                                 GROUP BY JOB_NM
                                ) T12
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_13, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 12
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 13
                                 [14]
                                 GROUP BY JOB_NM
                                ) T13
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_14, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 13
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 14
                                 [15]
                                 GROUP BY JOB_NM
                                ) T14
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_15, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 14
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 15
                                 [16]
                                 GROUP BY JOB_NM
                                ) T15
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_16, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 15
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 16
                                 [17]
                                 GROUP BY JOB_NM
                                ) T16
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_17, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 16
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 17
                                 [18]
                                 GROUP BY JOB_NM
                                ) T17
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_18, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 17
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 18
                                 [19]
                                 GROUP BY JOB_NM
                                ) T18
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_19, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 18
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 19
                                 [20]
                                 GROUP BY JOB_NM
                                ) T19
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_20, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 19
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 20
                                 [21]
                                 GROUP BY JOB_NM
                                ) T20
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_21, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 20
                                 [22]
                                 GROUP BY JOB_NM
                                ) T21
                         WHERE  A.JOB_NM = T01.JOB_NM(+)
                         AND    A.JOB_NM = T02.JOB_NM(+)
                         AND    A.JOB_NM = T03.JOB_NM(+)
                         AND    A.JOB_NM = T04.JOB_NM(+)
                         AND    A.JOB_NM = T05.JOB_NM(+)
                         AND    A.JOB_NM = T06.JOB_NM(+)
                         AND    A.JOB_NM = T07.JOB_NM(+)
                         AND    A.JOB_NM = T08.JOB_NM(+)
                         AND    A.JOB_NM = T09.JOB_NM(+)
                         AND    A.JOB_NM = T10.JOB_NM(+)
                         AND    A.JOB_NM = T11.JOB_NM(+)
                         AND    A.JOB_NM = T12.JOB_NM(+)
                         AND    A.JOB_NM = T13.JOB_NM(+)
                         AND    A.JOB_NM = T14.JOB_NM(+)
                         AND    A.JOB_NM = T15.JOB_NM(+)
                         AND    A.JOB_NM = T16.JOB_NM(+)
                         AND    A.JOB_NM = T17.JOB_NM(+)
                         AND    A.JOB_NM = T18.JOB_NM(+)
                         AND    A.JOB_NM = T19.JOB_NM(+)
                         AND    A.JOB_NM = T20.JOB_NM(+)
                         AND    A.JOB_NM = T21.JOB_NM(+)
                         ORDER  BY JOB_SEQ
                        ) K,
                       ( SELECT 1 AS NO FROM DUAL UNION ALL
                         SELECT 2 AS NO FROM DUAL
                        ) L
                   GROUP BY L.NO, DECODE(L.NO, 1, K.JOB_SEQ, 999), DECODE(L.NO, 1, K.JOB_NM, '합계')
                  ) I,
                 ( SELECT 1 AS NO FROM DUAL UNION ALL
                   SELECT 2 AS NO FROM DUAL
                  ) J
            ORDER BY I.JOB_SEQ,DECODE(J.NO, 1, FLOOR((HIR_MON/HIR_TOT)/12) ||'년 '|| FLOOR(MOD(HIR_MON/HIR_TOT,12))||'개월', '')
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : PIRH030_PRT
* @description : 근속년수별인원현황
***********************************************************************
* 2007/03/24     방석호        최초작성.
***********************************************************************
-->
    <!-- 근속년수별인원현황을 조회 한다. -->
    <sql name="PIRH030_PRT">
        <description>근속년수별인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT  RN
                    ,JOB_NM
                    ,HIR_TOT
                    ,(FLOOR((HIR_MON/HIR_TOT)/12) ||'년 '|| FLOOR(MOD(HIR_MON/HIR_TOT,12))||'개월') AS HIR_AVG
                    ,HIR_01
                    ,HIR_02
                    ,HIR_03
                    ,HIR_04
                    ,HIR_05
                    ,HIR_06
                    ,HIR_07
                    ,HIR_08
                    ,HIR_09
                    ,HIR_10
                    ,HIR_11
                    ,HIR_12
                    ,HIR_13
                    ,HIR_14
                    ,HIR_15
                    ,HIR_16
                    ,HIR_17
                    ,HIR_18
                    ,HIR_19
                    ,HIR_20
                    ,HIR_21
                FROM (
                   SELECT  DECODE(L.NO, 1, ROW_NUMBER() OVER(ORDER BY L.NO), '') RN
                          ,DECODE(L.NO, 1, K.JOB_SEQ, 999) JOB_SEQ
                          ,DECODE(L.NO, 1, K.JOB_NM, '합계') JOB_NM
                          ,DECODE(L.NO, 1, SUM(K.HIR_MON), SUM(K.HIR_MON) ) AS HIR_MON
                          ,SUM(K.HIR_TOT) AS HIR_TOT
                          ,SUM(K.HIR_01)  AS HIR_01
                          ,SUM(K.HIR_02)  AS HIR_02
                          ,SUM(K.HIR_03)  AS HIR_03
                          ,SUM(K.HIR_04)  AS HIR_04
                          ,SUM(K.HIR_05)  AS HIR_05
                          ,SUM(K.HIR_06)  AS HIR_06
                          ,SUM(K.HIR_07)  AS HIR_07
                          ,SUM(K.HIR_08)  AS HIR_08
                          ,SUM(K.HIR_09)  AS HIR_09
                          ,SUM(K.HIR_10)  AS HIR_10
                          ,SUM(K.HIR_11)  AS HIR_11
                          ,SUM(K.HIR_12)  AS HIR_12
                          ,SUM(K.HIR_13)  AS HIR_13
                          ,SUM(K.HIR_14)  AS HIR_14
                          ,SUM(K.HIR_15)  AS HIR_15
                          ,SUM(K.HIR_16)  AS HIR_16
                          ,SUM(K.HIR_17)  AS HIR_17
                          ,SUM(K.HIR_18)  AS HIR_18
                          ,SUM(K.HIR_19)  AS HIR_19
                          ,SUM(K.HIR_20)  AS HIR_20
                          ,SUM(K.HIR_21)  AS HIR_21
                   FROM (
                         SELECT A.JOB_NM, A.JOB_SEQ, A.HIR_TOT
                               ,( DECODE(T01.HIR_MON,NULL,0,T01.HIR_MON) + DECODE(T02.HIR_MON,NULL,0,T02.HIR_MON) + DECODE(T03.HIR_MON,NULL,0,T03.HIR_MON)
                                + DECODE(T04.HIR_MON,NULL,0,T04.HIR_MON) + DECODE(T05.HIR_MON,NULL,0,T05.HIR_MON) + DECODE(T06.HIR_MON,NULL,0,T06.HIR_MON)
                                + DECODE(T07.HIR_MON,NULL,0,T07.HIR_MON) + DECODE(T08.HIR_MON,NULL,0,T08.HIR_MON) + DECODE(T09.HIR_MON,NULL,0,T09.HIR_MON)
                                + DECODE(T10.HIR_MON,NULL,0,T10.HIR_MON) + DECODE(T11.HIR_MON,NULL,0,T11.HIR_MON) + DECODE(T12.HIR_MON,NULL,0,T12.HIR_MON)
                                + DECODE(T13.HIR_MON,NULL,0,T13.HIR_MON) + DECODE(T14.HIR_MON,NULL,0,T14.HIR_MON) + DECODE(T15.HIR_MON,NULL,0,T15.HIR_MON)
                                + DECODE(T16.HIR_MON,NULL,0,T16.HIR_MON) + DECODE(T17.HIR_MON,NULL,0,T17.HIR_MON) + DECODE(T18.HIR_MON,NULL,0,T18.HIR_MON)
                                + DECODE(T19.HIR_MON,NULL,0,T19.HIR_MON) + DECODE(T20.HIR_MON,NULL,0,T20.HIR_MON) + DECODE(T21.HIR_MON,NULL,0,T21.HIR_MON)
                                ) AS HIR_MON
                               ,T01.HIR_01,T02.HIR_02,T03.HIR_03,T04.HIR_04,T05.HIR_05,T06.HIR_06,T07.HIR_07,T08.HIR_08,T09.HIR_09,T10.HIR_10
                               ,T11.HIR_11,T12.HIR_12,T13.HIR_13,T14.HIR_14,T15.HIR_15,T16.HIR_16,T17.HIR_17,T18.HIR_18,T19.HIR_19,T20.HIR_20,T21.HIR_21
                         FROM  ( SELECT JOB_NM, MAX(JOB_SEQ) AS JOB_SEQ, COUNT(*) AS HIR_TOT
                                 FROM   VI_T_CM_PERSON
                                 WHERE  1=1
                                 [1]
                                 GROUP BY  JOB_NM
                                ) A
                              ,( SELECT JOB_NM, COUNT(*) HIR_01, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 1
                                 [2]
                                 GROUP BY JOB_NM
                                ) T01
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_02, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 1
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 2
                                 [3]
                                 GROUP BY JOB_NM
                                ) T02
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_03, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 2
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 3
                                 [4]
                                 GROUP BY JOB_NM
                                ) T03
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_04, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 3
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 4
                                 [5]
                                 GROUP BY JOB_NM
                                ) T04
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_05, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 4
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 5
                                 [6]
                                 GROUP BY JOB_NM
                                ) T05
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_06, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 5
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 6
                                 [7]
                                 GROUP BY JOB_NM
                                ) T06
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_07, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 6
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 7
                                 [8]
                                 GROUP BY JOB_NM
                                ) T07
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_08, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 7
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 8
                                 [9]
                                 GROUP BY JOB_NM
                                ) T08
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_09, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 8
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 9
                                 [10]
                                 GROUP BY JOB_NM
                                ) T09
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_10, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 9
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 10
                                 [11]
                                 GROUP BY JOB_NM
                                ) T10
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_11, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 10
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 11
                                 [12]
                                 GROUP BY JOB_NM
                                ) T11
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_12, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 11
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 12
                                 [13]
                                 GROUP BY JOB_NM
                                ) T12
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_13, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 12
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 13
                                 [14]
                                 GROUP BY JOB_NM
                                ) T13
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_14, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 13
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 14
                                 [15]
                                 GROUP BY JOB_NM
                                ) T14
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_15, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 14
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 15
                                 [16]
                                 GROUP BY JOB_NM
                                ) T15
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_16, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 15
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 16
                                 [17]
                                 GROUP BY JOB_NM
                                ) T16
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_17, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 16
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 17
                                 [18]
                                 GROUP BY JOB_NM
                                ) T17
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_18, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 17
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 18
                                 [19]
                                 GROUP BY JOB_NM
                                ) T18
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_19, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 18
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 19
                                 [20]
                                 GROUP BY JOB_NM
                                ) T19
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_20, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 19
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) < 20
                                 [21]
                                 GROUP BY JOB_NM
                                ) T20
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_21, SUM(MONTHS_BETWEEN(SYSDATE, HIR_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIR_YMD)/12) >= 20
                                 [22]
                                 GROUP BY JOB_NM
                                ) T21
                         WHERE  A.JOB_NM = T01.JOB_NM(+)
                         AND    A.JOB_NM = T02.JOB_NM(+)
                         AND    A.JOB_NM = T03.JOB_NM(+)
                         AND    A.JOB_NM = T04.JOB_NM(+)
                         AND    A.JOB_NM = T05.JOB_NM(+)
                         AND    A.JOB_NM = T06.JOB_NM(+)
                         AND    A.JOB_NM = T07.JOB_NM(+)
                         AND    A.JOB_NM = T08.JOB_NM(+)
                         AND    A.JOB_NM = T09.JOB_NM(+)
                         AND    A.JOB_NM = T10.JOB_NM(+)
                         AND    A.JOB_NM = T11.JOB_NM(+)
                         AND    A.JOB_NM = T12.JOB_NM(+)
                         AND    A.JOB_NM = T13.JOB_NM(+)
                         AND    A.JOB_NM = T14.JOB_NM(+)
                         AND    A.JOB_NM = T15.JOB_NM(+)
                         AND    A.JOB_NM = T16.JOB_NM(+)
                         AND    A.JOB_NM = T17.JOB_NM(+)
                         AND    A.JOB_NM = T18.JOB_NM(+)
                         AND    A.JOB_NM = T19.JOB_NM(+)
                         AND    A.JOB_NM = T20.JOB_NM(+)
                         AND    A.JOB_NM = T21.JOB_NM(+)
                         ORDER  BY JOB_SEQ
                        ) K,
                       ( SELECT 1 AS NO FROM DUAL UNION ALL
                         SELECT 2 AS NO FROM DUAL
                        ) L
                   GROUP BY L.NO, DECODE(L.NO, 1, K.JOB_SEQ, 999), DECODE(L.NO, 1, K.JOB_NM, '합계')
                  ) I
            ORDER BY I.JOB_SEQ,(FLOOR((HIR_MON/HIR_TOT)/12) ||'년 '|| FLOOR(MOD(HIR_MON/HIR_TOT,12))||'개월')
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : PIRH030_PRT_01
* @description : 근속년수별인원현황(그룹입사일)
***********************************************************************
* 2007/03/24     방석호        최초작성.
***********************************************************************
-->
    <!-- 근속년수별인원현황을 조회 한다. -->
    <sql name="PIRH030_PRT_01">
        <description>근속년수별인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT  RN
                    ,JOB_NM
                    ,HIR_TOT
                    ,(FLOOR((HIR_MON/HIR_TOT)/12) ||'년 '|| FLOOR(MOD(HIR_MON/HIR_TOT,12))||'개월') AS HIR_AVG
                    ,HIR_01
                    ,HIR_02
                    ,HIR_03
                    ,HIR_04
                    ,HIR_05
                    ,HIR_06
                    ,HIR_07
                    ,HIR_08
                    ,HIR_09
                    ,HIR_10
                    ,HIR_11
                    ,HIR_12
                    ,HIR_13
                    ,HIR_14
                    ,HIR_15
                    ,HIR_16
                    ,HIR_17
                    ,HIR_18
                    ,HIR_19
                    ,HIR_20
                    ,HIR_21
                FROM (
                   SELECT  DECODE(L.NO, 1, ROW_NUMBER() OVER(ORDER BY L.NO), '') RN
                          ,DECODE(L.NO, 1, K.JOB_SEQ, 999) JOB_SEQ
                          ,DECODE(L.NO, 1, K.JOB_NM, '합계') JOB_NM
                          ,DECODE(L.NO, 1, SUM(K.HIR_MON), SUM(K.HIR_MON) ) AS HIR_MON
                          ,SUM(K.HIR_TOT) AS HIR_TOT
                          ,SUM(K.HIR_01)  AS HIR_01
                          ,SUM(K.HIR_02)  AS HIR_02
                          ,SUM(K.HIR_03)  AS HIR_03
                          ,SUM(K.HIR_04)  AS HIR_04
                          ,SUM(K.HIR_05)  AS HIR_05
                          ,SUM(K.HIR_06)  AS HIR_06
                          ,SUM(K.HIR_07)  AS HIR_07
                          ,SUM(K.HIR_08)  AS HIR_08
                          ,SUM(K.HIR_09)  AS HIR_09
                          ,SUM(K.HIR_10)  AS HIR_10
                          ,SUM(K.HIR_11)  AS HIR_11
                          ,SUM(K.HIR_12)  AS HIR_12
                          ,SUM(K.HIR_13)  AS HIR_13
                          ,SUM(K.HIR_14)  AS HIR_14
                          ,SUM(K.HIR_15)  AS HIR_15
                          ,SUM(K.HIR_16)  AS HIR_16
                          ,SUM(K.HIR_17)  AS HIR_17
                          ,SUM(K.HIR_18)  AS HIR_18
                          ,SUM(K.HIR_19)  AS HIR_19
                          ,SUM(K.HIR_20)  AS HIR_20
                          ,SUM(K.HIR_21)  AS HIR_21
                   FROM (
                         SELECT A.JOB_NM, A.JOB_SEQ, A.HIR_TOT
                               ,( DECODE(T01.HIR_MON,NULL,0,T01.HIR_MON) + DECODE(T02.HIR_MON,NULL,0,T02.HIR_MON) + DECODE(T03.HIR_MON,NULL,0,T03.HIR_MON)
                                + DECODE(T04.HIR_MON,NULL,0,T04.HIR_MON) + DECODE(T05.HIR_MON,NULL,0,T05.HIR_MON) + DECODE(T06.HIR_MON,NULL,0,T06.HIR_MON)
                                + DECODE(T07.HIR_MON,NULL,0,T07.HIR_MON) + DECODE(T08.HIR_MON,NULL,0,T08.HIR_MON) + DECODE(T09.HIR_MON,NULL,0,T09.HIR_MON)
                                + DECODE(T10.HIR_MON,NULL,0,T10.HIR_MON) + DECODE(T11.HIR_MON,NULL,0,T11.HIR_MON) + DECODE(T12.HIR_MON,NULL,0,T12.HIR_MON)
                                + DECODE(T13.HIR_MON,NULL,0,T13.HIR_MON) + DECODE(T14.HIR_MON,NULL,0,T14.HIR_MON) + DECODE(T15.HIR_MON,NULL,0,T15.HIR_MON)
                                + DECODE(T16.HIR_MON,NULL,0,T16.HIR_MON) + DECODE(T17.HIR_MON,NULL,0,T17.HIR_MON) + DECODE(T18.HIR_MON,NULL,0,T18.HIR_MON)
                                + DECODE(T19.HIR_MON,NULL,0,T19.HIR_MON) + DECODE(T20.HIR_MON,NULL,0,T20.HIR_MON) + DECODE(T21.HIR_MON,NULL,0,T21.HIR_MON)
                                ) AS HIR_MON
                               ,T01.HIR_01,T02.HIR_02,T03.HIR_03,T04.HIR_04,T05.HIR_05,T06.HIR_06,T07.HIR_07,T08.HIR_08,T09.HIR_09,T10.HIR_10
                               ,T11.HIR_11,T12.HIR_12,T13.HIR_13,T14.HIR_14,T15.HIR_15,T16.HIR_16,T17.HIR_17,T18.HIR_18,T19.HIR_19,T20.HIR_20,T21.HIR_21
                         FROM  ( SELECT JOB_NM, MAX(JOB_SEQ) AS JOB_SEQ, COUNT(*) AS HIR_TOT
                                 FROM   VI_T_CM_PERSON
                                 WHERE  1=1
                                 [1]
                                 GROUP BY  JOB_NM
                                ) A
                              ,( SELECT JOB_NM, COUNT(*) HIR_01, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 1
                                 [2]
                                 GROUP BY JOB_NM
                                ) T01
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_02, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 1
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 2
                                 [3]
                                 GROUP BY JOB_NM
                                ) T02
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_03, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 2
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 3
                                 [4]
                                 GROUP BY JOB_NM
                                ) T03
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_04, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 3
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 4
                                 [5]
                                 GROUP BY JOB_NM
                                ) T04
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_05, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 4
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 5
                                 [6]
                                 GROUP BY JOB_NM
                                ) T05
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_06, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 5
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 6
                                 [7]
                                 GROUP BY JOB_NM
                                ) T06
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_07, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 6
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 7
                                 [8]
                                 GROUP BY JOB_NM
                                ) T07
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_08, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 7
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 8
                                 [9]
                                 GROUP BY JOB_NM
                                ) T08
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_09, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 8
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 9
                                 [10]
                                 GROUP BY JOB_NM
                                ) T09
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_10, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 9
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 10
                                 [11]
                                 GROUP BY JOB_NM
                                ) T10
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_11, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 10
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 11
                                 [12]
                                 GROUP BY JOB_NM
                                ) T11
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_12, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 11
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 12
                                 [13]
                                 GROUP BY JOB_NM
                                ) T12
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_13, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 12
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 13
                                 [14]
                                 GROUP BY JOB_NM
                                ) T13
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_14, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 13
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 14
                                 [15]
                                 GROUP BY JOB_NM
                                ) T14
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_15, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 14
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 15
                                 [16]
                                 GROUP BY JOB_NM
                                ) T15
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_16, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 15
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 16
                                 [17]
                                 GROUP BY JOB_NM
                                ) T16
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_17, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 16
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 17
                                 [18]
                                 GROUP BY JOB_NM
                                ) T17
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_18, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 17
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 18
                                 [19]
                                 GROUP BY JOB_NM
                                ) T18
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_19, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 18
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 19
                                 [20]
                                 GROUP BY JOB_NM
                                ) T19
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_20, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 19
                                 AND    FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) < 20
                                 [21]
                                 GROUP BY JOB_NM
                                ) T20
                              ,( SELECT JOB_NM, COUNT(*) AS HIR_21, SUM(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)) AS HIR_MON
                                 FROM   VI_T_CM_PERSON
                                 WHERE  FLOOR(MONTHS_BETWEEN(SYSDATE, HIRG_YMD)/12) >= 20
                                 [22]
                                 GROUP BY JOB_NM
                                ) T21
                         WHERE  A.JOB_NM = T01.JOB_NM(+)
                         AND    A.JOB_NM = T02.JOB_NM(+)
                         AND    A.JOB_NM = T03.JOB_NM(+)
                         AND    A.JOB_NM = T04.JOB_NM(+)
                         AND    A.JOB_NM = T05.JOB_NM(+)
                         AND    A.JOB_NM = T06.JOB_NM(+)
                         AND    A.JOB_NM = T07.JOB_NM(+)
                         AND    A.JOB_NM = T08.JOB_NM(+)
                         AND    A.JOB_NM = T09.JOB_NM(+)
                         AND    A.JOB_NM = T10.JOB_NM(+)
                         AND    A.JOB_NM = T11.JOB_NM(+)
                         AND    A.JOB_NM = T12.JOB_NM(+)
                         AND    A.JOB_NM = T13.JOB_NM(+)
                         AND    A.JOB_NM = T14.JOB_NM(+)
                         AND    A.JOB_NM = T15.JOB_NM(+)
                         AND    A.JOB_NM = T16.JOB_NM(+)
                         AND    A.JOB_NM = T17.JOB_NM(+)
                         AND    A.JOB_NM = T18.JOB_NM(+)
                         AND    A.JOB_NM = T19.JOB_NM(+)
                         AND    A.JOB_NM = T20.JOB_NM(+)
                         AND    A.JOB_NM = T21.JOB_NM(+)
                         ORDER  BY JOB_SEQ
                        ) K,
                       ( SELECT 1 AS NO FROM DUAL UNION ALL
                         SELECT 2 AS NO FROM DUAL
                        ) L
                   GROUP BY L.NO, DECODE(L.NO, 1, K.JOB_SEQ, 999), DECODE(L.NO, 1, K.JOB_NM, '합계')
                  ) I
            ORDER BY I.JOB_SEQ,(FLOOR((HIR_MON/HIR_TOT)/12) ||'년 '|| FLOOR(MOD(HIR_MON/HIR_TOT,12))||'개월')
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : PIRH040
* @description : 근속년수별근속자현황
***********************************************************************
* 2007/01/04     채갑병        최초작성.
***********************************************************************
-->
    <!-- 근속년수별인원현황을 조회 한다. -->
    <sql name="PIRH040_SHR">
        <description>근속년수별근속자현황 조회</description>
        <query>
            <![CDATA[
             SELECT  A.JOB_NM, A.DPT_NM, A.ENO_NM,
                     TO_CHAR(A.BIR_YMD,'YYYY-MM-DD') AS BIR_YMD,
                     A.GUR_YMD AS GUR_YMD,
                     SCH_NM,
                     TO_CHAR(A.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                     TO_CHAR(A.HIRG_YMD,'YYYY-MM-DD') AS HIRG_YMD,
                     TO_CHAR(A.JPR_YMD,'YYYY-MM-DD') AS JPR_YMD,
                     '' AS HIR_CON
             FROM    VI_T_CM_PERSON A
             WHERE   1=1
                     [1]
             ORDER   BY A.JOB_SEQ ASC
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : PIRH050
* @description : 급호별인원현황(업무회의 후 삭제)
***********************************************************************
* 2007/01/08     채갑병        최초작성.
***********************************************************************
-->
    <!-- 급호별인원현황을 조회 한다. -->
    <sql name="PIRH050_SHR">
        <description>급호별인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT DECODE(D.NO, 1, C.JOB_NM,   '') AS JOB_NM,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'01',C.HOB_CNT,''), DECODE(C.HOB_CD,'21',C.HOB_CNT,'') )) HOB_01,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'02',C.HOB_CNT,''), DECODE(C.HOB_CD,'22',C.HOB_CNT,'') )) HOB_02,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'03',C.HOB_CNT,''), DECODE(C.HOB_CD,'23',C.HOB_CNT,'') )) HOB_03,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'04',C.HOB_CNT,''), DECODE(C.HOB_CD,'24',C.HOB_CNT,'') )) HOB_04,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'05',C.HOB_CNT,''), DECODE(C.HOB_CD,'25',C.HOB_CNT,'') )) HOB_05,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'06',C.HOB_CNT,''), DECODE(C.HOB_CD,'26',C.HOB_CNT,'') )) HOB_06,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'07',C.HOB_CNT,''), DECODE(C.HOB_CD,'27',C.HOB_CNT,'') )) HOB_07,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'08',C.HOB_CNT,''), DECODE(C.HOB_CD,'28',C.HOB_CNT,'') )) HOB_08,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'09',C.HOB_CNT,''), DECODE(C.HOB_CD,'29',C.HOB_CNT,'') )) HOB_09,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'10',C.HOB_CNT,''), DECODE(C.HOB_CD,'30',C.HOB_CNT,'') )) HOB_10,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'11',C.HOB_CNT,''), DECODE(C.HOB_CD,'31',C.HOB_CNT,'') )) HOB_11,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'12',C.HOB_CNT,''), DECODE(C.HOB_CD,'32',C.HOB_CNT,'') )) HOB_12,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'13',C.HOB_CNT,''), DECODE(C.HOB_CD,'33',C.HOB_CNT,'') )) HOB_13,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'14',C.HOB_CNT,''), DECODE(C.HOB_CD,'34',C.HOB_CNT,'') )) HOB_14,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'15',C.HOB_CNT,''), DECODE(C.HOB_CD,'35',C.HOB_CNT,'') )) HOB_15,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'16',C.HOB_CNT,''), DECODE(C.HOB_CD,'36',C.HOB_CNT,'') )) HOB_16,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'17',C.HOB_CNT,''), DECODE(C.HOB_CD,'37',C.HOB_CNT,'') )) HOB_17,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'18',C.HOB_CNT,''), DECODE(C.HOB_CD,'37',C.HOB_CNT,'') )) HOB_18,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'19',C.HOB_CNT,''), DECODE(C.HOB_CD,'38',C.HOB_CNT,'') )) HOB_19,
                    SUM(DECODE(D.NO, 1, DECODE(C.HOB_CD,'20',C.HOB_CNT,''), DECODE(C.HOB_CD,'40',C.HOB_CNT,'') )) HOB_20
             FROM ( SELECT A.JOB_NM, A.JOB_SEQ, A.HOB_TOT, B.HOB_CD, B.HOB_CNT
                    FROM ( SELECT JOB_NM, MAX(JOB_SEQ) AS JOB_SEQ, COUNT(*) AS HOB_TOT
                           FROM   VI_T_CM_PERSON
                           GROUP  BY JOB_NM
                          ) A,
                         ( SELECT JOB_NM, HOB_CD, COUNT(*) AS HOB_CNT
                           FROM   VI_T_CM_PERSON
                           GROUP  BY JOB_NM, HOB_CD
                          ) B
                    WHERE A.JOB_NM = B.JOB_NM
                    ORDER BY JOB_SEQ
                   ) C,
                  (
                    SELECT 1 AS NO FROM DUAL UNION ALL
                    SELECT 2 AS NO FROM DUAL
                   ) D
            GROUP BY D.NO, C.JOB_NM, C.JOB_SEQ
            ORDER BY C.JOB_SEQ
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : PIRH060
* @description : 급호별인원현황
***********************************************************************
* 2007/01/08     채갑병        최초작성.
***********************************************************************
-->
    <!-- 학력별인원현황을 조회 한다. -->
    <sql name="PIRH060_SHR">
        <description>학력별인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT DECODE(F.NO, 1, RN, RN) RN,
                    DECODE(F.NO, 1, JOB_NM, JOB_NM) JOB_NM,
                    DECODE(F.NO, 1, GUR_TOT ,                       DECODE(GUR_TOT,   0,'',ROUND( (GUR_TOT/(MAX(E.GUR_TOT) OVER (PARTITION BY F.NO) )* 100),1)) ) GUR_TOT,
                    DECODE(F.NO, 1, DECODE(GUR_01, 0,'',GUR_01)   , DECODE(GUR_01,    0,'',ROUND( (GUR_01 /(E.GUR_TOT)*100),1 )||'%') ) GUR_01,
                    DECODE(F.NO, 1, DECODE(GUR_02, 0,'',GUR_02)   , DECODE(GUR_02,    0,'',ROUND( (GUR_02 /(E.GUR_TOT)*100),1 )||'%') ) GUR_02,
                    DECODE(F.NO, 1, DECODE(GUR_03, 0,'',GUR_03)   , DECODE(GUR_03,    0,'',ROUND( (GUR_03 /(E.GUR_TOT)*100),1 )||'%') ) GUR_03,
                    DECODE(F.NO, 1, DECODE(GUR_04, 0,'',GUR_04)   , DECODE(GUR_04,    0,'',ROUND( (GUR_04 /(E.GUR_TOT)*100),1 )||'%') ) GUR_04,
                    DECODE(F.NO, 1, DECODE(GUR_ETC,0,'',GUR_ETC)  , DECODE(GUR_ETC,NULL,'',ROUND( (GUR_ETC/(E.GUR_TOT)*100),1 )||'%') ) GUR_ETC
             FROM
                 (
                    SELECT DECODE(D.NO, 1, ROW_NUMBER() OVER(ORDER BY D.NO), '') RN,
                           DECODE(D.NO, 1, C.JOB_SEQ, 999) JOB_SEQ,
                           DECODE(D.NO, 1, C.JOB_NM, '합계') JOB_NM,
                           SUM(DECODE(C.EDGR_CD,'6',C.CNT,0)) GUR_01,
                           SUM(DECODE(C.EDGR_CD,'5',C.CNT,0)) GUR_02,
                           SUM(DECODE(C.EDGR_CD,'4',C.CNT,0)) GUR_03,
                           SUM(DECODE(C.EDGR_CD,'3',C.CNT,0)) GUR_04,
                           SUM(CASE WHEN (C.EDGR_CD <> '6' AND C.EDGR_CD <> '5' AND C.EDGR_CD <> '4' AND C.EDGR_CD <> '3') OR C.EDGR_CD IS NULL
                                    THEN C.CNT
                           END) GUR_ETC,
                           SUM(C.CNT) AS GUR_TOT
                    FROM
                         ( SELECT A.JOB_NM, A.EDGR_CD, A.CNT, B.JOB_SEQ, B.TOT
                           FROM
                                (
                                  SELECT JOB_NM, EDGR_CD, COUNT(*) CNT
                                  FROM   VI_T_CM_PERSON
                                  WHERE  1=1
                                  [1]
                                  GROUP BY JOB_NM, EDGR_CD
                                 ) A,
                                (
                                  SELECT JOB_NM, COUNT(*) TOT, MAX(JOB_SEQ) JOB_SEQ
                                  FROM   VI_T_CM_PERSON
                                  WHERE  1=1
                                  [2]
                                  GROUP BY JOB_NM
                                 ) B
                           WHERE A.JOB_NM = B.JOB_NM
                          ) C,
                         ( SELECT 1 NO FROM DUAL UNION ALL
                           SELECT 2 NO FROM DUAL
                          ) D
                    GROUP BY D.NO, DECODE(D.NO, 1, C.JOB_SEQ, 999), DECODE(D.NO, 1, C.JOB_NM, '합계')
                 ) E,
                ( SELECT 1 NO FROM DUAL UNION ALL
                  SELECT 2 NO FROM DUAL
                 ) F
            ORDER BY JOB_SEQ, F.NO
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : PIRH060_PRT
* @description : 급호별인원현황 인쇄
***********************************************************************
* 2007/03/26    방석호        최초작성.
***********************************************************************
-->
    <!-- 학력별인원현황을 조회 한다. -->
    <sql name="PIRH060_PRT">
        <description>학력별인원현황 조회</description>
        <query>
            <![CDATA[
                 SELECT  JOB_SEQ,RN,
                    JOB_NM,
                    DECODE(GUR_TOT, 0, '', GUR_TOT || '명') AS GUR_TOT_CNT ,
                    DECODE(GUR_01,  0, '', GUR_01 || '명') AS GUR_01_CNT,
                    DECODE(GUR_02,  0, '', GUR_02 || '명') AS GUR_02_CNT,
                    DECODE(GUR_03,  0, '', GUR_03 || '명') AS GUR_03_CNT,
                    DECODE(GUR_04,  0, '', GUR_04 || '명') AS GUR_04_CNT,
                    DECODE(GUR_ETC, 0, '', DECODE(GUR_ETC,NULL,'', GUR_ETC || '명')) AS GUR_ETC_CNT,
                    DECODE(GUR_TOT,   0,'', ('('||TO_CHAR(ROUND((GUR_TOT/(MAX(E.GUR_TOT) OVER (PARTITION BY 2) )* 100),1),'FM990.9')||'%)'))  GUR_TOT_PER,
                    DECODE(GUR_01,    0,'', ('('||TO_CHAR(ROUND((GUR_01 /(E.GUR_TOT)*100),1 ),'FM990.9')||'%)')) AS GUR_01_PER ,
                    DECODE(GUR_02,    0,'', ('('||TO_CHAR(ROUND((GUR_02 /(E.GUR_TOT)*100),1 ),'FM990.9')||'%)')) AS GUR_02_PER ,
                    DECODE(GUR_03,    0,'', ('('||TO_CHAR(ROUND((GUR_03 /(E.GUR_TOT)*100),1 ),'FM990.9')||'%)')) AS GUR_03_PER ,
                    DECODE(GUR_04,    0,'', ('('||TO_CHAR(ROUND((GUR_04 /(E.GUR_TOT)*100),1 ),'FM990.9')||'%)')) AS GUR_04_PER ,
                    DECODE(GUR_ETC,   0,'', DECODE(GUR_ETC,NULL,'',('('||TO_CHAR(ROUND((GUR_ETC/(E.GUR_TOT)*100),1 ),'FM990.9')||'%)'))) AS GUR_05_PER
                 FROM
                 (
                    SELECT DECODE(D.NO, 1, ROW_NUMBER() OVER(ORDER BY D.NO), '') RN,
                           DECODE(D.NO, 1, C.JOB_SEQ, 999) JOB_SEQ,
                           DECODE(D.NO, 1, C.JOB_NM, '합계') JOB_NM,
                           SUM(DECODE(C.EDGR_CD,'6',C.CNT,0)) GUR_01,
                           SUM(DECODE(C.EDGR_CD,'5',C.CNT,0)) GUR_02,
                           SUM(DECODE(C.EDGR_CD,'4',C.CNT,0)) GUR_03,
                           SUM(DECODE(C.EDGR_CD,'3',C.CNT,0)) GUR_04,
                           SUM(CASE WHEN (C.EDGR_CD <> '6' AND C.EDGR_CD <> '5' AND C.EDGR_CD <> '4' AND C.EDGR_CD <> '3') OR C.EDGR_CD IS NULL
                                    THEN C.CNT
                           END) GUR_ETC,
                           SUM(C.CNT) AS GUR_TOT
                    FROM
                         ( SELECT A.JOB_NM, A.EDGR_CD, A.CNT, B.JOB_SEQ, B.TOT
                           FROM
                                (
                                  SELECT JOB_NM, EDGR_CD, COUNT(*) CNT
                                  FROM   VI_T_CM_PERSON
                                  WHERE  1=1
                                  [1]
                                  GROUP BY JOB_NM, EDGR_CD
                                 ) A,
                                (
                                  SELECT JOB_NM, COUNT(*) TOT, MAX(JOB_SEQ) JOB_SEQ
                                  FROM   VI_T_CM_PERSON
                                  WHERE  1=1
                                  [2]
                                  GROUP BY JOB_NM
                                 ) B
                           WHERE A.JOB_NM = B.JOB_NM
                          ) C,
                         ( SELECT 1 NO FROM DUAL UNION ALL
                           SELECT 2 NO FROM DUAL
                          ) D
                    GROUP BY D.NO, DECODE(D.NO, 1, C.JOB_SEQ, 999), DECODE(D.NO, 1, C.JOB_NM, '합계')
                 ) E
            ORDER BY JOB_SEQ
            ]]>
        </query>
    </sql>


<!-- 부서별인원명부 -->
<!--
***********************************************************************
* @UseCase     : piri010
* @description : 부서별인원명부
***********************************************************************
* 2007/01/09      오대성        최초작성.
***********************************************************************
-->
    <!-- 부서정보 조회 -->
    <sql name="PIRI010_SHR_01">
        <description>부서정보 조회</description>
        <query>
            <![CDATA[
            SELECT DPT_CD, DPT_NM, COUNT(ENO_NO) AS ENO_CNT
            FROM   ASNHR.VI_T_CM_PERSON2
            WHERE  GUBUN = '01'
            AND ENO_NO != '6050006'
            [1]
            [2]
            [3]
            GROUP BY DPT_CD, DPT_NM, DPT_SEQ
            ORDER BY DPT_SEQ
            ]]>
        </query>
    </sql>

    <!-- 사원정보 조회 -->
    <sql name="PIRI010_SHR_02">
        <description>사원정보 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NM, ENO_NO, HEAD_CD, DPT_CD, TEAM_CD, TEAM_NM, DUTY_NM, JOB_NM, HOB_NM,
                   TO_CHAR(HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                   TO_CHAR(RET_YMD,'YYYY-MM-DD') AS RET_YMD
            FROM   ASNHR.VI_T_CM_PERSON2
            WHERE  GUBUN = '01'
            AND    DPT_CD = ?
            AND    ENO_NO NOT IN ('6050006','6180011','6180012','6180013','6180014','6180015')
            [1]
            ORDER BY TEAM_SEQ,JOB_SEQ, DUTY_CD , HOB_CD DESC, HIRG_YMD, ENO_NO
            ]]>
        </query>
    </sql>


    <!-- 직책정보 조회 -->
    <sql name="PIRI010_SHR_DUTY">
        <description>직책정보 조회</description>
        <query>
            <![CDATA[
            SELECT 
            	ENO_NM, 
            	ENO_NO, 
            	HEAD_CD,
            	DPT_CD, 
            	TEAM_CD, 
            	DUTY_CD
            FROM   ASNHR.T_CM_PERSON
            WHERE  ENO_NO = ?

            ]]>
        </query>
    </sql>


    <!-- 현장인원현황을 조회 한다. -->
    <sql name="PIRI020_SHR">
        <description>현장인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT A.DPT_NM
                   ,A.JOB_NM
                   ,A.HOB_NM
                   ,A.CET_NO
                   ,A.ENO_NM
                   ,A.ENO_NO
                   ,A.TEAM_CD
                   ,TO_CHAR(A.HIR_YMD, 'YYYY-MM-DD')  AS HIR_YMD
                   ,TO_CHAR(A.JPR_YMD, 'YYYY-MM-DD')  AS JPR_YMD
                   ,TO_CHAR(A.HIRG_YMD, 'YYYY-MM-DD') AS HIRG_YMD               -- 그룹입사일
                   ,A.EM_PHN_NO
                   ,ASNHR.SF_GET_COMMNAME(GUBUN, 'E1', EDGR_CD)  AS EDGR_NM,     -- 학력구분
                   CASE WHEN EDGR_CD = '2' THEN SF_GET_COMMNAME(GUBUN, 'E8', SCH_CD)
                        WHEN EDGR_CD = '3' THEN SF_GET_COMMNAME(GUBUN, 'E2', SCH_CD)
                        WHEN EDGR_CD = '4' THEN SF_GET_COMMNAME(GUBUN, 'E3', SCH_CD)
                        WHEN EDGR_CD = '5' THEN SF_GET_COMMNAME(GUBUN, 'E4', SCH_CD)
                        WHEN EDGR_CD = '6' THEN SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
                        WHEN EDGR_CD = '7' THEN SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
                        WHEN EDGR_CD = '8' THEN SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
                        ELSE ''
                   END  AS SCH_NM,                                        -- 학교명
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'E6', MAJ_CD)   AS MAJ_NM,      -- 학과명
                   ASNHR.SF_GET_COMMNAME(GUBUN, 'E7', GRD_CD)   AS GRD_NM,       -- 졸업구분
                  CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1  AGE,    -- 나이
                  B.REMARK
               FROM ASNHR.VI_T_CM_PERSON A, ASNHR.T_CM_AHISTORY B
              WHERE A.JOB_CD IS NOT NULL
                AND A.ENO_NO = B.ENO_NO (+)
                AND B.END_YMD IS NULL
                [1]
           ORDER BY A.DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO
            ]]>
        </query>
    </sql>






<!--
***********************************************************************
* @UseCase     : PIRJ010
* @description : 재직인원현황
***********************************************************************
* 2007/01/09     채갑병        최초작성.
***********************************************************************
-->
    <!-- 재직인원현황을 조회 한다. -->
    <sql name="PIRJ010_SHR">
        <description>재직인원현황 조회</description>
        <query>
            <![CDATA[
             SELECT A.DPT_NM
                   ,A.JOB_NM
                   ,A.HOB_NM
                   ,A.CET_NO
                   ,A.ENO_NM
                   ,A.ENO_NO
                   ,TO_CHAR(A.HIR_YMD, 'YYYY-MM-DD')  AS HIR_YMD
                   ,TO_CHAR(A.JPR_YMD, 'YYYY-MM-DD')  AS JPR_YMD
                   ,TO_CHAR(A.HIRG_YMD, 'YYYY-MM-DD') AS HIRG_YMD               -- 그룹입사일
                   ,A.EM_PHN_NO
                   ,'' AS INFO,
                   A.EDGR_CD,                                               -- 학력구분코드
                   SF_GET_COMMNAME(GUBUN, 'E1', EDGR_CD)  AS EDGR_NM,     -- 학력구분
                   SCH_CD,                                                -- 학교코드
                   CASE WHEN EDGR_CD = '2' THEN SF_GET_COMMNAME(GUBUN, 'E8', SCH_CD)
                        WHEN EDGR_CD = '3' THEN SF_GET_COMMNAME(GUBUN, 'E2', SCH_CD)
                        WHEN EDGR_CD = '4' THEN SF_GET_COMMNAME(GUBUN, 'E3', SCH_CD)
                        WHEN EDGR_CD = '5' THEN SF_GET_COMMNAME(GUBUN, 'E4', SCH_CD)
                        WHEN EDGR_CD = '6' THEN SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
                        WHEN EDGR_CD = '7' THEN SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
                        WHEN EDGR_CD = '8' THEN SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
                        ELSE ''
                   END  AS SCH_NM,                                        -- 학교명
                   MAJ_CD,                                                -- 학과코드
                   SF_GET_COMMNAME(GUBUN, 'E6', MAJ_CD)   AS MAJ_NM,      -- 학과명
                   GRD_CD,                                                -- 졸업구분코드
                   SF_GET_COMMNAME(GUBUN, 'E7', GRD_CD)   AS GRD_NM,       -- 졸업구분
                   DECODE(MF_TAG,'M','남','F','여','') AS SEX    ,
                  CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1  AGE,    -- 나이
                  CASE WHEN (CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1) <= 24   THEN '20~24'
                       WHEN (CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1) <= 29   THEN '25~29'
                       WHEN (CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1) <= 34   THEN '30~34'
                       WHEN (CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1) <= 39   THEN '35~39'
                       WHEN (CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1) <= 44   THEN '40~44'
                       WHEN (CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1) <= 49   THEN '45~49'
                       WHEN (CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1) <= 54   THEN '50~54'
                       WHEN (CEIL(MONTHS_BETWEEN(SYSDATE, TO_DATE('19'||SUBSTR(CET_NO,1,6),'YYYYMMDD'))/12)-1) <= 59   THEN '55~59'
                       ELSE '60~'
                  END  AS AGE_GG,                                        -- 연령구간
                  B.REMARK,
                  A.REG_CD,                                              -- 지역구분
                  A.REG_NM                                               -- 지역구분명
               FROM VI_T_CM_PERSON A, ASNHR.T_CM_AHISTORY B
              WHERE A.JOB_CD IS NOT NULL
                AND A.ENO_NO = B.ENO_NO (+)
                AND B.END_YMD IS NULL
                [1]
           ORDER BY A.DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 재직인원현황을 조회 한다.(카운트) -->
    <sql name="PIRJ010_SHR_01">
        <description>재직인원현황 조회(카운트)</description>
        <query>
            <![CDATA[
            SELECT RPAD(COMM.COMM_NM||':'||NVL(CNT, 0)||'명',12,'  ') AS INFO
                  ,COMM.COMM_NM AS JOB_NM
                  ,NVL(CNT, 0) AS CNT
                  ,COMM.SORT_NO
                  ,PERSON.MF_CNT
              FROM (SELECT COMM_NM
                          ,SORT_NO
                      FROM ASNHR.T_CM_COMMON
                     WHERE CD_GBN = 'A2'
                       AND (END_YMD IS NULL OR END_YMD >= SYSDATE)
                  GROUP BY COMM_NM
                          ,SORT_NO) COMM
        INNER JOIN (SELECT JOB_NM
                          ,COUNT(ENO_NO) AS CNT
                          ,JOB_SEQ
                          ,SUM(DECODE(MF_TAG,'M',1,0)) MF_CNT
                      FROM VI_T_CM_PERSON
                     WHERE JOB_NM IS NOT NULL
                       [1]
                  GROUP BY JOB_NM
                          ,JOB_SEQ) PERSON
                ON PERSON.JOB_NM = COMM.COMM_NM
               AND PERSON.JOB_SEQ = COMM.SORT_NO
          ORDER BY COMM.SORT_NO
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : PIRF010
* @description : 개인별인사명부
***********************************************************************
* 2007/01/09     채갑병        최초작성.
***********************************************************************
-->
    <!-- 개인별인사명부를 조회 한다. -->
    <sql name="PIRF010_SHR">
        <description>개인별인사명부 조회</description>
        <query>
            <![CDATA[
          SELECT A.JOB_CD
                ,A.HOB_CD
                ,A.JOB_NM                                            -- 직위
                ,A.DPT_CD
                ,A.DPT_NM
                ,A.ENO_NO                                            -- 사번
                ,A.ENO_NM                                            -- 성명
                ,A.NAM_CHI                                           -- 한자
                ,A.CET_NO                                            -- 주민번호
                ,TO_CHAR(A.HIRG_YMD, 'YYYY-MM-DD') AS HIRG_YMD       -- 그룹입사일
                ,TO_CHAR(A.HIR_YMD, 'YYYY-MM-DD')  AS HIR_YMD        -- 택배입사일
                ,TO_CHAR(A.JPR_YMD, 'YYYY-MM-DD')  AS JPR_YMD        -- 승진일
                ,A.GUR_YMD                         AS GUR_YMD        -- 졸업년도
                ,A.SCH_NM                                            -- 출신학교
                ,SF_GET_COMMNAME('01', 'B4', A.BCT_CD) AS BCT_NM     -- 출신도
                     ,C.BAS_AMT
                     ,NVL(C.DUTY_AMT, 0)	AS DUTY_AMT
                     ,C.LAW_AMT
                     ,C.BNS_AMT
                     ,NVL(C.ETC_AMT, 0)    AS ETC_AMT
                     ,NVL(C.ETC_AMT2, 0)   AS ETC_AMT2
                     ,NVL(C.BAS_AMT,0) + NVL(C.DUTY_AMT, 0) + NVL(C.BNS_AMT,0) +NVL(C.LAW_AMT,0)  AS TOTAL_AMT
            FROM (SELECT AA.*
                        ,NVL(AB.GBN2_TAG, AB.COMM_CD) AS JOB_GBN2_TAG
                    FROM VI_T_CM_PERSON AA
                        ,T_CM_COMMON AB
                   WHERE AA.JOB_CD = AB.COMM_CD
                     AND AB.CD_GBN = 'A2') A
       LEFT JOIN (SELECT CA.*
                    FROM (SELECT ROW_NUMBER() OVER(PARTITION BY OCC_CD
                                                               ,JOB_CD
                                                               ,HOB_CD
                                                       ORDER BY APY_YMD DESC) AS NUM
                                ,CAA.*
                            FROM ASNHR.T_CP_PAYTABLE CAA
                           WHERE CAA.STR_YMD <= ?
                                                   AND NVL(CAA.END_YMD, '99991231') >= ?) CA
                   WHERE NUM = 1) C
              ON A.OCC_CD = C.OCC_CD
      --       AND A.JOB_GBN2_TAG = C.JOB_CD
             AND A.ENO_NO = C.ENO_NO
           WHERE A.OCC_CD = A.OCC_CD
             AND A.DPT_CD = NVL(?, A.DPT_CD)
             AND A.JOB_CD = NVL(?, A.JOB_CD)
        ORDER BY DPT_SEQ, JOB_SEQ, HOB_SEQ DESC, HIRG_YMD, ENO_NO


            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pirk010
* @description : 입력인사데이터검증
***********************************************************************
* 2007/02/05      박인이        최초작성.
***********************************************************************
-->
    <!-- 현장수당 반영여부 데이터 조회 -->
    <sql name="PIRK010_SHR_00">
        <description>현장수당 반영여부 조회</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,               -- 소속
                   A.OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', A.OCC_CD)    AS OCC_NM,               -- 직종
                   B.JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,               -- 직위
                   A.ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM                -- 성명
            FROM ( SELECT OCC_CD, ENO_NO
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  GBN_CD <> '1'
                   AND  ( RET_YMD IS NULL
                   OR     RET_YMD >= TO_DATE(?, 'YYYYMMDD'))  --추현철 수정.. 그룹을 이용한 중역 제외
                   AND    JOB_CD NOT IN (SELECT COMM_CD FROM ASNHR.T_CM_COMMON WHERE CD_GBN='A2' AND REMARK='1A' AND ( END_YMD IS NULL
                   OR     END_YMD >= TO_CHAR(TO_DATE('20070801', 'YYYYMMDD'), 'YYYYMMDD')))
                   AND    NOT (DPT_CD IN ('D7', '1M', '5J', 'XY', 'AP') AND JOB_CD = 'Z1')
                   MINUS
                   SELECT OCC_CD, ENO_NO
                   FROM   ASNHR.T_CP_FIXED
                   WHERE  SAL_CD = '20'
                   AND    AD_TAG = 'A'
                   AND  ( END_YMD IS NULL
                   OR     END_YMD >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD'))
                 ) A,
                   ASNHR.T_CM_PERSON B
            WHERE  A.ENO_NO = B.ENO_NO
            ORDER BY SF_GET_DPTSEQ( '01', 'A4', DPT_CD)
                   , SF_GET_COMMSEQ('01', 'A2', JOB_CD)
                   , SF_GET_COMMSEQ('01', 'A3', HOB_CD) DESC
                   , ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 공항근무수당 반영여부 데이터 조회 -->
    <sql name="PIRK010_SHR_01">
        <description>공항근무수당 반영여부 조회</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,               -- 소속
                   A.OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', A.OCC_CD)    AS OCC_NM,               -- 직종
                   B.JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,               -- 직위
                   A.ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM                -- 성명
            FROM ( SELECT OCC_CD, ENO_NO
                   FROM   ASNHR.T_CM_PERSON
                   WHERE  DPT_CD = 'AP'
                   AND  ( RET_YMD IS NULL
                   OR     RET_YMD >= TO_DATE(?, 'YYYYMMDD'))
                   AND    OCC_CD = 'A'
                   MINUS
                   SELECT OCC_CD, ENO_NO
                   FROM   ASNHR.T_CP_FIXED
                   WHERE  SAL_CD = 'AB'
                   AND    AD_TAG = 'A'
                   AND  ( END_YMD IS NULL
                   OR     END_YMD >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD'))
                 ) A,
                   ASNHR.T_CM_PERSON B
            WHERE  A.ENO_NO = B.ENO_NO
            ORDER BY SF_GET_DPTSEQ('01', 'A4', B.DPT_CD), SF_GET_DPTSEQ('01', 'A2', B.JOB_CD)
            ]]>
        </query>
    </sql>

    <!-- 입사후 경력 동일 시작일 데이터 조회 -->
    <sql name="PIRK010_SHR_02">
        <description>입사후 경력 동일 시작일 조회</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,               -- 소속
                   A.OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', A.OCC_CD)    AS OCC_NM,               -- 직종
                   B.JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,               -- 직위
                   A.ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM                -- 성명
            FROM   ASNHR.T_CM_AHISTORY A,
                   ASNHR.T_CM_PERSON B
            WHERE  A.STR_YMD >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD')
            AND    A.STR_YMD = A.END_YMD
            AND    A.ENO_NO  = B.ENO_NO
            ORDER BY SF_GET_DPTSEQ('01', 'A4', B.DPT_CD), SF_GET_DPTSEQ('01', 'A2', B.JOB_CD)
            ]]>
        </query>
    </sql>

    <!-- 보직변경자(1일자 아닌 경우) 데이터 조회 -->
    <sql name="PIRK010_SHR_03">
        <description>보직변경자(1일자 아닌 경우) 조회</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,               -- 소속
                   A.OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', A.OCC_CD)    AS OCC_NM,               -- 직종
                   B.JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,               -- 직위
                   A.ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM                -- 성명
            FROM   ASNHR.T_CM_AHISTORY A,
                   ASNHR.T_CM_PERSON B
            WHERE  A.APP_CD  = 'LG1'                                                 -- 직종변경
            AND    A.STR_YMD >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD')
            AND    A.ENO_NO  = B.ENO_NO
            AND    SUBSTR(A.STR_YMD,7,2) <> '01'                                     -- 변경일자가 1일자 아닌 경우
            ORDER BY SF_GET_DPTSEQ('01', 'A4', B.DPT_CD), SF_GET_DPTSEQ('01', 'A2', B.JOB_CD)
            ]]>
        </query>
    </sql>

    <!-- 급여변경자료 반영여부 데이터 조회 -->
    <sql name="PIRK010_SHR_04">
        <description>급여변경자료 반영여부 조회</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,               -- 소속
                   A.OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', A.OCC_CD)    AS OCC_NM,               -- 직종
                   B.JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,               -- 직위
                   A.ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM                -- 성명
            FROM ( SELECT OCC_CD, ENO_NO
                   FROM   ASNHR.T_CM_AHISTORY AHS
                   WHERE  APP_CD  IN ('LA1','LA2','LA3','LA4','GJG','GJH','LC2','LC3','LF1','LG1','LK1','LM1','LM2','LK5')
                   AND    STR_YMD >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD')
                   AND    NOT EXISTS (SELECT CHN_YMD
                                      FROM   ASNHR.T_CM_APY
                                      WHERE  ENO_NO  = AHS.ENO_NO
                                      AND    CHN_YMD = AHS.STR_YMD)
                 ) A,
                   ASNHR.T_CM_PERSON B
            WHERE  A.ENO_NO = B.ENO_NO
            ORDER BY SF_GET_DPTSEQ('01', 'A4', B.DPT_CD), SF_GET_DPTSEQ('01', 'A2', B.JOB_CD)
            ]]>
        </query>
    </sql>

    <!-- 직종/직위 관계여부 데이터 조회 -->
    <sql name="PIRK010_SHR_05">
        <description>직종/직위 관계여부 조회</description>
        <query>
            <![CDATA[
            SELECT DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', DPT_CD)     AS DPT_NM,               -- 소속
                   OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', OCC_CD)    AS OCC_NM,               -- 직종
                   JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', JOB_CD)    AS JOB_NM,               -- 직위
                   ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', ENO_NO)           AS ENO_NM                -- 성명
            FROM   ASNHR.T_CM_PERSON
            WHERE (RET_YMD IS NULL
            OR     RET_YMD >= TO_DATE(?, 'YYYYMMDD'))
            AND    JOB_CD <> 'Z1'                                                  -- 사무직,택배직 모두 존재하는 직위는 제외
            AND  ((OCC_CD = 'A'
            AND    JOB_CD IN ('8D','8P','8E','JY','BJ','JJ'))
            OR    (OCC_CD = 'M'
            AND    JOB_CD NOT IN ('8D','8P','8E','JY','BJ','JJ'))
                 )
            ORDER BY SF_GET_DPTSEQ('01', 'A4', DPT_CD), SF_GET_DPTSEQ('01', 'A2', JOB_CD)
            ]]>
        </query>
    </sql>

    <!-- 입사후 경력 미입력자 데이터 조회 -->
    <sql name="PIRK010_SHR_06">
        <description>입사후 경력 미입력자 조회</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,               -- 소속
                   B.OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', B.OCC_CD)    AS OCC_NM,               -- 직종
                   B.JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,               -- 직위
                   A.ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM                -- 성명
            FROM ( SELECT ENO_NO
                   FROM   ASNHR.T_CM_PERSON
                   WHERE (RET_YMD IS NULL
                   OR     RET_YMD >= TO_DATE(?, 'YYYYMMDD'))
                   MINUS
                   SELECT ENO_NO
                   FROM   ASNHR.T_CM_AHISTORY
                   WHERE  STR_YMD >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD')
                   OR     NVL(END_YMD, '99991231') >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD')
                 ) A,
                   ASNHR.T_CM_PERSON B
            WHERE  A.ENO_NO = B.ENO_NO
            ORDER BY SF_GET_DPTSEQ('01', 'A4', DPT_CD), SF_GET_DPTSEQ('01', 'A2', JOB_CD)
            ]]>
        </query>
    </sql>

    <!-- 입사후 경력 종료일 미입력 데이터 조회 -->
    <sql name="PIRK010_SHR_07">
        <description>입사후 경력 종료일 미입력 조회</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,               -- 소속
                   B.OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', B.OCC_CD)    AS OCC_NM,               -- 직종
                   B.JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,               -- 직위
                   A.ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM                -- 성명
            FROM ( SELECT ENO_NO
                            FROM   ASNHR.T_CM_AHISTORY
                            WHERE  STR_YMD >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD')
                            AND    END_YMD IS NULL
                            GROUP BY ENO_NO
                            HAVING COUNT(*) > 1
                 ) A,
                   ASNHR.T_CM_PERSON B
            WHERE  A.ENO_NO = B.ENO_NO
            AND   (B.RET_YMD IS NULL
            OR     B.RET_YMD >= TO_DATE(?, 'YYYYMMDD'))
            ORDER BY SF_GET_DPTSEQ('01', 'A4', DPT_CD), SF_GET_DPTSEQ('01', 'A2', JOB_CD)
            ]]>
        </query>
    </sql>

    <!-- 변동공제 대상자 미일치 데이터 조회 -->
    <sql name="PIRK010_SHR_08">
        <description>변동공제 대상자 미일치 조회</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,               -- 소속
                   B.OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', B.OCC_CD)    AS OCC_NM,               -- 직종
                   B.JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,               -- 직위
                   A.ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM                -- 성명
            FROM ( SELECT OCC_CD, PIS_YY, PIS_MM, ENO_NO
                   FROM   ASNHR.T_CP_CHANGE
                   WHERE  PIS_YY||PIS_MM >= SUBSTR(?, 1, 6)
                   MINUS
                   SELECT OCC_CD, PIS_YY, PIS_MM, ENO_NO
                   FROM   ASNHR.T_CP_PAYMASTER
                   WHERE  PIS_YY||PIS_MM >= SUBSTR(?, 1, 6)
                 ) A,
                   ASNHR.T_CM_PERSON B
            WHERE  A.ENO_NO = B.ENO_NO
            AND  ( B.RET_YMD IS NULL
            OR     B.RET_YMD >= TO_DATE(?, 'YYYYMMDD'))
            ORDER BY SF_GET_DPTSEQ('01', 'A4', DPT_CD), SF_GET_DPTSEQ('01', 'A2', JOB_CD)
            ]]>
        </query>
    </sql>

    <!-- 입사후 경력 종료일 미일치 데이터 조회 -->
    <sql name="PIRK010_SHR_09">
        <description>입사후 경력 종료일 미일치 조회</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD,                                                         -- 소속코드
                   SF_GET_DPTNAME('01', 'A4', B.DPT_CD)     AS DPT_NM,               -- 소속
                   B.OCC_CD,                                                         -- 직종코드
                   SF_GET_COMMNAME('01', 'A1', B.OCC_CD)    AS OCC_NM,               -- 직종
                   B.JOB_CD,                                                         -- 직위코드
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD)    AS JOB_NM,               -- 직위
                   A.ENO_NO,                                                         -- 사번
                   SF_GET_ENONAME('01', A.ENO_NO)           AS ENO_NM                -- 성명
            FROM ( SELECT DISTINCT ENO_NO
                   FROM ( SELECT ENO_NO, STR_YMD, SEQ_NO
                          FROM   ASNHR.T_CM_AHISTORY AHS
                          WHERE  STR_YMD >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD')
                          AND    APP_CD <> 'LC3'
                          AND    EXISTS (SELECT COUNT(*) FROM ASNHR.T_CM_AHISTORY
                                         WHERE  ENO_NO = AHS.ENO_NO
                                         AND    STR_YMD < TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD')
                                         GROUP BY ENO_NO
                                         HAVING COUNT(*) >= 1)                      -- 기준일 이전 데이터 존재하는 자료 대상
                          MINUS
                          SELECT AHS2.ENO_NO, AHS2.STR_YMD, AHS2.SEQ_NO
                          FROM   ASNHR.T_CM_AHISTORY AHS1,
                                 ASNHR.T_CM_AHISTORY AHS2
                          WHERE  AHS1.ENO_NO = AHS2.ENO_NO
                          AND  ((AHS1.STR_YMD <> AHS2.STR_YMD
                          AND    AHS2.SEQ_NO  =  1
                          AND    AHS1.END_YMD = TO_CHAR(TO_DATE(AHS2.STR_YMD, 'YYYYMMDD') - 1, 'YYYYMMDD'))
                          OR    (AHS1.STR_YMD = AHS2.STR_YMD
                          AND    AHS1.END_YMD = DECODE(AHS2.SEQ_NO, 1, TO_CHAR(TO_DATE(AHS2.STR_YMD, 'YYYYMMDD') - 1, 'YYYYMMDD'),
                                                                       TO_CHAR(TO_DATE(AHS2.STR_YMD, 'YYYYMMDD'), 'YYYYMMDD')))
                                                    )
                          AND    AHS2.STR_YMD >= TO_CHAR(TO_DATE(?, 'YYYYMMDD'), 'YYYYMMDD')
                          AND    AHS2.APP_CD  <> 'LC3'                             -- 종료일 일치하는 자료 대상
                        )
                 ) A,
                   ASNHR.T_CM_PERSON B
            WHERE  A.ENO_NO = B.ENO_NO
            AND  ( B.RET_YMD IS NULL
            OR     B.RET_YMD >= TO_DATE(?, 'YYYYMMDD'))
            ORDER BY SF_GET_DPTSEQ('01', 'A4', DPT_CD), SF_GET_DPTSEQ('01', 'A2', JOB_CD)
            ]]>
        </query>
    </sql>

    <!-- 입사후 경력 직위/호봉 변경자 데이터 조회 -->
    <sql name="PIRK010_SHR_10">
        <description>입사후 경력 직위/호봉 변경자 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO
                 , C.ENO_NM
                 , C.OCC_CD
                 , C.OCC_NM
                 , C.DPT_CD
                 , C.DPT_NM
                 , C.JOB_CD
                 , C.JOB_NM
              FROM (SELECT *
                      FROM (SELECT ROW_NUMBER() OVER(PARTITION BY ENO_NO ORDER BY STR_YMD DESC
                                                                                , SEQ_NO DESC
                                                     ) AS NUM
                                 , SEQ_NO
                                 , ENO_NO
                                 , OCC_CD
                                 , DPT_CD
                                 , JOB_CD
                                 , HOB_CD
                                 , STR_YMD
                                 , END_YMD
                              FROM ASNHR.T_CM_AHISTORY
                             WHERE APP_CD NOT IN ('LC3','LF1','LK1','LK2','LK4','LK5','LB1','LE1','LG1','LG5','LH1','SP1','LN1','LN2','LM2','LD1','LD2')
                               AND STR_YMD >= ?
                            )
                     WHERE NUM = 1
                    ) A
                 , ASNHR.T_CM_AHISTORY B
                 , VI_T_CM_PERSON C
             WHERE A.ENO_NO     = B.ENO_NO
               AND A.ENO_NO     = C.ENO_NO
               AND (A.DPT_CD    <> B.DPT_CD
                OR  A.OCC_CD    <> B.OCC_CD
                OR  A.JOB_CD    <> B.JOB_CD
                OR  A.HOB_CD    <> B.HOB_CD)
               AND ((A.SEQ_NO   = 1
               AND   A.STR_YMD  = TO_CHAR(TO_DATE(B.END_YMD, 'YYYYMMDD')+1, 'YYYYMMDD'))
                OR  (A.SEQ_NO   = B.SEQ_NO+1
               AND   A.STR_YMD  = TO_CHAR(TO_DATE(B.END_YMD, 'YYYYMMDD'),   'YYYYMMDD')))
          ORDER BY C.DPT_SEQ
                 , C.JOB_SEQ
                 , C.HOB_SEQ DESC
                 , C.ENO_NO
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : pirl010
* @description : 파견발령
***********************************************************************
* 2007/02/06      박인이        최초작성.
***********************************************************************
-->
    <!-- 파견발령 데이터 조회 -->
    <sql name="PIRL010_SHR">
        <description>파견발령 조회</description>
        <query>
            <![CDATA[
            SELECT ENO_NO,                                                                                                   -- 사번
                   SF_GET_ENONAME('01', ENO_NO)                                                           AS ENO_NM,         -- 성명
                   (SELECT SF_GET_DPTNAME(GUBUN, 'A4', DPT_CD) FROM ASNHR.T_CM_PERSON WHERE ENO_NO = A.ENO_NO)  AS DPT_NM,         -- 부서명
                   (SELECT SF_GET_COMMNAME(GUBUN, 'A2', JOB_CD) FROM ASNHR.T_CM_PERSON WHERE ENO_NO = A.ENO_NO) AS JOB_NM,         -- 직위명
                   TO_CHAR(TO_DATE(STR_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')                                  AS STR_YMD,        -- 시작일
                   TO_CHAR(TO_DATE(END_YMD, 'YYYY-MM-DD'), 'YYYY-MM-DD')                                  AS END_YMD,        -- 종료일
                   DPC_GBN,                                                                                                  -- 파견구분
                   DPC_DPT_CD,                                                                                               -- 파견부서코드
                   DECODE(DPC_GBN, '1', SF_GET_DPTNAME('01', 'A4', DPC_DPT_CD),
                                   '2', SF_GET_COMMNAME('01', 'B5', DPC_DPT_CD),
                                   '3', SF_GET_COMMNAME('01', 'AL', DPC_DPT_CD), '')                      AS DPC_DPT_NM      -- 파견부서
            FROM   ASNHR.T_CM_DISPATCH A
            WHERE  ENO_NO LIKE ? || '%'
            AND    DPC_GBN LIKE ? || '%'
            [1]
            ORDER BY (SELECT SF_GET_DPTSEQ(GUBUN,  'A4', DPT_CD) FROM ASNHR.T_CM_PERSON WHERE ENO_NO = A.ENO_NO),
                     (SELECT SF_GET_COMMSEQ(GUBUN, 'A2', JOB_CD) FROM ASNHR.T_CM_PERSON WHERE ENO_NO = A.ENO_NO)

            ]]>
        </query>
    </sql>

    <!-- 파견발령 데이터 생성 -->
    <sql name="PIRL010_INS">
        <description>파견발령 생성</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CM_DISPATCH
                 ( ENO_NO,  STR_YMD, END_YMD, DPC_GBN, DPC_DPT_CD, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
                 ( ?,       ?,       ?,       ?,       ?,          ?,       SYSDATE, ?,       SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 파견발령 데이터 수정 -->
    <sql name="PIRL010_UPT">
        <description>파견발령 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CM_DISPATCH
            SET    END_YMD    = ?,
                   DPC_GBN    = ?,
                   DPC_DPT_CD = ?,
                   UPT_MAN    = ?,
                   UPT_YMD    = SYSDATE
            WHERE  ENO_NO     = ?
            AND    STR_YMD    = ?
            ]]>
        </query>
    </sql>

    <!-- 파견발령 데이터 삭제 -->
    <sql name="PIRL010_DEL">
        <description>파견발령 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CM_DISPATCH
            WHERE  ENO_NO     = ?
            AND    STR_YMD    = ?
            ]]>
        </query>
    </sql>




    <!--*******************************************************************************************-->
    <sql name="PIRH040_PRT">
        <description>근속년수별근속자현황 조회</description>
        <query>
            <![CDATA[
            SELECT MAIN.*,  (FLOOR(DIFF/12) || '년 ' || floor(MOD(DIFF, 12)) || '개월')  as DMONTH
            FROM
            (
             SELECT  A.JOB_NM, A.DPT_NM, A.ENO_NM,
                     TO_CHAR(A.BIR_YMD,'YYYY-MM-DD') AS BIR_YMD,
                     A.GUR_YMD AS GUR_YMD,
                     SCH_NM,
                     TO_CHAR(A.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                     TO_CHAR(A.HIRG_YMD,'YYYY-MM-DD') AS HIRG_YMD,
                     TO_CHAR(A.JPR_YMD,'YYYY-MM-DD') AS JPR_YMD,
                     MONTHS_BETWEEN(TO_DATE(replace(?,'-',''), 'YYYYMMDD'),
			   		   A.HIR_YMD) DIFF

             FROM    VI_T_CM_PERSON A
             WHERE   1=1
                     [1]
             ORDER   BY A.JOB_SEQ ASC
             ) MAIN
            ]]>
        </query>
    </sql>



    <sql name="PIRE050_SHR">
        <description>인사 현황 조회</description>
        <query>
            <![CDATA[
				SELECT
				A.GUBUN,        -- 회계구분
				A.ENO_NO,       -- 사번
				A.OCC_CD,       -- 직종 구분 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'A1', A.OCC_CD) AS OCC_NM,         -- 직종 구분 명칭
				A.ENO_NM,       -- 성명(한글)
				A.NAM_ENG,      -- 성명(영문)
				A.NAM_CHI,      -- 성명(한자)
				A.MF_TAG,       -- 남녀 구분
				DECODE(A.MF_TAG,'M','남','F','여') AS MF_NM,         -- 남녀 구분 명칭
				TO_CHAR(A.BIR_YMD,'YYYY-MM-DD') AS BIR_YMD,      -- 생년월일
				A.BIR_TAG,      -- 음양구분
				DECODE(A.BIR_TAG,'M','음력','S','양력') AS BIR_NM,  -- 음력/양력
				A.CET_NO,       -- 주민번호
				A.NAT_CD,       -- 국적
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'L2', A.NAT_CD) AS NAT_NM,            -- 국적 명칭
				A.PART_CD,      -- 부문 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'B1', A.PART_CD) AS PART_NM,           -- 부문 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'B1', A.PART_CD) AS PART_SEQ,           -- 부문 순서
				A.HEAD_CD,      -- 본부 코드
				ASNHR.SF_GET_DPTNAME2(A.GUBUN, 'B2', A.HEAD_CD) AS HEAD_NM,         -- 본부 명칭
				ASNHR.SF_GET_DPTSEQ(A.GUBUN, 'B2', A.HEAD_CD) AS HEAD_SEQ,         -- 본부 순서
				A.GBN_CD,       -- 본사/영업소 구분 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'B7', A.GBN_CD) AS GBN_NM,           -- 본사/영업소 구분 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'B7', A.GBN_CD) AS GBN_SEQ,           -- 본사/영업소 구분 순서
				A.REG_CD,       -- 지역 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'B7', A.GBN_CD) AS REG_NM,           -- 지역 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'B7', A.GBN_CD) AS REG_SEQ,           -- 지역 순서
				A.DPT_CD,       -- 소속 코드
				ASNHR.SF_GET_DPTNAME2(A.GUBUN, 'A4', A.DPT_CD) AS DPT_NM,           -- -- 소속
				TO_CHAR(A.DPA_YMD,'YYYY-MM-DD') AS DPA_YMD,      -- 현 소속발령일
				A.JOB_CD,       -- 직위 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'A2', A.JOB_CD) AS JOB_NM,           -- 직위 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'A2', A.JOB_CD) AS JOB_SEQ,           -- 직위 순서
				TO_CHAR(A.JPR_YMD,'YYYY-MM-DD') AS JPR_YMD,      -- 현 직위 승진일
				A.JIKMU_CD,     -- 직무 코드
				(SELECT DUTY_NM FROM ASNHR.T_CM_DUTYMST WHERE DUTY_CD = A.JIKMU_CD) AS JIKMU_NM, --직무 명칭
				A.DUTY_CD,      -- 직책 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'A7', A.DUTY_CD) AS DUTY_NM,         -- 직책 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'A7', A.DUTY_CD) AS DUTY_SEQ,         -- 직책 순서
				A.TEAM_CD,      -- 팀 코드
				ASNHR.SF_GET_DPTNAME2(A.GUBUN, 'A6', A.TEAM_CD) AS TEAM_NM,         -- 팀 명칭
				ASNHR.SF_GET_DPTSEQ(A.GUBUN, 'A6', A.TEAM_CD) AS TEAM_SEQ,         -- 팀 순서
				A.ORG_CD,       -- 조직 코드
				A.PNT_CD,       -- 조직 상위 코드
				A.CHD_CD,       -- 조직 하위 코드
				A.FINJ_CD,      -- 재직 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'J3', A.FINJ_CD) AS FINJ_NM,         -- 재직 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'J3', A.FINJ_CD) AS FINJ_SEQ,         -- 재직 순서
				TRIM(A.HOB_CD) HOB_CD,       -- 호봉 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'A4', A.HOB_CD) AS HOB_NM,           -- 호봉 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'A4', A.HOB_CD) AS HOB_SEQ,           -- 호봉 순서
				A.HIR_CD,       -- 채용 구분 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'C1', A.HIR_CD) AS HIR_NM,           -- 채용 구분 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'C1', A.HIR_CD) AS HIR_SEQ,           -- 채용 구분 순서
				TO_CHAR(A.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,      -- 입사일
				TO_CHAR(A.HIRG_YMD,'YYYY-MM-DD') AS HIRG_YMD,     -- 그룹 입사일
				A.RETM_REM AS RETP_YMD,     -- 계약만료일				
				A.PER_ADR,      -- 본적
				A.HF_NAM,       -- 호주
				A.HFRE_CD,      -- 호주와의 관계
				A.ZIP_NO,       -- 우편번호1(등본상)
				A.ADDRESS,      -- 주소1(등본상)
				A.ADR_CT,       -- 주소2(등본상)
				A.RZI_NO,       -- 우편번호1(실거주지)
				A.RADR,         -- 주소1(실거주지)
				A.RADR_CT,      -- 주소2(실거주지)
				A.PHN_REG,      -- 지역번호
				A.PHN_NO,       -- 전화번호
				A.EM_PHN_NO,    -- 휴대폰
				A.HOBBY,        -- 취미
				A.SPEC_CD,      -- 특기 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'D1', A.SPEC_CD) AS SPEC_NM,         -- 특기 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'D1', A.SPEC_CD) AS SPEC_SEQ,         -- 특기 순서
				TO_CHAR(A.WED_YMD,'YYYY-MM-DD') AS WED_YMD,      -- 결혼기념일
				A.REL_CD,       -- 종교 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'D2', A.REL_CD) AS REL_NM,           -- 종교 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'D2', A.REL_CD) AS REL_SEQ,           -- 종교 순서
				A.EDGR_CD,      -- 학력 구분 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'E1', A.EDGR_CD) AS EDGR_NM,         -- 학력 구분 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'E1', A.EDGR_CD) AS EDGR_SEQ,         -- 학력 구분 순서
				A.SCH_CD,       -- 학교 코드
	             CASE WHEN SCH_NAM IS NOT NULL THEN  SCH_NAM
	                  WHEN EDGR_CD = '2' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E8', SCH_CD)
	                  WHEN EDGR_CD = '3' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E2', SCH_CD)
	                  WHEN EDGR_CD = '4' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E3', SCH_CD)
	                  WHEN EDGR_CD = '5' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E4', SCH_CD)
	                  WHEN EDGR_CD = '6' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
	                  WHEN EDGR_CD = '7' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
	                  WHEN EDGR_CD = '8' THEN ASNHR.SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
	                  ELSE ''
	             END  AS SCH_NM,            -- 학교 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, '', A.SCH_CD) AS SCH_SEQ,             -- 학교 순서
				A.MAJ_CD,       -- 전공 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'E6', A.MAJ_CD) AS MAJ_NM,           -- 전공 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'E6', A.MAJ_CD) AS MAJ_SEQ,           -- 전공 순서
				A.GRD_CD,       -- 졸업 구분 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'E7', A.GRD_CD) AS GRD_NM,           -- 졸업 구분 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'E7', A.GRD_CD) AS GRD_SEQ,           -- 졸업 구분 순서
				A.GUR_YMD,      -- 졸업 일자

				TO_CHAR(A.RET_YMD,'YYYY-MM-DD') AS RET_YMD,      -- 퇴직 일자
				A.RET_CD,       -- 퇴직 사유 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'C2', A.RET_CD) AS RET_NM,           -- 퇴직 사유 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'C2', A.RET_CD) AS RET_SEQ,           -- 퇴직 사유 순서
				A.MRE_AMT,      -- 중도 정산
				A.RAM_YMD,      -- 퇴직금 기산일
				A.RTR_AMT,      -- 퇴직금
                FLOOR(MONTHS_BETWEEN(SYSDATE,A.HIR_YMD)/12)as LSE_YY,				-- 근속기간년수
				FLOOR(MOD(MONTHS_BETWEEN(SYSDATE,A.HIR_YMD), 12)) as LSE_MM, 		-- 근속기간개월
				A.COC_NAM,      -- 전직처
				A.HOL_MM,       -- 월차일수
				A.HOL_YY,       -- 년차일수
				A.HOL_AMT,      -- 년월차수당
				A.REMARK,       -- 비고
				A.HIU_NO,       -- 의료보험증 번호
				A.HIU_TAG,      -- 의료보험 공제구분
				A.HIU_GRA,      -- 의료보험 등급
				A.HINU_AMT,     -- 의료보험료
				A.MAPP_AMT,     -- 의보적용보수월액
				A.NPN_TAG,      -- 국민연금 공제구분
				A.NPN_GRD,      -- 국민연금 등급
				A.LAB_TAG,      -- 노조회비공제여부
				A.SOU_CNT,      -- 배우자수
				A.DFM_CNT,      -- 부양자수
				A.TRB_CNT,      -- 장애자수
				A.GOL_CNT,      -- 경로우대자수
				A.WCT_CNT,      -- 부녀자세대주수
				A.CHI_CNT,      -- 20세이하자녀수
				A.ESL_TAG,      -- 독신자여부
				A.AVR_SAL,      -- 평균임금

				A.ABA_CD,       -- 송금은행 코드
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'BK', A.ABA_CD) AS ABA_NM,           -- 송금은행 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'BK', A.ABA_CD) AS ABA_SEQ,           -- 송금은행 순서
				A.ACC_NO,       -- 송금 구좌번호
				A.REC_NAM,      -- 수취인 명

				A.HIRR_YMD,     -- 퇴직금계산 기준일
				A.GET_RSN,      -- 취득사유
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'C4', A.GET_RSN) AS GET_NM,           -- 취득사유 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'C4', A.GET_RSN) AS GET_SEQ,           -- 취득사유 순서
				A.HDC_CD,       -- 장애유형
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'C6', A.HDC_CD) AS HDC_NM,           -- 장애유형 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'C6', A.HDC_CD) AS HDC_SEQ,           -- 장애유형 순서
				A.HDC_GRA,      -- 장애등급
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'C7', A.HDC_GRA) AS HDCGRA_NM,           -- 장애등급 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'C7', A.HDC_GRA) AS HDCGRA_SEQ,           -- 장애등급 순서
				A.HIR_PATH,     -- 채용경로
				ASNHR.SF_GET_COMMNAME(A.GUBUN, 'C5', A.HIR_PATH) AS HIRPATH_NM,           -- 채용경로 명칭
				ASNHR.SF_GET_COMMSEQ(A.GUBUN, 'C5', A.HIR_PATH) AS HIRPATH_SEQ,           -- 채용경로 순서
				A.E_MAIL,       -- E-Mail
				A.TWO_DUTY,     -- 겸직

				A.OK_ENO,       -- 추천인 사번
				A.OK_MAN,       -- 추천인
				A.SAN_YMD,      -- 산재발생일
				A.SAN_NAM,      -- 상병명
				A.SAN_HIS,      -- 과거병력
				A.SAN_REM,      -- 발생사유

				A.GOL_CNT70,    -- 경로우대(70세이상)
				A.GOL_CNT65,    -- 경로우대(65세이상)
				A.RAM_YMD2,     -- 퇴직금 기산일 2
				A.RAM_YMD3,     -- 퇴직금 기산일 3
				A.MRE_AMT2,     -- 중도정산 금액 2
				A.MRE_AMT3,     -- 중도정산 금액 3
				A.MID_YMD1,     -- 퇴직금 중간정산일 1
				A.MID_YMD2,     -- 퇴직금 중간정산일 2
				A.MID_YMD3,     -- 퇴직금 중간정산일 3
				A.NSO_CD,
				ASNHR.SF_GET_COMMNAME('01', 'NS', A.NSO_CD) AS NSO_NM,           -- 통계청 분류명
				A.RETM_CD,
				ASNHR.SF_GET_COMMNAME('01', 'CB', A.RETM_CD) AS RETM_NM,           -- 퇴사자조치명
				A.RETM_REM,
				A.RETM_YMD,
                A.TAX_DPT,                                                                -- 회계부서
                ASNHR.SF_GET_COMMNAME(GUBUN, 'AD', A.TAX_DPT)         AS TAX_DPTNM              -- 회계부서				
				FROM ASNHR.T_CM_PERSON A
				WHERE 1=1 
				AND A.ENO_NO != '6050006'
				AND A.ENO_NO != '6180021'
				AND A.ENO_NO != '6180022'
				AND A.ENO_NO NOT LIKE '66%'
				[1]
				[2]
				[3]
				[4]
				ORDER BY A.JOB_CD, A.HOB_CD DESC, A.OCC_CD, A.HIR_YMD
            ]]>
        </query>
    </sql>


    <sql name="PIRE060_SHR">
        <description>근무 기간 조회</description>
        <query>
            <![CDATA[
				SELECT
				B.APP_YMD,
				B.STR_YMD,
				B.END_YMD,
				B.WRK_DAY,
				SF_GET_COMMNAME('01', 'J2', B.APP_CD) AS APP_CD,   				-- 발령구분
				A.GUBUN,        												-- 회계구분
				A.ENO_NO,       												-- 사번
				A.OCC_CD,       												-- 직종 구분 코드
				SF_GET_COMMNAME(A.GUBUN, 'A1', A.OCC_CD) AS OCC_NM,         	-- 직종 구분 명칭
				A.ENO_NM,       												-- 성명(한글)
				A.NAM_ENG,      												-- 성명(영문)
				A.NAM_CHI,      												-- 성명(한자)
				A.MF_TAG,       												-- 남녀 구분
				DECODE(A.MF_TAG,'M','남','F','여') AS MF_NM,         			-- 남녀 구분 명칭
				TO_CHAR(A.BIR_YMD,'YYYY-MM-DD') AS BIR_YMD,      				-- 생년월일

				A.CET_NO,       												-- 주민번호

				A.NAT_CD,       												-- 국적
				SF_GET_COMMNAME(A.GUBUN, 'L2', A.NAT_CD) AS NAT_NM,            	-- 국적 명칭

				A.PART_CD,      												-- 부문 코드
				SF_GET_COMMNAME(A.GUBUN, 'B1', A.PART_CD) AS PART_NM,           -- 부문 명칭

				B.HEAD_CD,      												-- 본부 코드
				SF_GET_DPTNAME2(A.GUBUN, 'B2', B.HEAD_CD) AS HEAD_NM,         	-- 본부 명칭

				A.GBN_CD,       												-- 본사/영업소 구분 코드
				SF_GET_COMMNAME(A.GUBUN, 'B7', A.GBN_CD) AS GBN_NM,           	-- 본사/영업소 구분 명칭

				A.REG_CD,       												-- 지역 코드
				SF_GET_COMMNAME(A.GUBUN, 'B3', A.REG_CD) AS REG_NM,           	-- 지역 명칭

				B.DPT_CD,       												-- 소속 코드
				SF_GET_DPTNAME2(A.GUBUN, 'A4', B.DPT_CD) AS DPT_NM,           	-- 소속
				TO_CHAR(A.DPA_YMD,'YYYY-MM-DD') AS DPA_YMD,     	 			-- 현 소속발령일

				B.JOB_CD,       												-- 직위 코드
				SF_GET_COMMNAME(A.GUBUN, 'A2', B.JOB_CD) AS JOB_NM,           	-- 직위 명칭

				TO_CHAR(A.JPR_YMD,'YYYY-MM-DD') AS JPR_YMD,      				-- 현 직위 승진일



				A.FINJ_CD,      												-- 재직 코드
				SF_GET_COMMNAME(A.GUBUN, 'J3', A.FINJ_CD) AS FINJ_NM,         	-- 재직 명칭

				TO_CHAR(A.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,      				-- 입사일
				TO_CHAR(A.HIRG_YMD,'YYYY-MM-DD') AS HIRG_YMD,     				-- 그룹 입사일

				A.RADR,         												-- 주소1(실거주지)
				A.RADR_CT,      												-- 주소2(실거주지)
				A.PHN_REG,      												-- 지역번호
				A.PHN_NO,       												-- 전화번호
				A.EM_PHN_NO,    												-- 휴대폰

				A.REL_CD,       											  	-- 종교 코드
				SF_GET_COMMNAME(A.GUBUN, 'D2', A.REL_CD) AS REL_NM,           	-- 종교 명칭

				A.EDGR_CD,      												-- 학력 구분 코드
				SF_GET_COMMNAME(A.GUBUN, 'E1', A.EDGR_CD) AS EDGR_NM,         	-- 학력 구분 명칭

				A.SCH_CD,       												-- 학교 코드
	             CASE WHEN SCH_NAM IS NOT NULL THEN  SCH_NAM
	                  WHEN EDGR_CD = '2' THEN SF_GET_COMMNAME(GUBUN, 'E8', SCH_CD)
	                  WHEN EDGR_CD = '3' THEN SF_GET_COMMNAME(GUBUN, 'E2', SCH_CD)
	                  WHEN EDGR_CD = '4' THEN SF_GET_COMMNAME(GUBUN, 'E3', SCH_CD)
	                  WHEN EDGR_CD = '5' THEN SF_GET_COMMNAME(GUBUN, 'E4', SCH_CD)
	                  WHEN EDGR_CD = '6' THEN SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
	                  WHEN EDGR_CD = '7' THEN SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
	                  WHEN EDGR_CD = '8' THEN SF_GET_COMMNAME(GUBUN, 'E5', SCH_CD)
	                  ELSE ''
	             END  AS SCH_NM,            									-- 학교 명칭

				A.MAJ_CD,       												-- 전공 코드
				SF_GET_COMMNAME(A.GUBUN, 'E6', A.MAJ_CD) AS MAJ_NM,           	-- 전공 명칭

				A.GRD_CD,       												-- 졸업 구분 코드
				SF_GET_COMMNAME(A.GUBUN, 'E7', A.GRD_CD) AS GRD_NM,           	-- 졸업 구분 명칭

				A.GUR_YMD,      												-- 졸업 일자
				TO_CHAR(A.RET_YMD,'YYYY-MM-DD') AS RET_YMD,      				-- 퇴직 일자

				A.E_MAIL       													-- E-Mail

				FROM ASNHR.T_CM_PERSON A,

				(
				SELECT ENO_NO, APP_YMD, APP_CD, HEAD_CD, DPT_CD, JOB_CD, STR_YMD, END_YMD, TO_DATE(END_YMD) - TO_DATE(STR_YMD) AS WRK_DAY
				FROM ASNHR.T_CM_AHISTORY

				WHERE STR_YMD <= ? AND nvl(END_YMD,'99991231') >= ?
				AND DPT_CD  LIKE '%'||?||'%'
				) B,

				(SELECT DPT_CD, DPT_NM, GBN_CD FROM ASNHR.T_CM_DEPT WHERE GBN_CD LIKE '%'||?||'%') C

				WHERE

				B.DPT_CD = C.DPT_CD
				AND A.ENO_NO = B.ENO_NO
				--AND A.RET_YMD IS NULL

				ORDER BY A.ENO_NO, B.APP_YMD

            ]]>
        </query>
    </sql>


    <sql name="PIRE060_SHR_DPT">
        <description>근무지별 소속 조회</description>
        <query>
            <![CDATA[
				 SELECT
				 DPT_CD, DPT_NM
				 FROM ASNHR.T_CM_DEPT
				 WHERE 1=1
				 AND DPT_NM NOT IN ('현대아산(주)','미사용코드')
				 ORDER BY DPT_CD
            ]]>
        </query>
    </sql>



</sqls>