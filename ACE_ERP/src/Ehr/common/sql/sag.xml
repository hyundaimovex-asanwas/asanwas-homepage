

<sqls>


<!-- 급여관리 -->
<!--
***********************************************************************
* @UseCase     : SAGA010
* @description : 급여테이블
***********************************************************************
* 2007/03/14     한학현        최초작성.
***********************************************************************
-->
    <!-- 급여테이블 조회 -->
    <sql name="SAGA010_SHR">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
                DECODE(NVL(A.APY_YMD,''),'','',SUBSTR(A.APY_YMD,1,4)||'-'||SUBSTR(A.APY_YMD,5,2)||'-'||SUBSTR(A.APY_YMD,7,2)) AS APY_YMD,
                A.OCC_CD,
                A.JOB_CD,
                A.HOB_CD,
                A.ENO_NO,
                A.BAS_AMT,
                A.LAW_AMT,
                A.BNS_AMT,
                NVL(A.ETC_AMT, 0)    AS ETC_AMT,	--교통비
                NVL(A.ETC_AMT3, 0)   AS ETC_AMT3,	--식대
                STR_YMD AS STR_YMD,
                END_YMD AS END_YMD,
                A.DUTY_AMT,
                A.OT_AMT,
                (SELECT ENO_NM FROM T_CM_PERSON WHERE ENO_NO = A.ENO_NO) AS ENO_NM,
                SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM ,
                SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,
                NVL(BAS_AMT,0) + NVL(DUTY_AMT, 0) + NVL(BNS_AMT,0) +NVL(LAW_AMT,0)  AS TOTAL_AMT
            FROM  T_CP_PAYTABLE  A
            WHERE A.STR_YMD <= ?
              AND NVL(A.END_YMD, '99991231') >= ?
              AND A.STR_YMD = (SELECT MAX(B.STR_YMD) FROM T_CP_PAYTABLE B WHERE A.ENO_NO = B.ENO_NO )
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.OCC_CD in ('0','1','2','3','8','9')
              AND NVL(A.JOB_CD,' ') LIKE '%'||?||'%'
         ORDER BY A.JOB_CD, A.ENO_NO

            ]]>
        </query>
    </sql>

    <!-- 적용일자 조회 -->
    <sql name="SAGA010_SHR_01">
        <description>급여테이블 적용일자 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') AS APY_YMD FROM T_CP_PAYTABLE
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 신규 저장. -->
    <sql name="SAGA010_INS">
        <description>급여테이블 신규 저장</description>
        <query>
            <![CDATA[
				INSERT INTO T_CP_PAYTABLE (
            		OCC_CD,
					JOB_CD,
					ENO_NO,
					HOB_CD,
					APY_YMD,
					BAS_AMT,
					DUTY_AMT,
					LAW_AMT,
					BNS_AMT,
					STR_YMD,

					IPT_MAN,
					IPT_YMD,
					UPT_MAN,
					UPT_YMD
			) VALUES (
					(SELECT OCC_CD FROM T_CM_PERSON WHERE ENO_NO = ?),
					?,
					?,
					(SELECT DECODE(?, SUBSTR(max(HOB_CD), 0, 4), max(HOB_CD)+1, ?||?||'01') FROM T_CP_PAYTABLE
             			WHERE ENO_NO = ?),
                    ?,
					?, ?, ?, ?, ?,
					?, SYSDATE,
					?, SYSDATE
			)
            ]]>
        </query>
    </sql>

    <!-- 저장시 종료일자 수정. -->
    <sql name="SAGA010_UPT2">
        <description>저장시 종료일자 수정</description>
        <query>
            <![CDATA[
				UPDATE T_CP_PAYTABLE
					SET    END_YMD  = TO_CHAR(TO_DATE(?) -1, 'YYYYMMDD'), --종료일자
           				UPT_MAN = ?, --최종 수정자
           				UPT_YMD = SYSDATE --최종 수정일시
    			WHERE  HOB_CD = (SELECT HOB_CD
        FROM T_CP_PAYTABLE
        WHERE END_YMD IS NULL
          AND ENO_NO = ?
          AND ROWNUM  = 1) --호봉
            ]]>
        </query>
    </sql>

    <!-- 저장시 종료일자 초기화. -->
    <sql name="SAGA010_UPT3">
        <description>저장시 종료일자 초기화</description>
        <query>
            <![CDATA[
				UPDATE T_CP_PAYTABLE
					SET    END_YMD  = '', --종료일자
           				UPT_MAN = ?, --최종 수정자
           				UPT_YMD = SYSDATE --최종 수정일시
    			WHERE  HOB_CD = (SELECT MAX(HOB_CD)
							        FROM T_CP_PAYTABLE
							        WHERE ENO_NO = ? ) --호봉
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 수정. -->
    <sql name="SAGA010_UPT">
        <description>급여테이블 수정</description>
        <query>
            <![CDATA[
				UPDATE T_CP_PAYTABLE
					SET    BAS_AMT = ?, --기본급
           				DUTY_AMT = ?, --직무수당
           				LAW_AMT = ?, --법정수당
           				BNS_AMT = ?, --상여금

           				UPT_MAN = ?, --최종 수정자
           				UPT_YMD = SYSDATE --최종 수정일시
    			WHERE  HOB_CD = ? --호봉
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 삭제 -->
    <sql name="SAGA010_DEL">
        <description>급여테이블 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_PAYTABLE
            WHERE  OCC_CD in ('0','1','2','3','8','9')
            AND    JOB_CD = ?
            AND    HOB_CD = ?
            AND    APY_YMD = ?
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 삭제 -->
    <sql name="SAGA010_DEL_01">
        <description>급여테이블 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_PAYTABLE
            WHERE  OCC_CD = ?
            AND    APY_YMD = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGA020
* @description : 개인별급여사항관리
***********************************************************************
* 2007/03/15     한학현        최초작성.
***********************************************************************
-->
    <!-- 해당년월 조회 -->
    <sql name="SAGA020_SHR_01">
        <description>개인별급여사항관리 해당년월 조회</description>
        <query>
            <![CDATA[
            SELECT MAX(PIS_YY||PIS_MM) AS PIS_YYMM FROM T_CP_PAYMASTER
            WHERE SAL_GBN IN('0')
            ]]>
        </query>
    </sql>

 <!-- 개인별급여사항등록 조회 -->
    <sql name="SAGA020_SHR">
        <description>개인별급여사항등록 조회</description>
        <query>
            <![CDATA[
            SELECT A.ENO_NO,
                   B.ENO_NM,
                   A.PIS_YY,
                   A.PIS_MM,
                   A.SEQ,
                   A.OCC_CD,
                   SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM,
                   A.DPT_CD,
                   SF_GET_DPTNAME('01', 'A4',A.DPT_CD) AS DPT_NM,
                   A.JOB_CD,
                   SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,
                   A.HOB_CD,
                   SF_GET_COMMNAME('01', 'A3', A.HOB_CD) AS HOB_NM,
                   SUBSTR(B.RZI_NO,1,3)||'-'||SUBSTR(B.RZI_NO,4,3) AS RZI_NO,
                   B.RADR,
                   B.RADR_CT,
                   B.CET_NO,
                   TO_CHAR(B.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                   TO_CHAR(B.RET_YMD,'YYYY-MM-DD') AS RET_YMD,
                   TO_CHAR(B.TMR_YMD,'YYYY-MM-DD') AS TMR_YMD,
                   B.TMR_DD,
                   A.SOU_CNT,
                   A.DFM_CNT,
                   A.TRB_CNT,
                   A.GOL_CNT,
                   A.WCT_CNT,
                   A.CHI_CNT,
                   NVL(TRIM(B.ESL_TAG),'N') AS ESL_TAG,
                   NVL(TRIM(B.LAB_TAG),'N') AS LAB_TAG,
                   A.ABA_CD,
                   SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM,
                   A.REC_NAM,
                   A.ACC_NO,
                   NVL(TRIM(A.HIU_TAG),'1') AS HIU_TAG,
                   A.HIU_NO,
                   A.HINU_AMT,
                   A.OLD_AMT,
                   NVL(TRIM(A.NPN_TAG),'1') AS NPN_TAG,
                   A.NPEN_AMT AS NPEN_AMT
            FROM   T_CP_PAYMASTER A, VI_T_CM_PERSON2 B
            WHERE  A.ENO_NO = B.ENO_NO
            AND    NVL(A.ENO_NO,' ') LIKE '%'||?||'%'
            AND    NVL(A.PIS_YY,' ') LIKE '%'||?||'%'
            AND    NVL(A.PIS_MM,' ') LIKE '%'||?||'%'
            AND    NVL(A.SAL_GBN,' ') = ?
            AND    NVL(A.SEQ,' ') = ?
            ]]>
        </query>
    </sql>

    <!-- 재직별급여사항 조회 -->
    <sql name="SAGA020_SHR_02">
        <description>재직별급여사항 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD,
                   PIS_YY,
                   PIS_MM,
                   ENO_NO,
                   SEQ,
                   DECODE(NVL(STR_YMD,''),'','',SUBSTR(STR_YMD,1,4)||'-'||SUBSTR(STR_YMD,5,2)||'-'||SUBSTR(STR_YMD,7,2)) AS STR_YMD,
                   DECODE(NVL(END_YMD,''),'','',SUBSTR(END_YMD,1,4)||'-'||SUBSTR(END_YMD,5,2)||'-'||SUBSTR(END_YMD,7,2)) AS END_YMD,
                   PDD_CNT,
                   DPT_CD,
                   SF_GET_DPTNAME('01', 'A4',DPT_CD) AS DPT_NM,
                   JOB_CD,
                   SF_GET_COMMNAME('01', 'A2', JOB_CD) AS JOB_NM,
                   HOB_CD,
                   SF_GET_COMMNAME('01', 'A3', HOB_CD) AS HOB_NM,
                   JCD_CD,
                   SF_GET_COMMNAME('01', 'J3', JCD_CD) AS JCD_NM,
                   JCDT_CD
            FROM   T_CP_PAYMASTER_OFFICE
            WHERE  NVL(PIS_YY,' ') LIKE '%'||?||'%'
            AND    NVL(PIS_MM,' ') LIKE '%'||?||'%'
            AND    NVL(ENO_NO,' ') LIKE '%'||?||'%'
            AND    NVL(SEQ,' ') = ?
            ORDER BY STR_YMD
            ]]>
        </query>
    </sql>

    <!-- 개인별급여사항등록 수정(T_CM_PERSON) -->
    <sql name="SAGA020_UPT">
        <description>개인별급여사항등록 수정(T_CM_PERSON)</description>
        <query>
            <![CDATA[
            UPDATE T_CM_PERSON
            SET    SOU_CNT = ?,
                   DFM_CNT = ?,
                   TRB_CNT = ?,
                   GOL_CNT = ?,
                   WCT_CNT = ?,
                   CHI_CNT = ?,
                   LAB_TAG = ?,
                   ABA_CD = ?,
                   REC_NAM = ?,
                   ACC_NO = ?,
                   HIU_TAG = ?,
                   HIU_NO = ?,
                   HINU_AMT = ?,
                   OLD_AMT = ?,
                   NPN_TAG = ?,
                   NPEN_AMT = ?,
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 개인별급여사항등록 수정(T_CP_PAYMASTER) -->
    <sql name="SAGA020_UPT_01">
        <description>개인별급여사항등록 수정(T_CP_PAYMASTER)</description>
        <query>
            <![CDATA[
            UPDATE T_CP_PAYMASTER
            SET    SOU_CNT = ?,
                   DFM_CNT = ?,
                   TRB_CNT = ?,
                   GOL_CNT = ?,
                   WCT_CNT = ?,
                   CHI_CNT = ?,
                   ABA_CD = ?,
                   REC_NAM = ?,
                   ACC_NO = ?,
                   HIU_TAG = ?,
                   HIU_NO = ?,
                   HINU_AMT = ?,
                   OLD_AMT = ?,
                   NPN_TAG = ?,
                   NPEN_AMT = ?,
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  OCC_CD = ?
            AND    PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    ENO_NO = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 개인별급여사항등록 삭제(T_CP_PAYMASTER) -->
    <sql name="SAGA020_DEL">
        <description>개인별급여사항등록 삭제(T_CP_PAYMASTER)</description>
        <query>
            <![CDATA[
            DELETE T_CP_PAYMASTER
            WHERE  OCC_CD = ?
            AND    PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    ENO_NO = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 개인별급여사항등록 삭제(T_CP_PAYMASTER_OFFICE) -->
    <sql name="SAGA020_DEL_01">
        <description>개인별급여사항등록 삭제(T_CP_PAYMASTER_OFFICE)</description>
        <query>
            <![CDATA[
            DELETE T_CP_PAYMASTER_OFFICE
            WHERE  OCC_CD = ?
            AND    PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 로그 인원수 변경(T_CP_WORKLOG) -->
    <sql name="SAGA020_UPT_02">
        <description>로그 인원수 변경(T_CP_WORKLOG)</description>
        <query>
            <![CDATA[
            UPDATE T_CP_WORKLOG A
            SET    PRO_CNT = (SELECT PRO_CNT-1
                              FROM   T_CP_WORKLOG B
                              WHERE  A.PIS_YY = B.PIS_YY
                              AND    A.PIS_MM = B.PIS_MM
                              AND    A.OCC_CD = B.OCC_CD
                              AND    A.SAL_GBN = B.SAL_GBN
                              AND    A.SEQ = B.SEQ
                             ),
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    OCC_CD = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?

            ]]>
        </query>
    </sql>

    <!-- 재직별급여사항 신규저장 -->
    <sql name="SAGA020_INS">
        <description>재직별급여사항 신규저장</description>
        <query>
            <![CDATA[
             INSERT INTO T_CP_PAYMASTER_OFFICE
                 ( OCC_CD,
                   PIS_YY,
                   PIS_MM,
                   ENO_NO,
                   SEQ,
                   STR_YMD,
                   END_YMD,
                   PDD_CNT,
                   DPT_CD,
                   JOB_CD,
                   HOB_CD,
                   JCD_CD,
                   JCDT_CD,
                   BAS_AMT,
                   DUTY_AMT,
                   OT_AMT,
                   WEL_AMT,
                   OSE_AMT,
                   RUN_AMT,
                   MH_AMT, LSEV_AMT, TB3_AMT, SGF_AMT, JCD_SAL_TOT,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            VALUES
                 (  ?,
                    ?,
                    ?,
                    ?,
                    ?,
                    ?,
                    ?,
                    ?,
                    ?,
                    ?,
                    (SELECT MAX(HOB_CD)  FROM T_CP_PAYTABLE
                     WHERE ENO_NO = ?
                          AND STR_YMD <= TO_CHAR(SYSDATE, 'YYYYMMDD')),
                    ?, (SELECT GBN2_TAG FROM T_CM_COMMON WHERE CD_GBN  = 'A2' AND COMM_CD = ?), 0, 0, 0,
                    0, 0, 0, 0, 0, 0, 0, 0,
                    ?, SYSDATE,?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 재직별급여사항 수정 -->
    <sql name="SAGA020_UPT_03">
        <description>재직별급여사항 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_PAYMASTER_OFFICE
            SET    END_YMD = ?,
                   PDD_CNT = ?,
                   DPT_CD = ?,
                   JOB_CD = ?,
                   HOB_CD = ?,
                   JCD_CD = ?,
                   JCDT_CD = (SELECT GBN2_TAG FROM T_CM_COMMON WHERE CD_GBN  = 'A2' AND COMM_CD = ?),
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  OCC_CD = ?
            AND    PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            AND    SEQ = ?
            AND    STR_YMD = ?
            ]]>
        </query>
    </sql>

    <!-- 재직별급여사항 삭제 -->
    <sql name="SAGA020_DEL_02">
        <description>재직별급여사항 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_PAYMASTER_OFFICE
            WHERE  OCC_CD = ?
            AND    PIS_YY = ?
            AND    PIS_MM = ?
            AND    ENO_NO = ?
            AND    SEQ = ?
            AND    STR_YMD = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGA030
* @description : 급여계산처리
***********************************************************************
* 2007/03/19     한학현        최초작성.
***********************************************************************
-->
    <!-- 급여(상여)계산처리 조회 -->
    <sql name="SAGA030_SHR">
        <description>급여(상여)계산처리 조회</description>
        <query>
            <![CDATA[
            SELECT PIS_YY,
                   PIS_MM,
                   OCC_CD,
                   SAL_GBN,
                   SEQ,
                   PRO_STS,
                   DECODE(NVL(PAY_YMD,''),'','',SUBSTR(PAY_YMD,1,4)||'-'||SUBSTR(PAY_YMD,5,2)||'-'||SUBSTR(PAY_YMD,7,2)) AS PAY_YMD,
                   WOM_AMT,
                   DECODE(NVL(APY_YMD,''),'','',SUBSTR(APY_YMD,1,4)||'-'||SUBSTR(APY_YMD,5,2)||'-'|| '01') AS APY_YMD,
                   BPAY_PCT,
                   BYY_PCT,
                   BBYY_PCT,
                   PRO_CNT,
                   ERR_CNT,
                   REMARK,
                   (CASE WHEN SAL_GBN='4'
                         THEN DECODE(NVL(REMARK,''),'','',SUBSTR(REMARK,1,4)||'-'||SUBSTR(REMARK,5,2))
                         ELSE ''
                         END) AS STR_YYMM,
                   (CASE WHEN SAL_GBN='4'
                         THEN DECODE(NVL(REMARK,''),'','',SUBSTR(REMARK,7,4)||'-'||SUBSTR(REMARK,11,2))
                         ELSE ''
                         END) AS END_YYMM,
                   SLP_WRK_NO1,
                   SLP_WRK_NO2,
                   SLP_WRK_NO3,
                   RET_TAG
            FROM   T_CP_WORKLOG
            WHERE  NVL(PIS_YY,' ') LIKE '%'||?||'%'
            AND    NVL(PIS_MM,' ') LIKE '%'||?||'%'
            AND    NVL(OCC_CD,' ') LIKE '%'||?||'%'
            AND    NVL(SAL_GBN,' ') LIKE '%'||?||'%'
            AND    NVL(SEQ,' ') LIKE '%'||?||'%'
            ]]>
        </query>
    </sql>

    <!-- 작업로그 신규저장 (작업 OPEN) -->
    <sql name="SAGA030_INS">
        <description>작업로그 신규저장 (작업 OPEN)</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_WORKLOG
                 ( PIS_YY, PIS_MM, OCC_CD, SAL_GBN, SEQ,
                   PRO_STS, PAY_YMD, WOM_AMT, APY_YMD, BPAY_PCT, BYY_PCT, BBYY_PCT, REMARK, RET_TAG,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            VALUES
                 (  ?, ?, ?, ?, ?,
                    ?, ?, ?, ?, ?, ?, ?, ?, ?,
                    ?, SYSDATE,?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 대상자 선정(수정된 작업로그 대상자 선정전 다시 저장) -->
    <sql name="SAGA030_UPT">
        <description>대상자 선정(수정된 작업로그 대상자 선정전 다시 저장)</description>
        <query>
            <![CDATA[
            UPDATE T_CP_WORKLOG
            SET    PRO_STS = ?,
                   PAY_YMD = ?,
                   WOM_AMT = ?,
                   APY_YMD = ?,
                   BPAY_PCT = ?,
                   BYY_PCT = ?,
                   BBYY_PCT = ?,
                   REMARK = ?,
                   RET_TAG = ?,
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 대상자 선정(전체 재직자 기준 급여마스터 생성) -->
    <sql name="SAGA030_INS_01">
        <description>대상자 선정(전체 재직자 기준 급여마스터 생성)</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_PAYMASTER
                      ( OCC_CD, PIS_YY, PIS_MM, SAL_GBN, ENO_NO, SEQ,
                        DPT_CD, JOB_CD,
                        JOBT_CD,
                        HOB_CD, ACC_NO, SOU_CNT, DFM_CNT, TRB_CNT, GOL_CNT, GOL_CNT65, GOL_CNT70, WCT_CNT,CHI_CNT,
                        LSEV_YY,
                        HIU_NO, HIU_TAG, HIU_GRA, NPN_TAG, NPN_GRD, ABA_CD, REC_NAM,
                        DOMW_DD, OUTW_DD, OTHW_CNT, TOTW_DD,
                        IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                      )
            SELECT  ?, ?, ?, ?, ENO_NO, ?,
                    DPT_CD, JOB_CD,
                    (SELECT GBN2_TAG FROM T_CM_COMMON WHERE CD_GBN = 'A2' AND COMM_CD=A.JOB_CD) AS JOBT_CD,
                    HOB_CD, ACC_NO, SOU_CNT, DFM_CNT, TRB_CNT, GOL_CNT, GOL_CNT65, GOL_CNT70, WCT_CNT,CHI_CNT,
                    TRUNC(MONTHS_BETWEEN(TO_DATE(TO_NUMBER(?),'YYYYMMDD'),TO_DATE(TO_NUMBER(TO_CHAR(HIRG_YMD,'YYYYMMDD')),'YYYYMMDD') + TO_NUMBER(NVL(LTRIM(TMR_DD),0))) / 12) AS LSEV_YY, -- 근속년수
                    HIU_NO, HIU_TAG, HIU_GRA, NPN_TAG, NPN_GRD, ABA_CD, REC_NAM,
                    '0' AS DOMW_DD, '0' AS OUTW_DD, '0' AS OTHW_CNT, '0' AS TOTW_DD, --0으로 초기화
                    ?, SYSDATE, ?, SYSDATE
            FROM    T_CM_PERSON A
            WHERE   A.OCC_CD = ?
            AND    (NVL(LTRIM(TO_CHAR(HIR_YMD,'YYYYMMDD')),'00000000') <= LTRIM(TO_CHAR(TO_NUMBER(?||?||'01'),'00000000')))
            AND    (NVL(LTRIM(TO_CHAR(RET_YMD,'YYYYMMDD')),'99999999') >= LTRIM(TO_CHAR(TO_NUMBER(TO_CHAR(LAST_DAY(TO_DATE(?||?,'YYYYMM')),'YYYYMMDD')),'00000000')))
            AND    (?||? = (SELECT NVL(SUBSTR(MAX(STR_YMD),1,6),?||?) YMD
                                    FROM   T_CM_AHISTORY
                                    WHERE  ENO_NO = A.ENO_NO
                                    AND    APP_CD = 'LN1'
                                    AND    JCD_CD IN ('L24','L26')
                                    AND    ?||? BETWEEN SUBSTR(STR_YMD,1,6)
                                    AND SUBSTR(NVL(TRIM(END_YMD),'99999999'),1,6))
                    OR
                    ?||? = (SELECT NVL(SUBSTR(TO_CHAR(TO_DATE(NVL(END_YMD,'99991230'),'YYYYMMDD') + 1,'YYYYMMDD'),1,6),?||?) YMD
                                    FROM   T_CM_AHISTORY
                                    WHERE  STR_YMD = (SELECT MAX(STR_YMD)
                                                                          FROM   T_CM_AHISTORY WHERE ENO_NO = A.ENO_NO
                                                                          AND    APP_CD = 'LN1'
                                                                          AND    JCD_CD IN ('L24','L26')
                                                                          AND    ?||? BETWEEN SUBSTR(STR_YMD,1,6) AND SUBSTR(NVL(TRIM(END_YMD),'99999999'),1,6))
                                    AND    ENO_NO = A.ENO_NO
                                    AND    APP_CD = 'LN1'
                                    AND    JCD_CD IN ('L24','L26'))
                    OR
                    ?||? <= (SELECT NVL(TO_CHAR(add_months(TO_DATE(MAX(STR_YMD)),3),'YYYYMM'),?||?) YMD
                                    FROM   T_CM_AHISTORY
                                    WHERE  ENO_NO = A.ENO_NO
                                    AND    APP_CD = 'LN1'
                                    AND    JCD_CD IN ('L26')
                                    AND    ?||? BETWEEN SUBSTR(STR_YMD,1,6)
                                    AND SUBSTR(NVL(TRIM(END_YMD),'99999999'),1,6))
                    ) -- 휴직자 제외(L26은 3개월간 기본급여의 60%가 나간다.)
            AND     (60 >= (SELECT to_date(?||?||'01','YYYYMMDD')-to_DATE(STR_YMD)+1 DAYS
                            FROM   T_CM_AHISTORY
                            WHERE  ENO_NO = A.ENO_NO
                            AND    APP_CD = 'LN1'
                            AND    JCD_CD = 'L28'
                            AND    ?||? BETWEEN SUBSTR(STR_YMD,1,6) AND SUBSTR(NVL(TRIM(END_YMD),'99999999'),1,6))
                      OR
                           (SELECT to_date(?||?||'01','YYYYMMDD')-to_DATE(STR_YMD)+1 DAYS
                            FROM   T_CM_AHISTORY
                            WHERE  ENO_NO = A.ENO_NO
                            AND    APP_CD = 'LN1'
                            AND    JCD_CD = 'L28'
                            AND    ?||? BETWEEN SUBSTR(STR_YMD,1,6) AND SUBSTR(NVL(TRIM(END_YMD),'99999999'),1,6)) IS NULL
                     ) --출산휴가자(60일이내일때만 포함)
            [1]
            ]]>
        </query>
    </sql>

    <!-- 대상자 선정(급여마스터 기준 재직별급여사항 데이터 생성) -->
    <sql name="SAGA030_SHR_01">
        <description>대상자 선정(급여마스터 기준 재직별급여사항 데이터 생성)</description>
        <query>
            <![CDATA[
            SELECT ROW_NUMBER() OVER(PARTITION BY A.OCC_CD, A.PIS_YY, A.PIS_MM, A.ENO_NO, A.SEQ, B.JOB_CD, B.HOB_CD, B.JCD_CD ORDER BY STR_YMD DESC) AS NUM,
                   A.OCC_CD, A.PIS_YY, A.PIS_MM, A.ENO_NO, A.SEQ,
                   DECODE(SUBSTR(B.STR_YMD,1,6),?||?,B.STR_YMD,?||?||'01') AS STR_YMD,

                   DECODE(B.JCD_CD,'L28',
                          DECODE(NVL(SUBSTR(B.END_YMD,1,6),?||?),SUBSTR(TO_CHAR(TO_DATE(B.STR_YMD)+59,'YYYYMMDD'),1,6),
                                 TO_CHAR(TO_DATE(B.STR_YMD)+59,'YYYYMMDD'),
                                 DECODE(SUBSTR(B.END_YMD,1,6),?||?,B.END_YMD,TO_CHAR(LAST_DAY(TO_DATE(?||?,'YYYYMM')),'YYYYMMDD'))
                                 ),
                          DECODE(SUBSTR(B.END_YMD,1,6),?||?,B.END_YMD,TO_CHAR(LAST_DAY(TO_DATE(?||?,'YYYYMM')),'YYYYMMDD'))
                         ) AS END_YMD,--출산휴가자는 60일까지만 월급이 나간다

                   DECODE(B.JCD_CD,'L28',
                          DECODE(NVL(SUBSTR(B.END_YMD,1,6),?||?),SUBSTR(TO_CHAR(TO_DATE(B.STR_YMD)+59,'YYYYMMDD'),1,6),
                                 SUBSTR(TO_CHAR(TO_DATE(B.STR_YMD)+59,'YYYYMMDD'),7,2),
                                 DECODE( ((DECODE(SUBSTR(B.END_YMD,1,6),?||?,B.END_YMD,TO_CHAR(LAST_DAY(TO_DATE(?||?,'YYYYMM')),'YYYYMMDD'))
                                         - DECODE(SUBSTR(B.STR_YMD,1,6),?||?,B.STR_YMD,?||?||'01')) + 1),'1','0',
                                         ((DECODE(SUBSTR(B.END_YMD,1,6),?||?,B.END_YMD,TO_CHAR(LAST_DAY(TO_DATE(?||?,'YYYYMM')),'YYYYMMDD'))
                                         - DECODE(SUBSTR(B.STR_YMD,1,6),?||?,B.STR_YMD,?||?||'01')) + 1))
                                 ),
                          DECODE( ((DECODE(SUBSTR(B.END_YMD,1,6),?||?,B.END_YMD,TO_CHAR(LAST_DAY(TO_DATE(?||?,'YYYYMM')),'YYYYMMDD'))
                                  - DECODE(SUBSTR(B.STR_YMD,1,6),?||?,B.STR_YMD,?||?||'01')) + 1),'1','0',
                                  ((DECODE(SUBSTR(B.END_YMD,1,6),?||?,B.END_YMD,TO_CHAR(LAST_DAY(TO_DATE(?||?,'YYYYMM')),'YYYYMMDD'))
                                  - DECODE(SUBSTR(B.STR_YMD,1,6),?||?,B.STR_YMD,?||?||'01')) + 1))
                         )AS PDD_CNT,--출산휴가자는 60일까지만 월급이 나간다

                   A.DPT_CD, B.JOB_CD, B.HOB_CD, B.JCD_CD,
                   (SELECT GBN2_TAG FROM T_CM_COMMON WHERE CD_GBN = 'A2' AND COMM_CD=A.JOB_CD) AS JCDT_CD
            FROM T_CP_PAYMASTER A, T_CM_AHISTORY B
            WHERE A.ENO_NO=B.ENO_NO(+)
            AND A.OCC_CD = ?
            AND A.PIS_YY = ?
            AND A.PIS_MM = ?
            AND A.SAL_GBN = ?
            AND A.SEQ = ?
            AND (SUBSTR(B.STR_YMD,1,6) = A.PIS_YY||A.PIS_MM
                 OR SUBSTR(B.END_YMD,1,6) = A.PIS_YY||A.PIS_MM
                 OR (SUBSTR(B.STR_YMD,1,6) <= A.PIS_YY||A.PIS_MM AND TRIM(B.END_YMD) IS NULL))
            [1]
            ORDER BY A.ENO_NO, NUM
            ]]>
        </query>
    </sql>

    <!-- 작업로그 신규저장 (작업 OPEN) -->
    <sql name="SAGA030_INS_02">
        <description>대상자 선정(급여마스터 기준 재직별급여사항 데이터 생성)</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_PAYMASTER_OFFICE
                      ( OCC_CD, PIS_YY, PIS_MM, ENO_NO, SEQ,
                        STR_YMD, END_YMD, PDD_CNT, DPT_CD, JOB_CD, HOB_CD, JCD_CD, JCDT_CD,
                        BAS_AMT, DUTY_AMT, OT_AMT, WEL_AMT, OSE_AMT, RUN_AMT, MH_AMT, LSEV_AMT, TB3_AMT, SGF_AMT, JCD_SAL_TOT,
                        IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                      )
            VALUES
                 (  ?, ?, ?, ?, ?,
                    ?, ?, ?, ?, ?, ?, ?, ?,
                    ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
                    ?, SYSDATE,?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 대상자 선정(재직별급여사항의 내용 근태마스터 항목에 업데이트) -->
    <sql name="SAGA030_UPT_01">
        <description>대상자 선정(재직별급여사항의 내용 근태마스터 항목에 업데이트)</description>
        <query>
            <![CDATA[
            UPDATE T_CP_PAYMASTER A
            SET   (DOMW_DD, OUTW_DD, OTHW_CNT, TOTW_DD)
                  = (select sum(pdd_cnt) AS DOMW_DD, '0' AS OUTW_DD, '0' AS OTHW_CNT, sum(pdd_cnt) AS TOTW_DD
                     FROM   T_CP_PAYMASTER_OFFICE
                     WHERE  OCC_CD = A.OCC_CD
                     AND    PIS_YY = A.PIS_YY
                     AND    PIS_MM = A.PIS_MM
                     AND    ENO_NO = A.ENO_NO
                     AND    SEQ = A.SEQ
                     group by eno_no)
            WHERE   OCC_CD = ?
            AND PIS_YY = ?
            AND PIS_MM = ?
            AND SAL_GBN = ?
            AND SEQ = ?
            [1]
            ]]>
        </query>
    </sql>

    <!-- 대상자 선정(작업 LOG 수정) -->
    <sql name="SAGA030_UPT_02">
        <description>대상자 선정(작업 LOG 수정)</description>
        <query>
            <![CDATA[
            UPDATE T_CP_WORKLOG
            SET    PRO_CNT = nvl((select count(eno_no)
                                  from  (select eno_no
                                         FROM   T_CP_PAYMASTER_OFFICE
                                         WHERE  PIS_YY = ?
                                         AND    PIS_MM = ?
                                         AND    SEQ = ?
                                         group by eno_no)
                             ),0),
                   ERR_CNT = (nvl((select count(eno_no)
                                   FROM   T_CP_PAYMASTER
                                   WHERE  PIS_YY = ?
                                   AND    PIS_MM = ?
                                   AND    SAL_GBN = ?
                                   AND    SEQ = ?
                              ),0) -
                              nvl((select count(eno_no)
                                   from  (select eno_no
                                          FROM   T_CP_PAYMASTER_OFFICE
                                          WHERE  PIS_YY = ?
                                          AND    PIS_MM = ?
                                          AND    SEQ = ?
                                          group by eno_no)
                              ),0)
                             ),
                   WOM_AMT = ?, --여직원회비
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 대상자 초기화(대상자선정으로 변경) - 작업로그 대상자 선정 전 상태로 변경 -->
    <sql name="SAGA030_UPT_03">
        <description>대상자 초기화(대상자선정으로 변경) - 작업로그 대상자 선정 전 상태로 변경</description>
        <query>
            <![CDATA[
            UPDATE T_CP_WORKLOG
            SET    PRO_STS = ?,
                   PRO_CNT = ?,
                   ERR_CNT = ?,
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    OCC_CD = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 대상자 초기화(대상자선정으로 변경) - T_CP_PAYMASTER 삭제 -->
    <sql name="SAGA030_DEL">
        <description>대상자 초기화(대상자선정으로 변경) - T_CP_PAYMASTER 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM T_CP_PAYMASTER
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 대상자 초기화(대상자선정으로 변경) - T_CP_PAYMASTER_OFFICE 삭제 -->
    <sql name="SAGA030_DEL_01">
        <description>대상자 초기화(대상자선정으로 변경) - T_CP_PAYMASTER_OFFICE 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM T_CP_PAYMASTER_OFFICE
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화(금액,세액 계산으로 변경) - 작업로그 금액,세액 계산 전 상태로 변경 -->
    <sql name="SAGA030_UPT_04">
        <description>계산 초기화(금액,세액 계산으로 변경) - 작업로그 금액,세액 계산 전 상태로 변경</description>
        <query>
            <![CDATA[
            UPDATE T_CP_WORKLOG
            SET    PRO_STS = ?,
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    OCC_CD = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_CP_PAYMASTER 계산금액 0으로 초기화 -->
    <sql name="SAGA030_UPT_05">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_CP_PAYMASTER 계산금액 0으로 초기화</description>
        <query>
            <![CDATA[
            UPDATE T_CP_PAYMASTER SET
                   BAS_AMT='',  DUTY_AMT='',  OT_AMT='',   WEL_AMT='',   OSE_AMT='',     RUN_AMT='',  MH_AMT='',   LSEV_AMT='', TB3_AMT='',  SGF_AMT='',
                   OTH_AMT='',  SALT_AMT='',  DOMT_AMT='', OUTT_AMT='',  PAYD_AMT='',    PAYO_AMT='', YCT_CNT='',  SMPY_TOT='', T_INCOME='', BONA_TAX='',
                   SMSI_TAX='', AVTA_SAL='',  ITDD_AMT='', BSDD_AMT='',  SPSB_AMT='',    GDED_AMT='', TBL_DED='',  GOL_AMT='',  WDD_AMT='',  SMD_AMT='',
                   HIND_AMT='', ICOM_DED='',  PYSD_AMT='', SIM_TAX='',   ITXD_AMT='',    STAX_DED='', TAX_DED='',  INCM_TAX='', CITI_TAX='',  MAPP_AMT='',
                   NPEN_AMT='',  NPLE_AMT='', HINS_AMT='',  PPEN_AMT='', SAV_AMT='',     APP_AMT='',  INV_AMT='',  LON_RPY='',  LON_INT='',  LAW_AMT='', BNS_AMT='',
                   DHLP_AMT='', WOM_AMT='',   LAB_AMT='',  TB3D_AMT='',  SGFD_AMT='',    ADV_AMT='',  OTHD_AMT='', DDTT_AMT='', PAY_AMT='',  ABA_CD='', REC_NAM='',
                   RMIT_CMM='',OTH_AMT2='',
                   PPED_AMT='', DRE_INTX='',  DRE_CTTX='', CONT_AMT='',  LON_RPY2='',    LON_INT2='', FREE_TAX='', SCH_AMT='',  SEA_FREE='', GOL_CNT65='', GOL_CNT70='',
                   WEL_POINT='',
                   HOL_AMT='',  NIGHT_AMT='', SPECIAL_AMT='', LUN_AMT='',PRI_AMT='',     DRE_DFTX='', OLD_AMT='',  ETC_AMT='',  ETC_AMT2='', ETC_AMT3='', ETC_AMT4='',
                   DRIVE_AMT='',MONEY_AMT='',POSITION_AMT='',RETRO_AMT='',T_NORTH_AMT='',T_SITE_AMT='',T_GOAL_AMT='',SORT='',
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_CP_CHANGE 계산 전으로 초기화 -->
    <sql name="SAGA030_DEL_02">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_CP_CHANGE 계산 전으로 초기화</description>
        <query>
            <![CDATA[
            DELETE FROM T_CP_CHANGE
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    BON_NUM = ?
            AND    ( TRS_TAG='F' -- 고정수당
                     OR TRS_TAG='P' -- 그룹별 고정수당
                     OR TRS_TAG='T' -- 기타
                   )
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_AC_LOAN(대출금/출자금) 계산 전으로 초기화 -->
    <sql name="SAGA030_DEL_03">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_AC_LOAN(대출금/출자금) 계산 전으로 초기화</description>
        <query>
            <![CDATA[
            DELETE FROM T_AC_LOAN
            WHERE PIS_YY=?
            AND   PIS_MM=?
            AND   SAL_GBN=?
            AND   SEQ=?
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_SV_SAVELIST(저축금관리목록) 계산 전으로 초기화 -->
    <sql name="SAGA030_UPT_06">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_SV_SAVELIST(저축금관리목록) 계산 전으로 초기화</description>
        <query>
            <![CDATA[
DECLARE
    iENO_NO    T_SV_SAVELIST.ENO_NO%TYPE;
    iBNK_CD    T_SV_SAVELIST.BNK_CD%TYPE;
    iACC_NO    T_SV_SAVELIST.ACC_NO%TYPE;
    iSUMP_CNT  T_SV_SAVELIST.SUMP_CNT%TYPE;
    iSUM_SAV   T_SV_SAVELIST.SUM_SAV%TYPE;
    iUPT_MAN   T_SV_SAVELIST.UPT_MAN%TYPE;
    iUPT_YMD   T_SV_SAVELIST.UPT_YMD%TYPE;

    CURSOR SAVELIST_CUR is
           SELECT A.ENO_NO AS ENO_NO, A.BNK_CD AS BNK_CD, A.ACC_NO AS ACC_NO,
                 (SUMP_CNT-1) AS SUMP_CNT, (A.SUM_SAV-B.PYM_AMT) AS SUM_SAV, ? AS UPT_MAN, sysdate AS UPT_YMD
           FROM   T_SV_SAVELIST A, T_SV_SAVEBOOK B
           WHERE  A.ENO_NO = B.ENO_NO
           AND    A.BNK_CD = B.BNK_CD
           AND    A.ACC_NO = B.ACC_NO
           AND    B.DED_YM=?
           AND    B.SAV_CD='10'
           AND    B.PIN_MTH=?;

BEGIN
OPEN SAVELIST_CUR;
LOOP
    FETCH SAVELIST_CUR INTO iENO_NO, iBNK_CD, iACC_NO,
                            iSUMP_CNT, iSUM_SAV, iUPT_MAN, iUPT_YMD;

    if (SAVELIST_CUR%notfound) then exit;
    end if;

    UPDATE T_SV_SAVELIST
    SET    SUMP_CNT = iSUMP_CNT,
           SUM_SAV  = iSUM_SAV,
           UPT_MAN  = iUPT_MAN,
           UPT_YMD  = iUPT_YMD
    WHERE  ENO_NO   = iENO_NO
    AND    BNK_CD   = iBNK_CD
    AND    ACC_NO   = iACC_NO;

END LOOP;
CLOSE SAVELIST_CUR;

END;
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_SV_SAVEBOOK(저축금납입관리) 계산 전으로 초기화 -->
    <sql name="SAGA030_DEL_04">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_SV_SAVEBOOK(저축금납입관리) 계산 전으로 초기화</description>
        <query>
            <![CDATA[
            DELETE  FROM T_SV_SAVEBOOK
            WHERE DED_YM=?
            AND   SAV_CD='10'
            AND   PIN_MTH=?   -- SAL_GBN
            ]]>
        </query>
    </sql>

    <!-- 작업CLOSE시 장부반영 -->
    <sql name="SAGA030_INS_04">
        <description>장부반영</description>
        <query>
            <![CDATA[
            DECLARE

                iPIS_YY      VARCHAR2(10);
                iPIS_MM      VARCHAR2(10);
                iOCC_CD      VARCHAR2(10);
                iSAL_GBN     VARCHAR2(10);
                iPAY_YMD     VARCHAR2(10);
                iBAS_MAN     VARCHAR2(10);
                iBAS_YMD     VARCHAR2(10);
                iSAL_NM      VARCHAR2(10);

                iDHLP_AMT    NUMBER(9);
                iFIN_AMT     NUMBER(9);

                iCONT_AMT    NUMBER(9);
                iDON_AMT     NUMBER(9);

                LOGERR       EXCEPTION;

            BEGIN

                -- 초기화
                iPIS_YY  := ?;
                iPIS_MM  := ?;
                iOCC_CD  := ?;
                iSAL_GBN := ?;
                iBAS_MAN := ?;

                iPAY_YMD := NULL;
                IBAS_YMD := TO_CHAR(SYSDATE,'YYYYMMDD');
                iSAL_NM  := NULL;

                iDHLP_AMT := 0;
                iFIN_AMT  := 0;

                iCONT_AMT := 0;
                iDON_AMT  := 0;

                IF   iSAL_GBN = '0' THEN iSAL_NM := '급여';
                ELSE iSAL_NM := '상여';
                END IF;

                SELECT PAY_YMD
                INTO   iPAY_YMD
                FROM   T_CP_WORKLOG
                WHERE (PIS_YY  = iPIS_YY)
                AND   (PIS_MM  = iPIS_MM)
                AND   (OCC_CD  = iOCC_CD)
                AND   (SAL_GBN = iSAL_GBN);

                IF (SQL%NOTFOUND) THEN
                    RAISE LOGERR;
                END IF;

                SELECT NVL(SUM(DHLP_AMT),0),
                       NVL(SUM(CONT_AMT),0)
                INTO   iDHLP_AMT,  --공조회비
                       iCONT_AMT   --불우이웃돕기성금
                FROM   T_CP_PAYMASTER
                WHERE (PIS_YY  = iPIS_YY)
                AND   (PIS_MM  = iPIS_MM)
                AND   (SAL_GBN = iSAL_GBN);

                IF (SQL%NOTFOUND) THEN
                    RAISE LOGERR;
                END IF;


                /* 경공조금 장부 테이블에 데이타 입력 (공통 프로시져 사용으로 변경) */
                PKG_XF_AIDA040.PROC_SAV( 'INS'
                                       , '1'                                -- 구분 1:수입, 2:지출, 3:이자
                                       , ''                                 -- 사용자 입력 구분 'U:사용자 입력'
                                       , iPAY_YMD
                                       , '00'                               -- SEQ - INSERT 인 경우 자동 생성
                                       , '공조회비 입금('||iPIS_MM||'월분)'     -- 적요
                                       , iDHLP_AMT                          -- 수입
                                       , 0                                  -- 지출
                                       , iBAS_MAN
                                         );

                /* 불우이웃성금 장부 테이블에 데이타 입력 */
                PKG_XF_AIDB010.PROC_SAV( 'INS'
                                       , '1'                                -- 구분 1:수입, 2:지출, 3:이자
                                       , ''                                 -- 사용자 입력 구분 'U:사용자 입력'
                                       , iPAY_YMD
                                       , '00'                               -- SEQ - INSERT 인 경우 자동 생성
                                       , '불우이웃성금 입금('||iPIS_MM||'월 '||iSAL_NM||'분)'     -- 적요
                                       , iCONT_AMT                          -- 수입
                                       , 0                                  -- 지출
                                       , iBAS_MAN
                                         );

            EXCEPTION
                WHEN LOGERR THEN
                    DBMS_OUTPUT.PUT_LINE('ERROR');

            END;
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : SAGA031
* @description : 급여계산처리(대상자추가)
***********************************************************************
* 2007/03/22     한학현        최초작성.
***********************************************************************
-->
    <!-- 대상자 추가(작업 LOG 수정) -->
    <sql name="SAGA031_UPT">
        <description>대상자 추가(작업 LOG 수정)</description>
        <query>
            <![CDATA[
            UPDATE T_CP_WORKLOG
            SET    PRO_STS = ?,
                   PRO_CNT = nvl((select count(eno_no)
                                  from  (select eno_no
                                         FROM   T_CP_PAYMASTER_OFFICE
                                         WHERE  PIS_YY = ?
                                         AND    PIS_MM = ?
                                         AND    SEQ = ?
                                         group by eno_no)
                             ),0),
                   ERR_CNT = (nvl((select count(eno_no)
                                   FROM   T_CP_PAYMASTER
                                   WHERE  PIS_YY = ?
                                   AND    PIS_MM = ?
                                   AND    SAL_GBN = ?
                                   AND    SEQ = ?
                              ),0) -
                              nvl((select count(eno_no)
                                   from  (select eno_no
                                          FROM   T_CP_PAYMASTER_OFFICE
                                          WHERE  PIS_YY = ?
                                          AND    PIS_MM = ?
                                          AND    SEQ = ?
                                          group by eno_no)
                              ),0)
                             ),
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 대상자 선정여부 조회 -->
    <sql name="SAGA031_SHR">
        <description>대상자 선정여부 조회</description>
        <query>
            <![CDATA[
			SELECT ENO_NO
			FROM T_CP_PAYMASTER
			WHERE OCC_CD = ?
			AND   PIS_YY = ?
			AND   PIS_MM = ?
			AND   SAL_GBN = ?
			AND   ENO_NO = ?
			AND   SEQ = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGA040
* @description : 급여총괄표
***********************************************************************
* 2007/05/07     김학수        최초작성.
***********************************************************************
-->
    <!-- 부서별 조회 -->
    <sql name="SAGA040_SHR">
        <description>급여총괄표 </description>
        <query>
            <![CDATA[

	SELECT
	     SUM(BAS_AMT -LAW_AMT-BNS_AMT)          AS BAS_AMT    --기본급
	    ,SUM(LAW_AMT)         AS LAW_AMT    --법정수당
	    ,SUM(DUTY_AMT)        AS DUTY_AMT   --직무수당
	    ,SUM(BNS_AMT)         AS BNS_AMT    --상여금
	    ,SUM(ETC_AMT)         AS ETC_AMT    --기타수당 (교통비)
	    ,SUM(PPEN_AMT)        AS PPEN_AMT   --개인연금
	    ,SUM(nvl(OTH_AMT,0))+SUM(nvl(SGF_AMT,0))-SUM(nvl(A.HOL_AMT,0))        AS OTH_AMT    --기타지불  (학자금, 미사용연차, 미지급급여, 주재원수당, 포상)
	    ,SUM(A.HOL_AMT)       AS HOL_AMT    --기타지불2 (휴일근무수당)
	    ,SUM(LUN_AMT)         AS LUN_AMT    --식대
	    ,SUM(SALT_AMT)        AS SALT_AMT   --지급액계
	    ,SUM(INCM_TAX)        AS INCM_TAX   --소득세
	    ,SUM(CITI_TAX)        AS CITI_TAX   --주민세
	    ,sum(DRE_INTX)        AS ETC_AMT_JN    --연말정산
	    ,SUM(A.NPEN_AMT)      AS NPEN_AMT   --국민연금
	    ,SUM(A.HINU_AMT)      AS HINU_AMT   --건강보험
	    ,SUM(HINS_AMT)        AS HINS_AMT   --고용보험
	    ,SUM(OLD_AMT)         AS OLD_AMT    --장기요양보험
	    ,SUM(DHLP_AMT)        AS DHLP_AMT   --공조회비
	    ,SUM(A.PPED_AMT)        AS PPED_AMT   --개인연금
	    ,SUM(OTHD_AMT)+SUM(tb3d_amt)+SUM(SGFD_amt)        AS OTHD_AMT   --기타공제1 (동호회비, 퇴사자 근로소득세 정산, 축의금 및 조의금 급여공제, 급여 반납, 급여 유보, 학자금, 교육미이수)
	    ,SUM(0)               AS ETC_AMT2   --기타공제2 (대출인데 사용안함
	    ,SUM(DDTT_AMT)        AS DDTT_AMT   --공제액계
	    ,SUM(PAY_AMT)+SUM(CONT_AMT) AS RL_AMT       --차인지급액
	    ,SUM(CONT_AMT)        AS CONT_AMT   --사회공헌기금
	    ,SUM(PAY_AMT)         AS PAY_AMT    --실지급액
	 FROM T_CP_PAYMASTER  A
	 WHERE 1 = 1
	 AND A.OCC_CD in ('0','1','2','3','8','9')    --'1' 고정
	 AND A.PIS_YY = ?    --년
	 AND A.PIS_MM = ?    --월
	 AND A.SAL_GBN = ?
	 [1]


            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGA050
* @description : 급여대장
***********************************************************************
* 2007/05/22     이승욱        최초작성.
***********************************************************************
-->
    <!-- 급여 조회 -->
    <sql name="SAGA050_SHR">
        <description>급상대장 국내</description>
        <query>
            <![CDATA[
SELECT A.HEAD_NM
     , A.DPT_NM
     , A.HSORT_NO
	 , B.GUBUN
     , CASE WHEN A.DSORT_NO = 0 THEN 999 ELSE A.DSORT_NO END as DSORT_NO
     , B.*
FROM
          (SELECT
               H.DPT_CD       as HEAD_CD
             , H.DPT_NM       as HEAD_NM
             , D.DPT_CD       as DPT_CD
             , D.DPT_NM       as DPT_NM
             , H.SORT_NO      as HSORT_NO
             , D.SORT_NO      as DSORT_NO
          FROM T_CM_DEPT         H
             , T_CM_DEPT         D
         WHERE H.DPT_CD        = D.UPDPT_CD
           AND H.CD_GBN        = 'B2'
           AND D.CD_GBN        = 'A4'
        )      A,
		(
		SELECT
		     A.ENO_NO                 AS ENO_NO   --사번
			,B.ENO_NM                             --성명
		       ,(CASE WHEN A.TAX_GBN = '1' THEN '해외'
			         ELSE '국내'
			    END) GUBUN
			,A.DPT_CD
            ,C.COMM_NM JOB_NM     -- 직위
            ,C.SORT_NO JSORT_NO
			--실지급액
		    ,NVL(SALT_AMT,0)        AS SALT_AMT   --급여지급액(A)
		    ,NVL(DDTT_AMT,0)        AS DDTT_AMT   --급여공제액(B)
		    ,salt_amt-ddtt_amt     AS RL_AMT     -- 차인지급액
		    ,salt_amt-ddtt_amt-CONT_AMT AS NET_PAY_AMT  -- 실지급액(E=C-D)
			-- 급여지급액(A)
			,BAS_AMT -LAW_AMT-BNS_AMT AS NET_BAS_AMT    --기본급
		    ,NVL(LAW_AMT,0)         AS LAW_AMT    --법정수당
		    ,NVL(ETC_AMT,0)           AS ETC_AMT    --기타수당 (교통비)
			,NVL(OTH_AMT,0)+NVL(A.SGF_AMT,0)-NVL(A.HOL_AMT,0) AS OTH_AMT    --기타지불1  ( 고정지급 포함 학자금, 미사용연차, 미지급급여, 주재원수당, 포상 등 휴일근무수당을 제외한것,0)
		    ,NVL(LUN_AMT,0)         AS LUN_AMT    --식대
		    ,NVL(DUTY_AMT,0)        AS DUTY_AMT   --직무수당
		    ,NVL(BNS_AMT,0)         AS BNS_AMT    --상여금
		    ,NVL(PPEN_AMT,0)        AS PPEN_AMT   --개인연금
		    ,NVL(A.HOL_AMT,0)       AS HOL_AMT  --기타지불2 (휴일근무수당,0)

			-- 급여공제액(B)
		    ,NVL(INCM_TAX,0)        AS INCM_TAX   --소득세
		    ,NVL(CITI_TAX,0)        AS CITI_TAX   --주민세
		    ,NVL(A.NPEN_AMT,0)        AS NPEN_AMT   --국민연금
            ,NVL(DRE_INTX, 0)    AS ETC_AMT_JN    --연말정산(DRE_INTX)
		    ,NVL(A.HINU_AMT,0)        AS HINU_AMT   --건강보험
		    ,NVL(A.HINS_AMT,0)        AS HINS_AMT   --고용보험
		    ,NVL(DHLP_AMT,0)        AS DHLP_AMT   --공조회비
		    ,NVL(A.OLD_AMT,0)         AS OLD_AMT    --장기요양보험
		    ,NVL(PPED_AMT,0)        AS PPED_AMT   --개인연금
   		    ,NVL(INV_AMT,0)           AS INV_AMT      --출자금
		    ,NVL(LON_RPY,0)        AS LON_RPY   --대출원금
		    ,NVL(LON_INT,0)        AS LON_INT   --대출이자
            ,NVL(OTHD_AMT, 0)+NVL(tb3d_amt,0)+NVL(SGFD_AMT,0)      AS OTHD_AMT   --기타공제1 ( 자동투입공제,동호회비, 퇴사자 근로소득세 정산, 축의금 및 조의금 급여공제, 급여 반납, 급여 유보, 학자금, 교육미이수,0)
		    ,0                      AS OTHD_AMT2   --기타공제2 (대출인데 사용안함
		    ,NVL(CONT_AMT,0)        AS CONT_AMT   --사회공헌기금
		 FROM T_CP_PAYMASTER A, T_CM_PERSON B, T_CM_COMMON C
		WHERE A.OCC_CD in ('0','1','2','3','8','9')    --'A' 고정
		  AND PIS_YY = ?    --년도
		  AND PIS_MM = ?    --월
		  AND A.DPT_CD like ?||'%'-- 'O2'
		  AND A.ENO_NO = B.ENO_NO
		  AND C.CD_GBN = 'A2'
		  AND A.JOB_CD = C.COMM_CD
		  and not (salt_amt = 0 and PAY_AMT = 0 and DDTT_AMT=0)
		  AND (A.TAX_GBN is null or  A.TAX_GBN <> '1')
		  AND A.SAL_GBN = '0'
		) B
		 WHERE A.DPT_CD  = B.DPT_CD
 		 ORDER BY HSORT_NO, DSORT_NO, A.DPT_CD, JSORT_NO,ENO_NO
            ]]>
        </query>
    </sql>
    <!-- 급여 조회 -->
    <sql name="SAGA050_SHR_01">
        <description>급상대장 해외 </description>
        <query>
            <![CDATA[
SELECT A.HEAD_NM
     , A.DPT_NM
     , A.HSORT_NO
	 , B.GUBUN
     , CASE WHEN A.DSORT_NO < 100 THEN 999
     		WHEN A.DSORT_NO > 750 THEN 999
     			ELSE A.DSORT_NO END as DSORT_NO
     , B.*
FROM
          (SELECT
               H.DPT_CD       as HEAD_CD
             , H.DPT_NM       as HEAD_NM
             , D.DPT_CD       as DPT_CD
             , D.DPT_NM       as DPT_NM
             , H.SORT_NO      as HSORT_NO
             , D.SORT_NO      as DSORT_NO
          FROM T_CM_DEPT         H
             , T_CM_DEPT         D
         WHERE H.DPT_CD        = D.UPDPT_CD
           AND H.CD_GBN        = 'B2'
           AND D.CD_GBN        = 'A4'
        )      A,
		(
		SELECT
		     A.ENO_NO                 AS ENO_NO   --사번
			,B.ENO_NM                             --성명
		       ,(CASE WHEN A.TAX_GBN = '1' THEN '해외'
			         ELSE '국내'
			    END) GUBUN
			,A.DPT_CD
            ,C.COMM_NM JOB_NM     -- 직위
            ,C.SORT_NO JSORT_NO
			--실지급액
		    ,NVL(SALT_AMT,0)        AS SALT_AMT   --급여지급액(A)
		    ,NVL(DDTT_AMT,0)        AS DDTT_AMT   --급여공제액(B)
		    ,salt_amt-ddtt_amt     AS RL_AMT     -- 차인지급액
		    ,salt_amt-ddtt_amt-CONT_AMT AS NET_PAY_AMT  -- 실지급액(E=C-D)
			-- 급여지급액(A)
			,BAS_AMT -LAW_AMT-BNS_AMT AS NET_BAS_AMT    --기본급
		    ,NVL(LAW_AMT,0)         AS LAW_AMT    --법정수당
		    ,NVL(ETC_AMT,0)           AS ETC_AMT    --기타수당 (교통비)
			,NVL(OTH_AMT,0)+NVL(A.SGF_AMT,0)-NVL(A.HOL_AMT,0) AS OTH_AMT    --기타지불1  ( 고정지급 포함 학자금, 미사용연차, 미지급급여, 주재원수당, 포상 등 휴일근무수당을 제외한것,0)
		    ,NVL(LUN_AMT,0)         AS LUN_AMT    --식대
		    ,NVL(DUTY_AMT,0)        AS DUTY_AMT   --직무수당
		    ,NVL(BNS_AMT,0)         AS BNS_AMT    --상여금
		    ,NVL(PPEN_AMT,0)        AS PPEN_AMT   --개인연금
		    ,NVL(A.HOL_AMT,0)       AS HOL_AMT  --기타지불2 (휴일근무수당,0)

			-- 급여공제액(B)
		    ,NVL(INCM_TAX,0)        AS INCM_TAX   --소득세
		    ,NVL(CITI_TAX,0)        AS CITI_TAX   --주민세
		    ,NVL(A.NPEN_AMT,0)        AS NPEN_AMT   --국민연금
            ,NVL(DRE_INTX, 0)    AS ETC_AMT_JN    --연말정산(DRE_INTX)
		    ,NVL(A.HINU_AMT,0)        AS HINU_AMT   --건강보험
		    ,NVL(A.HINS_AMT,0)        AS HINS_AMT   --고용보험
		    ,NVL(DHLP_AMT,0)        AS DHLP_AMT   --공조회비
		    ,NVL(A.OLD_AMT,0)         AS OLD_AMT    --장기요양보험
		    ,NVL(PPED_AMT,0)        AS PPED_AMT   --개인연금
   		    ,NVL(INV_AMT,0)           AS INV_AMT      --출자금
		    ,NVL(LON_RPY,0)        AS LON_RPY   --대출원금
		    ,NVL(LON_INT,0)        AS LON_INT   --대출이자
            ,NVL(OTHD_AMT, 0)+NVL(tb3d_amt,0)+NVL(SGFD_AMT,0)      AS OTHD_AMT   --기타공제1 ( 자동투입공제,동호회비, 퇴사자 근로소득세 정산, 축의금 및 조의금 급여공제, 급여 반납, 급여 유보, 학자금, 교육미이수,0)
		    ,0                      AS OTHD_AMT2   --기타공제2 (대출인데 사용안함
		    ,NVL(CONT_AMT,0)        AS CONT_AMT   --사회공헌기금
		 FROM T_CP_PAYMASTER A, T_CM_PERSON B, T_CM_COMMON C
		WHERE A.OCC_CD in ('0','1','2','3','8','9')    --'A' 고정
		  AND PIS_YY = ?    --년도
		  AND PIS_MM = ?    --월
		  AND A.DPT_CD like ?||'%'-- 'O2'
		  AND A.ENO_NO = B.ENO_NO
		  AND C.CD_GBN = 'A2'
		  AND A.JOB_CD = C.COMM_CD
		  and not (salt_amt = 0 and PAY_AMT = 0 and DDTT_AMT=0)
		  AND A.TAX_GBN = '1'
		  AND A.SAL_GBN = '0'
		) B
		 WHERE A.DPT_CD  = B.DPT_CD
 		 ORDER BY HSORT_NO, DSORT_NO, JSORT_NO,ENO_NO
            ]]>
        </query>
    </sql>
    <!-- 급여 조회 -->
    <sql name="SAGA050_SHR_02">
        <description>급상대장 요약</description>
        <query>
            <![CDATA[
SELECT '' HEAD_NM
     , '' DPT_NM
     , '' HSORT_NO
     , '' GUBUN
     , '' DSORT_NO
      ,count(ENO_NO)||'명' ENO_NO   --사번
      ,(CASE WHEN A.TAX_GBN = '1' THEN '해외'
         ELSE '국내'    END)  ENO_NM                       --성명
      ,'' GUBUN
      ,'' DPT_CD
      ,'' JOB_NM     -- 직위
      ,'' JSORT_NO
      --실지급액
                    ,SUM(NVL(SALT_AMT,0))        AS SALT_AMT   --급여지급액(A)
                    ,SUM(NVL(DDTT_AMT,0))        AS DDTT_AMT   --급여공제액(B)
                    ,SUM(salt_amt-ddtt_amt)     AS RL_AMT     -- 차인지급액
                    ,SUM(salt_amt-ddtt_amt-CONT_AMT) AS NET_PAY_AMT  -- 실지급액(E=C-D)             -- 급여지급액(A)
                        ,SUM(BAS_AMT -LAW_AMT-BNS_AMT) AS NET_BAS_AMT    --기본급
                    ,SUM(LAW_AMT)         AS LAW_AMT    --법정수당
                    ,SUM(ETC_AMT)           AS ETC_AMT    --기타수당 (교통비)
                        ,SUM(OTH_AMT)+SUM(A.SGF_AMT)-SUM(A.HOL_AMT) AS OTH_AMT    --기타지불1  ( 고정지급 포함 학자금, 미사용연차, 미지급급여, 주재원수당, 포상 등 휴일근무수당을 제외한것,0)
                    ,SUM(LUN_AMT)         AS LUN_AMT    --식대
                    ,SUM(DUTY_AMT)        AS DUTY_AMT   --직무수당
                    ,SUM(BNS_AMT)         AS BNS_AMT    --상여금
                    ,SUM(PPEN_AMT)        AS PPEN_AMT   --개인연금
                    ,SUM(A.HOL_AMT)       AS HOL_AMT  --기타지불2 (휴일근무수당,0)                        -- 급여공제액(B)
                    ,SUM(INCM_TAX)        AS INCM_TAX   --소득세
                    ,SUM(CITI_TAX)        AS CITI_TAX   --주민세
                    ,SUM(A.NPEN_AMT)        AS NPEN_AMT   --국민연금
            ,SUM(DRE_INTX)    AS ETC_AMT_JN    --연말정산(DRE_INTX)
                    ,SUM(A.HINU_AMT)        AS HINU_AMT   --건강보험
                    ,SUM(HINS_AMT)        AS HINS_AMT   --고용보험
                    ,SUM(DHLP_AMT)        AS DHLP_AMT   --공조회비
                    ,SUM(A.OLD_AMT)         AS OLD_AMT    --장기요양보험
                    ,SUM(PPED_AMT)        AS PPED_AMT   --개인연금
   		    ,SUM(NVL(INV_AMT,0))           AS INV_AMT      --출자금
		    ,SUM(NVL(LON_RPY,0))        AS LON_RPY   --대출원금
		    ,SUM(NVL(LON_INT,0))        AS LON_INT   --대출이자
            ,SUM(OTHD_AMT)+SUM(tb3d_amt)+SUM(SGFD_AMT)      AS OTHD_AMT   --기타공제1 ( 자동투입공제,동호회비, 퇴사자 근로소득세 정산, 축의금 및 조의금 급여공제, 급여 반납,급여 유보, 학자금, 교육미이수,0)
                    ,0                      AS OTHD_AMT2   --기타공제2 (대출인데 사용안함
                    ,SUM(CONT_AMT)        AS CONT_AMT   --사회공헌기금
                 FROM T_CP_PAYMASTER A
                WHERE A.OCC_CD in ('0','1','2','3','8','9')    --'A' 고정
                  AND PIS_YY = ?    	--년도
                  AND PIS_MM = ?    	--월
                  AND A.DPT_CD like ?||'%' -- 'O2'
                  and not (salt_amt = 0 and PAY_AMT = 0 and DDTT_AMT=0)
                  AND A.SAL_GBN = '0'
                group by tax_gbn
            ]]>
        </query>
    </sql>
<!--
***********************************************************************
* @UseCase     : SAGA055
* @description : 급여대장
***********************************************************************
* 2007/05/22     이승욱        최초작성.
***********************************************************************
-->
    <!-- 급여 조회 -->
    <sql name="SAGA055_SHR">
        <description>급상대장 국내</description>
        <query>
            <![CDATA[
SELECT A.HEAD_NM
     , A.DPT_NM
     , A.HSORT_NO
	 , B.GUBUN
     , CASE WHEN A.DSORT_NO = 0 THEN 999 ELSE A.DSORT_NO END as DSORT_NO
     , B.*
FROM
          (SELECT
               H.DPT_CD       as HEAD_CD
             , H.DPT_NM       as HEAD_NM
             , D.DPT_CD       as DPT_CD
             , D.DPT_NM       as DPT_NM
             , H.SORT_NO      as HSORT_NO
             , D.SORT_NO      as DSORT_NO
          FROM T_CM_DEPT         H
             , T_CM_DEPT         D
         WHERE H.DPT_CD        = D.UPDPT_CD
           AND H.CD_GBN        = 'B2'
           AND D.CD_GBN        = 'A4'
        )      A,
		(
		SELECT
		     A.ENO_NO                 AS ENO_NO   --사번
			,B.ENO_NM                             --성명
		       ,(CASE WHEN A.TAX_GBN = '1' THEN '해외'
			         ELSE '국내'
			    END) GUBUN
			,A.DPT_CD
            ,C.COMM_NM JOB_NM     -- 직위
            ,C.SORT_NO JSORT_NO
			--실지급액
		    ,NVL(SALT_AMT,0)        AS SALT_AMT   --급여지급액(A)
		    ,NVL(DDTT_AMT,0)        AS DDTT_AMT   --급여공제액(B)
		    ,salt_amt-ddtt_amt     AS RL_AMT     -- 차인지급액
		    ,salt_amt-ddtt_amt-CONT_AMT AS NET_PAY_AMT  -- 실지급액(E=C-D)
			-- 급여지급액(A)
			,BAS_AMT -LAW_AMT-BNS_AMT AS NET_BAS_AMT    --기본급
		    ,NVL(LAW_AMT,0)         AS LAW_AMT    --법정수당
		    ,NVL(ETC_AMT,0)           AS ETC_AMT    --기타수당 (교통비)
			,NVL(OTH_AMT,0)+NVL(A.SGF_AMT,0)-NVL(A.HOL_AMT,0) AS OTH_AMT    --기타지불1  ( 고정지급 포함 학자금, 미사용연차, 미지급급여, 주재원수당, 포상 등 휴일근무수당을 제외한것,0)
		    ,NVL(LUN_AMT,0)         AS LUN_AMT    --식대
		    ,NVL(DUTY_AMT,0)        AS DUTY_AMT   --직무수당
		    ,NVL(BNS_AMT,0)         AS BNS_AMT    --상여금
		    ,NVL(PPEN_AMT,0)        AS PPEN_AMT   --개인연금
		    ,NVL(A.HOL_AMT,0)       AS HOL_AMT  --기타지불2 (휴일근무수당,0)

			-- 급여공제액(B)
		    ,NVL(INCM_TAX,0)        AS INCM_TAX   --소득세
		    ,NVL(CITI_TAX,0)        AS CITI_TAX   --주민세
		    ,NVL(A.NPEN_AMT,0)        AS NPEN_AMT   --국민연금
            ,NVL(DRE_INTX, 0)    AS ETC_AMT_JN    --연말정산(DRE_INTX)
		    ,NVL(A.HINU_AMT,0)        AS HINU_AMT   --건강보험
		    ,NVL(HINS_AMT,0)        AS HINS_AMT   --고용보험
		    ,NVL(DHLP_AMT,0)        AS DHLP_AMT   --공조회비
		    ,NVL(A.OLD_AMT,0)         AS OLD_AMT    --장기요양보험
		    ,NVL(PPED_AMT,0)        AS PPED_AMT   --개인연금
            ,NVL(OTHD_AMT, 0)+NVL(tb3d_amt,0)+NVL(SGFD_AMT,0)      AS OTHD_AMT   --기타공제1 ( 자동투입공제,동호회비, 퇴사자 근로소득세 정산, 축의금 및 조의금 급여공제, 급여 반납, 급여 유보, 학자금, 교육미이수,0)
		    ,0                      AS OTHD_AMT2   --기타공제2 (대출인데 사용안함
		    ,NVL(CONT_AMT,0)        AS CONT_AMT   --사회공헌기금
		 FROM T_CP_PAYMASTER A, T_CM_PERSON B, T_CM_COMMON C
		WHERE A.OCC_CD in ('0','1','2','3','8','9')    --'A' 고정
		  AND PIS_YY = ?    --년도
		  AND PIS_MM = ?    --월
		  AND A.DPT_CD like ?||'%'-- 'O2'
		  AND A.ENO_NO = B.ENO_NO
		  AND C.CD_GBN = 'A2'
		  AND A.JOB_CD = C.COMM_CD
		  and not (salt_amt = 0 and PAY_AMT = 0 and DDTT_AMT=0)
		  AND (A.TAX_GBN is null or  A.TAX_GBN <> '1')
		  AND A.SAL_GBN = '1'
		) B
		 WHERE A.DPT_CD  = B.DPT_CD
 		 ORDER BY HSORT_NO, DSORT_NO, A.DPT_CD, JSORT_NO,ENO_NO
            ]]>
        </query>
    </sql>
    <!-- 급여 조회 -->
    <sql name="SAGA055_SHR_01">
        <description>급상대장 해외 </description>
        <query>
            <![CDATA[
SELECT A.HEAD_NM
     , A.DPT_NM
     , A.HSORT_NO
	 , B.GUBUN
     , CASE WHEN A.DSORT_NO < 100 THEN 999
     		WHEN A.DSORT_NO > 750 THEN 999
     			ELSE A.DSORT_NO END as DSORT_NO
     , B.*
FROM
          (SELECT
               H.DPT_CD       as HEAD_CD
             , H.DPT_NM       as HEAD_NM
             , D.DPT_CD       as DPT_CD
             , D.DPT_NM       as DPT_NM
             , H.SORT_NO      as HSORT_NO
             , D.SORT_NO      as DSORT_NO
          FROM T_CM_DEPT         H
             , T_CM_DEPT         D
         WHERE H.DPT_CD        = D.UPDPT_CD
           AND H.CD_GBN        = 'B2'
           AND D.CD_GBN        = 'A4'
        )      A,
		(
		SELECT
		     A.ENO_NO                 AS ENO_NO   --사번
			,B.ENO_NM                             --성명
		       ,(CASE WHEN A.TAX_GBN = '1' THEN '해외'
			         ELSE '국내'
			    END) GUBUN
			,A.DPT_CD
            ,C.COMM_NM JOB_NM     -- 직위
            ,C.SORT_NO JSORT_NO
			--실지급액
		    ,NVL(SALT_AMT,0)        AS SALT_AMT   --급여지급액(A)
		    ,NVL(DDTT_AMT,0)        AS DDTT_AMT   --급여공제액(B)
		    ,salt_amt-ddtt_amt     AS RL_AMT     -- 차인지급액
		    ,salt_amt-ddtt_amt-CONT_AMT AS NET_PAY_AMT  -- 실지급액(E=C-D)
			-- 급여지급액(A)
			,BAS_AMT -LAW_AMT-BNS_AMT AS NET_BAS_AMT    --기본급
		    ,NVL(LAW_AMT,0)         AS LAW_AMT    --법정수당
		    ,NVL(ETC_AMT,0)           AS ETC_AMT    --기타수당 (교통비)
			,NVL(OTH_AMT,0)+NVL(A.SGF_AMT,0)-NVL(A.HOL_AMT,0) AS OTH_AMT    --기타지불1  ( 고정지급 포함 학자금, 미사용연차, 미지급급여, 주재원수당, 포상 등 휴일근무수당을 제외한것,0)
		    ,NVL(LUN_AMT,0)         AS LUN_AMT    --식대
		    ,NVL(DUTY_AMT,0)        AS DUTY_AMT   --직무수당
		    ,NVL(BNS_AMT,0)         AS BNS_AMT    --상여금
		    ,NVL(PPEN_AMT,0)        AS PPEN_AMT   --개인연금
		    ,NVL(A.HOL_AMT,0)       AS HOL_AMT  --기타지불2 (휴일근무수당,0)

			-- 급여공제액(B)
		    ,NVL(INCM_TAX,0)        AS INCM_TAX   --소득세
		    ,NVL(CITI_TAX,0)        AS CITI_TAX   --주민세
		    ,NVL(A.NPEN_AMT,0)        AS NPEN_AMT   --국민연금
            ,NVL(DRE_INTX, 0)    AS ETC_AMT_JN    --연말정산(DRE_INTX)
		    ,NVL(A.HINU_AMT,0)        AS HINU_AMT   --건강보험
		    ,NVL(HINS_AMT,0)        AS HINS_AMT   --고용보험
		    ,NVL(DHLP_AMT,0)        AS DHLP_AMT   --공조회비
		    ,NVL(A.OLD_AMT,0)         AS OLD_AMT    --장기요양보험
		    ,NVL(PPED_AMT,0)        AS PPED_AMT   --개인연금
            ,NVL(OTHD_AMT, 0)+NVL(tb3d_amt,0)+NVL(SGFD_AMT,0)      AS OTHD_AMT   --기타공제1 ( 자동투입공제,동호회비, 퇴사자 근로소득세 정산, 축의금 및 조의금 급여공제, 급여 반납, 급여 유보, 학자금, 교육미이수,0)
		    ,0                      AS OTHD_AMT2   --기타공제2 (대출인데 사용안함
		    ,NVL(CONT_AMT,0)        AS CONT_AMT   --사회공헌기금
		 FROM T_CP_PAYMASTER A, T_CM_PERSON B, T_CM_COMMON C
		WHERE A.OCC_CD in ('0','1','2','3','8','9')    --'A' 고정
		  AND PIS_YY = ?    --년도
		  AND PIS_MM = ?    --월
		  AND A.DPT_CD like ?||'%'-- 'O2'
		  AND A.ENO_NO = B.ENO_NO
		  AND C.CD_GBN = 'A2'
		  AND A.JOB_CD = C.COMM_CD
		  and not (salt_amt = 0 and PAY_AMT = 0 and DDTT_AMT=0)
		  AND A.TAX_GBN = '1'
		  AND A.SAL_GBN = '1'
		) B
		 WHERE A.DPT_CD  = B.DPT_CD
 		 ORDER BY HSORT_NO, DSORT_NO, JSORT_NO,ENO_NO
            ]]>
        </query>
    </sql>
    <!-- 급여 조회 -->
    <sql name="SAGA055_SHR_02">
        <description>급상대장 요약</description>
        <query>
            <![CDATA[
SELECT '' HEAD_NM
     , '' DPT_NM
     , '' HSORT_NO
     , '' GUBUN
     , '' DSORT_NO
      ,count(ENO_NO)||'명' ENO_NO   --사번
      ,(CASE WHEN A.TAX_GBN = '1' THEN '해외'
         ELSE '국내'    END)  ENO_NM                       --성명
      ,'' GUBUN
      ,'' DPT_CD
      ,'' JOB_NM     -- 직위
      ,'' JSORT_NO
      --실지급액
                    ,SUM(NVL(SALT_AMT,0))        AS SALT_AMT   --급여지급액(A)
                    ,SUM(NVL(DDTT_AMT,0))        AS DDTT_AMT   --급여공제액(B)
                    ,SUM(salt_amt-ddtt_amt)     AS RL_AMT     -- 차인지급액
                    ,SUM(salt_amt-ddtt_amt-CONT_AMT) AS NET_PAY_AMT  -- 실지급액(E=C-D)             -- 급여지급액(A)
                        ,SUM(BAS_AMT -LAW_AMT-BNS_AMT) AS NET_BAS_AMT    --기본급
                    ,SUM(LAW_AMT)         AS LAW_AMT    --법정수당
                    ,SUM(ETC_AMT)           AS ETC_AMT    --기타수당 (교통비)
                        ,SUM(OTH_AMT)+SUM(A.SGF_AMT)-SUM(A.HOL_AMT) AS OTH_AMT    --기타지불1  ( 고정지급 포함 학자금, 미사용연차, 미지급급여, 주재원수당, 포상 등 휴일근무수당을 제외한것,0)
                    ,SUM(LUN_AMT)         AS LUN_AMT    --식대
                    ,SUM(DUTY_AMT)        AS DUTY_AMT   --직무수당
                    ,SUM(BNS_AMT)         AS BNS_AMT    --상여금
                    ,SUM(PPEN_AMT)        AS PPEN_AMT   --개인연금
                    ,SUM(A.HOL_AMT)       AS HOL_AMT  --기타지불2 (휴일근무수당,0)                        -- 급여공제액(B)
                    ,SUM(INCM_TAX)        AS INCM_TAX   --소득세
                    ,SUM(CITI_TAX)        AS CITI_TAX   --주민세
                    ,SUM(A.NPEN_AMT)        AS NPEN_AMT   --국민연금
            ,SUM(DRE_INTX)    AS ETC_AMT_JN    --연말정산(DRE_INTX)
                    ,SUM(A.HINU_AMT)        AS HINU_AMT   --건강보험
                    ,SUM(HINS_AMT)        AS HINS_AMT   --고용보험
                    ,SUM(DHLP_AMT)        AS DHLP_AMT   --공조회비
                    ,SUM(A.OLD_AMT)         AS OLD_AMT    --장기요양보험
                    ,SUM(PPED_AMT)        AS PPED_AMT   --개인연금
            ,SUM(OTHD_AMT)+SUM(tb3d_amt)+SUM(SGFD_AMT)      AS OTHD_AMT   --기타공제1 ( 자동투입공제,동호회비, 퇴사자 근로소득세 정산, 축의금 및 조의금 급여공제, 급여 반납,급여 유보, 학자금, 교육미이수,0)
                    ,0                      AS OTHD_AMT2   --기타공제2 (대출인데 사용안함
                    ,SUM(CONT_AMT)        AS CONT_AMT   --사회공헌기금
                 FROM T_CP_PAYMASTER A
                WHERE A.OCC_CD in ('0','1','2','3','8','9')    --'A' 고정
                  AND PIS_YY = ?    	--년도
                  AND PIS_MM = ?    	--월
                  AND A.DPT_CD like ?||'%' -- 'O2'
                  and not (salt_amt = 0 and PAY_AMT = 0 and DDTT_AMT=0)
                  AND A.SAL_GBN = '1'
                group by tax_gbn
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGA060
* @description : 급상여지급현황
***********************************************************************
* 2007/03/16     한학현        최초작성.
***********************************************************************
-->
    <!-- 부서별 조회 -->
    <sql name="SAGA060_SHR">
        <description>급여지급현황 조회 </description>
        <query>
            <![CDATA[
            SELECT A.DPT_CD AS COMM_CD,
				   ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD) AS DPT_NM,
                   A.ENO_NO AS ENO_NO,
				   ASNHR.SF_GET_ENONAME('01',A.ENO_NO) AS ENO_NM,
                   ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM,				   
                   NVL(A.P01_AMT, 0)   AS P01_AMT,
                   NVL(A.P02_AMT, 0)   AS P02_AMT,
                   NVL(A.P03_AMT, 0)   AS P03_AMT,
                   NVL(A.P04_AMT, 0)   AS P04_AMT,
                   NVL(A.P05_AMT, 0)   AS P05_AMT,				   				   				   				   
                   NVL(A.SALT_AMT,0) AS SALT_AMT,
                   NVL(A.SUM_DED,0) AS SUM_DED,				   
                   NVL(A.PAY_AMT,0)  AS PAY_AMT
            FROM   ASNHR.T_CP_NPAYMASTER A, ASNHR.T_CM_PERSON B
            WHERE  A.ENO_NO = B.ENO_NO
            AND A.PIS_YY||A.PIS_MM  = ? 
            ORDER BY A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 직위별 조회 -->
    <sql name="SAGA060_SHR_01">
        <description>급상여지급현황 조회 (직위별) </description>
        <query>
            <![CDATA[
            SELECT B.JOB_CD AS COMM_CD,
                   SF_GET_COMMNAME('01', 'A2', B.JOB_CD) AS COMM_NM,
                   COUNT(B.JOB_CD) AS PERSONS_NUM,
                   NVL(SUM(B.BAS_AMT), 0)   AS BAS_AMT,
                   NVL(SUM(B.DUTY_AMT),0) AS DUTY_AMT,
                   NVL(SUM(B.LAW_AMT), 0)     AS LAW_AMT,
                   NVL(SUM(B.BNS_AMT), 0)    AS BNS_AMT,
                   NVL(SUM(B.ETC_AMT), 0)    AS ETC_AMT,
                   NVL(SUM(B.ETC_AMT2), 0)   AS ETC_AMT2,
                   NVL(SUM(B.ETC_AMT3), 0)   AS ETC_AMT3,
                   NVL(SUM(B.ETC_AMT4), 0)   AS ETC_AMT4,
                   NVL(SUM(B.LSEV_AMT),0) AS LSEV_AMT,
                   NVL(SUM(B.PPEN_AMT),0) AS PPEN_AMT,
                   NVL(SUM(B.TB3_AMT),0) AS TB3_AMT,
                   NVL(SUM(B.SGF_AMT),0) AS SGF_AMT,
                   NVL(SUM(B.OTH_AMT),0) AS OTH_AMT,
                   NVL(SUM(B.SALT_AMT),0) AS SALT_AMT,
                   NVL(SUM(B.INCM_TAX),0)   AS INCM_TAX ,                                          -- 소득세
                   NVL(SUM(B.CITI_TAX),0)     AS CITI_TAX,                                          -- 주민세
                   NVL(SUM(B.NPEN_AMT),0) AS NPEN_AMT,                                          -- 국민연금
                   NVL(SUM(B.HINU_AMT),0)  AS HINU_AMT,                                          -- 의료보험
                   NVL(SUM(B.OLD_AMT),0)   AS OLD_AMT,                                           -- 노인장기요양보험
                   NVL(SUM(B.HINS_AMT),0)  AS HINS_AMT,                                          -- 고용보험
                   NVL(SUM(B.DHLP_AMT),0) AS DHLP_AMT,                                          -- 공조회비
                   NVL(SUM(B.PPED_AMT),0) AS PPED_AMT,                                          -- 개인연금 공제
                   NVL(SUM(B.LAB_AMT),0)   AS LAB_AMT,                                          -- 보증보험
                   SUM(nvl(B.LON_INT,0) + nvl(B.LON_INT2,0) + nvl(B.LON_RPY,0) +nvl(B.LON_RPY2,0)) AS  LON_AMT,-- 대출 원금/이자
                   SUM(NVL(B.OTHD_AMT,0)+NVL(B.tb3d_amt,0) ) AS OTHD_AMT, -- 기타 공제
                   NVL(SUM(B.DDTT_AMT),0)  AS DDTT_AMT,
                   NVL(SUM(B.PAY_AMT),0)    AS PAY_AMT
            FROM   T_CM_COMMON A, T_CP_PAYMASTER B
            WHERE  ( B.OCC_CD    LIKE  '%'||?||'%' )
            [1]
            AND    (A.CD_GBN = 'A2')
            AND    (A.COMM_CD = B.JOB_CD)
            AND    (A.END_YMD IS NULL OR A.END_YMD >= SYSDATE)
            [2]
            AND    (B.PIS_YY||B.PIS_MM  BETWEEN ? AND ? )
            GROUP BY A.SORT_NO, B.JOB_CD, A.REMARK2
            ORDER BY A.SORT_NO, B.JOB_CD
            ]]>
        </query>
    </sql>

    <!-- 기준직위별 조회 -->
    <sql name="SAGA060_SHR_02">
        <description>급상여지급현황 조회 (기준직위별) </description>
        <query>
            <![CDATA[
            SELECT B.JOBT_CD AS COMM_CD,
                   A.COMM_NM AS COMM_NM,
                   COUNT(B.JOBT_CD) AS PERSONS_NUM,
                   NVL(SUM(B.BAS_AMT), 0)   AS BAS_AMT,
                   NVL(SUM(B.DUTY_AMT),0) AS DUTY_AMT,
                   NVL(SUM(B.LAW_AMT), 0)     AS LAW_AMT,
                   NVL(SUM(B.BNS_AMT), 0)    AS BNS_AMT,
                   NVL(SUM(B.ETC_AMT), 0)    AS ETC_AMT,
                   NVL(SUM(B.ETC_AMT2), 0)   AS ETC_AMT2,
                   NVL(SUM(B.ETC_AMT3), 0)   AS ETC_AMT3,
                   NVL(SUM(B.ETC_AMT4), 0)   AS ETC_AMT4,
                   NVL(SUM(B.LSEV_AMT),0) AS LSEV_AMT,
                   NVL(SUM(B.TB3_AMT),0) AS TB3_AMT,
                   NVL(SUM(B.SGF_AMT),0) AS SGF_AMT,
                   NVL(SUM(B.OTH_AMT),0) AS OTH_AMT,
                   NVL(SUM(B.SALT_AMT),0) AS SALT_AMT,
                   NVL(SUM(B.HINU_AMT),0) AS HINU_AMT,
                   NVL(SUM(B.NPEN_AMT),0) AS NPEN_AMT,
                   NVL(SUM(B.NPLE_AMT),0) AS NPLE_AMT,
                   NVL(SUM(B.HINS_AMT),0) AS HINS_AMT,
                   NVL(SUM(B.PPEN_AMT),0) AS PPEN_AMT
            FROM   T_CM_COMMON A, T_CP_PAYMASTER B
            WHERE  (B.OCC_CD    LIKE  '%'||?||'%' )
            [1]
            AND    (A.CD_GBN = 'A2')
            AND    (A.COMM_CD = B.JOBT_CD)
            AND    (A.END_YMD IS NULL OR A.END_YMD >= SYSDATE)
            [2]
            AND    (B.PIS_YY||B.PIS_MM  BETWEEN ? AND ? )
            GROUP BY A.SORT_NO, B.JOBT_CD, A.COMM_NM
            ORDER BY A.SORT_NO, B.JOBT_CD
            ]]>
        </query>
    </sql>





<!--
***********************************************************************
* @UseCase     : SAGA060_PRINT
* @description : 급상여지급현황
***********************************************************************
* 2011/11/10     이동훈        최초작성.
***********************************************************************
-->

    <!-- 전체  조회 -->
    <sql name="SAGA060_SHR_PRINT">
        <description>급상여지급현황 조회</description>
        <query>
            <![CDATA[
            SELECT MAX(PRE_PIS_MM) AS PRE_PIS_MM,MAX(NOW_PIS_MM) AS NOW_PIS_MM,
                SUM(PRE_COUNTR) AS COUNTP,SUM(NOW_COUNTR) AS COUNTR,

                SUM(PRE_S91000R) AS S91000,SUM(NOW_S91000R) AS S91000R,
                SUM(PRE_T11000R) AS T11000,SUM(NOW_T11000R) AS T11000R,
                SUM(PRE_T12000R) AS T12000,SUM(NOW_T12000R) AS T12000R,
                SUM(PRE_B11000R) AS B11000,SUM(NOW_B11000R) AS B11000R,
                SUM(PRE_B12000R) AS B12000,SUM(NOW_B12000R) AS B12000R,
                SUM(PRE_BXTOTALR) AS BXTOTAL,SUM(NOW_BXTOTALR) AS BXTOTALR,
                SUM(PRE_S93000R) AS S93000,SUM(NOW_S93000R) AS S93000R,
                SUM(PRE_S94000R) AS S94000,SUM(NOW_S94000R) AS S94000R,
                SUM(PRE_B13000R) AS B13000,SUM(NOW_B13000R) AS B13000R,
                SUM(PRE_B23000R) AS B23000,SUM(NOW_B23000R) AS B23000R,
                SUM(PRE_B17000R) AS B17000,SUM(NOW_B17000R) AS B17000R,
                SUM(PRE_B23170R) AS B23170,SUM(NOW_B23170R) AS B23170R,
				? AS CYYYYO,
				? AS CMMO,
				? AS CYYYY,
				? AS CMM,
				? AS TODATEE,
				'' CTITLE

            FROM(
                SELECT DPT_CD, PIS_MM,TITLE,
                DECODE(PIS_MM,?,PIS_MM) PRE_PIS_MM,DECODE(PIS_MM,?,PIS_MM) NOW_PIS_MM,
                DECODE(PIS_MM,?,COUNTR) PRE_COUNTR,DECODE(PIS_MM,?,COUNTR) NOW_COUNTR,

                DECODE(PIS_MM,?,S91000R) PRE_S91000R,DECODE(PIS_MM,?,S91000R) NOW_S91000R,
                DECODE(PIS_MM,?,T11000R) PRE_T11000R,DECODE(PIS_MM,?,T11000R) NOW_T11000R,
                DECODE(PIS_MM,?,T12000R) PRE_T12000R,DECODE(PIS_MM,?,T12000R) NOW_T12000R,
                DECODE(PIS_MM,?,B11000R) PRE_B11000R,DECODE(PIS_MM,?,B11000R) NOW_B11000R,
                DECODE(PIS_MM,?,B12000R) PRE_B12000R,DECODE(PIS_MM,?,B12000R) NOW_B12000R,
                DECODE(PIS_MM,?,BXTOTALR) PRE_BXTOTALR,DECODE(PIS_MM,?,BXTOTALR) NOW_BXTOTALR,
                DECODE(PIS_MM,?,S93000R) PRE_S93000R,DECODE(PIS_MM,?,S93000R) NOW_S93000R,
                DECODE(PIS_MM,?,S94000R) PRE_S94000R,DECODE(PIS_MM,?,S94000R) NOW_S94000R,
                DECODE(PIS_MM,?,B13000R) PRE_B13000R,DECODE(PIS_MM,?,B13000R) NOW_B13000R,
                DECODE(PIS_MM,?,B23000R) PRE_B23000R,DECODE(PIS_MM,?,B23000R) NOW_B23000R,
                DECODE(PIS_MM,?,B17000R) PRE_B17000R,DECODE(PIS_MM,?,B17000R) NOW_B17000R,
                DECODE(PIS_MM,?,B23170R) PRE_B23170R,DECODE(PIS_MM,?,B23170R) NOW_B23170R

                FROM (SELECT  '' TITLE,  DPT_CD,  PIS_MM,
                            COUNT(B.ENO_NO) AS COUNTR,

                            SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
                            SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
                            SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
                            SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
                            SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
                            (SUM(B.SUM_DED)-
                            SUM(B.INCM_TAX)-
                            SUM(B.CITI_TAX)-
                            SUM(B.HINU_DED+B.OLD_DED)-
                            SUM(B.NPEN_DED)-
                            SUM(B.HINS_DED)
                            ) AS BXTOTALR ,
                            SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
                            SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/

			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/

                            FROM ASNHR.T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
                            AND SAL_GBN = '0'
                            GROUP BY DPT_CD, B.PIS_MM
                    UNION ALL
					SELECT  '' TITLE,  DPT_CD,  PIS_MM,
                            COUNT(B.ENO_NO) AS COUNTR,
                            SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
                            SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
                            SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
                            SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
                            SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
                            (SUM(B.SUM_DED)-
                            SUM(B.INCM_TAX)-
                            SUM(B.CITI_TAX)-
                            SUM(B.HINU_DED+B.OLD_DED)-
                            SUM(B.NPEN_DED)-
                            SUM(B.HINS_DED)
                            ) AS BXTOTALR ,
                            SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
                            SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/

			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/

                            FROM ASNHR.T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
                            AND SAL_GBN = '0'
                            GROUP BY DPT_CD, B.PIS_MM    )
                            )
                  GROUP BY TITLE

            ]]>
        </query>
    </sql>


    <!-- 임원  조회 -->
    <sql name="SAGA060_SHR_PRINT_02">
        <description>급상여지급현황 조회</description>
        <query>
            <![CDATA[
            SELECT MAX(PRE_PIS_MM) AS PRE_PIS_MM,MAX(NOW_PIS_MM) AS NOW_PIS_MM,
                SUM(PRE_COUNTR) AS COUNTP,SUM(NOW_COUNTR) AS COUNTR,
                SUM(PRE_S91000R) AS S91000,SUM(NOW_S91000R) AS S91000R,
                SUM(PRE_T11000R) AS T11000,SUM(NOW_T11000R) AS T11000R,
                SUM(PRE_T12000R) AS T12000,SUM(NOW_T12000R) AS T12000R,
                SUM(PRE_B11000R) AS B11000,SUM(NOW_B11000R) AS B11000R,
                SUM(PRE_B12000R) AS B12000,SUM(NOW_B12000R) AS B12000R,
                SUM(PRE_BXTOTALR) AS BXTOTAL,SUM(NOW_BXTOTALR) AS BXTOTALR,
                SUM(PRE_S93000R) AS S93000,SUM(NOW_S93000R) AS S93000R,
                SUM(PRE_S94000R) AS S94000,SUM(NOW_S94000R) AS S94000R,
                SUM(PRE_B13000R) AS B13000,SUM(NOW_B13000R) AS B13000R,
                SUM(PRE_B23000R) AS B23000,SUM(NOW_B23000R) AS B23000R,
                SUM(PRE_B17000R) AS B17000,SUM(NOW_B17000R) AS B17000R,
                SUM(PRE_B23170R) AS B23170,SUM(NOW_B23170R) AS B23170R,
				? AS CYYYYO,
				? AS CMMO,
				? AS CYYYY,
				? AS CMM,
				? AS TODATEE,
				'' CTITLE

            FROM(
                SELECT DPT_CD, PIS_MM,TITLE,
                DECODE(PIS_MM,?,PIS_MM) PRE_PIS_MM,DECODE(PIS_MM,?,PIS_MM) NOW_PIS_MM,
                DECODE(PIS_MM,?,COUNTR) PRE_COUNTR,DECODE(PIS_MM,?,COUNTR) NOW_COUNTR,
                DECODE(PIS_MM,?,S91000R) PRE_S91000R,DECODE(PIS_MM,?,S91000R) NOW_S91000R,
                DECODE(PIS_MM,?,T11000R) PRE_T11000R,DECODE(PIS_MM,?,T11000R) NOW_T11000R,
                DECODE(PIS_MM,?,T12000R) PRE_T12000R,DECODE(PIS_MM,?,T12000R) NOW_T12000R,
                DECODE(PIS_MM,?,B11000R) PRE_B11000R,DECODE(PIS_MM,?,B11000R) NOW_B11000R,
                DECODE(PIS_MM,?,B12000R) PRE_B12000R,DECODE(PIS_MM,?,B12000R) NOW_B12000R,
                DECODE(PIS_MM,?,BXTOTALR) PRE_BXTOTALR,DECODE(PIS_MM,?,BXTOTALR) NOW_BXTOTALR,
                DECODE(PIS_MM,?,S93000R) PRE_S93000R,DECODE(PIS_MM,?,S93000R) NOW_S93000R,
                DECODE(PIS_MM,?,S94000R) PRE_S94000R,DECODE(PIS_MM,?,S94000R) NOW_S94000R,
                DECODE(PIS_MM,?,B13000R) PRE_B13000R,DECODE(PIS_MM,?,B13000R) NOW_B13000R,
                DECODE(PIS_MM,?,B23000R) PRE_B23000R,DECODE(PIS_MM,?,B23000R) NOW_B23000R,
                DECODE(PIS_MM,?,B17000R) PRE_B17000R,DECODE(PIS_MM,?,B17000R) NOW_B17000R,
                DECODE(PIS_MM,?,B23170R) PRE_B23170R,DECODE(PIS_MM,?,B23170R) NOW_B23170R
                FROM (SELECT  '' TITLE,  DPT_CD,  PIS_MM,
                            COUNT(B.ENO_NO) AS COUNTR,
                            SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
                            SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
                            SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
                            SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
                            SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
                            (SUM(B.SUM_DED)-
                            SUM(B.INCM_TAX)-
                            SUM(B.CITI_TAX)-
                            SUM(B.HINU_DED+B.OLD_DED)-
                            SUM(B.NPEN_DED)-
                            SUM(B.HINS_DED)
                            ) AS BXTOTALR ,
                            SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
                            SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/
			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/

                            FROM ASNHR.T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
                            AND SAL_GBN = '0'
                            AND TAX_DPT = 'A600'
                            GROUP BY DPT_CD, B.PIS_MM
                    UNION ALL
					SELECT  '' TITLE,  DPT_CD,  PIS_MM,
                            COUNT(B.ENO_NO) AS COUNTR,
                            SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
                            SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
                            SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
                            SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
                            SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
                            (SUM(B.SUM_DED)-
                            SUM(B.INCM_TAX)-
                            SUM(B.CITI_TAX)-
                            SUM(B.HINU_DED+B.OLD_DED)-
                            SUM(B.NPEN_DED)-
                            SUM(B.HINS_DED)
                            ) AS BXTOTALR ,
                            SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
                            SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/

			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/

                            FROM ASNHR.T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
                            AND SAL_GBN = '0'
                            AND TAX_DPT = 'A600'
                            GROUP BY DPT_CD, B.PIS_MM   )
                            )
                  GROUP BY TITLE

            ]]>
        </query>
    </sql>

    <!-- 부서별 조회 -->
    <sql name="SAGA060_SHR_PRINT_03">
        <description>급상여지급현황 조회</description>
        <query>
            <![CDATA[
			SELECT SORT,TAX_DPT,ASNHR.SF_GET_COMMNAME('01', 'AD', TAX_DPT)         AS TAX_DPTNM,              -- 회계부서
				SUM(PRE_COUNTR) AS COUNTP,SUM(NOW_COUNTR) AS COUNTR,

				SUM(PRE_S91000R) AS S91000,SUM(NOW_S91000R) AS S91000R,
				SUM(PRE_T11000R) AS T11000,SUM(NOW_T11000R) AS T11000R,
				SUM(PRE_T12000R) AS T12000,SUM(NOW_T12000R) AS T12000R,

				SUM(PRE_B11000R) AS B11000,SUM(NOW_B11000R) AS B11000R,
				SUM(PRE_B12000R) AS B12000,SUM(NOW_B12000R) AS B12000R,
				SUM(PRE_BXTOTALR) AS BXTOTAL,SUM(NOW_BXTOTALR) AS BXTOTALR,
				SUM(PRE_S93000R) AS S93000,SUM(NOW_S93000R) AS S93000R,
				SUM(PRE_S94000R) AS S94000,SUM(NOW_S94000R) AS S94000R,
				SUM(PRE_B13000R) AS B13000,SUM(NOW_B13000R) AS B13000R,
                SUM(PRE_B23000R) AS B23000,SUM(NOW_B23000R) AS B23000R,
                SUM(PRE_B17000R) AS B17000,SUM(NOW_B17000R) AS B17000R,
                SUM(PRE_B23170R) AS B23170,SUM(NOW_B23170R) AS B23170R,
				? AS CYYYYO,
				? AS CMMO,
				? AS CYYYY,
				? AS CMM,
				? AS TODATEE,
				'' CTITLE
			  FROM(
			    SELECT SORT, TAX_DPT,
			    DECODE(PIS_MM,?,COUNTR) PRE_COUNTR,DECODE(PIS_MM,?,COUNTR) NOW_COUNTR,
			    DECODE(PIS_MM,?,S91000R) PRE_S91000R,DECODE(PIS_MM,?,S91000R) NOW_S91000R,
			    DECODE(PIS_MM,?,T11000R) PRE_T11000R,DECODE(PIS_MM,?,T11000R) NOW_T11000R,
			    DECODE(PIS_MM,?,T12000R) PRE_T12000R,DECODE(PIS_MM,?,T12000R) NOW_T12000R,
			    DECODE(PIS_MM,?,B11000R) PRE_B11000R,DECODE(PIS_MM,?,B11000R) NOW_B11000R,
			    DECODE(PIS_MM,?,B12000R) PRE_B12000R,DECODE(PIS_MM,?,B12000R) NOW_B12000R,
			    DECODE(PIS_MM,?,BXTOTALR) PRE_BXTOTALR,DECODE(PIS_MM,?,BXTOTALR) NOW_BXTOTALR,
			    DECODE(PIS_MM,?,S93000R) PRE_S93000R,DECODE(PIS_MM,?,S93000R) NOW_S93000R,
			    DECODE(PIS_MM,?,S94000R) PRE_S94000R,DECODE(PIS_MM,?,S94000R) NOW_S94000R,
			    DECODE(PIS_MM,?,B13000R) PRE_B13000R,DECODE(PIS_MM,?,B13000R) NOW_B13000R,
                DECODE(PIS_MM,?,B23000R) PRE_B23000R,DECODE(PIS_MM,?,B23000R) NOW_B23000R,
                DECODE(PIS_MM,?,B17000R) PRE_B17000R,DECODE(PIS_MM,?,B17000R) NOW_B17000R,
                DECODE(PIS_MM,?,B23170R) PRE_B23170R,DECODE(PIS_MM,?,B23170R) NOW_B23170R
			    FROM (SELECT   B.SORT,  TAX_DPT,  PIS_MM,
			                COUNT(B.ENO_NO) AS COUNTR,
			                SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
			                SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
			                SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
			                SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
			                SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
			                (SUM(B.SUM_DED)-
			                SUM(B.INCM_TAX)-
			                SUM(B.CITI_TAX)-
			                SUM(B.HINU_DED+B.OLD_DED)-
			                SUM(B.NPEN_DED)-
			                SUM(B.HINS_DED)
			                ) AS BXTOTALR ,
			                SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
			                SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/
			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/
			                FROM ASNHR.T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
			                AND SAL_GBN = '0'
			                AND TAX_DPT != 'A600' 		--임원(본사)
			                GROUP BY TAX_DPT, B.PIS_MM, B.SORT
			            UNION ALL
						SELECT   B.SORT,  TAX_DPT,  PIS_MM,
			                COUNT(B.ENO_NO) AS COUNTR,
			                SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
			                SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
			                SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
			                SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
			                SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
			                (SUM(B.SUM_DED)-
			                SUM(B.INCM_TAX)-
			                SUM(B.CITI_TAX)-
			                SUM(B.HINU_DED+B.OLD_DED)-
			                SUM(B.NPEN_DED)-
			                SUM(B.HINS_DED)
			                ) AS BXTOTALR ,
			                SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
			                SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/
			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/
			                FROM ASNHR.T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
			                AND SAL_GBN = '0'
			                AND TAX_DPT != 'A600' 		--임원(본사)
			                GROUP BY TAX_DPT, B.PIS_MM, B.SORT
			                	)
			                )
			      GROUP BY SORT, TAX_DPT,ASNHR.SF_GET_COMMNAME('01', 'AD', TAX_DPT)
			      ORDER BY SORT
            ]]>
        </query>
    </sql>





    <!-- 전체  조회 -->
    <sql name="SAGA060_SHR_PRINT_16">
        <description>급상여지급현황 조회_16</description>
        <query>
            <![CDATA[
            SELECT MAX(PRE_PIS_MM) AS PRE_PIS_MM,MAX(NOW_PIS_MM) AS NOW_PIS_MM,
                SUM(PRE_COUNTR) AS COUNTP,SUM(NOW_COUNTR) AS COUNTR,

                SUM(PRE_S91000R) AS S91000,SUM(NOW_S91000R) AS S91000R,
                SUM(PRE_T11000R) AS T11000,SUM(NOW_T11000R) AS T11000R,
                SUM(PRE_T12000R) AS T12000,SUM(NOW_T12000R) AS T12000R,
                SUM(PRE_B11000R) AS B11000,SUM(NOW_B11000R) AS B11000R,
                SUM(PRE_B12000R) AS B12000,SUM(NOW_B12000R) AS B12000R,
                SUM(PRE_BXTOTALR) AS BXTOTAL,SUM(NOW_BXTOTALR) AS BXTOTALR,
                SUM(PRE_S93000R) AS S93000,SUM(NOW_S93000R) AS S93000R,
                SUM(PRE_S94000R) AS S94000,SUM(NOW_S94000R) AS S94000R,
                SUM(PRE_B13000R) AS B13000,SUM(NOW_B13000R) AS B13000R,
                SUM(PRE_B23000R) AS B23000,SUM(NOW_B23000R) AS B23000R,
                SUM(PRE_B17000R) AS B17000,SUM(NOW_B17000R) AS B17000R,
                SUM(PRE_B23170R) AS B23170,SUM(NOW_B23170R) AS B23170R,
				? AS CYYYYO,
				? AS CMMO,
				? AS CYYYY,
				? AS CMM,
				? AS TODATEE,
				'' CTITLE

            FROM(
                SELECT DPT_CD, PIS_MM,TITLE,
                DECODE(PIS_MM,?,PIS_MM) PRE_PIS_MM,DECODE(PIS_MM,?,PIS_MM) NOW_PIS_MM,
                DECODE(PIS_MM,?,COUNTR) PRE_COUNTR,DECODE(PIS_MM,?,COUNTR) NOW_COUNTR,

                DECODE(PIS_MM,?,S91000R) PRE_S91000R,DECODE(PIS_MM,?,S91000R) NOW_S91000R,
                DECODE(PIS_MM,?,T11000R) PRE_T11000R,DECODE(PIS_MM,?,T11000R) NOW_T11000R,
                DECODE(PIS_MM,?,T12000R) PRE_T12000R,DECODE(PIS_MM,?,T12000R) NOW_T12000R,
                DECODE(PIS_MM,?,B11000R) PRE_B11000R,DECODE(PIS_MM,?,B11000R) NOW_B11000R,
                DECODE(PIS_MM,?,B12000R) PRE_B12000R,DECODE(PIS_MM,?,B12000R) NOW_B12000R,
                DECODE(PIS_MM,?,BXTOTALR) PRE_BXTOTALR,DECODE(PIS_MM,?,BXTOTALR) NOW_BXTOTALR,
                DECODE(PIS_MM,?,S93000R) PRE_S93000R,DECODE(PIS_MM,?,S93000R) NOW_S93000R,
                DECODE(PIS_MM,?,S94000R) PRE_S94000R,DECODE(PIS_MM,?,S94000R) NOW_S94000R,
                DECODE(PIS_MM,?,B13000R) PRE_B13000R,DECODE(PIS_MM,?,B13000R) NOW_B13000R,
                DECODE(PIS_MM,?,B23000R) PRE_B23000R,DECODE(PIS_MM,?,B23000R) NOW_B23000R,
                DECODE(PIS_MM,?,B17000R) PRE_B17000R,DECODE(PIS_MM,?,B17000R) NOW_B17000R,
                DECODE(PIS_MM,?,B23170R) PRE_B23170R,DECODE(PIS_MM,?,B23170R) NOW_B23170R

                FROM (SELECT  '' TITLE,  DPT_CD,  PIS_MM,
                            COUNT(B.ENO_NO) AS COUNTR,

                            SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
                            SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
                            SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
                            SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
                            SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
                            (SUM(B.SUM_DED)-
                            SUM(B.INCM_TAX)-
                            SUM(B.CITI_TAX)-
                            SUM(B.HINU_DED+B.OLD_DED)-
                            SUM(B.NPEN_DED)-
                            SUM(B.HINS_DED)
                            ) AS BXTOTALR ,
                            SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
                            SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/

			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/

                            FROM T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
                            AND SAL_GBN = '0'
                            GROUP BY DPT_CD, B.PIS_MM
                    UNION ALL
					SELECT  '' TITLE,  DPT_CD,  PIS_MM,
                            COUNT(B.ENO_NO) AS COUNTR,
                            SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
                            SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
                            SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
                            SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
                            SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
                            (SUM(B.SUM_DED)-
                            SUM(B.INCM_TAX)-
                            SUM(B.CITI_TAX)-
                            SUM(B.HINU_DED+B.OLD_DED)-
                            SUM(B.NPEN_DED)-
                            SUM(B.HINS_DED)
                            ) AS BXTOTALR ,
                            SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
                            SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/

			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/

                            FROM T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
                            AND SAL_GBN = '0'
                            GROUP BY DPT_CD, B.PIS_MM    )
                            )
                  GROUP BY TITLE

            ]]>
        </query>
    </sql>


    <!-- 임원  조회 -->
    <sql name="SAGA060_SHR_PRINT_02_16">
        <description>급상여지급현황 조회_16</description>
        <query>
            <![CDATA[
            SELECT MAX(PRE_PIS_MM) AS PRE_PIS_MM,MAX(NOW_PIS_MM) AS NOW_PIS_MM,
                SUM(PRE_COUNTR) AS COUNTP,SUM(NOW_COUNTR) AS COUNTR,
                SUM(PRE_S91000R) AS S91000,SUM(NOW_S91000R) AS S91000R,
                SUM(PRE_T11000R) AS T11000,SUM(NOW_T11000R) AS T11000R,
                SUM(PRE_T12000R) AS T12000,SUM(NOW_T12000R) AS T12000R,
                SUM(PRE_B11000R) AS B11000,SUM(NOW_B11000R) AS B11000R,
                SUM(PRE_B12000R) AS B12000,SUM(NOW_B12000R) AS B12000R,
                SUM(PRE_BXTOTALR) AS BXTOTAL,SUM(NOW_BXTOTALR) AS BXTOTALR,
                SUM(PRE_S93000R) AS S93000,SUM(NOW_S93000R) AS S93000R,
                SUM(PRE_S94000R) AS S94000,SUM(NOW_S94000R) AS S94000R,
                SUM(PRE_B13000R) AS B13000,SUM(NOW_B13000R) AS B13000R,
                SUM(PRE_B23000R) AS B23000,SUM(NOW_B23000R) AS B23000R,
                SUM(PRE_B17000R) AS B17000,SUM(NOW_B17000R) AS B17000R,
                SUM(PRE_B23170R) AS B23170,SUM(NOW_B23170R) AS B23170R,
				? AS CYYYYO,
				? AS CMMO,
				? AS CYYYY,
				? AS CMM,
				? AS TODATEE,
				'' CTITLE

            FROM(
                SELECT DPT_CD, PIS_MM,TITLE,
                DECODE(PIS_MM,?,PIS_MM) PRE_PIS_MM,DECODE(PIS_MM,?,PIS_MM) NOW_PIS_MM,
                DECODE(PIS_MM,?,COUNTR) PRE_COUNTR,DECODE(PIS_MM,?,COUNTR) NOW_COUNTR,
                DECODE(PIS_MM,?,S91000R) PRE_S91000R,DECODE(PIS_MM,?,S91000R) NOW_S91000R,
                DECODE(PIS_MM,?,T11000R) PRE_T11000R,DECODE(PIS_MM,?,T11000R) NOW_T11000R,
                DECODE(PIS_MM,?,T12000R) PRE_T12000R,DECODE(PIS_MM,?,T12000R) NOW_T12000R,
                DECODE(PIS_MM,?,B11000R) PRE_B11000R,DECODE(PIS_MM,?,B11000R) NOW_B11000R,
                DECODE(PIS_MM,?,B12000R) PRE_B12000R,DECODE(PIS_MM,?,B12000R) NOW_B12000R,
                DECODE(PIS_MM,?,BXTOTALR) PRE_BXTOTALR,DECODE(PIS_MM,?,BXTOTALR) NOW_BXTOTALR,
                DECODE(PIS_MM,?,S93000R) PRE_S93000R,DECODE(PIS_MM,?,S93000R) NOW_S93000R,
                DECODE(PIS_MM,?,S94000R) PRE_S94000R,DECODE(PIS_MM,?,S94000R) NOW_S94000R,
                DECODE(PIS_MM,?,B13000R) PRE_B13000R,DECODE(PIS_MM,?,B13000R) NOW_B13000R,
                DECODE(PIS_MM,?,B23000R) PRE_B23000R,DECODE(PIS_MM,?,B23000R) NOW_B23000R,
                DECODE(PIS_MM,?,B17000R) PRE_B17000R,DECODE(PIS_MM,?,B17000R) NOW_B17000R,
                DECODE(PIS_MM,?,B23170R) PRE_B23170R,DECODE(PIS_MM,?,B23170R) NOW_B23170R
                FROM (SELECT  '' TITLE,  DPT_CD,  PIS_MM,
                            COUNT(B.ENO_NO) AS COUNTR,
                            SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
                            SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
                            SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
                            SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
                            SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
                            (SUM(B.SUM_DED)-
                            SUM(B.INCM_TAX)-
                            SUM(B.CITI_TAX)-
                            SUM(B.HINU_DED+B.OLD_DED)-
                            SUM(B.NPEN_DED)-
                            SUM(B.HINS_DED)
                            ) AS BXTOTALR ,
                            SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
                            SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/
			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/

                            FROM T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
                            AND SAL_GBN = '0'
                            AND TAX_DPT = 'A600'
                            GROUP BY DPT_CD, B.PIS_MM
                    UNION ALL
					SELECT  '' TITLE,  DPT_CD,  PIS_MM,
                            COUNT(B.ENO_NO) AS COUNTR,
                            SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
                            SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
                            SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
                            SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
                            SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
                            (SUM(B.SUM_DED)-
                            SUM(B.INCM_TAX)-
                            SUM(B.CITI_TAX)-
                            SUM(B.HINU_DED+B.OLD_DED)-
                            SUM(B.NPEN_DED)-
                            SUM(B.HINS_DED)
                            ) AS BXTOTALR ,
                            SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
                            SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/

			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/

                            FROM T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
                            AND SAL_GBN = '0'
                            AND TAX_DPT = 'A600'
                            GROUP BY DPT_CD, B.PIS_MM   )
                            )
                  GROUP BY TITLE

            ]]>
        </query>
    </sql>

    <!-- 부서별 조회 -->
    <sql name="SAGA060_SHR_PRINT_03_16">
        <description>급상여지급현황 조회_16</description>
        <query>
            <![CDATA[

			SELECT SORT,TAX_DPT,SF_GET_COMMNAME('01', 'AD', TAX_DPT)         AS TAX_DPTNM,              -- 회계부서
				SUM(PRE_COUNTR) AS COUNTP,SUM(NOW_COUNTR) AS COUNTR,

				SUM(PRE_S91000R) AS S91000,SUM(NOW_S91000R) AS S91000R,
				SUM(PRE_T11000R) AS T11000,SUM(NOW_T11000R) AS T11000R,
				SUM(PRE_T12000R) AS T12000,SUM(NOW_T12000R) AS T12000R,

				SUM(PRE_B11000R) AS B11000,SUM(NOW_B11000R) AS B11000R,
				SUM(PRE_B12000R) AS B12000,SUM(NOW_B12000R) AS B12000R,
				SUM(PRE_BXTOTALR) AS BXTOTAL,SUM(NOW_BXTOTALR) AS BXTOTALR,
				SUM(PRE_S93000R) AS S93000,SUM(NOW_S93000R) AS S93000R,
				SUM(PRE_S94000R) AS S94000,SUM(NOW_S94000R) AS S94000R,
				SUM(PRE_B13000R) AS B13000,SUM(NOW_B13000R) AS B13000R,
                SUM(PRE_B23000R) AS B23000,SUM(NOW_B23000R) AS B23000R,
                SUM(PRE_B17000R) AS B17000,SUM(NOW_B17000R) AS B17000R,
                SUM(PRE_B23170R) AS B23170,SUM(NOW_B23170R) AS B23170R,
				? AS CYYYYO,
				? AS CMMO,
				? AS CYYYY,
				? AS CMM,
				? AS TODATEE,
				'' CTITLE
			  FROM(
			    SELECT SORT, TAX_DPT,
			    DECODE(PIS_MM,?,COUNTR) PRE_COUNTR,DECODE(PIS_MM,?,COUNTR) NOW_COUNTR,
			    DECODE(PIS_MM,?,S91000R) PRE_S91000R,DECODE(PIS_MM,?,S91000R) NOW_S91000R,
			    DECODE(PIS_MM,?,T11000R) PRE_T11000R,DECODE(PIS_MM,?,T11000R) NOW_T11000R,
			    DECODE(PIS_MM,?,T12000R) PRE_T12000R,DECODE(PIS_MM,?,T12000R) NOW_T12000R,
			    DECODE(PIS_MM,?,B11000R) PRE_B11000R,DECODE(PIS_MM,?,B11000R) NOW_B11000R,
			    DECODE(PIS_MM,?,B12000R) PRE_B12000R,DECODE(PIS_MM,?,B12000R) NOW_B12000R,
			    DECODE(PIS_MM,?,BXTOTALR) PRE_BXTOTALR,DECODE(PIS_MM,?,BXTOTALR) NOW_BXTOTALR,
			    DECODE(PIS_MM,?,S93000R) PRE_S93000R,DECODE(PIS_MM,?,S93000R) NOW_S93000R,
			    DECODE(PIS_MM,?,S94000R) PRE_S94000R,DECODE(PIS_MM,?,S94000R) NOW_S94000R,
			    DECODE(PIS_MM,?,B13000R) PRE_B13000R,DECODE(PIS_MM,?,B13000R) NOW_B13000R,
                DECODE(PIS_MM,?,B23000R) PRE_B23000R,DECODE(PIS_MM,?,B23000R) NOW_B23000R,
                DECODE(PIS_MM,?,B17000R) PRE_B17000R,DECODE(PIS_MM,?,B17000R) NOW_B17000R,
                DECODE(PIS_MM,?,B23170R) PRE_B23170R,DECODE(PIS_MM,?,B23170R) NOW_B23170R
			    FROM (SELECT   B.SORT,  TAX_DPT,  PIS_MM,
			                COUNT(B.ENO_NO) AS COUNTR,
			                SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
			                SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
			                SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
			                SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
			                SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
			                (SUM(B.SUM_DED)-
			                SUM(B.INCM_TAX)-
			                SUM(B.CITI_TAX)-
			                SUM(B.HINU_DED+B.OLD_DED)-
			                SUM(B.NPEN_DED)-
			                SUM(B.HINS_DED)
			                ) AS BXTOTALR ,
			                SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
			                SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/
			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/
			                FROM T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
			                AND SAL_GBN = '0'
			                AND TAX_DPT != 'A600' 		--임원(본사)
			                GROUP BY TAX_DPT, B.PIS_MM, B.SORT
			            UNION ALL
						SELECT   B.SORT,  TAX_DPT,  PIS_MM,
			                COUNT(B.ENO_NO) AS COUNTR,
			                SUM(B.SALT_AMT) AS S91000R, -- 지급합계*/
			                SUM(B.INCM_TAX) AS T11000R, -- 소득세*/
			                SUM(B.CITI_TAX) AS T12000R, -- 주민세*/
			                SUM(B.HINU_DED+B.OLD_DED) AS B11000R, -- 건강보험료*/
			                SUM(B.NPEN_DED) AS B12000R, -- 국민연금*/
			                (SUM(B.SUM_DED)-
			                SUM(B.INCM_TAX)-
			                SUM(B.CITI_TAX)-
			                SUM(B.HINU_DED+B.OLD_DED)-
			                SUM(B.NPEN_DED)-
			                SUM(B.HINS_DED)
			                ) AS BXTOTALR ,
			                SUM(B.SUM_DED) AS S93000R, -- 공제합계*/
			                SUM(B.PAY_AMT) AS S94000R, -- 실지급액*/
			                SUM(B.HINS_DED) AS B13000R, 				-- 고용보험*/
			                SUM(B.COM_HINS_DED) AS B23000R, 				-- 회사지원고용보험*/
			                SUM(B.COM_SAN_DED) AS B17000R, 				-- 회사지원산재보험*/
			                SUM(B.COM_HINS_DED)+SUM(B.COM_SAN_DED)  AS B23170R -- 합계*/
			                FROM T_CP_NPAYMASTER B
                            WHERE B.PIS_YY||B.PIS_MM = ?
			                AND SAL_GBN = '0'
			                AND TAX_DPT != 'A600' 		--임원(본사)
			                GROUP BY TAX_DPT, B.PIS_MM, B.SORT
			                	)
			                )
			      GROUP BY SORT, TAX_DPT,SF_GET_COMMNAME('01', 'AD', TAX_DPT)
			      ORDER BY SORT
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : SAGA070
* @description : 개인별급여지급현황
***********************************************************************
* 2007/03/17     한학현        최초작성.
***********************************************************************
-->
    <!-- 개인정보 조회 -->
    <sql name="SAGA070_SHR">
        <description>개인별급여지급현황 개인정보 조회</description>
        <query>
            <![CDATA[
         SELECT B.ENO_NM,
             B.DPT_CD    AS DPT_CD
                       , SF_GET_DPTNAME('01', 'A4', B.DPT_CD) AS DPT_NM   -- 부서명
                       , B.JOB_CD    AS JOB_CD
                       , SF_GET_COMMNAME('01', 'A2', B.JOB_CD) AS JOB_NM  -- 직위/호봉
                       , TO_CHAR(B.HIR_YMD,'YYYY/MM/DD') AS HIRG_YMD--입사일자
                       , B.ABA_CD --지급은행
                       , (SELECT COMM_NM FROM T_CM_COMMON WHERE GUBUN = '01' AND CD_GBN = 'BK' AND COMM_CD = B.ABA_CD ) ABA_NM
                       , B.ACC_NO --계좌번호
          FROM T_CM_PERSON B
          WHERE B.GUBUN = '01'
            AND B.ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 개인별급여지급현황 조회 -->
    <sql name="SAGA070_SHR_01">
        <description>개인별급여지급현황 조회</description>
        <query>
            <![CDATA[
            SELECT A.OCC_CD,
               	   A.PIS_MM,
                   A.SAL_GBN,
                   A.BAS_AMT,                                    	-- 기본급
                   A.DUTY_AMT,                                   	-- 직책수당
                   A.LAW_AMT,                                    	-- 법정수당
				   A.BNS_AMT,                                    	-- 상여금
                   A.PPEN_AMT,                                   	-- 개인연금
                   A.LSEV_AMT,                                    -- 근속수당
                   A.ETC_AMT,									 	--차량유지비
                   A.ETC_AMT2,									 	--지역근무수당
                   A.ETC_AMT3,									 	--식대
                   A.ETC_AMT4,									 	--가족부양비
                   NVL(A.OTH_AMT,0)  AS OTH_AMT,    -- 기타지불액
                   A.INCM_TAX,                                    	-- 소득세
                   A.CITI_TAX,                                    	-- 주민세
                   A.NPEN_AMT,                                    	-- 국민연금
                   A.HINU_AMT,                                    	-- 의료보험
                   A.OLD_AMT,                                     	-- 노인장기요양보험
             	   A.HINS_AMT,                                		-- 고용보험
                   A.DHLP_AMT,                                    	-- 공조회비
                   A.PPED_AMT,                                    	-- 개인연금 공제
                   A.LAB_AMT,                                          -- 보증보험
                   nvl(A.LON_INT,0) + nvl(A.LON_INT2,0) + nvl(A.LON_RPY,0) +nvl(A.LON_RPY2,0) AS  LON_AMT,-- 대출 원금/이자
                   NVL(A.OTHD_AMT,0)+NVL(A.tb3d_amt,0) AS OTHD_AMT, -- 기타 공제
                   A.SALT_AMT,
                   A.PAY_AMT,
                   A.DDTT_AMT,
                   A.CONT_AMT
            FROM   T_CP_PAYMASTER A, T_CP_WORKLOG B
            WHERE (A.PIS_YY  = ? )
            AND   (A.ENO_NO  = ? )
            AND   (A.PIS_YY  =  B.PIS_YY)
            AND   (A.PIS_MM  =  B.PIS_MM)
            AND   (A.SAL_GBN =  B.SAL_GBN)
          --  AND   (A.SEQ     =  B.SEQ)
          --  AND   (B.PRO_STS = '6' OR B.PRO_STS = '4')                 --급여계산처리 작업 CLOSE 된것만
            AND   (B.PRO_STS = '6')                 					 --급여계산처리 작업 CLOSE 된것만
            ORDER BY A.ENO_NO, A.PIS_YY, LPAD(A.PIS_MM,2,'0') , A.SAL_GBN
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGA080
* @description : 급여대비표
***********************************************************************
* 2007/03/24     한학현        최초작성.
***********************************************************************
-->
     <!-- 지금내역 -->
    <sql name="SAGA080_SHR_01">
        <description>지급내역</description>
        <query>
          <![CDATA[
          SELECT SF_GET_DPTNAME('01','A4',NVL(B.DPT_CD,C.DPT_CD)) AS DPT_NM,
                   SF_GET_COMMNAME('01','A2',NVL(B.JOB_CD,C.JOB_CD)) AS JOB_NM,
                   A.ENO_NO AS ENO_NO,
                   SF_GET_ENONAME('01',A.ENO_NO) AS ENO_NM,
                   B.SALT_AMT AS SALT_AMT_0,
                   C.SALT_AMT AS SALT_AMT_1,
                   B.FREE_TAX AS FREE_TAX,
                   B.NPEN_AMT AS NPEN_AMT,
                   B.HINU_AMT AS HINU_AMT,
                   B.OLD_AMT AS OLD_AMT
           FROM (SELECT DISTINCT(ENO_NO) ENO_NO FROM T_CP_PAYMASTER
           WHERE PIS_YY = ? AND PIS_MM = ?) A,
               (SELECT ENO_NO, DPT_CD, JOB_CD, OCC_CD, SUM(SALT_AMT) - SUM(FREE_TAX) SALT_AMT, SUM(FREE_TAX) FREE_TAX,
                SUM(NPEN_AMT) NPEN_AMT, SUM(HINU_AMT) HINU_AMT, SUM(OLD_AMT) OLD_AMT FROM T_CP_PAYMASTER
                WHERE PIS_YY = ? AND PIS_MM = ? AND SAL_GBN = '0' GROUP BY ENO_NO, DPT_CD, JOB_CD, OCC_CD) B,
               (SELECT ENO_NO, DPT_CD, JOB_CD, OCC_CD, SUM(SALT_AMT) SALT_AMT FROM T_CP_PAYMASTER
                WHERE PIS_YY = ? AND PIS_MM = ? AND SAL_GBN = '1' GROUP BY ENO_NO, DPT_CD, JOB_CD, OCC_CD) C
           WHERE A.ENO_NO = B.ENO_NO(+)
           AND A.ENO_NO = C.ENO_NO(+)
           AND NVL(B.OCC_CD, C.OCC_CD) LIKE '%'||?||'%'
           ORDER BY SF_GET_DPTSEQ('01','A4',NVL(B.DPT_CD,C.DPT_CD)), SF_GET_COMMSEQ('01','A2',NVL(B.JOB_CD,C.JOB_CD))
            ]]>
        </query>
    </sql>


    <!-- 급여변경자 -->
    <sql name="SAGA080_SHR_02">
        <description>급여변경자</description>
        <query>
            <![CDATA[
            [1]
            SELECT AA.DPT_NM AS DPT_NM,
                   AA.JOB_NM AS JOB_NM,
                   AA.ENO_NO AS ENO_NO,
                   AA.ENO_NM AS ENO_NM,
                   NVL(BB.BAS_AMT+BB.DUTY_AMT+BB.OT_AMT+BB.WEL_AMT+BB.OSE_AMT+BB.RUN_AMT+BB.MH_AMT+BB.LSEV_AMT+BB.TB3_AMT+BB.SGF_AMT+BB.OTH_AMT,'0') AS BEF_AMT,
                   NVL(CC.BAS_AMT+CC.DUTY_AMT+CC.OT_AMT+CC.WEL_AMT+CC.OSE_AMT+CC.RUN_AMT+CC.MH_AMT+CC.LSEV_AMT+CC.TB3_AMT+CC.SGF_AMT+CC.OTH_AMT,'0') AS AFT_AMT
            FROM   (SELECT B.HEAD_SEQ AS HEAD_SEQ,
                           B.DPT_SEQ AS DPT_SEQ,
                           B.JOB_SEQ AS JOB_SEQ,
                           B.HOB_SEQ AS HOB_SEQ,
                           B.HIRG_YMD AS HIRG_YMD,
                           B.ENO_NO AS ENO_NO,
                           B.ENO_NM AS ENO_NM,
                           B.DPT_CD AS DPT_CD,
                           A.DPT_NM AS DPT_NM,
                           B.JOB_CD AS JOB_CD,
                           C.COMM_NM AS JOB_NM
                      FROM T_CM_DEPT A,VI_T_CM_PERSON2 B, T_CM_COMMON C
                     WHERE (A.CD_GBN  = 'A4')
                       AND (NVL(B.OCC_CD,' ') LIKE '%'||?||'%')
                       AND (NVL(A.OCC_CD,' ') LIKE '%'||?||'%' OR A.OCC_CD  = 'B')
                       AND (TO_CHAR(B.HIR_YMD,'YYYYMM') <= ?)
                       AND (RTRIM(TO_CHAR(B.RET_YMD,'YYYYMMDD')) IS NULL  OR SUBSTR(TO_CHAR(B.RET_YMD,'YYYYMMDD'),1,6) >= ?)
                       AND (C.CD_GBN = 'A2')
                       AND (C.COMM_CD = B.JOB_CD)
                       AND (A.DPT_CD = B.DPT_CD)
                       AND (NVL(B.DPT_CD,' ') LIKE '%'||?||'%')
                  ORDER BY A.SORT_NO, C.SORT_NO, B.ENO_NO) AA,
                   (SELECT *
                      FROM T_CP_PAYMASTER
                     WHERE SAL_GBN = '0'
                       AND PIS_YY = substr(TO_CHAR((TO_DATE(?,'YYYYMM') - 1),'YYYYMM'),1,4)
                       AND PIS_MM = substr(TO_CHAR((TO_DATE(?,'YYYYMM') - 1),'YYYYMM'),5,2)
                      ) BB,
                   (SELECT *
                      FROM T_CP_PAYMASTER
                     WHERE SAL_GBN = '0'
                       AND PIS_YY = ?
                       AND PIS_MM = ?
                      ) CC
            WHERE AA.ENO_NO = BB.ENO_NO(+)
            AND   AA.ENO_NO = CC.ENO_NO(+)
            ORDER BY AA.DPT_SEQ, AA.JOB_SEQ, AA.HOB_SEQ DESC, AA.HIRG_YMD, AA.ENO_NO
            [2]
            ]]>
        </query>
    </sql>

    <!-- 총괄표(소속별) -->
    <sql name="SAGA080_SHR_03">
        <description>총괄표(소속별)</description>
        <query>
            <![CDATA[
            SELECT AA.DPT_CD AS COMM_CD,
                   AA.DPT_NM AS COMM_NM,
                   NVL(BB.ENO_CNT,'0') AS BEF_PERSONS,
                   NVL(BB.SALT_AMT,'0') AS BEF_AMT,
                   NVL(CC.ENO_CNT,0) AS AFT_PERSONS,
                   NVL(CC.SALT_AMT,'0') AS AFT_AMT
            FROM   (SELECT TO_CHAR(A.SORT_NO,'FM000') AS SORT_NO,
                           A.DPT_CD AS DPT_CD,
                           MIN(A.DPT_NM) AS DPT_NM
                      FROM T_CM_DEPT A
                     WHERE A.CD_GBN  = 'A4'
                       AND (NVL(A.OCC_CD,' ') LIKE '%'||?||'%' OR A.OCC_CD  = 'B')
                       AND TO_CHAR(A.SORT_NO) IS NOT NULL
                     GROUP BY A.SORT_NO,A.DPT_CD
                     ORDER BY A.SORT_NO,A.DPT_CD) AA,
                   (SELECT DPT_CD,
                           nvl(COUNT(ENO_NO),0) AS ENO_CNT,
                           nvl(SUM(NVL(SALT_AMT,0)),0) AS SALT_AMT
                      FROM T_CP_PAYMASTER
                     WHERE SAL_GBN = '0'
                       AND NVL(OCC_CD,' ') LIKE '%'||?||'%'
                       AND PIS_YY = substr(TO_CHAR((TO_DATE(?,'YYYYMM') - 1),'YYYYMM'),1,4)
                       AND PIS_MM = substr(TO_CHAR((TO_DATE(?,'YYYYMM') - 1),'YYYYMM'),5,2)
                     GROUP BY DPT_CD
                      ) BB,
                   (SELECT DPT_CD,
                           nvl(COUNT(ENO_NO),0) AS ENO_CNT,
                           nvl(SUM(NVL(SALT_AMT,0)),0) AS SALT_AMT
                      FROM T_CP_PAYMASTER
                     WHERE SAL_GBN = '0'
                       AND NVL(OCC_CD,' ') LIKE '%'||?||'%'
                       AND PIS_YY = ?
                       AND PIS_MM = ?
                     GROUP BY DPT_CD
                      ) CC
            WHERE AA.DPT_CD = BB.DPT_CD(+)
            AND   AA.DPT_CD = CC.DPT_CD(+)
            AND   (NVL(BB.ENO_CNT,'0') <> '0'
                   AND NVL(BB.SALT_AMT,'0') <> '0'
                   AND NVL(CC.ENO_CNT,'0') <> '0'
                   AND NVL(CC.SALT_AMT,'0') <> '0')
            ORDER BY AA.SORT_NO, AA.DPT_CD
            ]]>
        </query>
    </sql>

    <!-- 총괄표(직위별) -->
    <sql name="SAGA080_SHR_04">
        <description>총괄표(직위별)</description>
        <query>
            <![CDATA[
            SELECT AA.COMM_CD AS COMM_CD,
                   AA.COMM_NM AS COMM_NM,
                   NVL(BB.ENO_CNT,'0') AS BEF_PERSONS,
                   NVL(BB.SALT_AMT,'0') AS BEF_AMT,
                   NVL(CC.ENO_CNT,0) AS AFT_PERSONS,
                   NVL(CC.SALT_AMT,'0') AS AFT_AMT
            FROM   (SELECT TO_CHAR(A.SORT_NO,'FM000') AS SORT_NO,
                           A.COMM_CD AS COMM_CD,
                           MIN(A.COMM_NM) AS COMM_NM
                      FROM T_CM_COMMON A
                     WHERE A.CD_GBN  = 'A2'
                       AND (NVL(A.OCC_CD,' ') LIKE '%'||?||'%' OR A.OCC_CD  = 'B')
                       AND TO_CHAR(A.SORT_NO) IS NOT NULL
                     GROUP BY A.SORT_NO,A.COMM_CD
                     ORDER BY A.SORT_NO,A.COMM_CD) AA,
                   (SELECT JOB_CD,
                           nvl(COUNT(ENO_NO),0) AS ENO_CNT,
                           nvl(SUM(NVL(SALT_AMT,0)),0) AS SALT_AMT
                      FROM T_CP_PAYMASTER
                     WHERE SAL_GBN = '0'
                       AND NVL(OCC_CD,' ') LIKE '%'||?||'%'
                       AND PIS_YY = substr(TO_CHAR((TO_DATE(?,'YYYYMM') - 1),'YYYYMM'),1,4)
                       AND PIS_MM = substr(TO_CHAR((TO_DATE(?,'YYYYMM') - 1),'YYYYMM'),5,2)
                     GROUP BY JOB_CD
                      ) BB,
                   (SELECT JOB_CD,
                           nvl(COUNT(ENO_NO),0) AS ENO_CNT,
                           nvl(SUM(NVL(SALT_AMT,0)),0) AS SALT_AMT
                      FROM T_CP_PAYMASTER
                     WHERE SAL_GBN = '0'
                       AND NVL(OCC_CD,' ') LIKE '%'||?||'%'
                       AND PIS_YY = ?
                       AND PIS_MM = ?
                     GROUP BY JOB_CD
                      ) CC
            WHERE AA.COMM_CD = BB.JOB_CD(+)
            AND   AA.COMM_CD = CC.JOB_CD(+)
            AND   (NVL(BB.ENO_CNT,'0') <> '0'
                   AND NVL(BB.SALT_AMT,'0') <> '0'
                   AND NVL(CC.ENO_CNT,'0') <> '0'
                   AND NVL(CC.SALT_AMT,'0') <> '0')
            ORDER BY AA.SORT_NO, AA.COMM_CD
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : SAGA090
* @description : 급여전표처리
***********************************************************************
* 2007/05/05     조정호        최초작성.
***********************************************************************
-->
    <!-- 급여전표처리 내역 조회 -->
    <sql name="SAGA090_SHR_LOG">
        <description>급여전표처리 내역 조회</description>
        <query>
            <![CDATA[
             SELECT PRO_STS
                  , DECODE(PRO_STS
                          ,'1', '작업 OPEN'
                          ,'2', '일반관리비 (급여)'
                          ,'3', '일반관리비 (복리후생비)'
                          ,'4', '소득세/기타'
                          ,'5', '작업 CLOSE'
                           ) AS PRO_STS_MSG
                  , TO_CHAR(TO_DATE(PAY_YMD), 'YYYY-MM-DD') AS PAY_YMD
                  , TO_CHAR(TO_DATE(APY_YMD), 'YYYY-MM-DD') AS APY_YMD
                  , SLP_WRK_NO1 AS WRK_NO1
                  , SLP_WRK_NO2 AS WRK_NO2
                  , SLP_WRK_NO3 AS WRK_NO3
               FROM T_CP_WORKLOG
              WHERE OCC_CD  = ?
                AND PIS_YY  = ?
                AND PIS_MM  = ?
                AND SAL_GBN = 'P'
           ORDER BY PIS_YY DESC
                  , PIS_MM DESC
            ]]>
        </query>
    </sql>


    <!-- 일반관리비 급여 내역 조회 (사무직) -->
    <sql name="SAGA090_PROC2_SHR_A">
        <description>일반관리비 급여 내역 조회</description>
        <query>
            <![CDATA[
            SELECT COUNT(*) AS SALT_CNT
                  ,NVL(SUM(SALT_AMT),0) - NVL(SUM(FREE_TAX),0) AS SALT_AMT
              FROM T_CP_PAYMASTER
             WHERE OCC_CD  = 'A'
               AND PIS_YY  = ?
               AND PIS_MM  = ?
               AND SAL_GBN = '0'
            ]]>
        </query>
    </sql>

    <!-- 일반관리비 급여 내역 조회 (택배직) -->
    <sql name="SAGA090_PROC2_SHR_M">
        <description>일반관리비 급여 내역 조회</description>
        <query>
            <![CDATA[
            SELECT B.HEAD_CD
                 , COUNT(*) AS SALT_CNT
                 , NVL(SUM(A.SALT_AMT),0) - NVL(SUM(A.FREE_TAX),0) AS SALT_AMT
              FROM T_CP_PAYMASTER A
                 , T_CM_DEPT B
             WHERE A.OCC_CD  = 'M'
               AND A.PIS_YY  = ?
               AND A.PIS_MM  = ?
               AND A.SAL_GBN = '0'
               AND A.DPT_CD  = B.DPT_CD
               AND B.CD_GBN  = 'A4'
          GROUP BY B.HEAD_CD
            ]]>
        </query>
    </sql>

    <!-- 급여제외항목 -->
    <sql name="SAGA090_PROC2_SHR_ETC">
        <description>급여제외항목</description>
        <query>
            <![CDATA[
            SELECT NVL(SUM(HINU_AMT),0) AS HINU_AMT
                  ,NVL(SUM(OLD_AMT),0)  AS OLD_AMT
                  ,NVL(SUM(NPEN_AMT),0)+NVL(SUM(NPLE_AMT),0) AS NPEN_AMT
                  ,NVL(SUM(DHLP_AMT),0) AS DHLP_AMT
                  ,NVL(SUM(HINS_AMT),0) AS HINS_AMT
                  ,NVL(SUM(PPEN_AMT),0)*2 AS PPEN_AMT
              FROM T_CP_PAYMASTER
             WHERE OCC_CD   = ?
               AND PIS_YY   = ?
               AND PIS_MM   = ?
               AND SAL_GBN  = '0'
            ]]>
        </query>
    </sql>

    <!-- 일반관리비 복리후생비 내역 조회 (사무직) -->
    <sql name="SAGA090_PROC3_SHR_A">
        <description>일반관리비 복리후생비 내역 조회</description>
        <query>
            <![CDATA[
             SELECT PAY1.HINU_AMT
                   ,PAY1.OLD_AMT
                   ,PAY1.NPEN_AMT
                   ,PAY2.FREE_TAX
               FROM (SELECT NVL(SUM(PAY.HINU_AMT),0) AS HINU_AMT
                           ,NVL(SUM(PAY.OLD_AMT),0)  AS OLD_AMT
                           ,NVL(SUM(PAY.NPEN_AMT),0) AS NPEN_AMT
                       FROM T_CP_PAYMASTER PAY
                      WHERE PAY.OCC_CD  = 'A'
                        AND PAY.PIS_YY  = ?
                        AND PAY.PIS_MM  = ?
                        AND PAY.SAL_GBN = '0') PAY1
                   ,(SELECT NVL(SUM(FREE_TAX),0) AS FREE_TAX
                       FROM T_CP_PAYMASTER
                      WHERE OCC_CD  = 'A'
                        AND PIS_YY  = ?
                        AND PIS_MM  = ?
                        AND SAL_GBN = '0') PAY2
            ]]>
        </query>
    </sql>

    <!-- 일반관리비 복리후생비 내역 조회 (택배직) -->
    <sql name="SAGA090_PROC3_SHR_M">
        <description>일반관리비 복리후생비 내역 조회</description>
        <query>
            <![CDATA[
              SELECT B.HEAD_CD
                   , NVL(SUM(A.HINU_AMT),0) AS HINU_AMT
                   , NVL(SUM(A.OLD_AMT),0)  AS OLD_AMT
                   , NVL(SUM(A.NPEN_AMT),0) AS NPEN_AMT
                   , NVL(SUM(A.FREE_TAX),0) AS FREE_TAX
                FROM T_CP_PAYMASTER A
                   , T_CM_DEPT B
               WHERE A.OCC_CD  = 'M'
                 AND A.PIS_YY  = ?
                 AND A.PIS_MM  = ?
                 AND A.SAL_GBN = '0'
                 AND A.DPT_CD  = B.DPT_CD
                 AND B.CD_GBN  = 'A4'
            GROUP BY B.HEAD_CD
            ORDER BY B.HEAD_CD
            ]]>
        </query>
    </sql>

    <!-- 소득세/기타 항목의 전표처리를 위해 내역 조회 -->
    <sql name="SAGA090_PROC4_SHR">
        <description>소득세/기타 항목의 전표처리를 위해 내역 조회</description>
        <query>
            <![CDATA[
             SELECT INV_AMT
                  , LON_RPY
                  , LON_RPY2
                  , SAV_AMT
                  , WOM_AMT
                  , CONT_AMT
                  , INCM_TAX
                  , CITI_TAX
                  , INCM_TAX1
                  , CITI_TAX1
               FROM (SELECT NVL(SUM(INV_AMT),0)                         AS INV_AMT      /*출연금*/
                          , NVL(SUM(LON_RPY),0) + NVL(SUM(LON_INT),0)   AS LON_RPY      /*융자+이자*/
                          , NVL(SUM(LON_RPY2),0)+ NVL(SUM(LON_INT2),0)  AS LON_RPY2     /*제일융자+이자*/
                          , NVL(SUM(SAV_AMT),0)                         AS SAV_AMT      /*저축금*/
                          , NVL(SUM(WOM_AMT),0)                         AS WOM_AMT      /*여직원회비*/
                          , NVL(SUM(CONT_AMT),0)                        AS CONT_AMT     /*불우이웃성금*/
                       FROM T_CP_PAYMASTER
                      WHERE OCC_CD      = ?
                        AND PIS_YY      = ?
                        AND PIS_MM      = ?
                        AND SAL_GBN     = '0'
                     )
                   ,(SELECT NVL(SUM(DECODE(B.GBN2_TAG, '1', A.INCM_TAX, 0)),0) AS INCM_TAX      /* 본사 갑근세 */
                          , NVL(SUM(DECODE(B.GBN2_TAG, '1', A.CITI_TAX, 0)),0) AS CITI_TAX      /* 본사 주민세 */
                          , NVL(SUM(DECODE(B.GBN2_TAG, '9', A.INCM_TAX, 0)),0) AS INCM_TAX1     /* 지점 갑근세 */
                          , NVL(SUM(DECODE(B.GBN2_TAG, '9', A.CITI_TAX, 0)),0) AS CITI_TAX1     /* 지점 주민세 */
                       FROM T_CP_PAYMASTER A
                          , T_CM_DEPT B
                      WHERE B.CD_GBN    = 'A4'
                        AND A.DPT_CD    = B.DPT_CD
                        AND A.OCC_CD    = ?
                        AND A.PIS_YY    = ?
                        AND A.PIS_MM    = ?
                        AND A.SAL_GBN   = '0'
                        AND B.GBN2_TAG IN ('1', '9')
                     )
            ]]>
        </query>
    </sql>

    <!-- 전표처리를 위해 시퀀스 번호를 가지고 온다. -->
    <sql name="SAGA090_SHR_WRK_SEQ">
        <description>전표처리를 위해 시퀀스 번호를 가지고 온다.</description>
        <query>
            <![CDATA[
            SELECT S_TACTSLP_WRK_NO1.NEXTVAL AS WRK_NO
              FROM DUAL
            ]]>
        </query>
    </sql>

    <!-- 전표 그룹 처리를 위해 시퀀스 번호를 가지고 온다. -->
    <sql name="SAGA090_SHR_GRP_SEQ">
        <description>전표 그룹 처리를 위해 시퀀스 번호를 가지고 온다.</description>
        <query>
            <![CDATA[
            SELECT S_TACTSLP_GRP_NO.NEXTVAL AS GRP_NO
              FROM SYS.DUAL
            ]]>
        </query>
    </sql>

    <!-- 일반관리비(급여) 전표처리 내역을 삭제  -->
    <sql name="SAGA090_DEL_CHIT1">
        <description>일반관리비(급여) 전표처리 내역을 삭제</description>
        <query>
            <![CDATA[
            DELETE
              FROM tactslp
             WHERE WRK_NO1  = ?
               AND ACC_YY   = ?
               AND ACC_MM   = ?
               AND DPT_CD   = 'SPGA'
            ]]>
        </query>
    </sql>

    <!-- 일반관리비(복리후생비) 전표처리 그룹 내역을 삭제  -->
    <sql name="SAGA090_DEL_CHIT2">
        <description>일반관리비(복리후생비) 전표처리 그룹 내역을 삭제</description>
        <query>
            <![CDATA[
            DELETE
              FROM tactslp
             WHERE GRP_NO   = ?
               AND ACC_YY   = ?
               AND ACC_MM   = ?
               AND DPT_CD   = 'SPGA'
            ]]>
        </query>
    </sql>

    <!-- 소득세/기타 전표처리 그룹 내역을 삭제  -->
    <sql name="SAGA090_DEL_CHIT3">
        <description>소득세/기타 전표처리 그룹 내역을 삭제</description>
        <query>
            <![CDATA[
            DELETE
              FROM tactslp
             WHERE WRK_NO1  = ?
               AND ACC_YY   = ?
               AND ACC_MM   = ?
               AND DPT_CD   = 'SPAC'
            ]]>
        </query>
    </sql>

    <!-- 전표처리 내역을 등록 한다. -->
    <sql name="SAGA090_INS_CHIT">
        <description>전표처리 내역을 등록 한다.</description>
        <query>
            <![CDATA[
                INSERT
                  INTO tactslp
                       (ACC_UNIT
                       ,WRK_NO1
                       ,WRK_NO2
                       ,GRP_NO
                       ,ACC_YY
                       ,ACC_MM
                       ,DPT_CD
                       ,ACC_CD
                       ,ITM_CD
                       ,DET_CD
                       ,CD_TAG
                       ,WON_AMT
                       ,DESC1
                       ,TAX_YMD
                       ,TAX_AMT
                       ,SPL_PRC
                       ,CONT_AMT
                       ,SLP_TAG
                       ,SLP_IPT
                       ,ADV_TAG
                       ,IPT_MAN
                       ,IPT_YMD)
                VALUES ('A'
                        ,?
                        ,?
                        ,?
                        ,?
                        ,?
                        ,?
                        ,?
                        ,?
                        ,?
                        ,?
                        ,?
                        ,?
                        ,?
                        ,0
                        ,0
                        ,0
                        ,''
                        ,''
                        ,'2'
                        ,?
                        ,TO_CHAR(SYSDATE, 'YYYYMMDD'))
            ]]>
        </query>
    </sql>

    <!-- 작업 로그를 수정한다. -->
    <sql name="SAGA090_UPT_LOG">
        <description>작업 로그를 수정한다.</description>
        <query>
            <![CDATA[
             UPDATE T_CP_WORKLOG
                SET PRO_STS     = ?
                  , SLP_WRK_NO1 = DECODE(?, 'Y', ?, SLP_WRK_NO1)
                  , SLP_WRK_NO2 = DECODE(?, 'Y', ?, SLP_WRK_NO2)
                  , SLP_WRK_NO3 = DECODE(?, 'Y', ?, SLP_WRK_NO3)
                  , UPT_MAN     = ?
                  , UPT_YMD     = SYSDATE
              WHERE OCC_CD      = ?
                AND PIS_YY      = ?
                AND PIS_MM      = ?
                AND SAL_GBN     = 'P'
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : SAGA100
* @description : 급여지급내역
***********************************************************************
* 2007/03/27     오대성        최초작성.
***********************************************************************
-->

 <!-- 급여지급내역 조회 -->
    <sql name="SAGA100_SHR">
        <description>급여지급내역 조회</description>
        <query>
            <![CDATA[
            ----------------------->>>>>전월 급여상세내역<<<<<--------------------------------------------------------------------------------------

            SELECT '1' AS SEQ, TO_CHAR(GROUPING(A.OCC_CD)) AS GUBUN,
                   DECODE(GROUPING(A.OCC_CD),1,'합계',DECODE(A.OCC_CD,'0','운전직','1','정규직','2','별정직','3','한국인계약직','8','PJT','9','가채용','기타')) AS OCC_CD,
                   SUM(NVL(A.AMT_SUM,0)) AS AMT_SUM,
                   SUM(NVL(B.IN_SUM,0)) AS IN_SUM,
                   SUM(NVL(C.OUT_SUM,0)) AS OUT_SUM,
                   SUM(NVL(D.BAS_AMT,0)) AS BAS_AMT,
                   SUM(NVL(E.LSEV_AMT,0)) AS LSEV_AMT,
                   SUM(NVL(F.SGF_AMT,0)) AS SGF_AMT,
                   SUM(NVL(G.SCH_AMOUNT,0)) AS SCH_AMOUNT,
                   SUM(NVL(H.SOGUB,0)) AS SOGUB,
                   SUM(NVL(I.GITA,0)) AS GITA,
                   '' AS REMARK
                   /*현재달 금액 합계*/
            FROM   ( SELECT OCC_CD,
                            SUM(NVL(SALT_AMT,0)) AS AMT_SUM
                     FROM   T_CP_PAYMASTER
                     WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                     AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                     AND    SAL_GBN = '0'
                     GROUP BY OCC_CD ) A,
                   /*입사자 금액 합계*/
                   ( SELECT OCC_CD,0 AS IN_SUM
                     FROM T_CP_PAYMASTER
                     WHERE PIS_YY = ?
                     AND   PIS_MM = ?
                     AND   SAL_GBN ='0'
                     AND   ENO_NO NOT IN (SELECT ENO_NO FROM T_CP_PAYMASTER
                                           WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                           AND   PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                           AND   SAL_GBN ='0')
                                           GROUP BY OCC_CD ) B,
                   /*퇴사자 금액 합계*/
                   ( SELECT OCC_CD, SUM(SALT_AMT) AS OUT_SUM
                     FROM T_CP_PAYMASTER
                     WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                       AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                       AND SAL_GBN = '0'
                       AND  ENO_NO NOT IN (SELECT ENO_NO FROM T_CP_PAYMASTER
                                           WHERE PIS_YY = ?
                                           AND PIS_MM = ?
                                           AND SAL_GBN = '0')
                                           GROUP BY OCC_CD ) C,
                   /* 기본수당 금액 합계*/
                   (SELECT A.OCC_CD, SUM(A.BAS_AMT) BAS_AMT
                     FROM
                        (SELECT OCC_CD, ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+LAW_AMT+BNS_AMT BAS_AMT
                           FROM T_CP_PAYMASTER
                          WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                            AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                            AND SAL_GBN ='0'  ) A,
                        (SELECT OCC_CD, ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+LAW_AMT+BNS_AMT BAS_AMT
                           FROM T_CP_PAYMASTER
                          WHERE PIS_YY = ?
                            AND PIS_MM = ?
                            AND SAL_GBN ='0'  ) B
                        WHERE A.ENO_NO = B.ENO_NO
                          AND A.BAS_AMT <> B.BAS_AMT
                     GROUP BY A.OCC_CD)D,
                     /*근속수당 변경자 금액 합계*/
                   ( SELECT A.OCC_CD, SUM(A.LSEV_AMT) LSEV_AMT
                        FROM
                      (SELECT OCC_CD, ENO_NO, LSEV_AMT
                         FROM T_CP_PAYMASTER
                         WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                           AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                           AND SAL_GBN ='0' ) A,
                      (SELECT OCC_CD, ENO_NO, LSEV_AMT
                         FROM T_CP_PAYMASTER
                         WHERE PIS_YY = ?
                           AND PIS_MM = ?
                           AND SAL_GBN ='0' ) B
                       WHERE A.ENO_NO= B.ENO_NO
                         AND A.LSEV_AMT <> B.LSEV_AMT
                       GROUP BY A.OCC_CD   ) E,
                    /*고정수당 변경자 금액 합계 */
                   (SELECT A.OCC_CD, SUM(A.SGF_AMT) SGF_AMT
                        FROM
                           (SELECT OCC_CD, ENO_NO, SGF_AMT
                            FROM T_CP_PAYMASTER
                            WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                              AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                              AND SAL_GBN ='0' ) A,
                            (SELECT OCC_CD, ENO_NO, SGF_AMT
                            FROM T_CP_PAYMASTER
                            WHERE PIS_YY = ?
                              AND PIS_MM = ?
                              AND SAL_GBN ='0' ) B
                        WHERE A.ENO_NO= B.ENO_NO
                        AND A.SGF_AMT <> B.SGF_AMT
                        GROUP BY A.OCC_CD ) F,
                   /* 학자금 금액 합계 */
                   ( SELECT OCC_CD, SUM(AMOUNT) SCH_AMOUNT
                          FROM T_CP_CHANGE
                         WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                           AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                           AND SAL_GBN ='0'
                           AND SAL_CD ='EA'
                           AND AD_TAG = 'A'
                           AND ENO_NO IN (SELECT A.ENO_NO
                                          FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                  AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                  AND SAL_GBN ='0' ) A,
                                               (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = ?
                                                  AND PIS_MM = ?
                                                  AND SAL_GBN ='0' ) B
                                          WHERE A.ENO_NO= B.ENO_NO    )
                        GROUP BY OCC_CD ) G,
                   /* 소급금 금액 합계 */
                   ( SELECT OCC_CD, SUM(AMOUNT) SOGUB
                       FROM T_CP_CHANGE
                      WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                        AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                        AND SAL_GBN ='0'
                        AND SAL_CD IN ('41','42')
                        AND AD_TAG = 'A'
                        AND ENO_NO IN (SELECT A.ENO_NO
                                         FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                      LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                 FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                  AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                  AND SAL_GBN ='0' )A,
                                               (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                  FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = ?
                                                   AND PIS_MM = ?
                                                   AND SAL_GBN ='0')B
                                          WHERE A.ENO_NO= B.ENO_NO )
                       GROUP BY OCC_CD ) H,
                   /* 기타수당 금액 합계 */
                   (SELECT OCC_CD, SUM(AMOUNT) GITA
                      FROM T_CP_CHANGE
                     WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                       AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                       AND SAL_GBN ='0'
                       AND NVL(TRS_TAG,' ') <> 'F'
                       AND NVL(TRS_TAG,' ') <> 'P'
                       AND AD_TAG = 'A'
                       AND SAL_CD NOT IN ('41','42','EA')
                       AND ENO_NO IN (SELECT A.ENO_NO
                                          FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                  FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                   AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                   AND SAL_GBN ='0') A,
                                                (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                 FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = ?
                                                   AND PIS_MM = ?
                                                   AND SAL_GBN ='0') B
                                          WHERE A.ENO_NO= B.ENO_NO
                                            AND A.OTH_AMT <> B.OTH_AMT)
                      GROUP BY  OCC_CD ) I
             WHERE  A.OCC_CD = B.OCC_CD(+)
             AND    A.OCC_CD = C.OCC_CD(+)
             AND    A.OCC_CD = D.OCC_CD(+)
             AND    A.OCC_CD = E.OCC_CD(+)
             AND    A.OCC_CD = F.OCC_CD(+)
             AND    A.OCC_CD = G.OCC_CD(+)
             AND    A.OCC_CD = H.OCC_CD(+)
             AND    A.OCC_CD = I.OCC_CD(+)
             GROUP BY ROLLUP(A.OCC_CD)

             UNION

             ---------------------->>>>>금월 급여상세내역<<<<<---------------------------------------------------------------------------

             SELECT '2' AS SEQ, TO_CHAR(GROUPING(A.OCC_CD)) AS GUBUN,
             DECODE(GROUPING(A.OCC_CD),1,'합계',DECODE(A.OCC_CD,'0','운전직','1','정규직','2','별정직','3','한국인계약직','8','PJT','9','가채용','기타')) AS OCC_CD,
                   SUM(NVL(A.AMT_SUM,0)) AS AMT_SUM,
                   SUM(NVL(B.IN_SUM,0)) AS IN_SUM,
                   SUM(NVL(C.OUT_SUM,0)) AS OUT_SUM,
                   SUM(NVL(D.BAS_AMT,0)) AS BAS_AMT,
                   SUM(NVL(E.LSEV_AMT,0)) AS LSEV_AMT,
                   SUM(NVL(F.SGF_AMT,0)) AS SGF_AMT,
                   SUM(NVL(G.SCH_AMOUNT,0)) AS SCH_AMOUNT,
                   SUM(NVL(H.SOGUB,0)) AS SOGUB,
                   SUM(NVL(I.GITA,0)) AS GITA,
                   '' AS REMARK
                  /*현재달 금액 합계*/
             FROM ( SELECT OCC_CD,
                          SUM(NVL(SALT_AMT,0)) AS AMT_SUM
                     FROM   T_CP_PAYMASTER
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    SAL_GBN = '0'
                     GROUP BY OCC_CD ) A,
                     /*입사자 금액 합계*/
                   ( SELECT OCC_CD, SUM(SALT_AMT) AS IN_SUM
                     FROM T_CP_PAYMASTER
                     WHERE PIS_YY = ?
                     AND   PIS_MM = ?
                     AND   SAL_GBN ='0'
                     AND   ENO_NO NOT IN (SELECT ENO_NO FROM T_CP_PAYMASTER
                                           WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                           AND   PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                           AND   SAL_GBN ='0')
                                           GROUP BY OCC_CD ) B,
                     /*퇴사자 금액 합계*/
                   ( SELECT OCC_CD, 0 AS OUT_SUM
                     FROM T_CP_PAYMASTER
                     WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                       AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                       AND SAL_GBN = '0'
                       AND  ENO_NO NOT IN (SELECT ENO_NO FROM T_CP_PAYMASTER
                                           WHERE PIS_YY = ?
                                           AND PIS_MM = ?
                                           AND SAL_GBN = '0')
                                           GROUP BY OCC_CD ) C,
                     /* 기본수당 금액 합계*/
                   ( SELECT B.OCC_CD, SUM(B.BAS_AMT) BAS_AMT
                       FROM
                        (SELECT OCC_CD, ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+LAW_AMT+BNS_AMT BAS_AMT
                           FROM T_CP_PAYMASTER
                          WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                            AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                            AND SAL_GBN ='0'  ) A,
                        (SELECT OCC_CD, ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+LAW_AMT+BNS_AMT BAS_AMT
                           FROM T_CP_PAYMASTER
                          WHERE PIS_YY = ?
                          AND PIS_MM = ?
                          AND SAL_GBN ='0'  ) B
                       WHERE A.ENO_NO = B.ENO_NO
                          AND A.BAS_AMT <> B.BAS_AMT
                     GROUP BY B.OCC_CD)D,
                     /*근속수당 변경자 금액 합계*/
                   ( SELECT B.OCC_CD, SUM(B.LSEV_AMT) LSEV_AMT
                        FROM
                      (SELECT OCC_CD, ENO_NO, LSEV_AMT
                         FROM T_CP_PAYMASTER
                         WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                           AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                           AND SAL_GBN ='0' ) A,
                      (SELECT OCC_CD, ENO_NO, LSEV_AMT
                         FROM T_CP_PAYMASTER
                         WHERE PIS_YY = ?
                           AND PIS_MM = ?
                           AND SAL_GBN ='0' ) B
                       WHERE A.ENO_NO= B.ENO_NO
                         AND A.LSEV_AMT <> B.LSEV_AMT
                       GROUP BY B.OCC_CD   ) E,
                     /*고정수당 변경자 금액 합계 */
                   ( SELECT B.OCC_CD, SUM(B.SGF_AMT) SGF_AMT
                         FROM
                           (SELECT OCC_CD, ENO_NO, SGF_AMT
                            FROM T_CP_PAYMASTER
                            WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                              AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                              AND SAL_GBN ='0' ) A,
                            (SELECT OCC_CD, ENO_NO, SGF_AMT
                            FROM T_CP_PAYMASTER
                            WHERE PIS_YY = ?
                              AND PIS_MM = ?
                              AND SAL_GBN ='0' ) B
                        WHERE A.ENO_NO= B.ENO_NO
                        AND A.SGF_AMT <> B.SGF_AMT
                        GROUP BY B.OCC_CD ) F,
                      /* 학자금 금액 합계 */
                   ( SELECT OCC_CD, SUM(AMOUNT) SCH_AMOUNT
                          FROM T_CP_CHANGE
                         WHERE PIS_YY = ?
                           AND PIS_MM = ?
                           AND SAL_GBN ='0'
                           AND SAL_CD ='EA'
                           AND AD_TAG = 'A'
                           AND ENO_NO IN (SELECT A.ENO_NO
                                          FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                  AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                  AND SAL_GBN ='0' ) A,
                                               (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = ?
                                                  AND PIS_MM = ?
                                                  AND SAL_GBN ='0' ) B
                                          WHERE A.ENO_NO= B.ENO_NO    )
                        GROUP BY OCC_CD ) G,
                    /* 소급금 금액 합계 */
                   ( SELECT OCC_CD, SUM(AMOUNT) SOGUB
                       FROM T_CP_CHANGE
                        WHERE PIS_YY = ?
                          AND PIS_MM = ?
                          AND SAL_GBN ='0'
                          AND SAL_CD IN ('41','42')
                          AND AD_TAG = 'A'
                          AND ENO_NO IN (SELECT A.ENO_NO
                                         FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                      LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                 FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                  AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                  AND SAL_GBN ='0' )A,
                                               (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                  FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = ?
                                                   AND PIS_MM = ?
                                                   AND SAL_GBN ='0')B
                                          WHERE A.ENO_NO= B.ENO_NO )
                       GROUP BY OCC_CD ) H,
                     /* 기타수당 금액 합계 */
                    (SELECT OCC_CD, SUM(AMOUNT) GITA
                        FROM T_CP_CHANGE
                       WHERE PIS_YY = ?
                         AND PIS_MM = ?
                         AND SAL_GBN ='0'
                         AND NVL(TRS_TAG,' ') <> 'F'
                         AND NVL(TRS_TAG,' ') <> 'P'
                         AND AD_TAG = 'A'
                         AND SAL_CD NOT IN ('41','42','EA')
                         AND ENO_NO IN (SELECT A.ENO_NO
                                          FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                  FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                   AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                   AND SAL_GBN ='0') A,
                                                (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                 FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = ?
                                                   AND PIS_MM = ?
                                                   AND SAL_GBN ='0') B
                                          WHERE A.ENO_NO= B.ENO_NO
                                            AND A.OTH_AMT <> B.OTH_AMT)
                      GROUP BY  OCC_CD ) I
             WHERE  A.OCC_CD = B.OCC_CD(+)
             AND    A.OCC_CD = C.OCC_CD(+)
             AND    A.OCC_CD = D.OCC_CD(+)
             AND    A.OCC_CD = E.OCC_CD(+)
             AND    A.OCC_CD = F.OCC_CD(+)
             AND    A.OCC_CD = G.OCC_CD(+)
             AND    A.OCC_CD = H.OCC_CD(+)
             AND    A.OCC_CD = I.OCC_CD(+)
             GROUP BY ROLLUP(A.OCC_CD)

             UNION

             ----------------------->>>>>차액<<<<< --------------------------------------------------------------------------------------------------------------

             SELECT '3' AS SEQ, '2' AS GUBUN ,'차액' AS OCC_CD , AA.AMT_SUM - BB.AMT_SUM AS AMT_SUM, AA.IN_SUM - BB.IN_SUM AS IN_SUM, AA.OUT_SUM - BB.OUT_SUM AS OUT_SUM,
                    AA.BAS_AMT - BB.BAS_AMT AS BAS_AMT, AA.LSEV_AMT - BB.LSEV_AMT AS LSEV_AMT, AA.SGF_AMT - BB.SGF_AMT AS SGF_AMT,
                    AA.SCH_AMOUNT - BB.SCH_AMOUNT AS SCH_AMOUNT, AA.SOGUB - BB.SOGUB AS SOGUB, AA.GITA - BB.GITA AS GITA, '' AS REMARK
             FROM ( SELECT '1' AS SEQ, GROUPING(A.OCC_CD) AS GUBUN, DECODE(GROUPING(A.OCC_CD),1,'합계',DECODE(A.OCC_CD,'A','사무직','택배직')) AS OCC_CD,
                            SUM(NVL(A.AMT_SUM,0)) AS AMT_SUM,
                            SUM(NVL(B.IN_SUM,0)) AS IN_SUM,
                            SUM(NVL(C.OUT_SUM,0)) AS OUT_SUM,
                            SUM(NVL(D.BAS_AMT,0)) AS BAS_AMT,
                            SUM(NVL(E.LSEV_AMT,0)) AS LSEV_AMT,
                            SUM(NVL(F.SGF_AMT,0)) AS SGF_AMT,
                            SUM(NVL(G.SCH_AMOUNT,0)) AS SCH_AMOUNT,
                            SUM(NVL(H.SOGUB,0)) AS SOGUB,
                            SUM(NVL(I.GITA,0)) AS GITA,
                            '' AS REMARK
                    /*현재달 금액 합계*/
                     FROM   ( SELECT OCC_CD,
                                  SUM(NVL(SALT_AMT,0)) AS AMT_SUM
                     FROM   T_CP_PAYMASTER
                     WHERE  PIS_YY = ?
                     AND    PIS_MM = ?
                     AND    SAL_GBN = '0'
                     GROUP BY OCC_CD ) A,
                     /*입사자 금액 합계*/
                   ( SELECT OCC_CD,0 AS IN_SUM
                     FROM T_CP_PAYMASTER
                     WHERE PIS_YY = ?
                     AND   PIS_MM = ?
                     AND   SAL_GBN ='0'
                     AND   ENO_NO NOT IN (SELECT ENO_NO FROM T_CP_PAYMASTER
                                           WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                           AND   PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                           AND   SAL_GBN ='0')
                                           GROUP BY OCC_CD ) B,
                     /*퇴사자 금액 합계*/
                   ( SELECT OCC_CD, SUM(SALT_AMT) AS OUT_SUM
                     FROM T_CP_PAYMASTER
                     WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                       AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                       AND SAL_GBN = '0'
                       AND  ENO_NO NOT IN (SELECT ENO_NO FROM T_CP_PAYMASTER
                                           WHERE PIS_YY = ?
                                           AND PIS_MM = ?
                                           AND SAL_GBN = '0')
                                           GROUP BY OCC_CD ) C,
                     /* 기본수당 금액 합계*/
                  (SELECT A.OCC_CD, SUM(A.BAS_AMT) BAS_AMT
                   FROM
                      (SELECT OCC_CD, ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+LAW_AMT+BNS_AMT BAS_AMT
                         FROM T_CP_PAYMASTER
                        WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                          AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                          AND SAL_GBN ='0'  ) A,
                      (SELECT OCC_CD, ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+LAW_AMT+BNS_AMT BAS_AMT
                         FROM T_CP_PAYMASTER
                        WHERE PIS_YY = ?
                          AND PIS_MM = ?
                          AND SAL_GBN ='0'  ) B
                        WHERE A.ENO_NO = B.ENO_NO
                          AND A.BAS_AMT <> B.BAS_AMT
                     GROUP BY A.OCC_CD)D,
                     /*근속수당 변경자 금액 합계*/
                    ( SELECT A.OCC_CD, SUM(A.LSEV_AMT) LSEV_AMT
                        FROM
                      (SELECT OCC_CD, ENO_NO, LSEV_AMT
                         FROM T_CP_PAYMASTER
                         WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                           AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                           AND SAL_GBN ='0' ) A,
                      (SELECT OCC_CD, ENO_NO, LSEV_AMT
                         FROM T_CP_PAYMASTER
                         WHERE PIS_YY = ?
                           AND PIS_MM = ?
                           AND SAL_GBN ='0' ) B
                       WHERE A.ENO_NO= B.ENO_NO
                         AND A.LSEV_AMT <> B.LSEV_AMT
                       GROUP BY A.OCC_CD   ) E,
                       /*고정수당 변경자 금액 합계 */
                       (SELECT A.OCC_CD, SUM(A.SGF_AMT) SGF_AMT
                        FROM
                           (SELECT OCC_CD, ENO_NO, SGF_AMT
                            FROM T_CP_PAYMASTER
                            WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                              AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                              AND SAL_GBN ='0' ) A,
                            (SELECT OCC_CD, ENO_NO, SGF_AMT
                            FROM T_CP_PAYMASTER
                            WHERE PIS_YY = ?
                              AND PIS_MM = ?
                              AND SAL_GBN ='0' ) B
                        WHERE A.ENO_NO= B.ENO_NO
                        AND A.SGF_AMT <> B.SGF_AMT
                        GROUP BY A.OCC_CD ) F,
                        /* 학자금 금액 합계 */
                      ( SELECT OCC_CD, SUM(AMOUNT) SCH_AMOUNT
                          FROM T_CP_CHANGE
                         WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                           AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                           AND SAL_GBN ='0'
                           AND SAL_CD ='EA'
                           AND AD_TAG = 'A'
                           AND ENO_NO IN (SELECT A.ENO_NO
                                          FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                  AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                  AND SAL_GBN ='0' ) A,
                                               (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = ?
                                                  AND PIS_MM = ?
                                                  AND SAL_GBN ='0' ) B
                                          WHERE A.ENO_NO= B.ENO_NO    )
                        GROUP BY OCC_CD ) G,
                         /* 소급금 금액 합계 */
                      ( SELECT OCC_CD, SUM(AMOUNT) SOGUB
                        FROM T_CP_CHANGE
                        WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                          AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                          AND SAL_GBN ='0'
                          AND SAL_CD IN ('41','42')
                          AND AD_TAG = 'A'
                          AND ENO_NO IN (SELECT A.ENO_NO
                                         FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                      LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                 FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                  AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                  AND SAL_GBN ='0' )A,
                                               (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                  FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = ?
                                                   AND PIS_MM = ?
                                                   AND SAL_GBN ='0')B
                                          WHERE A.ENO_NO= B.ENO_NO )
                       GROUP BY OCC_CD ) H,
                        /* 기타수당 금액 합계 */
                      (SELECT OCC_CD, SUM(AMOUNT) GITA
                        FROM T_CP_CHANGE
                       WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                         AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                         AND SAL_GBN ='0'
                         AND NVL(TRS_TAG,' ') <> 'F'
                         AND NVL(TRS_TAG,' ') <> 'P'
                         AND AD_TAG = 'A'
                         AND SAL_CD NOT IN ('41','42','EA')
                         AND ENO_NO IN (SELECT A.ENO_NO
                                          FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                  FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                   AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                   AND SAL_GBN ='0') A,
                                                (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                 FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = ?
                                                   AND PIS_MM = ?
                                                   AND SAL_GBN ='0') B
                                          WHERE A.ENO_NO= B.ENO_NO
                                            AND A.OTH_AMT <> B.OTH_AMT)
                      GROUP BY  OCC_CD ) I
             WHERE  A.OCC_CD = B.OCC_CD(+)
             AND    A.OCC_CD = C.OCC_CD(+)
             AND    A.OCC_CD = D.OCC_CD(+)
             AND    A.OCC_CD = E.OCC_CD(+)
             AND    A.OCC_CD = F.OCC_CD(+)
             AND    A.OCC_CD = G.OCC_CD(+)
             AND    A.OCC_CD = H.OCC_CD(+)
             AND    A.OCC_CD = I.OCC_CD(+)
             GROUP BY ROLLUP(A.OCC_CD)   )AA,

            ( SELECT '2' AS SEQ, GROUPING(A.OCC_CD) AS GUBUN, DECODE(GROUPING(A.OCC_CD),1,'합계',decode(A.OCC_CD,'A','사무직','택배직')) AS OCC_CD,
                   SUM(NVL(A.AMT_SUM,0)) AS AMT_SUM,
                   SUM(NVL(B.IN_SUM,0)) AS IN_SUM,
                   SUM(NVL(C.OUT_SUM,0)) AS OUT_SUM,
                   SUM(NVL(D.BAS_AMT,0)) AS BAS_AMT,
                   SUM(NVL(E.LSEV_AMT,0)) AS LSEV_AMT,
                   SUM(NVL(F.SGF_AMT,0)) AS SGF_AMT,
                   SUM(NVL(G.SCH_AMOUNT,0)) AS SCH_AMOUNT,
                   SUM(NVL(H.SOGUB,0)) AS SOGUB,
                   SUM(NVL(I.GITA,0)) AS GITA,
                   '' AS REMARK
                   /*현재달 금액 합계*/
            FROM   ( SELECT OCC_CD,
                            SUM(NVL(SALT_AMT,0)) AS AMT_SUM
                     FROM   T_CP_PAYMASTER
                     WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                     AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                     AND    SAL_GBN = '0'
                     GROUP BY OCC_CD ) A,
                     /*입사자 금액 합계*/
                   ( SELECT OCC_CD, SUM(SALT_AMT) AS IN_SUM
                     FROM T_CP_PAYMASTER
                     WHERE PIS_YY = ?
                     AND   PIS_MM = ?
                     AND   SAL_GBN ='0'
                     AND   ENO_NO NOT IN (SELECT ENO_NO FROM T_CP_PAYMASTER
                                           WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                           AND   PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                           AND   SAL_GBN ='0')
                                           GROUP BY OCC_CD ) B,
                     /*퇴사자 금액 합계*/
                   ( SELECT OCC_CD, 0 AS OUT_SUM
                     FROM T_CP_PAYMASTER
                     WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                       AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                       AND SAL_GBN = '0'
                       AND  ENO_NO NOT IN (SELECT ENO_NO FROM T_CP_PAYMASTER
                                           WHERE PIS_YY = ?
                                           AND PIS_MM = ?
                                           AND SAL_GBN = '0')
                                           GROUP BY OCC_CD ) C,
                     /* 기본수당 금액 합계*/
                  (SELECT B.OCC_CD, SUM(B.BAS_AMT) BAS_AMT
                   FROM
                      (SELECT OCC_CD, ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+LAW_AMT+BNS_AMT BAS_AMT
                         FROM T_CP_PAYMASTER
                        WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                          AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                          AND SAL_GBN ='0'  ) A,
                      (SELECT OCC_CD, ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+LAW_AMT+BNS_AMT BAS_AMT
                         FROM T_CP_PAYMASTER
                        WHERE PIS_YY = ?
                          AND PIS_MM = ?
                          AND SAL_GBN ='0'  ) B
                        WHERE A.ENO_NO = B.ENO_NO
                          AND A.BAS_AMT <> B.BAS_AMT
                     GROUP BY B.OCC_CD)D,
                     /*근속수당 변경자 금액 합계*/
                    ( SELECT B.OCC_CD, SUM(B.LSEV_AMT) LSEV_AMT
                        FROM
                      (SELECT OCC_CD, ENO_NO, LSEV_AMT
                         FROM T_CP_PAYMASTER
                         WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                           AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                           AND SAL_GBN ='0' ) A,
                      (SELECT OCC_CD, ENO_NO, LSEV_AMT
                         FROM T_CP_PAYMASTER
                         WHERE PIS_YY = ?
                           AND PIS_MM = ?
                           AND SAL_GBN ='0' ) B
                       WHERE A.ENO_NO= B.ENO_NO
                         AND A.LSEV_AMT <> B.LSEV_AMT
                       GROUP BY B.OCC_CD   ) E,
                       /*고정수당 변경자 금액 합계 */
                       (SELECT B.OCC_CD, SUM(B.SGF_AMT) SGF_AMT
                        FROM
                           (SELECT OCC_CD, ENO_NO, SGF_AMT
                            FROM T_CP_PAYMASTER
                            WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                              AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                              AND SAL_GBN ='0' ) A,
                            (SELECT OCC_CD, ENO_NO, SGF_AMT
                            FROM T_CP_PAYMASTER
                            WHERE PIS_YY = ?
                              AND PIS_MM = ?
                              AND SAL_GBN ='0' ) B
                        WHERE A.ENO_NO= B.ENO_NO
                        AND A.SGF_AMT <> B.SGF_AMT
                        GROUP BY B.OCC_CD ) F,
                        /* 학자금 금액 합계 */
                      ( SELECT OCC_CD, SUM(AMOUNT) SCH_AMOUNT
                          FROM T_CP_CHANGE
                         WHERE PIS_YY = ?
                           AND PIS_MM = ?
                           AND SAL_GBN ='0'
                           AND SAL_CD ='EA'
                           AND AD_TAG = 'A'
                           AND ENO_NO IN (SELECT A.ENO_NO
                                          FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                  AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                  AND SAL_GBN ='0' ) A,
                                               (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = ?
                                                  AND PIS_MM = ?
                                                  AND SAL_GBN ='0' ) B
                                          WHERE A.ENO_NO= B.ENO_NO    )
                        GROUP BY OCC_CD ) G,
                         /* 소급금 금액 합계 */
                      ( SELECT OCC_CD, SUM(AMOUNT) SOGUB
                        FROM T_CP_CHANGE
                        WHERE PIS_YY = ?
                          AND PIS_MM = ?
                          AND SAL_GBN ='0'
                          AND SAL_CD IN ('41','42')
                          AND AD_TAG = 'A'
                          AND ENO_NO IN (SELECT A.ENO_NO
                                         FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                      LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                 FROM T_CP_PAYMASTER
                                                WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                  AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                  AND SAL_GBN ='0' )A,
                                               (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                  FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = ?
                                                   AND PIS_MM = ?
                                                   AND SAL_GBN ='0')B
                                          WHERE A.ENO_NO= B.ENO_NO )
                       GROUP BY OCC_CD ) H,
                        /* 기타수당 금액 합계 */
                      (SELECT OCC_CD, SUM(AMOUNT) GITA
                        FROM T_CP_CHANGE
                       WHERE PIS_YY = ?
                         AND PIS_MM = ?
                         AND SAL_GBN ='0'
                         AND NVL(TRS_TAG,' ') <> 'F'
                         AND NVL(TRS_TAG,' ') <> 'P'
                         AND AD_TAG = 'A'
                         AND SAL_CD NOT IN ('41','42','EA')
                         AND ENO_NO IN (SELECT A.ENO_NO
                                          FROM (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                  FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),1,4)
                                                   AND PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?,'YYYYMMDD') ,-1),'YYYYMMDD'),5,2)
                                                   AND SAL_GBN ='0') A,
                                                (SELECT ENO_NO, SALT_AMT, BAS_AMT+DUTY_AMT+OT_AMT+WEL_AMT+OSE_AMT+RUN_AMT+MH_AMT BAS_AMT,
                                                       LSEV_AMT, TB3_AMT, SGF_AMT, OTH_AMT
                                                 FROM T_CP_PAYMASTER
                                                 WHERE PIS_YY = ?
                                                   AND PIS_MM = ?
                                                   AND SAL_GBN ='0') B
                                          WHERE A.ENO_NO= B.ENO_NO
                                            AND A.OTH_AMT <> B.OTH_AMT)
                      GROUP BY  OCC_CD ) I
             WHERE  A.OCC_CD = B.OCC_CD(+)
             AND    A.OCC_CD = C.OCC_CD(+)
             AND    A.OCC_CD = D.OCC_CD(+)
             AND    A.OCC_CD = E.OCC_CD(+)
             AND    A.OCC_CD = F.OCC_CD(+)
             AND    A.OCC_CD = G.OCC_CD(+)
             AND    A.OCC_CD = H.OCC_CD(+)
             AND    A.OCC_CD = I.OCC_CD(+)
             GROUP BY ROLLUP(A.OCC_CD)   ) BB

             WHERE AA.GUBUN ='1'  AND BB.GUBUN='1'

            ]]>
        </query>
    </sql>



   <!-- 급여지급내역 인쇄 -->
    <sql name="SAGA100_PRN">
        <description>급여지급내역 인쇄</description>
        <query>
            <![CDATA[
            WITH ENO_PAYMASTER AS
                   (SELECT ENO_NO,
                           OCC_CD,
                           PIS_YY,
                           PIS_MM,
                           SALT_AMT,
                           LUN_AMT,
                           LSEV_AMT,
                           WEL_POINT,
                           SCH_AMT,
                           HOL_AMT,
                           NIGHT_AMT,
                           SPECIAL_AMT
                      FROM T_CP_PAYMASTER
                     WHERE SEQ     = '1'
                       AND SAL_GBN = '0'
                       AND PIS_YY||PIS_MM BETWEEN TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-2),'YYYYMM') AND SUBSTR(?,1,6)
                    ),
                 ENO_PERSON AS
                   (SELECT ENO_NO,
                           ENO_NM,
                           JOB_CD,
                           SF_GET_COMMNAME(GUBUN, 'A2', JOB_CD) AS JOB_NM,
                           DPT_CD,
                           SF_GET_DPTNAME('01',  'A4', DPT_CD) AS DPT_NM,
                           HIR_YMD,
                           RET_YMD
                      FROM T_CM_PERSON
                     WHERE TO_CHAR(HIR_YMD,'YYYYMM') <= SUBSTR(?,1,6)
                       AND (RET_YMD is NULL OR TO_CHAR(RET_YMD,'YYYYMM') >= TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-2),'YYYYMM'))
                    ),
                 ENO_LIST AS
                   (SELECT A.ENO_NO
                      FROM ENO_PAYMASTER  A,
                           ENO_PERSON     B
                     WHERE A.ENO_NO  = B.ENO_NO
                       AND A.PIS_YY  = SUBSTR(?,1,4)
                       AND A.PIS_MM  = SUBSTR(?,5,2)
                       AND (A.ENO_NO  NOT IN (SELECT ENO_NO
                                                FROM ENO_PAYMASTER
                                               WHERE PIS_YY  = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYY')
                                                 AND PIS_MM  = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'MM')
                                              )
                              OR A.ENO_NO IN (SELECT ENO_NO
                                                FROM ENO_PERSON
                                               WHERE TO_CHAR(HIR_YMD,'YYYYMMDD') > TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMM')||'01'
                                                 AND ENO_NO IN (SELECT ENO_NO
                                                                  FROM ENO_PAYMASTER
                                                                 WHERE PIS_YY = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYY')
                                                                   AND PIS_MM = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'MM')
                                                                 )
                                              )
                              OR A.ENO_NO IN (SELECT ENO_NO
                                                FROM ENO_PERSON
                                               WHERE TO_CHAR(HIR_YMD,'YYYYMM') = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-2),'YYYYMM')
                                                 AND ENO_NO NOT IN (SELECT ENO_NO
                                                                      FROM ENO_PAYMASTER
                                                                     WHERE PIS_YY = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-2),'YYYY')
                                                                       AND PIS_MM = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-2),'MM')
                                                                    )
                                              )
                            )
                       AND A.ENO_NO   NOT IN (SELECT ENO_NO
                                                FROM T_CM_AHISTORY AA
                                               WHERE ( END_YMD IS NULL OR LENGTH(END_YMD) <> 8 OR END_YMD >= ? )
                                                 AND APP_CD  = 'LN1'
                                                 AND STR_YMD = (SELECT MAX(STR_YMD)
                                                                  FROM T_CM_AHISTORY
                                                                 WHERE ENO_NO   = AA.ENO_NO
                                                                   AND STR_YMD <= ?
                                                                   AND APP_CD   = 'LN1'
                                                                )
                                              )
                    UNION
                    SELECT A.ENO_NO
                      FROM ENO_PAYMASTER  A,
                           ENO_PERSON     B
                     WHERE A.ENO_NO   = B.ENO_NO
                       AND A.PIS_YY   = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYY')
                       AND A.PIS_MM   = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'MM')
                       AND (A.ENO_NO NOT IN (SELECT ENO_NO
                                               FROM ENO_PAYMASTER
                                              WHERE PIS_YY = SUBSTR(?,1,4)
                                                AND PIS_MM = SUBSTR(?,5,2)
                                             )
                                      OR (TO_CHAR(B.RET_YMD,'YYYYMMDD') >= ? AND B.RET_YMD < LAST_DAY(TO_DATE(?)))
                           )
                       AND A.ENO_NO NOT IN (SELECT ENO_NO
                                              FROM T_CM_AHISTORY AA
                                             WHERE (END_YMD IS NULL OR LENGTH(END_YMD) <> 8 OR END_YMD >= ? )
                                               AND APP_CD  = 'LN1'
                                               AND STR_YMD = (SELECT MAX(STR_YMD)
                                                                FROM T_CM_AHISTORY
                                                               WHERE ENO_NO   = AA.ENO_NO
                                                                 AND STR_YMD <= ?
                                                                 AND APP_CD   = 'LN1')
                                            )
                    )
            SELECT SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM, A.OCC_CD,
            	   NVL(A.CNT,0) AS CNT,         NVL(A.AMT_SUM,0)     AS AMT_SUM,
                   NVL(A.LUN_SUM,0)       AS LUN_SUM,     NVL(A.SUM_SAL,0)     AS SUM_SAL,
                   NVL(B.CNT,0)           AS PRE_CNT,     NVL(B.AMT_SUM,0)     AS PRE_AMT_SUM,
                   NVL(B.LUN_SUM,0)       AS PRE_LUN_SUM, NVL(B.SUM_SAL,0)     AS PRE_SUM_SAL,
                   NVL(C.IN_CNT,0)        AS IN_CNT,      NVL(C.IN_SUM,0)      AS IN_SUM,
                   NVL(D.OUT_CNT,0)       AS OUT_CNT,     NVL(D.OUT_SUM,0)*-1  AS OUT_SUM,
                   NVL(E.LSEV_CNT,0)      AS LSEV_CNT,    NVL(E.LSEV_SUM,0)    AS LSEV_SUM,
                   NVL(F.WEL_CNT,0)       AS WEL_CNT,     NVL(F.WEL_SUM,0)     AS WEL_SUM,
                   NVL(G.SCH_CNT,0)       AS SCH_CNT,     NVL(G.SCH_SUM,0)     AS SCH_SUM,
                   NVL(H.HOL_CNT,0)       AS HOL_CNT,     NVL(H.HOL_SUM,0)     AS HOL_SUM,
                   NVL(I.NIGHT_CNT,0)     AS NIGHT_CNT,   NVL(I.NIGHT_SUM,0)   AS NIGHT_SUM,
                   NVL(J.SPECIAL_CNT,0)   AS SPECIAL_CNT, NVL(J.SPECIAL_SUM,0) AS SPECIAL_SUM,
                   NVL(K.ETC_CNT,0)       AS ETC_CNT,     NVL(K.ETC_SUM,0)     AS ETC_SUM,
                   NVL(C.IN_CNT,0)  +NVL(D.OUT_CNT,0)  +NVL(E.LSEV_CNT,0)   +NVL(F.WEL_CNT,0)+NVL(G.SCH_CNT,0)
                  +NVL(H.HOL_CNT,0) +NVL(I.NIGHT_CNT,0)+NVL(J.SPECIAL_CNT,0)+NVL(K.ETC_CNT,0)  AS TOT_CNT,
                   NVL(C.IN_SUM,0)  +NVL(D.OUT_SUM,0)  +NVL(E.LSEV_SUM,0)   +NVL(F.WEL_SUM,0)+NVL(G.SCH_SUM,0)
                  +NVL(H.HOL_SUM,0) +NVL(I.NIGHT_SUM,0)+NVL(J.SPECIAL_SUM,0)+NVL(K.ETC_SUM,0)  AS TOT_SUM,
                   '' AS REMARK
                   /*현재달 인원 및 금액 합계*/
            FROM   ( SELECT OCC_CD, COUNT(ENO_NO) AS CNT,
                            SUM(NVL(SALT_AMT,0)) AS AMT_SUM, SUM(NVL(LUN_AMT,0)) AS LUN_SUM,
                            SUM(NVL(SALT_AMT,0))-SUM(NVL(LUN_AMT,0)) AS SUM_SAL
                     FROM   ENO_PAYMASTER
                     WHERE  PIS_YY = SUBSTR(?,1,4)
                     AND    PIS_MM = SUBSTR(?,5,2)
                     GROUP BY OCC_CD ) A,
                     /*지난달 인원 및 금액 합계*/
                   ( SELECT OCC_CD, COUNT(ENO_NO) AS CNT,
                            SUM(NVL(SALT_AMT,0)) AS AMT_SUM, SUM(NVL(LUN_AMT,0)) AS LUN_SUM,
                            SUM(NVL(SALT_AMT,0))-SUM(NVL(LUN_AMT,0)) AS SUM_SAL
                     FROM   ENO_PAYMASTER
                     WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),1,4)
                     AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),5,2)
                     GROUP BY OCC_CD ) B,
                     /*입사자 인원 및 금액 합계*/
                   ( SELECT A.OCC_CD, COUNT(*) AS IN_CNT,
                            SUM(NVL(A.SALT_AMT,0))-SUM(NVL(C.SALT_AMT,0)) AS IN_SUM
                      FROM ENO_PAYMASTER  A,
                           ENO_PERSON     B,
                           (SELECT PIS_YY,
                                   PIS_MM,
                                   ENO_NO,
                                   SALT_AMT
                              FROM ENO_PAYMASTER
                             WHERE PIS_YY  = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYY')
                               AND PIS_MM  = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'MM')
                            )            C
                     WHERE A.ENO_NO  = B.ENO_NO
                       AND A.ENO_NO  = C.ENO_NO(+)
                       AND A.PIS_YY  = SUBSTR(?,1,4)
                       AND A.PIS_MM  = SUBSTR(?,5,2)
                       AND (A.ENO_NO  NOT IN (SELECT ENO_NO
                                                FROM ENO_PAYMASTER
                                               WHERE PIS_YY  = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYY')
                                                 AND PIS_MM  = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'MM')
                                              )
                              OR A.ENO_NO IN (SELECT ENO_NO
                                                FROM ENO_PERSON
                                               WHERE TO_CHAR(HIR_YMD,'YYYYMMDD') > TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMM')||'01'
                                                 AND ENO_NO IN (SELECT ENO_NO
                                                                  FROM ENO_PAYMASTER
                                                                 WHERE PIS_YY = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYY')
                                                                   AND PIS_MM = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'MM')
                                                                 )
                                              )
                              OR A.ENO_NO IN (SELECT ENO_NO
                                                FROM ENO_PERSON
                                               WHERE TO_CHAR(HIR_YMD,'YYYYMM') = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-2),'YYYYMM')
                                                 AND ENO_NO NOT IN (SELECT ENO_NO
                                                                      FROM ENO_PAYMASTER
                                                                     WHERE PIS_YY = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-2),'YYYY')
                                                                       AND PIS_MM = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-2),'MM')
                                                                    )
                                              )
                            )
                       AND A.ENO_NO   NOT IN (SELECT ENO_NO
                                                FROM T_CM_AHISTORY AA
                                               WHERE ( END_YMD IS NULL OR LENGTH(END_YMD) <> 8 OR END_YMD >= ? )
                                                 AND APP_CD  = 'LN1'
                                                 AND STR_YMD = (SELECT MAX(STR_YMD)
                                                                  FROM T_CM_AHISTORY
                                                                 WHERE ENO_NO   = AA.ENO_NO
                                                                   AND STR_YMD <= ?
                                                                   AND APP_CD   = 'LN1'
                                                                )
                                              )
                     GROUP BY A.OCC_CD
                    )                 C,
                     /*퇴사자 인원 및 금액 합계*/
                   (SELECT A.OCC_CD, COUNT(*) AS OUT_CNT,
                           SUM(NVL(A.SALT_AMT,0))-SUM(NVL(C.SALT_AMT,0)) AS OUT_SUM
                      FROM ENO_PAYMASTER A,
                           ENO_PERSON    B,
                           (SELECT PIS_YY,
                                   PIS_MM,
                                   ENO_NO,
                                   SALT_AMT
                              FROM ENO_PAYMASTER
                             WHERE PIS_YY  = SUBSTR(?,1,4)
                               AND PIS_MM  = SUBSTR(?,5,2)
                            )            C
                     WHERE A.ENO_NO   = B.ENO_NO
                       AND A.ENO_NO   = C.ENO_NO(+)
                       AND A.PIS_YY   = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYY')
                       AND A.PIS_MM   = TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'MM')
                       AND (A.ENO_NO NOT IN (SELECT ENO_NO
                                               FROM ENO_PAYMASTER
                                              WHERE PIS_YY = SUBSTR(?,1,4)
                                                AND PIS_MM = SUBSTR(?,5,2)
                                             )
                           OR (B.RET_YMD >= ? AND B.RET_YMD < LAST_DAY(TO_DATE(?,'YYYYMMDD')) )
                           )
                       AND A.ENO_NO NOT IN (SELECT ENO_NO
                                              FROM T_CM_AHISTORY AA
                                             WHERE (END_YMD IS NULL OR LENGTH(END_YMD) <> 8 OR END_YMD >= ? )
                                               AND APP_CD  = 'LN1'
                                               AND STR_YMD = (SELECT MAX(STR_YMD)
                                                                FROM T_CM_AHISTORY
                                                               WHERE ENO_NO   = AA.ENO_NO
                                                                 AND STR_YMD <= ?
                                                                 AND APP_CD   = 'LN1')
                                            )
                     GROUP BY A.OCC_CD
                    ) D,
                     /*근속수당 변경자 인원 및 금액 합계*/
                   ( SELECT A.OCC_CD, COUNT(*) AS LSEV_CNT,
                            SUM(B.LSEV_AMT - A.LSEV_AMT) AS LSEV_SUM
                     FROM   ( SELECT OCC_CD, ENO_NO, NVL(LSEV_AMT,0) AS LSEV_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),1,4)
                              AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),5,2)
                             )       A,
                            ( SELECT OCC_CD, ENO_NO, NVL(LSEV_AMT,0) AS LSEV_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(?,1,4)
                              AND    PIS_MM = SUBSTR(?,5,2)
                             )       B
                     WHERE  A.ENO_NO = B.ENO_NO
                     AND    A.ENO_NO NOT IN ( SELECT ENO_NO FROM ENO_LIST)
                     AND    A.LSEV_AMT <> B.LSEV_AMT
                     GROUP BY  A.OCC_CD ) E,
                     /*복지포인트 변경자 인원 및 금액 합계*/
                   ( SELECT A.OCC_CD, COUNT(*) AS WEL_CNT,
                            SUM(B.WEL_POINT - A.WEL_POINT) AS WEL_SUM
                     FROM   ( SELECT OCC_CD, ENO_NO, NVL(WEL_POINT,0) AS WEL_POINT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),1,4)
                              AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),5,2)
                             )       A,
                            ( SELECT OCC_CD, ENO_NO, NVL(WEL_POINT,0) AS WEL_POINT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(?,1,4)
                              AND    PIS_MM = SUBSTR(?,5,2)
                             )       B
                     WHERE  A.ENO_NO = B.ENO_NO
                     AND    A.ENO_NO NOT IN ( SELECT ENO_NO FROM ENO_LIST)
                     AND    A.WEL_POINT <> B.WEL_POINT
                     GROUP BY  A.OCC_CD ) F,
                     /*학자금 변경자 인원 및 금액 합계*/
                   ( SELECT A.OCC_CD, COUNT(*) AS SCH_CNT,
                            SUM(B.SCH_AMT - A.SCH_AMT) AS SCH_SUM
                     FROM   ( SELECT OCC_CD, ENO_NO, NVL(SCH_AMT,0) AS SCH_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),1,4)
                              AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),5,2)
                             )       A,
                            ( SELECT OCC_CD, ENO_NO, NVL(SCH_AMT,0) AS SCH_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(?,1,4)
                              AND    PIS_MM = SUBSTR(?,5,2)
                             )       B
                     WHERE  A.ENO_NO = B.ENO_NO
                     AND    A.ENO_NO NOT IN ( SELECT ENO_NO FROM ENO_LIST)
                     AND    A.SCH_AMT <> B.SCH_AMT
                     GROUP BY  A.OCC_CD ) G,
                     /*휴일근무수당 변경자 인원 및 금액 합계*/
                   ( SELECT A.OCC_CD, COUNT(*) AS HOL_CNT,
                            SUM(B.HOL_AMT - A.HOL_AMT) AS HOL_SUM
                     FROM   ( SELECT OCC_CD, ENO_NO, NVL(HOL_AMT,0) AS HOL_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),1,4)
                              AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),5,2)
                             )       A,
                            ( SELECT OCC_CD, ENO_NO, NVL(HOL_AMT,0) AS HOL_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(?,1,4)
                              AND    PIS_MM = SUBSTR(?,5,2)
                             )       B
                     WHERE  A.ENO_NO = B.ENO_NO
                     AND    A.ENO_NO NOT IN ( SELECT ENO_NO FROM ENO_LIST)
                     AND    A.HOL_AMT <> B.HOL_AMT
                     GROUP BY  A.OCC_CD ) H,
                     /*철야당직수당 변경자 인원 및 금액 합계*/
                   ( SELECT A.OCC_CD, COUNT(*) AS NIGHT_CNT,
                            SUM(B.NIGHT_AMT - A.NIGHT_AMT) AS NIGHT_SUM
                     FROM   ( SELECT OCC_CD, ENO_NO, NVL(NIGHT_AMT,0) AS NIGHT_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),1,4)
                              AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),5,2)
                             )       A,
                            ( SELECT OCC_CD, ENO_NO, NVL(NIGHT_AMT,0) AS NIGHT_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(?,1,4)
                              AND    PIS_MM = SUBSTR(?,5,2)
                             )       B
                     WHERE  A.ENO_NO = B.ENO_NO
                     AND    A.ENO_NO NOT IN ( SELECT ENO_NO FROM ENO_LIST)
                     AND    A.NIGHT_AMT <> B.NIGHT_AMT
                     GROUP BY  A.OCC_CD ) I,
                     /*중추절배송수당 변경자 인원 및 금액 합계*/
                   ( SELECT A.OCC_CD, COUNT(*) AS SPECIAL_CNT,
                            SUM(B.SPECIAL_AMT - A.SPECIAL_AMT) AS SPECIAL_SUM
                     FROM   ( SELECT OCC_CD, ENO_NO, NVL(SPECIAL_AMT,0) AS SPECIAL_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),1,4)
                              AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),5,2)
                             ) A,
                            ( SELECT OCC_CD, ENO_NO, NVL(SPECIAL_AMT,0) AS SPECIAL_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(?,1,4)
                              AND    PIS_MM = SUBSTR(?,5,2)
                             ) B
                     WHERE  A.ENO_NO = B.ENO_NO
                     AND    A.ENO_NO NOT IN ( SELECT ENO_NO FROM ENO_LIST)
                     AND    A.SPECIAL_AMT <> B.SPECIAL_AMT
                     GROUP BY  A.OCC_CD ) J,
                     /*기타수당 변경자 인원 및 금액 합계*/
                   ( SELECT A.OCC_CD, COUNT(*) AS ETC_CNT,
                            SUM(B.ETC_AMT - A.ETC_AMT) AS ETC_SUM
                     FROM   ( SELECT OCC_CD, ENO_NO,
                                     SALT_AMT-(NVL(LSEV_AMT,0)+NVL(WEL_POINT,0)+NVL(SCH_AMT,0)
                                     +NVL(HOL_AMT,0)+NVL(NIGHT_AMT,0)+NVL(SPECIAL_AMT,0)) AS ETC_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),1,4)
                              AND    PIS_MM = SUBSTR(TO_CHAR(ADD_MONTHS(TO_DATE(?) ,-1),'YYYYMMDD'),5,2)
                             )       A,
                            ( SELECT OCC_CD, ENO_NO,
                                     SALT_AMT-(NVL(LSEV_AMT,0)+NVL(WEL_POINT,0)+NVL(SCH_AMT,0)
                                     +NVL(HOL_AMT,0)+NVL(NIGHT_AMT,0)+NVL(SPECIAL_AMT,0)) AS ETC_AMT
                              FROM   ENO_PAYMASTER
                              WHERE  PIS_YY = SUBSTR(?,1,4)
                              AND    PIS_MM = SUBSTR(?,5,2)
                             )       B
                     WHERE  A.ENO_NO = B.ENO_NO
                     AND    A.ENO_NO NOT IN ( SELECT ENO_NO FROM ENO_LIST)
                     AND    A.ETC_AMT <> B.ETC_AMT
                     GROUP BY  A.OCC_CD ) K
            WHERE  A.OCC_CD = B.OCC_CD
            AND    A.OCC_CD = C.OCC_CD(+)
            AND    A.OCC_CD = D.OCC_CD(+)
            AND    A.OCC_CD = E.OCC_CD(+)
            AND    A.OCC_CD = F.OCC_CD(+)
            AND    A.OCC_CD = G.OCC_CD(+)
            AND    A.OCC_CD = H.OCC_CD(+)
            AND    A.OCC_CD = I.OCC_CD(+)
            AND    A.OCC_CD = J.OCC_CD(+)
            AND    A.OCC_CD = K.OCC_CD(+)
			ORDER BY A.OCC_CD
            ]]>
        </query>
    </sql>




<!--
***********************************************************************
* @UseCase     : SAGA110
* @description : 급여총괄상세내역서
***********************************************************************
* 2007/03/28     오대성        최초작성.
***********************************************************************
-->
    <!-- 급여총괄상세내역서 조회 -->
    <sql name="SAGA110_SHR">
        <description>급여총괄상세내역서 조회</description>
        <query>
            <![CDATA[
            [1]
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGA200
* @description : 개인별 급여총괄상세내역서(대사용)
***********************************************************************
* 2007/03/28     임세환        최초작성.
***********************************************************************
-->

<!-- 급여테이블 조회 -->
    <sql name="SAGA200_SHR">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD              ,A.JOB_CD              ,A.HOB_CD              ,A.ENO_NO
              ,ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
              ,ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM
              ,B.GBN_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'B7', B.GBN_CD) AS GBN_NM
              ,ASNHR.SF_GET_ENONAME('01',  A.ENO_NO) AS ENO_NM
              ,A.SOU_CNT              ,A.DFM_CNT              ,A.TRB_CNT              ,A.GOL_CNT
              ,A.WCT_CNT              ,A.CHI_CNT              ,A.LSEV_YY              ,A.HIU_NO
              ,A.HIU_TAG              ,A.HIU_GRA              ,A.NPN_TAG              ,A.NPN_GRD
              ,A.BONP_BAS              ,A.BAS_PCT              ,A.TRD_PCT              ,A.ATTD_PCT
              ,A.PAY_PCT              ,A.PUD_PCT              ,A.DOMW_DD              ,A.OUTW_DD
              ,A.OTHW_CNT              ,A.TOTW_DD              ,A.BAS_AMT              ,A.DUTY_AMT
              ,A.OT_AMT              ,A.WEL_AMT              ,A.OSE_AMT              ,A.RUN_AMT
              ,A.MH_AMT              ,A.LSEV_AMT              ,A.TB3_AMT
              ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                          AND Z.PIS_YY = A.PIS_YY
                                          AND Z.AD_TAG = 'A'
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.SAL_CD = '06') AS ETC_AMT_06            --출납수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '01') AS ETC_AMT_11        --자기계발비
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '03') AS ETC_AMT_12        --남북경협
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'BA') AS ETC_AMT_13        --특수지수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '08') AS ETC_AMT_17        --운전수당
                          ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '09') AS ETC_AMT_18        --연장수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '10') AS ETC_AMT_19        --사장단수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '11') AS ETC_AMT_20        --자격수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'HY') AS ETC_AMT_HY        --현장직책수당

                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '12') AS ETC_AMT_012        --계약직북측근무수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '13') AS ETC_AMT_013        --계약직현장수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '14') AS ETC_AMT_014       --계약직성과급

                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '45') AS ETC_AMT_23        --전월소급
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '17') AS ETC_AMT_117        --승선수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'BD') AS ETC_AMT_BD       --휴일근무수당

                          ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_GBN = '0'
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD NOT IN ( '01','02','03','04','06','07','08','09','10','11','12','13','14','17','45','BD','BA','EA','HY') ) AS ETC_AMT_BA         -- 상기외 기타지불 계
                    ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'D'
                                      AND Z.SAL_CD = 'SA') AS ETC_AMT_SA                        --동호회비공제
                    ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'EA') AS ETC_AMT_ZP                        --교육비공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A1') AS ETC_AMT_A1                        -- 정산 건강보험
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A2') AS ETC_AMT_A2                        -- 정산 고용보험
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A3') AS ETC_AMT_A3                        --연말정산 소득세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A4') AS ETC_AMT_A4                        --연말정산 주민세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A6') AS ETC_AMT_A6                        -- 연말정산 농특세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AF') AS ETC_AMT_AF                       --2013년1월유보금액
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AG') AS ETC_AMT_AG                        --자사주잔액
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'Y1') AS ETC_AMT_Y1D                       --포상 공제

                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'PZ') AS ETC_AMT_PZ                       --2014년1월부터 급여유보

                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AE') AS ETC_AMT_21                        --오세븐 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'J'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'JN') AS ETC_AMT_JN                        --연말정산 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND (Z.AD_TAG = 'D' OR Z.AD_TAG = 'J')
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD NOT IN ( 'SA','EA','A1','A2','A3','A4','A6','Y1','AS','JN','21','JQ','06','22','AE','AG','AF','PZ'))  AS ETC_AMT_ETC     --상기외 기타공제 계
              ,A.SALT_AMT-A.DDTT_AMT AS CH_AMT
              ,A.SGF_AMT
              ,A.OTH_AMT
              ,A.SALT_AMT              ,A.DOMT_AMT              ,A.OUTT_AMT              ,A.PAYD_AMT
              ,A.PAYO_AMT              ,A.YCT_CNT              ,A.SMPY_TOT              ,A.T_INCOME
              ,A.BONA_TAX              ,A.SMSI_TAX              ,A.AVTA_SAL              ,A.ITDD_AMT
              ,A.BSDD_AMT              ,A.SPSB_AMT              ,A.GDED_AMT              ,A.TBL_DED
              ,A.GOL_AMT              ,A.WDD_AMT              ,A.SMD_AMT              ,A.HIND_AMT
              ,A.ICOM_DED              ,NVL(A.PYSD_AMT,0) PYSD_AMT              ,A.SIM_TAX              ,A.ITXD_AMT
              ,A.STAX_DED              ,A.TAX_DED              ,A.INCM_TAX              ,A.CITI_TAX
              ,A.HINU_AMT              ,A.MAPP_AMT              ,A.NPEN_AMT              ,A.NPLE_AMT
              ,A.HINS_AMT              ,A.PPEN_AMT              ,A.SAV_AMT              ,A.APP_AMT
              ,A.INV_AMT              ,A.LON_RPY              ,A.LON_INT              ,A.DHLP_AMT
              ,A.WOM_AMT              ,A.LAB_AMT              ,A.TB3D_AMT              ,A.SGFD_AMT
              ,A.ADV_AMT              ,A.OTHD_AMT              ,A.DDTT_AMT              ,A.PAY_AMT
              ,A.ABA_CD               ,ASNHR.SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM
              ,A.REC_NAM              ,A.RMIT_CMM              ,A.PPED_AMT
              ,A.DRE_INTX              ,A.DRE_CTTX              ,A.CONT_AMT              ,A.LON_RPY2
              ,A.LON_INT2              ,A.FREE_TAX              ,A.GOG_PCT              ,A.SCH_AMT
              ,A.SEA_FREE              ,A.INC_PCT              ,A.GOL_CNT65              ,A.GOL_CNT70
              ,A.WEL_POINT              ,A.HOL_AMT              ,A.NIGHT_AMT              ,A.SPECIAL_AMT
              ,A.LUN_AMT              ,A.PRI_AMT              ,A.TAX_DPT
              ,ASNHR.SF_GET_COMMNAME('01', 'AD', A.TAX_DPT) as TAX_DPT2              ,A.DRE_DFTX              ,A.OLD_AMT              ,A.RET_TAG
              ,A.LAW_AMT              ,A.BNS_AMT              ,A.ETC_AMT              ,A.ETC_AMT2		,A.ETC_AMT3				,A.ETC_AMT4
              ,A.OTH_AMT2
              ,ASNHR.SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
              ,NVL(BAS_AMT,0) + NVL(DUTY_AMT, 0) + NVL(BNS_AMT,0) +NVL(LAW_AMT,0)  AS TOTAL_AMT
              ,PIS_YY || '-' || PIS_MM AS PIS_YYMM
              ,B.CET_NO
            FROM  ASNHR.T_CP_PAYMASTER  A,
                  ASNHR.T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.PIS_YY= ?
              AND A.PIS_MM LIKE '%'||SUBSTR(?, 5, 2)||'%'
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.OCC_CD in ('0','1','2','3','8','9')
         ORDER BY A.JOB_CD, A.ENO_NO,PIS_YYMM
            ]]>
        </query>
    </sql>


<!-- 급여테이블 조회 -->
    <sql name="SAGA200_SHR_ALL">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD              ,A.JOB_CD              ,A.HOB_CD              ,A.ENO_NO
              ,ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
              ,ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM
              ,B.GBN_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'B7', B.GBN_CD) AS GBN_NM
              ,ASNHR.SF_GET_ENONAME('01',  A.ENO_NO) AS ENO_NM
              ,A.SOU_CNT              ,A.DFM_CNT              ,A.TRB_CNT              ,A.GOL_CNT
              ,A.WCT_CNT              ,A.CHI_CNT              ,A.LSEV_YY              ,A.HIU_NO
              ,A.HIU_TAG              ,A.HIU_GRA              ,A.NPN_TAG              ,A.NPN_GRD
              ,A.BONP_BAS              ,A.BAS_PCT              ,A.TRD_PCT              ,A.ATTD_PCT
              ,A.PAY_PCT              ,A.PUD_PCT              ,A.DOMW_DD              ,A.OUTW_DD
              ,A.OTHW_CNT              ,A.TOTW_DD              ,A.BAS_AMT              ,A.DUTY_AMT
              ,A.OT_AMT              ,A.WEL_AMT              ,A.OSE_AMT              ,A.RUN_AMT
              ,A.MH_AMT              ,A.LSEV_AMT              ,A.TB3_AMT
              ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                          AND Z.PIS_YY = A.PIS_YY
                                          AND Z.AD_TAG = 'A'
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.SAL_CD = '06') AS ETC_AMT_06            --출납수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '01') AS ETC_AMT_11        --자기계발비
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '03') AS ETC_AMT_12        --남북경협
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'BA') AS ETC_AMT_13        --특수지수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '08') AS ETC_AMT_17        --운전수당
                          ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '09') AS ETC_AMT_18        --연장수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '10') AS ETC_AMT_19        --사장단수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '11') AS ETC_AMT_20        --자격수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'HY') AS ETC_AMT_HY        --현장직책수당

                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '12') AS ETC_AMT_012        --계약직북측근무수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '13') AS ETC_AMT_013        --계약직현장수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '14') AS ETC_AMT_014       --계약직성과급

                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '45') AS ETC_AMT_23        --전월소급
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '17') AS ETC_AMT_117        --승선수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'BD') AS ETC_AMT_BD       --휴일근무수당

                          ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_GBN = '0'
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD NOT IN ( '01','02','03','04','06','07','08','09','10','11','12','13','14','17','45','BD','BA','EA','HY') ) AS ETC_AMT_BA         -- 상기외 기타지불 계
                    ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'D'
                                      AND Z.SAL_CD = 'SA') AS ETC_AMT_SA                        --동호회비공제
                    ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'EA') AS ETC_AMT_ZP                        --교육비공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A1') AS ETC_AMT_A1                        -- 정산 건강보험
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A2') AS ETC_AMT_A2                        -- 정산 고용보험
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A3') AS ETC_AMT_A3                        --연말정산 소득세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A4') AS ETC_AMT_A4                        --연말정산 주민세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A6') AS ETC_AMT_A6                        -- 연말정산 농특세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AF') AS ETC_AMT_AF                       --2013년1월유보금액
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AG') AS ETC_AMT_AG                        --자사주잔액
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'Y1') AS ETC_AMT_Y1D                       --포상 공제

                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'PZ') AS ETC_AMT_PZ                       --2014년1월부터 급여유보

                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AE') AS ETC_AMT_21                        --오세븐 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'J'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'JN') AS ETC_AMT_JN                        --연말정산 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND (Z.AD_TAG = 'D' OR Z.AD_TAG = 'J')
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD NOT IN ( 'SA','EA','A1','A2','A3','A4','A6','Y1','AS','JN','21','JQ','06','22','AE','AG','AF','PZ'))  AS ETC_AMT_ETC     --상기외 기타공제 계
              ,A.SALT_AMT-A.DDTT_AMT AS CH_AMT
              ,A.SGF_AMT
              ,A.OTH_AMT
              ,A.SALT_AMT              ,A.DOMT_AMT              ,A.OUTT_AMT              ,A.PAYD_AMT
              ,A.PAYO_AMT              ,A.YCT_CNT              ,A.SMPY_TOT              ,A.T_INCOME
              ,A.BONA_TAX              ,A.SMSI_TAX              ,A.AVTA_SAL              ,A.ITDD_AMT
              ,A.BSDD_AMT              ,A.SPSB_AMT              ,A.GDED_AMT              ,A.TBL_DED
              ,A.GOL_AMT              ,A.WDD_AMT              ,A.SMD_AMT              ,A.HIND_AMT
              ,A.ICOM_DED              ,NVL(A.PYSD_AMT,0) PYSD_AMT              ,A.SIM_TAX              ,A.ITXD_AMT
              ,A.STAX_DED              ,A.TAX_DED              ,A.INCM_TAX              ,A.CITI_TAX
              ,A.HINU_AMT              ,A.MAPP_AMT              ,A.NPEN_AMT              ,A.NPLE_AMT
              ,A.HINS_AMT              ,A.PPEN_AMT              ,A.SAV_AMT              ,A.APP_AMT
              ,A.INV_AMT              ,A.LON_RPY              ,A.LON_INT              ,A.DHLP_AMT
              ,A.WOM_AMT              ,A.LAB_AMT              ,A.TB3D_AMT              ,A.SGFD_AMT
              ,A.ADV_AMT              ,A.OTHD_AMT              ,A.DDTT_AMT              ,A.PAY_AMT
              ,A.ABA_CD               ,ASNHR.SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM
              ,A.REC_NAM              ,A.RMIT_CMM              ,A.PPED_AMT
              ,A.DRE_INTX              ,A.DRE_CTTX              ,A.CONT_AMT              ,A.LON_RPY2
              ,A.LON_INT2              ,A.FREE_TAX              ,A.GOG_PCT              ,A.SCH_AMT
              ,A.SEA_FREE              ,A.INC_PCT              ,A.GOL_CNT65              ,A.GOL_CNT70
              ,A.WEL_POINT              ,A.HOL_AMT              ,A.NIGHT_AMT              ,A.SPECIAL_AMT
              ,A.LUN_AMT              ,A.PRI_AMT              ,A.TAX_DPT
              ,ASNHR.SF_GET_COMMNAME('01', 'AD', A.TAX_DPT) as TAX_DPT2              ,A.DRE_DFTX              ,A.OLD_AMT              ,A.RET_TAG
              ,A.LAW_AMT              ,A.BNS_AMT              ,A.ETC_AMT              ,A.ETC_AMT2		,A.ETC_AMT3				,A.ETC_AMT4
              ,A.OTH_AMT2
              ,ASNHR.SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
              ,NVL(BAS_AMT,0) + NVL(DUTY_AMT, 0) + NVL(BNS_AMT,0) +NVL(LAW_AMT,0)  AS TOTAL_AMT
              ,PIS_YY || '-' || PIS_MM AS PIS_YYMM
              ,B.CET_NO
            FROM  ASNHR.T_CP_PAYMASTER  A,
                  ASNHR.T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.PIS_YY= ?
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.OCC_CD in ('0','1','2','3','8','9')
         ORDER BY A.JOB_CD, A.ENO_NO,PIS_YYMM
            ]]>
        </query>
    </sql>

<!-- 급여테이블 조회 -->
    <sql name="SAGA200_SHR_SO">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD              ,A.JOB_CD              ,A.HOB_CD              ,A.ENO_NO
              ,SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
              ,B.GBN_CD
              ,SF_GET_COMMNAME('01', 'B7', B.GBN_CD) AS GBN_NM
              ,SF_GET_ENONAME('01',  A.ENO_NO) AS ENO_NM
              ,A.SOU_CNT              ,A.DFM_CNT              ,A.TRB_CNT              ,A.GOL_CNT
              ,A.WCT_CNT              ,A.CHI_CNT              ,A.LSEV_YY              ,A.HIU_NO
              ,A.HIU_TAG              ,A.HIU_GRA              ,A.NPN_TAG              ,A.NPN_GRD
              ,A.BONP_BAS              ,A.BAS_PCT              ,A.TRD_PCT              ,A.ATTD_PCT
              ,A.PAY_PCT              ,A.PUD_PCT              ,A.DOMW_DD              ,A.OUTW_DD
              ,A.OTHW_CNT              ,A.TOTW_DD              ,A.BAS_AMT              ,A.DUTY_AMT
              ,A.OT_AMT              ,A.WEL_AMT              ,A.OSE_AMT              ,A.RUN_AMT
              ,A.MH_AMT              ,A.LSEV_AMT              ,A.TB3_AMT
              ,0 AS ETC_AMT_06            --출납수당
              ,0 AS ETC_AMT_11        --자기계발비
              ,0 AS ETC_AMT_12        --남북경협
              ,0 AS ETC_AMT_13        --특수지수당
              ,0 AS ETC_AMT_17        --운전수당
              ,0 AS ETC_AMT_18        --연장수당
              ,0 AS ETC_AMT_19        --사장단수당
              ,0 AS ETC_AMT_20        --자격수당
              ,0 AS ETC_AMT_HY        --현장직책수당
              ,0 AS ETC_AMT_012        --계약직북측근무수당
              ,0 AS ETC_AMT_013        --계약직현장수당
              ,0 AS ETC_AMT_014       --계약직성과급
              ,0 AS ETC_AMT_23        --전월소급
              ,0 AS ETC_AMT_117        --승선수당
              ,0 AS ETC_AMT_BD       --휴일근무수당
              ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'A'
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD  IN ( '18') ) AS ETC_AMT_BA         -- 상기외 기타지불 계
                    ,0 AS ETC_AMT_SA                        --동호회비공제
                    ,0 AS ETC_AMT_ZP                        --교육비공제
                    ,0 AS ETC_AMT_A1                        -- 정산 건강보험
                    ,0 AS ETC_AMT_A2                        -- 정산 고용보험
                    ,0 AS ETC_AMT_A3                        --연말정산 소득세 공제
                    ,0 AS ETC_AMT_A4                        --연말정산 주민세 공제
                    ,0 AS ETC_AMT_Y1D                       --포상 공제
                    ,0 AS ETC_AMT_21                        --오세븐 공제
                    ,0 AS ETC_AMT_JN                        --연말정산 공제
                    ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND (Z.AD_TAG = 'D' OR Z.AD_TAG = 'J')
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD NOT IN ( 'SA','EA','A1','A2','A3','A4','Y1','AS','JN','21','JQ','06','22','AE'))  AS ETC_AMT_ETC     --상기외 기타공제 계
                          ,A.SALT_AMT-A.DDTT_AMT                AS CH_AMT
              ,A.SGF_AMT
              ,A.OTH_AMT
              ,A.SALT_AMT              ,A.DOMT_AMT              ,A.OUTT_AMT              ,A.PAYD_AMT
              ,A.PAYO_AMT              ,A.YCT_CNT              ,A.SMPY_TOT              ,A.T_INCOME
              ,A.BONA_TAX              ,A.SMSI_TAX              ,A.AVTA_SAL              ,A.ITDD_AMT
              ,A.BSDD_AMT              ,A.SPSB_AMT              ,A.GDED_AMT              ,A.TBL_DED
              ,A.GOL_AMT              ,A.WDD_AMT              ,A.SMD_AMT              ,A.HIND_AMT
              ,A.ICOM_DED              ,A.PYSD_AMT              ,A.SIM_TAX              ,A.ITXD_AMT
              ,A.STAX_DED              ,A.TAX_DED              ,A.INCM_TAX              ,A.CITI_TAX
              ,A.HINU_AMT              ,A.MAPP_AMT              ,A.NPEN_AMT              ,A.NPLE_AMT
              ,A.HINS_AMT              ,A.PPEN_AMT              ,A.SAV_AMT              ,A.APP_AMT
              ,A.INV_AMT              ,A.LON_RPY              ,A.LON_INT              ,A.DHLP_AMT
              ,A.WOM_AMT              ,A.LAB_AMT              ,A.TB3D_AMT              ,A.SGFD_AMT
              ,A.ADV_AMT              ,A.OTHD_AMT              ,A.DDTT_AMT              ,A.PAY_AMT
              ,A.ABA_CD               ,SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM
              ,A.REC_NAM              ,A.RMIT_CMM              ,A.PPED_AMT
              ,A.DRE_INTX              ,A.DRE_CTTX              ,A.CONT_AMT              ,A.LON_RPY2
              ,A.LON_INT2              ,A.FREE_TAX              ,A.GOG_PCT              ,A.SCH_AMT
              ,A.SEA_FREE              ,A.INC_PCT              ,A.GOL_CNT65              ,A.GOL_CNT70
              ,A.WEL_POINT              ,A.HOL_AMT              ,A.NIGHT_AMT              ,A.SPECIAL_AMT
              ,A.LUN_AMT              ,A.PRI_AMT              ,A.TAX_DPT
              ,SF_GET_COMMNAME('01', 'AD', A.TAX_DPT) as TAX_DPT2              ,A.DRE_DFTX              ,A.OLD_AMT              ,A.RET_TAG
              ,A.LAW_AMT              ,A.BNS_AMT              ,A.ETC_AMT              ,A.ETC_AMT2		,A.ETC_AMT3				,A.ETC_AMT4
              ,A.OTH_AMT2
              ,SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM
              ,SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
              ,NVL(BAS_AMT,0) + NVL(DUTY_AMT, 0) + NVL(BNS_AMT,0) +NVL(LAW_AMT,0)  AS TOTAL_AMT
              , PIS_YY || '-' || PIS_MM AS PIS_YYMM, B.CET_NO
            FROM  T_CP_PAYMASTER  A,
                       T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.OCC_CD = B.OCC_CD(+)
              AND A.JOB_CD = B.JOB_CD(+)
              AND A.PIS_YY= ?
              AND A.PIS_MM LIKE '%'||SUBSTR(?, 5, 2)||'%'
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.SAL_GBN = '2'
              AND NVL(A.JOB_CD,' ') LIKE '%'||?||'%'
         ORDER BY A.SORT, A.TAX_DPT, A.JOB_CD, TO_NUMBER(NVL(B.HOB_CD,'0')) DESC, A.ENO_NO

            ]]>
        </query>
    </sql>



<!-- 급여테이블 조회 -->
    <sql name="SAGA200_SHR">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD              ,A.JOB_CD              ,A.HOB_CD              ,A.ENO_NO
              ,ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
              ,ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM
              ,B.GBN_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'B7', B.GBN_CD) AS GBN_NM
              ,ASNHR.SF_GET_ENONAME('01',  A.ENO_NO) AS ENO_NM
              ,A.SOU_CNT              ,A.DFM_CNT              ,A.TRB_CNT              ,A.GOL_CNT
              ,A.WCT_CNT              ,A.CHI_CNT              ,A.LSEV_YY              ,A.HIU_NO
              ,A.HIU_TAG              ,A.HIU_GRA              ,A.NPN_TAG              ,A.NPN_GRD
              ,A.BONP_BAS              ,A.BAS_PCT              ,A.TRD_PCT              ,A.ATTD_PCT
              ,A.PAY_PCT              ,A.PUD_PCT              ,A.DOMW_DD              ,A.OUTW_DD
              ,A.OTHW_CNT              ,A.TOTW_DD              ,A.BAS_AMT              ,A.DUTY_AMT
              ,A.OT_AMT              ,A.WEL_AMT              ,A.OSE_AMT              ,A.RUN_AMT
              ,A.MH_AMT              ,A.LSEV_AMT              ,A.TB3_AMT
              ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                          AND Z.PIS_YY = A.PIS_YY
                                          AND Z.AD_TAG = 'A'
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.SAL_CD = '06') AS ETC_AMT_06            --출납수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '01') AS ETC_AMT_11        --자기계발비
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '03') AS ETC_AMT_12        --남북경협
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'BA') AS ETC_AMT_13        --특수지수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '08') AS ETC_AMT_17        --운전수당
                          ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '09') AS ETC_AMT_18        --연장수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '10') AS ETC_AMT_19        --사장단수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '11') AS ETC_AMT_20        --자격수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'HY') AS ETC_AMT_HY        --현장직책수당

                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '12') AS ETC_AMT_012        --계약직북측근무수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '13') AS ETC_AMT_013        --계약직현장수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '14') AS ETC_AMT_014       --계약직성과급

                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '45') AS ETC_AMT_23        --전월소급
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '17') AS ETC_AMT_117        --승선수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'BD') AS ETC_AMT_BD       --휴일근무수당

                          ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_GBN = '0'
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD NOT IN ( '01','02','03','04','06','07','08','09','10','11','12','13','14','17','45','BD','BA','EA','HY') ) AS ETC_AMT_BA         -- 상기외 기타지불 계
                    ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'D'
                                      AND Z.SAL_CD = 'SA') AS ETC_AMT_SA                        --동호회비공제
                    ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'EA') AS ETC_AMT_ZP                        --교육비공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A1') AS ETC_AMT_A1                        -- 정산 건강보험
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A2') AS ETC_AMT_A2                        -- 정산 고용보험
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A3') AS ETC_AMT_A3                        --연말정산 소득세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A4') AS ETC_AMT_A4                        --연말정산 주민세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A6') AS ETC_AMT_A6                        -- 연말정산 농특세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AF') AS ETC_AMT_AF                       --2013년1월유보금액
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AG') AS ETC_AMT_AG                        --자사주잔액
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'Y1') AS ETC_AMT_Y1D                       --포상 공제

                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'PZ') AS ETC_AMT_PZ                       --2014년1월부터 급여유보

                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AE') AS ETC_AMT_21                        --오세븐 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'J'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'JN') AS ETC_AMT_JN                        --연말정산 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM ASNHR.T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND (Z.AD_TAG = 'D' OR Z.AD_TAG = 'J')
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD NOT IN ( 'SA','EA','A1','A2','A3','A4','A6','Y1','AS','JN','21','JQ','06','22','AE','AG','AF','PZ'))  AS ETC_AMT_ETC     --상기외 기타공제 계
              ,A.SALT_AMT-A.DDTT_AMT AS CH_AMT
              ,A.SGF_AMT
              ,A.OTH_AMT
              ,A.SALT_AMT              ,A.DOMT_AMT              ,A.OUTT_AMT              ,A.PAYD_AMT
              ,A.PAYO_AMT              ,A.YCT_CNT              ,A.SMPY_TOT              ,A.T_INCOME
              ,A.BONA_TAX              ,A.SMSI_TAX              ,A.AVTA_SAL              ,A.ITDD_AMT
              ,A.BSDD_AMT              ,A.SPSB_AMT              ,A.GDED_AMT              ,A.TBL_DED
              ,A.GOL_AMT              ,A.WDD_AMT              ,A.SMD_AMT              ,A.HIND_AMT
              ,A.ICOM_DED              ,NVL(A.PYSD_AMT,0) PYSD_AMT              ,A.SIM_TAX              ,A.ITXD_AMT
              ,A.STAX_DED              ,A.TAX_DED              ,A.INCM_TAX              ,A.CITI_TAX
              ,A.HINU_AMT              ,A.MAPP_AMT              ,A.NPEN_AMT              ,A.NPLE_AMT
              ,A.HINS_AMT              ,A.PPEN_AMT              ,A.SAV_AMT              ,A.APP_AMT
              ,A.INV_AMT              ,A.LON_RPY              ,A.LON_INT              ,A.DHLP_AMT
              ,A.WOM_AMT              ,A.LAB_AMT              ,A.TB3D_AMT              ,A.SGFD_AMT
              ,A.ADV_AMT              ,A.OTHD_AMT              ,A.DDTT_AMT              ,A.PAY_AMT
              ,A.ABA_CD               ,ASNHR.SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM
              ,A.REC_NAM              ,A.RMIT_CMM              ,A.PPED_AMT
              ,A.DRE_INTX              ,A.DRE_CTTX              ,A.CONT_AMT              ,A.LON_RPY2
              ,A.LON_INT2              ,A.FREE_TAX              ,A.GOG_PCT              ,A.SCH_AMT
              ,A.SEA_FREE              ,A.INC_PCT              ,A.GOL_CNT65              ,A.GOL_CNT70
              ,A.WEL_POINT              ,A.HOL_AMT              ,A.NIGHT_AMT              ,A.SPECIAL_AMT
              ,A.LUN_AMT              ,A.PRI_AMT              ,A.TAX_DPT
              ,ASNHR.SF_GET_COMMNAME('01', 'AD', A.TAX_DPT) as TAX_DPT2              ,A.DRE_DFTX              ,A.OLD_AMT              ,A.RET_TAG
              ,A.LAW_AMT              ,A.BNS_AMT              ,A.ETC_AMT              ,A.ETC_AMT2		,A.ETC_AMT3				,A.ETC_AMT4
              ,A.OTH_AMT2
              ,ASNHR.SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
              ,NVL(BAS_AMT,0) + NVL(DUTY_AMT, 0) + NVL(BNS_AMT,0) +NVL(LAW_AMT,0)  AS TOTAL_AMT
              ,PIS_YY || '-' || PIS_MM AS PIS_YYMM
              ,B.CET_NO
            FROM  ASNHR.T_CP_PAYMASTER  A,
                  ASNHR.T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.PIS_YY= ?
              AND A.PIS_MM LIKE '%'||SUBSTR(?, 5, 2)||'%'
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.OCC_CD in ('0','1','2','3','8','9')
         ORDER BY A.JOB_CD, A.ENO_NO,PIS_YYMM
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : SAGA200_PRINT
* @description : 개인별 급여총괄상세내역서(출력용)
***********************************************************************
* 2007/03/28     임세환        최초작성.
***********************************************************************
-->

<!-- 급여테이블 조회 -->
    <sql name="SAGA200_SHR_PRINT">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD
               ,A.JOB_CD, B.CET_NO
               ,B.HOB_CD
               ,SF_GET_COMMNAME('01', 'A3', B.HOB_CD) AS HOB_NM
               ,A.ENO_NO
              ,SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
              ,SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM
              ,SF_GET_ENONAME('01',  A.ENO_NO) AS ENO_NM
              ,A.SOU_CNT              ,A.DFM_CNT              ,A.TRB_CNT              ,A.GOL_CNT
              ,A.WCT_CNT              ,A.CHI_CNT              ,A.LSEV_YY              ,A.HIU_NO
              ,A.HIU_TAG              ,A.HIU_GRA              ,A.NPN_TAG              ,A.NPN_GRD
              ,A.BONP_BAS              ,A.BAS_PCT              ,A.TRD_PCT              ,A.ATTD_PCT
              ,A.PAY_PCT              ,A.PUD_PCT              ,A.DOMW_DD              ,A.OUTW_DD
              ,A.OTHW_CNT              ,A.TOTW_DD              ,A.BAS_AMT              ,A.DUTY_AMT
              ,A.OT_AMT                ,(A.BAS_AMT+A.DUTY_AMT+A.LAW_AMT) AS SUM_BAS_DUTY_LAW
              ,A.WEL_AMT              ,A.OSE_AMT              ,A.RUN_AMT
              ,A.MH_AMT              ,A.LSEV_AMT              ,A.TB3_AMT
              ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                          AND Z.PIS_YY = A.PIS_YY
                                          AND Z.AD_TAG = 'A'
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.SAL_CD = '06') AS ETC_AMT_06            --출납수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '01') AS ETC_AMT_11        --자기계발비
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '03') AS ETC_AMT_12        --남북경협
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD IN ('BA','12')) AS ETC_AMT_13        --특수지수당(정규직+계약직)
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '08') AS ETC_AMT_17        --운전수당
                          ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '09') AS ETC_AMT_18        --연장수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '10') AS ETC_AMT_19        --사장단수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '11') AS ETC_AMT_20        --자격수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'HY') AS ETC_AMT_HY        --현장직책수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '13') AS ETC_AMT_099        --계약직현장수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0)+ETC_AMT2 FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '13') AS ETC_AMT_999        --정규직지역근무수당+계약직현장수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '14') AS ETC_AMT_014       --계약직성과급
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '45') AS ETC_AMT_23        --전월소급
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = '17') AS ETC_AMT_117        --승선수당
                         ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.PIS_MM = A.PIS_MM
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_CD = 'BD') AS ETC_AMT_BD       --휴일근무수당

                          ,(SELECT NVL(SUM(Z.AMOUNT),0) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'A'
                                      AND Z.SAL_GBN = '0'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD NOT IN ( '01','02','03','04','06','07','08','09','10','11','12','13','14','17','45','BD','BA','EA','HY') ) AS ETC_AMT_BA         -- 상기외 기타지불 계
                    ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                          AND Z.PIS_MM = A.PIS_MM
                                          AND Z.AD_TAG = 'D'
                                      AND Z.SAL_CD = 'SA') AS ETC_AMT_SA                        --동호회비공제
                    ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'EA') AS ETC_AMT_ZP                        --교육비공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A1') AS ETC_AMT_A1                        -- 정산 건강보험
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A2') AS ETC_AMT_A2                        -- 정산 고용보험
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A3') AS ETC_AMT_A3                        -- 연말정산 소득세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A4') AS ETC_AMT_A4                        -- 연말정산 주민세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'A6') AS ETC_AMT_A6                        -- 연말정산 농특세 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AF') AS ETC_AMT_AF                       --2013년1월유보금액
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AG') AS ETC_AMT_AG                        --자사주잔액

                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'PZ') AS ETC_AMT_PZ                       --2014년1월부터 급여유보

                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'Y1') AS ETC_AMT_Y1D                       --포상 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'D'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'AE') AS ETC_AMT_21                        --오세븐 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND Z.AD_TAG = 'J'
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD = 'JN') AS ETC_AMT_JN                        --연말정산 공제
                        ,(SELECT SUM(NVL(Z.AMOUNT,0)) FROM T_CP_CHANGE Z
                                 WHERE Z.ENO_NO = A.ENO_NO
                                      AND Z.PIS_YY = A.PIS_YY
                                      AND (Z.AD_TAG = 'D' OR Z.AD_TAG = 'J')
                                          AND Z.PIS_MM = A.PIS_MM
                                      AND Z.SAL_CD NOT IN ( 'SA','EA','A1','A2','A3','A4','A6','Y1','AS','JN','21','JQ','06','22','AE','AG','AF','PZ'))  AS ETC_AMT_ETC     --상기외 기타공제 계
                          ,A.SALT_AMT-A.DDTT_AMT                AS CH_AMT
              ,A.SGF_AMT
              ,A.OTH_AMT
              ,A.SALT_AMT              ,A.DOMT_AMT              ,A.OUTT_AMT              ,A.PAYD_AMT
              ,A.PAYO_AMT              ,A.YCT_CNT              ,A.SMPY_TOT              ,A.T_INCOME
              ,A.BONA_TAX              ,A.SMSI_TAX              ,A.AVTA_SAL              ,A.ITDD_AMT
              ,A.BSDD_AMT              ,A.SPSB_AMT              ,A.GDED_AMT              ,A.TBL_DED
              ,A.GOL_AMT              ,A.WDD_AMT              ,A.SMD_AMT              ,A.HIND_AMT
              ,A.ICOM_DED              ,A.PYSD_AMT              ,A.SIM_TAX              ,A.ITXD_AMT
              ,A.STAX_DED              ,A.TAX_DED              ,A.INCM_TAX              ,A.CITI_TAX
              ,A.HINU_AMT              ,A.MAPP_AMT              ,A.NPEN_AMT              ,A.NPLE_AMT
              ,A.HINS_AMT              ,A.PPEN_AMT              ,A.SAV_AMT              ,A.APP_AMT
              ,A.INV_AMT              ,A.LON_RPY              ,A.LON_INT              ,A.DHLP_AMT
              ,A.WOM_AMT              ,A.LAB_AMT              ,A.TB3D_AMT              ,A.SGFD_AMT
              ,A.ADV_AMT              ,A.OTHD_AMT              ,A.DDTT_AMT              ,A.PAY_AMT
              ,A.ABA_CD               ,SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM
              ,A.REC_NAM              ,A.RMIT_CMM              ,A.PPED_AMT
              ,A.DRE_INTX              ,A.DRE_CTTX              ,A.CONT_AMT              ,A.LON_RPY2
              ,A.LON_INT2              ,A.FREE_TAX              ,A.GOG_PCT              ,A.SCH_AMT
              ,A.SEA_FREE              ,A.INC_PCT              ,A.GOL_CNT65              ,A.GOL_CNT70
              ,A.WEL_POINT              ,A.HOL_AMT              ,A.NIGHT_AMT              ,A.SPECIAL_AMT
              ,A.LUN_AMT              ,A.PRI_AMT              ,A.TAX_DPT
              ,SF_GET_COMMNAME('01', 'AD', A.TAX_DPT) as TAX_DPT2              ,A.DRE_DFTX              ,A.OLD_AMT              ,A.RET_TAG
              ,A.LAW_AMT              ,A.BNS_AMT              ,A.ETC_AMT              ,A.ETC_AMT2		,A.ETC_AMT3				,A.ETC_AMT4
              ,A.OTH_AMT2
              ,SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM
              ,SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
              ,NVL(BAS_AMT,0) + NVL(DUTY_AMT, 0) + NVL(BNS_AMT,0) +NVL(LAW_AMT,0)  AS TOTAL_AMT
              , PIS_YY || '-' || PIS_MM AS PIS_YYMM, A.SORT
            FROM  T_CP_PAYMASTER  A,
                       T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.OCC_CD = B.OCC_CD(+)
              AND A.JOB_CD = B.JOB_CD(+)
              AND A.PIS_YY= ?
              AND A.PIS_MM LIKE '%'||SUBSTR(?, 5, 2)||'%'
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.OCC_CD in ('0','1','2','3','8','9')
              AND A.SAL_GBN = '0'
              AND NVL(A.JOB_CD,' ') LIKE '%'||?||'%'
         ORDER BY A.SORT, A.TAX_DPT, A.JOB_CD, TO_NUMBER(NVL(B.HOB_CD,'0')) DESC, A.ENO_NO
            ]]>
        </query>
    </sql>




<!--
***********************************************************************
* @UseCase     : SAGA220
* @description : 개인별 급여총괄상세내역서(대사용)
***********************************************************************
* 2007/03/28     임세환        최초작성.
***********************************************************************
-->

<!-- 급여테이블 조회 -->
    <sql name="SAGA220_SHR">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD
			  ,A.JOB_CD
              ,A.ENO_NO
              ,(SELECT C.ENO_NM FROM ASNHR.T_CM_PERSON C WHERE C.ENO_NO = A.ENO_NO) AS ENO_NM
              ,B.ABA_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'BK', B.ABA_CD) AS ABA_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
              ,B.ACC_NO
              ,A.PAY_AMT
              ,SUBSTR(?, 5, 2)||'월 급여 현대아산㈜' AS DESCPT
            FROM  ASNHR.T_CP_NPAYMASTER  A,
                  ASNHR.T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.OCC_CD = B.OCC_CD(+)
              AND A.JOB_CD = B.JOB_CD(+)
              AND A.PIS_MM = SUBSTR(?, 5, 2)
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.PIS_YY =  SUBSTR(?, 0, 4)
              AND A.PAY_AMT > 0
              AND NVL(A.SAL_GBN,' ') =?
         ORDER BY A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 적용일자 조회 -->
    <sql name="SAGA220_SHR_01">
        <description>급여테이블 적용일자 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') AS APY_YMD FROM ASNHR.T_CP_PAYTABLE
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : SAGA280
* @description : 은행 제출용
***********************************************************************
* 2018/07/12     이동훈        최초작성.
***********************************************************************
-->

<!-- 급여테이블 조회 -->
    <sql name="SAGA220_SHR_09">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD
			  ,A.JOB_CD
              ,A.ENO_NO
              ,(SELECT C.ENO_NM FROM ASNHR.T_CM_PERSON C WHERE C.ENO_NO = A.ENO_NO) AS ENO_NM
              ,B.ABA_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'BK', B.ABA_CD) AS ABA_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
              ,B.ACC_NO
              ,A.PAY_AMT
              ,' ' WHAT1              
              ,'B3' WHAT2
              ,'급여  ' WHAT3
              ,' ' AS WHAT4
              ,' ' AS WHAT5
              ,SUBSTR(?, 5, 2)||'월 급여 현대아산㈜' AS DESCPT
            FROM  ASNHR.T_CP_NPAYMASTER  A,
                  ASNHR.T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.JOB_CD = B.JOB_CD(+)
              AND A.PIS_MM = SUBSTR(?, 5, 2)
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.PIS_YY =  SUBSTR(?, 0, 4)
              AND A.PAY_AMT > 0
              AND NVL(A.SAL_GBN,' ') =?
         ORDER BY A.ENO_NO
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : SAGA240
* @description : 급여테이블
***********************************************************************
* 2009/11/17     임세환        최초작성.
***********************************************************************
-->
    <!-- 급여테이블 조회 -->
    <sql name="SAGA240_SHR">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT LPAD(SORT_NO, 3, '0') AS ORD_NO
           		,A.PIS_YY
				,A.PIS_MM
      			,A.ACC_CD
				,A.ACC_CD AS ACC_NM
      			--,(SELECT EXT_01  FROM T_CM_COMMON WHERE COMM_CD = A.ACC_CD AND CD_GBN = 'AT') AS ACC_ACCOUNT_CD
      			--,SF_GET_COMMNAME('01', 'AT', ACC_CD) AS ACC_NM
      			,A.CUS_CD
      			,A.CUS_CD AS CUS_NM
      			,A.PRJ_CD
      			,A.PRJ_CD AS PRJ_NM
      			,A.DPT_CD
      			,A.DPT_CD AS DPT_NM
      			--,(SELECT COMM_NM  FROM T_CM_COMMON WHERE COMM_CD = A.DPT_CD AND CD_GBN = 'AD') AS DPT_NM
      			,A.DTL_ACC_CD
      			,NVL(A.DR_AMT, 0) AS DR_AMT
      			,NVL(A.CR_AMT, 0) AS CR_AMT
      			,A.DESP
      			,A.DESP2
      			,A.PROSTS
      			,A.SORT_NO
      			,A.DC_GBN
      			,A.WRITEKEY
      			,A.MNG_NO
  			FROM T_CP_ACCOUNT A
			WHERE A.PIS_YY = SUBSTR(?, 0, 4)
                 AND A.PIS_MM = SUBSTR(?, 5, 2)
                 AND NVL(A.DR_AMT, 0) + NVL(A.CR_AMT, 0)  > 0
                 AND TAX_GBN = '1'
         ORDER BY TO_NUMBER(A.SORT_NO)
            ]]>
        </query>
    </sql>

    <!-- 적용일자 조회 -->
    <sql name="SAGA240_SHR_01">
        <description>급여테이블 적용일자 조회</description>
        <query>
            <![CDATA[
         SELECT MAX(PAY_YMD) AS APY_YMD
                        FROM T_CP_WORKLOG
            ]]>
        </query>
    </sql>

***********************************************************************
* @UseCase     : SAGA230
* @description : 급여테이블
***********************************************************************
* 2009/11/17     임세환        최초작성.
***********************************************************************
-->
    <!-- 급여테이블 조회 -->
    <sql name="SAGA230_SHR">
        <description>전표테이블 조회</description>
        <query>
            <![CDATA[
           SELECT LPAD(ROWNUM, 3, '0') AS ORD_NO
           		,A.PIS_YY
				,A.PIS_MM
				,A.ACC_CD
				,A.ACC_CD AS ACC_NM
      			--,(SELECT EXT_01  FROM T_CM_COMMON WHERE COMM_CD = A.ACC_CD AND CD_GBN = 'AT') AS ACC_ACCOUNT_CD
      			--,SF_GET_COMMNAME('01', 'AT', ACC_CD) AS ACC_NM
      			,A.CUS_CD
      			,A.CUS_CD AS CUS_NM
      			,A.PRJ_CD
      			,A.PRJ_CD AS PRJ_NM
      			,A.DPT_CD
      			,A.DPT_CD AS DPT_NM
      			--,(SELECT COMM_NM  FROM T_CM_COMMON WHERE COMM_CD = A.DPT_CD AND CD_GBN = 'AD') AS DPT_NM
      			,A.DTL_ACC_CD
      			,NVL(A.DR_AMT, 0) AS DR_AMT
      			,NVL(A.CR_AMT, 0) AS CR_AMT
      			,A.DESP
      			,A.DESP2
      			,A.PROSTS
      			,A.SORT_NO
      			,A.DC_GBN
      			,A.WRITEKEY
      			,A.MNG_NO
  			FROM T_CP_ACCOUNT A
			WHERE A.PIS_YY = SUBSTR(?, 0, 4)
                 AND A.PIS_MM = SUBSTR(?, 5, 2)
                 AND NVL(A.DR_AMT, 0) + NVL(A.CR_AMT, 0)  > 0
                 AND TAX_GBN IS NULL
         ORDER BY TO_NUMBER(A.SORT_NO)
            ]]>
        </query>
    </sql>

    <!-- 적용일자 조회 -->
    <sql name="SAGA230_SHR_01">
        <description>급여테이블 적용일자 조회</description>
        <query>
            <![CDATA[
         SELECT MAX(PAY_YMD) AS APY_YMD
                        FROM T_CP_WORKLOG
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGA120
* @description : 자료UP/DOWN
***********************************************************************
* 2007/03/26     한학현        최초작성.
***********************************************************************
-->
    <!-- 급상여입금 -->
    <sql name="SAGA120_SHR_01">
        <description>급상여입금</description>
        <query>
            <![CDATA[
            SELECT (SELECT DECODE(NVL(PAY_YMD,''),'','',SUBSTR(PAY_YMD,1,4)||'-'||SUBSTR(PAY_YMD,5,2)||'-'||SUBSTR(PAY_YMD,7,2)) AS PAY_YMD
                    FROM   T_CP_WORKLOG
                    WHERE  PIS_YY = A.PIS_YY
                    AND    PIS_MM = A.PIS_MM
                    AND    SAL_GBN = A.SAL_GBN
                    AND    SEQ = A.SEQ
                    AND    OCC_CD != ''
                    GROUP BY PAY_YMD
                   ) AS PAY_YMD,
                    A.DPT_CD AS DPT_CD,
                    B.DPT_NM AS DPT_NM,
                    A.JOB_CD AS JOB_CD,
                    B.JOB_NM AS JOB_NM,
                    A.ENO_NO AS ENO_NO,
                    B.ENO_NM AS ENO_NM,
                    REPLACE(TRIM(A.ACC_NO),'-','') AS ACC_NO,
                    NVL(A.PAY_AMT,0) AS PAY_AMT,
                    A.ABA_CD AS GBN
            FROM   T_CP_PAYMASTER A, VI_T_CM_PERSON2 B
            WHERE  A.ENO_NO  = B.ENO_NO
            AND    A.PIS_YY  = ?
            AND    A.PIS_MM  = ?
            AND    A.SAL_GBN = ?
            AND    A.SEQ = ?
        --    AND    A.ABA_CD  = '01'
            AND    nvl(A.PAY_AMT,0) <> 0
            ORDER BY A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 급상여입금 파일출력 -->
    <sql name="SAGA120_FILE_01">
        <description>급상여입금 파일출력</description>
        <query>
            <![CDATA[
            SELECT ROW_NUMBER() OVER(ORDER BY NPN_NO) AS NUM,
                   NPN_NO
            FROM
           (SELECT distinct ('11'||
                    '005'||
                   (SELECT PAY_YMD
                    FROM   T_CP_WORKLOG
                    WHERE  PIS_YY = A.PIS_YY
                    AND    PIS_MM = A.PIS_MM
                    AND    SAL_GBN = A.SAL_GBN
                    AND    SEQ = A.SEQ
                    GROUP BY PAY_YMD)||
                   'AM709A'||
                   '11804560'||
                   '                                                                          ') AS NPN_NO
            FROM   T_CP_PAYMASTER A
            WHERE  A.PIS_YY  = ?
            AND    A.PIS_MM  = ?
            AND    A.SAL_GBN = ?
            AND    A.SEQ = ?
         --   AND    A.ABA_CD  = '01'
            AND    nvl(A.PAY_AMT,0) > 0
            UNION
            SELECT ('22'||
                    TO_CHAR(ROW_NUMBER() OVER(ORDER BY ENO_NO),'FM0000000')||
                    '118'||
                    '          '||
                    ACC_NO||
                    ' '||
                    TO_CHAR(NVL(PAY_AMT,0),'FM000000000000000')||
                    DECODE(SAL_GBN,'0','50','1','51','2','54')||
                    '               '||
                    ' '||
                    ' '||
                    '                 '||
                    '            ') AS NPN_NO
            FROM   T_CP_PAYMASTER
            WHERE  PIS_YY  = ?
            AND    PIS_MM  = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
        --    AND    ABA_CD  = '01'
            AND    nvl(PAY_AMT,0) > 0
            UNION
            SELECT ('33'||
                    TO_CHAR(COUNT(ENO_NO),'FM0000000')||
                    TO_CHAR(SUM(NVL(PAY_AMT,0)),'FM000000000000000')||
                   '                                                                            ') AS NPN_NO
            FROM   T_CP_PAYMASTER
            WHERE  PIS_YY  = ?
            AND    PIS_MM  = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
      --      AND    ABA_CD  = '01'
            AND    nvl(PAY_AMT,0) > 0)
            ]]>
        </query>
    </sql>

    <!-- 출자금 -->
    <sql name="SAGA120_SHR_02">
        <description>출자금</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD AS DPT_CD,
                   B.DPT_NM AS DPT_NM,
                   B.JOB_CD AS JOB_CD,
                   B.JOB_NM AS JOB_NM,
                   A.ENO_NO AS ENO_NO,
                   B.ENO_NO AS EMAENO,
                   B.ENO_NM AS ENO_NM,
                   B.CET_NO AS CET_NO,
                   A.GMKL_NO AS GMKL_NO,
                   A.GMK_NO AS GMK_NO,
                   A.OCC_CD AS OCC_CD,
                   NVL(A.GMK_AMT,0) AS GMK_AMT,
                   C.TAG AS TAG,
                   DECODE(NVL(D.PAY_YMD,''),'','',SUBSTR(D.PAY_YMD,1,4)||'-'||SUBSTR(D.PAY_YMD,5,2)||'-'||SUBSTR(D.PAY_YMD,7,2)) AS PAY_YMD
            FROM   T_AC_LOAN A, VI_T_CM_PERSON2 B,
                  (SELECT ENO_NO, 'NEW' AS TAG
                   FROM  (SELECT ENO_NO
                          FROM   T_AC_LOAN
                          WHERE  PIS_YY = ?
                          AND    PIS_MM = ?
                          AND    SAL_GBN = ?
                          AND    SEQ = ?
                          AND    GMK_TAG = '0'
                          MINUS
                          SELECT AA.ENO_NO
                          FROM  (SELECT A.ENO_NO, A.GMK_TAG, NVL(B.PAY_YMD,'000000') AS PAY_YMD
                                 FROM   T_AC_LOAN A,
                                        T_CP_WORKLOG B
                                 WHERE  A.PIS_YY = B.PIS_YY(+)
                                 AND    A.PIS_MM = B.PIS_MM(+)
                                 AND    A.SAL_GBN = B.SAL_GBN(+)
                                 AND    A.SEQ     = B.SEQ(+)) AA
                          WHERE  AA.PAY_YMD < (SELECT PAY_YMD
                                               FROM T_CP_WORKLOG
                                               WHERE   PIS_YY  = ?
                                               AND     PIS_MM  = ?
                                               AND     SAL_GBN = ?
                                               AND     SEQ     = ?
                                               AND     OCC_CD  = 'A')
                          AND    AA.GMK_TAG ='0'
                         )-- 지급예정일을 기준으로 가져옴, 지급예정일이 같을 수는 없다.(20070917, 김우태대리)
                  ) C,
                  (SELECT PAY_YMD
                   FROM   T_CP_WORKLOG
                   WHERE   PIS_YY  = ?
                   AND     PIS_MM  = ?
                   AND     SAL_GBN = ?
                   AND     SEQ = ?
                   AND     OCC_CD  = 'A'
                  ) D
            WHERE A.ENO_NO  = B.ENO_NO
            AND   A.ENO_NO  = C.ENO_NO(+)
            AND   A.PIS_YY  = ?
            AND   A.PIS_MM  = ?
            AND   A.SAL_GBN = ?
            AND   A.SEQ = ?
            AND   A.GMK_TAG = '0'
            ORDER BY A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 출자금 - 신규생성자 -->
    <sql name="SAGA120_SHR_02_1">
    	<description>출자금 신규생성자</description>
    	<query>
    	<![CDATA[
    	SELECT B.OCC_CD AS OCC_CD, B.ENO_NO AS EMAENO, B.CET_NO AS CET_NO,
    		   TO_CHAR(B.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD, B.ENO_NM AS ENO_NM, B.EM_PHN_NO AS EM_PHN_NO
		FROM(SELECT ENO_NO
        	   FROM T_AC_LOAN
       		  WHERE PIS_YY = ? AND PIS_MM = ? AND SEQ = ?
        		AND SAL_GBN = ?
        		AND GMK_TAG = '0'
       		  MINUS
      		 SELECT DISTINCT(ENO_NO)
               FROM T_AC_LOAN L, T_CP_WORKLOG W
              WHERE L.PIS_YY = W.PIS_YY AND L.PIS_MM = W.PIS_MM
              	AND L.SAL_GBN = W.SAL_GBN AND L.SEQ = W.SEQ AND GMK_TAG = '0'
              	AND W.PAY_YMD < ( SELECT MAX(PAY_YMD)
                                    FROM T_CP_WORKLOG
                                   WHERE PIS_YY = ? AND PIS_MM = ?
                                     AND SAL_GBN = '0'
                                     AND OCC_CD in ('0','1','2','3','8','9')
                                     AND PAY_YMD IS NOT NULL
                               )
	    ) A, T_CM_PERSON B
		where A.ENO_NO = B.ENO_NO
		]]>
		</query>
    </sql>

    <!-- 출자금 - 직종전환 -->
    <sql name="SAGA120_SHR_02_2">
	    <description>출자금 직종전환</description>
    	<query>
    	<![CDATA[
		SELECT B.OCC_CD AS OCC_CD, B.ENO_NO AS EMAENO, B.CET_NO AS CET_NO,
			   TO_CHAR(B.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD, B.ENO_NM AS ENO_NM
		FROM T_CM_AHISTORY A, T_CM_PERSON B
		WHERE A.STR_YMD LIKE ?||?||'%'
		AND A.APP_CD = 'LG1'
		AND A.ENO_NO = B.ENO_NO
		]]>
		</query>
    </sql>

    <!-- 출자금 파일출력 -->
    <sql name="SAGA120_FILE_02">
        <description>출자금 파일출력</description>
        <query>
            <![CDATA[
            SELECT  ROW_NUMBER() OVER(ORDER BY A.ENO_NO) AS NUM,
                   (TRIM(A.OCC_CD)||
                    B.ENO_NO||
                    '   '||
                    SUBSTR(B.CET_NO,1,6)||
                    SUBSTR(B.CET_NO,8,7)||
                    D.PAY_YMD||
                    '0000000000'||
                    '0000000000'||
                    TO_CHAR(NVL(A.GMK_AMT,0),'FM0000000000')||
                    NVL(RPAD(C.TAG,20,' '),'                    ')||
                    '#'
                   ) AS NPN_NO
            FROM   T_AC_LOAN A, VI_T_CM_PERSON2 B,
                  (SELECT ENO_NO, 'NEW' AS TAG
                   FROM  (SELECT ENO_NO
                          FROM   T_AC_LOAN
                          WHERE  PIS_YY = ?
                          AND    PIS_MM = ?
                          AND    SAL_GBN = ?
                          AND    SEQ = ?
                          AND    GMK_TAG = '0'
                          MINUS
                          SELECT AA.ENO_NO
                          FROM  (SELECT A.ENO_NO, A.GMK_TAG, NVL(B.PAY_YMD,'000000') AS PAY_YMD
                                 FROM   T_AC_LOAN A,
                                        T_CP_WORKLOG B
                                 WHERE  A.PIS_YY = B.PIS_YY(+)
                                 AND    A.PIS_MM = B.PIS_MM(+)
                                 AND    A.SAL_GBN = B.SAL_GBN(+)
                                 AND    A.SEQ     = B.SEQ(+)) AA
                          WHERE  AA.PAY_YMD < (SELECT PAY_YMD
                                               FROM T_CP_WORKLOG
                                               WHERE   PIS_YY  = ?
                                               AND     PIS_MM  = ?
                                               AND     SAL_GBN = ?
                                               AND     SEQ     = ?
                                               AND     OCC_CD  = 'A')
                          AND    AA.GMK_TAG ='0'
                         )-- 지급예정일을 기준으로 가져옴, 지급예정일이 같을 수는 없다.(20070917, 김우태대리)
                  ) C,
                  (SELECT PAY_YMD
                   FROM   T_CP_WORKLOG
                   WHERE   PIS_YY  = ?
                   AND     PIS_MM  = ?
                   AND     SAL_GBN = ?
                   AND     SEQ = ?
                   AND     OCC_CD  = 'A'
                  ) D
            WHERE A.ENO_NO  = B.ENO_NO
            AND   A.ENO_NO  = C.ENO_NO(+)
            AND   A.PIS_YY  = ?
            AND   A.PIS_MM  = ?
            AND   A.SAL_GBN = ?
            AND   A.SEQ = ?
            AND   A.GMK_TAG = '0'
            ORDER BY A.ENO_NO
            ]]>
        </query>
    </sql>

 	<!-- 출자금 - 신규생성자 파일 출력-->
    <sql name="SAGA120_FILE_02_1">
    	<description>출자금 신규생성자</description>
    	<query>
    	<![CDATA[
    	SELECT ROW_NUMBER() OVER(ORDER BY A.ENO_NO) AS NUM,
    		(B.OCC_CD ||' ' ||B.ENO_NO ||'  ' || B.CET_NO ||' ' || TO_CHAR(B.HIR_YMD,'YYYYMMDD') ||' ' ||
    		 B.ENO_NM ||' ' || B.EM_PHN_NO ) AS NPN_NO
		FROM(SELECT ENO_NO
        	   FROM T_AC_LOAN
       		  WHERE PIS_YY = ? AND PIS_MM = ? AND SEQ = ?
        		AND SAL_GBN = ?
        		AND GMK_TAG = '0'
       		  MINUS
      		 SELECT DISTINCT(ENO_NO)
               FROM T_AC_LOAN L, T_CP_WORKLOG W
              WHERE L.PIS_YY = W.PIS_YY AND L.PIS_MM = W.PIS_MM
              	AND L.SAL_GBN = W.SAL_GBN AND L.SEQ = W.SEQ AND GMK_TAG = '0'
              	AND W.PAY_YMD < ( SELECT MAX(PAY_YMD)
                                    FROM T_CP_WORKLOG
                                   WHERE PIS_YY = ? AND PIS_MM = ?
                                     AND SAL_GBN = '0'
                                     AND OCC_CD in ('0','1','2','3','8','9')
                                     AND PAY_YMD IS NOT NULL
                               )
        ) A, T_CM_PERSON B
		where A.ENO_NO = B.ENO_NO
		]]>
		</query>
    </sql>

    <!-- 출자금 - 직종전환 파일 출력-->
    <sql name="SAGA120_FILE_02_2">
	    <description>출자금 직종전환</description>
    	<query>
    	<![CDATA[
		SELECT ROW_NUMBER() OVER(ORDER BY A.ENO_NO) AS NUM,
			(B.OCC_CD ||' ' || B.ENO_NO ||'  ' || B.CET_NO ||' ' || B.HIR_YMD ||' ' || B.ENO_NM) AS NPN_NO
		FROM T_CM_AHISTORY A, T_CM_PERSON B
		WHERE A.STR_YMD LIKE ?||?||'%'
		AND A.APP_CD = 'LG1'
		AND A.ENO_NO = B.ENO_NO
		]]>
		</query>
    </sql>

    <!-- 대출상환금 사원정보 조회 -->
    <sql name="SAGA120_SHR_03">
        <description>대출상환금 사원정보 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD,
                   DPT_NM,
                   JOB_NM,
                   ENO_NO,
                   ENO_NM
            FROM   VI_T_CM_PERSON2
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 대출상환금 저장 -->
    <sql name="SAGA120_INS_03">
        <description>대출상환금 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_AC_LOAN
                       (PIS_YY, PIS_MM, ENO_NO, GMK_TAG, GMKL_NO,
                        GMK_AMT, GMK_INT, CET_NO, SAL_GBN, OCC_CD, DED_TAG, SEQ, GMK_BAK,
                        IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
            VALUES     (?, ?, ?, ?, ?,
                        ?, ?, ?, ?, ?, ?, ?, ?,
                        ?, SYSDATE,?, SYSDATE)
            ]]>
        </query>
    </sql>

    <!-- 연말정산 -->
    <sql name="SAGA120_SHR_04">
        <description>연말정산</description>
        <query>
            <![CDATA[
SELECT VIEW_1.SEL_KEY as yac_sel_key,
       VIEW_1.REC_TAG as yac_rec_tag,
       VIEW_1.TAX_CD as yac_tax_cd,
       VIEW_1.COMP_CD as yac_comp_cd,
       VIEW_1.CNT as yac_cnt,
       VIEW_1.NAM_KOR as yac_nam_kor,
       VIEW_1.CET_NO as yac_cet_no,
       VIEW_1.ZIP_NO as yac_zip_no,
       VIEW_1.JUSO as yac_juso,
       VIEW_1.JAS_NM as yac_jas_nm,
       VIEW_1.JAO_NO as yac_jao_no,
       (VIEW_1.SALT_AMTS - VIEW_1.OUTT_AMTS) as yac_salt_amts,
       VIEW_1.PAYD_AMTB as yac_salt_amtb,
       VIEW_1.SALT_AMTT as yac_salt_amtt,
       (VIEW_1.FREE_INCOME - VIEW_1.OUTT_AMTS) as yac_free_income,
       VIEW_1.FIN_SALT as yac_fin_salt,
       VIEW_1.TAX_INCOME as yac_tax_income,
       VIEW_1.OUTT_AMTS as yac_outt_amts,
       VIEW_1.MGR_AMT as yac_mgr_amt,
       VIEW_1.MNI_AMT as yac_mni_amt,
       VIEW_1.BADD_AMT as yac_badd_amt,
       NVL(VIEW_1.SOU_CNT,'0') as yac_sou_cnt,
       VIEW_1.SPSB_AMT as yac_spsb_amt,
       NVL(VIEW_1.DFM_CNT,'0') as yac_dfm_cnt,
       VIEW_1.GDED_AMT as yac_gded_amt,
       NVL(VIEW_1.GOL_CNT,'0') as yac_gol_cnt,
       VIEW_1.GOL_AMT as yac_gol_amt,
       NVL(VIEW_1.GOL_CNT65,'0') as yac_gol_cnt65,
       NVL(VIEW_1.GOL_CNT70,'0') as yac_gol_cnt70,
       NVL(VIEW_1.TRB_CNT,'0') as yac_trb_cnt,
       VIEW_1.TBL_DED as yac_tbl_ded,
       VIEW_1.WDD_AMT as yac_wdd_amt,
       NVL(VIEW_1.RCH_CNT,'0') as yac_rch_cnt,
       VIEW_1.RCH_AMT as yac_rch_amt,
       NVL(VIEW_1.INP_CNT,'0') as yac_inp_cnt,
       VIEW_1.INP_AMT as yac_inp_amt,
       NVL(VIEW_1.CHI_CNT,'0')  as yac_chi_cnt,
       NVL(VIEW_1.ONE_AMT,'0')  as yac_one_amt,
       VIEW_1.SMD_AMT as yac_smd_amt,
       VIEW_1.MIN_DED as yac_min_ded,
       CASE WHEN MIN_DED < (VIEW_1.HINU_AMT + VIEW_1.HINS_AMT + VIEW_1.LIN_DED + VIEW_1.LIH_DED) THEN
         GREATEST(0, VIEW_1.LIN_DED - (VIEW_1.HINU_AMT + VIEW_1.HINS_AMT + VIEW_1.LIN_DED + VIEW_1.LIH_DED - MIN_DED))
       ELSE
          VIEW_1.LIN_DED
       END yac_lin_ded,
       CASE WHEN MIN_DED < (VIEW_1.HINU_AMT + VIEW_1.HINS_AMT + VIEW_1.LIH_DED) THEN
	      GREATEST(0, VIEW_1.HINU_AMT - (VIEW_1.HINU_AMT + VIEW_1.HINS_AMT + VIEW_1.LIH_DED - MIN_DED))
	   ELSE
		  VIEW_1.HINU_AMT
	   END yac_hinu_amt,
	   CASE WHEN MIN_DED < (VIEW_1.HINS_AMT + VIEW_1.LIH_DED) THEN
	      GREATEST(0, VIEW_1.HINS_AMT - (VIEW_1.HINS_AMT + VIEW_1.LIH_DED - MIN_DED))
	   ELSE
		  VIEW_1.HINS_AMT
	   END yac_hins_amt,
       VIEW_1.LIH_DED as yac_lih_ded,
       VIEW_1.HAN_AMT as yac_han_amt,
       VIEW_1.MMA_DED as yac_mma_ded,
       VIEW_1.HED_AMT as yac_hed_amt,
       VIEW_1.EDU_DED as yac_edu_ded,
       VIEW_1.HOS_DED as yac_hos_ded,
       VIEW_1.LOAN_DED as yac_loan_ded,
       VIEW_1.PLOAN_DED as yac_ploan_ded,
       VIEW_1.MRENT_DED as yac_mrent_ded,
       VIEW_1.LONG1_DED as yac_long1_ded,
       VIEW_1.LONG2_DED as yac_long2_ded,
       VIEW_1.LONG3_DED as yac_long3_ded,
       VIEW_1.LONG4_DED as yac_long4_ded,
       VIEW_1.LONG5_DED as yac_long5_ded,
       VIEW_1.LC1_AMT as yac_lc1_amt,
       VIEW_1.LST_AMT as yac_lst_amt,
       VIEW_1.LJJ_AMT as yac_ljj_amt,
       VIEW_1.CPC_DED as yac_cpc_ded,
       VIEW_1.NSE_TOT as yac_nse_tot,
       GREATEST(VIEW_1.INDED_TOT,0) as yac_inded_tot,
       VIEW_1.PER_SAV as yac_per_sav,
       VIEW_1.CARD_DED as yac_card_ded,
       VIEW_1.SAVE_DED as yac_save_ded,
       VIEW_1.SAVE1_DED as yac_save1_ded,
       VIEW_1.SAVE2_DED as yac_save2_ded,
       VIEW_1.SAVE3_DED as yac_save3_ded,
       VIEW_1.SAVE4_DED as yac_save4_ded,
       VIEW_1.STOCK_DED as yac_stock_ded,
       VIEW_1.VEN_DED as yac_ven_ded,
       GREATEST(VIEW_1.TTAX_STD,0) as yac_ttax_std,
       VIEW_1.TAX_AMT as yac_tax_amt,
       VIEW_1.HGR_DED as yac_hgr_ded,
       VIEW_1.STX_DED as yac_stx_ded,
       VIEW_1.HTX_DED as yac_htx_ded,
       VIEW_1.HSX_DED as yac_hsx_ded,
       VIEW_1.TDED_TOT as yac_tded_tot,
       GREATEST(VIEW_1.DGG_TAX,0) as yac_dgg_tax,
       VIEW_1.DBW_TAX as yac_dbw_tax,
       GREATEST(VIEW_1.DJM_TAX,0) as yac_djm_tax,
       VIEW_1.JAL_AMT as yac_jal_amt,
       VIEW_1.JAG_AMT as yac_jag_amt,
       VIEW_1.JAN_AMT as yac_jan_amt,
       VIEW_1.INCM_TAX as yac_incm_tax,
       VIEW_1.CITI_TAX as yac_citi_tax,
       VIEW_1.HIR_YMD as ems_hir_ymd,
       VIEW_1.RET_YMD as ems_ret_ymd,
       VIEW_1.STA_TOT as yac_sta_tot,
       VIEW_1.NPEN_DED as yac_npen_ded,
       VIEW_1.ANN_DED as yac_ann_ded,
       VIEW_1.LSX_DED as yac_lsx_ded,
       VIEW_1.SEA_FREE as yac_sea_free,
       VIEW_1.FORE_AMT as yac_fore_amt,
       VIEW_1.GOV_DED as yac_gov_ded,
       VIEW_1.OTX_DED as yac_otx_ded,
       VIEW_1.WFM_DED as yac_wfm_ded,
       VIEW_1.SPC_TOT as yac_spc_tot,
       VIEW_1.CASH_AMT as yac_cash_amt,
       VIEW_1.JAI_AMT as yac_jai_amt,
       VIEW_1.DRE_INTX as yac_dre_intx,
       VIEW_1.DRE_CTTX as yac_dre_cttx,
       VIEW_1.DRE_DFTX as yac_dre_dftx,
       VIEW_1.HOL_YN as yac_hol_yn,
       VIEW_1.REL_CD1 as temp_s21,
       VIEW_1.NAM_KOR1 as temp_s22,
       VIEW_1.CET_NO1 as temp_s23,
       VIEW_1.BAS_MAN1 as temp_s24,
       VIEW_1.TRB_MAN1 as temp_s25,
       VIEW_1.RCH_MAN1 as temp_s26,
       VIEW_1.WCT_MAN1 as temp_s19,
       VIEW_1.GOL_MAN1 as temp_s18,
       VIEW_1.CHI_MAN1 as temp_s17,
       VIEW_1.INP_MAN1 as temp_s100,
       VIEW_1.ONE_MAN1 as ONE_MAN1,
       VIEW_1.INV_NTS1 as temp_s27,
       VIEW_1.MED_NTS1 as temp_s28,
       VIEW_1.EDU_NTS1 as temp_s29,
       VIEW_1.CARD_NTS1 as temp_s30,
       VIEW_1.DIR_CARD_NTS1 as temp_s30_1,
       VIEW_1.CASH_NTS1 as temp_s31,
       VIEW_1.MARKET_NTS1 as temp_s31_1,
       VIEW_1.PUBLIC_NTS1 as PUBLIC_NTS1,
       VIEW_1.LC3_AMT_NTS1 as temp_s105,
       VIEW_1.INV_AMT1 as temp_s32,
       VIEW_1.MED_AMT1 as temp_s33,
       VIEW_1.EDU_AMT1 as temp_s34,
       VIEW_1.CARD_AMT1 as temp_s35,
       VIEW_1.DIR_CARD_AMT1 as temp_s35_1,

       VIEW_1.SCH_AMT1 as temp_s35_2,
       VIEW_1.MARKET_AMT1 as temp_s35_3,
       VIEW_1.PUBLIC_AMT1 as PUBLIC_AMT1,
       VIEW_1.LC3_AMT1 as temp_s36,
       VIEW_1.REL_CD2 as temp_s37,
       VIEW_1.NAM_KOR2 as temp_s38,
       VIEW_1.CET_NO2 as temp_s39,
       VIEW_1.BAS_MAN2 as temp_s40,
       VIEW_1.TRB_MAN2 as temp_s41,
       VIEW_1.RCH_MAN2 as temp_s42,
       VIEW_1.WCT_MAN2 as temp_s16,
       VIEW_1.GOL_MAN2 as temp_s15,
       VIEW_1.CHI_MAN2 as temp_s14,
       VIEW_1.INP_MAN2 as temp_s101,
       VIEW_1.ONE_MAN2 as ONE_MAN2,
       VIEW_1.INV_NTS2 as temp_s43,
       VIEW_1.MED_NTS2 as temp_s44,
       VIEW_1.EDU_NTS2 as temp_s45,
       VIEW_1.CARD_NTS2 as temp_s46,
       VIEW_1.DIR_CARD_NTS2 as temp_s46_1,
       VIEW_1.CASH_NTS2 as temp_s47,
       VIEW_1.MARKET_NTS2 as temp_s47_1,
       VIEW_1.PUBLIC_NTS2 as PUBLIC_NTS2,
       VIEW_1.LC3_AMT_NTS2 as temp_s106,
       VIEW_1.INV_AMT2 as temp_s48,
       VIEW_1.MED_AMT2 as temp_s49,
       VIEW_1.EDU_AMT2 as temp_s50,
       VIEW_1.CARD_AMT2 as temp_s51,
       VIEW_1.DIR_CARD_AMT2 as temp_s51_1,

       VIEW_1.SCH_AMT2 as temp_s51_2,
       VIEW_1.MARKET_AMT2 as temp_s51_3,
       VIEW_1.PUBLIC_AMT2 as PUBLIC_AMT2,
       VIEW_1.LC3_AMT2 as temp_s52,
       VIEW_1.REL_CD3 as temp_s53,
       VIEW_1.NAM_KOR3 as temp_s54,
       VIEW_1.CET_NO3 as temp_s55,
       VIEW_1.BAS_MAN3 as temp_s56,
       VIEW_1.TRB_MAN3 as temp_s57,
       VIEW_1.RCH_MAN3 as temp_s58,
       VIEW_1.WCT_MAN3 as temp_s13,
       VIEW_1.GOL_MAN3 as temp_s12,
       VIEW_1.CHI_MAN3 as temp_s11,
       VIEW_1.INP_MAN3 as temp_s102,
       VIEW_1.ONE_MAN3 as ONE_MAN3,
       VIEW_1.INV_NTS3 as temp_s59,
       VIEW_1.MED_NTS3 as temp_s60,
       VIEW_1.EDU_NTS3 as temp_s61,
       VIEW_1.CARD_NTS3 as temp_s62,
       VIEW_1.DIR_CARD_NTS3 as temp_s62_1,
       VIEW_1.CASH_NTS3 as temp_s63,

       VIEW_1.MARKET_NTS3 as temp_s63_1,
       VIEW_1.PUBLIC_NTS3 as PUBLIC_NTS3,
       VIEW_1.LC3_AMT_NTS3 as temp_s107,
       VIEW_1.INV_AMT3 as temp_s64,
       VIEW_1.MED_AMT3 as temp_s65,
       VIEW_1.EDU_AMT3 as temp_s66,
       VIEW_1.CARD_AMT3 as temp_s67,
       VIEW_1.DIR_CARD_AMT3 as temp_s67_1,

       VIEW_1.SCH_AMT3 as temp_s67_2,
       VIEW_1.MARKET_AMT3 as temp_s67_3,
       VIEW_1.PUBLIC_AMT3 as PUBLIC_AMT3,
       VIEW_1.LC3_AMT3 as temp_s68,
       VIEW_1.REL_CD4 as temp_s69,
       VIEW_1.NAM_KOR4 as temp_s70,
       VIEW_1.CET_NO4 as temp_s71,
       VIEW_1.BAS_MAN4 as temp_s72,
       VIEW_1.TRB_MAN4 as temp_s73,
       VIEW_1.RCH_MAN4 as temp_s74,
       VIEW_1.WCT_MAN4 as temp_s10,
       VIEW_1.GOL_MAN4 as temp_s9,
       VIEW_1.CHI_MAN4 as temp_s8,
       VIEW_1.INP_MAN4 as temp_s103,
       VIEW_1.ONE_MAN4 as ONE_MAN4,
       VIEW_1.INV_NTS4 as temp_s75,
       VIEW_1.MED_NTS4 as temp_s76,
       VIEW_1.EDU_NTS4 as temp_s77,
       VIEW_1.CARD_NTS4 as temp_s78,
       VIEW_1.DIR_CARD_NTS4 as temp_s78_1,
       VIEW_1.CASH_NTS4 as temp_s79,

       VIEW_1.MARKET_NTS4 as temp_s79_1,
       VIEW_1.PUBLIC_NTS4 as PUBLIC_NTS4,
       VIEW_1.LC3_AMT_NTS4 as temp_s108,
       VIEW_1.INV_AMT4 as temp_s80,
       VIEW_1.MED_AMT4 as temp_s81,
       VIEW_1.EDU_AMT4 as temp_s82,
       VIEW_1.CARD_AMT4 as temp_s83,
       VIEW_1.DIR_CARD_AMT4 as temp_s83_1,

       VIEW_1.SCH_AMT4 as temp_s83_2,
       VIEW_1.MARKET_AMT4 as temp_s83_3,
       VIEW_1.PUBLIC_AMT4 as PUBLIC_AMT4,
       VIEW_1.LC3_AMT4 as temp_s84,
       VIEW_1.REL_CD5 as temp_s85,
       VIEW_1.NAM_KOR5 as temp_s86,
       VIEW_1.CET_NO5 as temp_s87,
       VIEW_1.BAS_MAN5 as temp_s88,
       VIEW_1.TRB_MAN5 as temp_s89,
       VIEW_1.RCH_MAN5 as temp_s90,
       VIEW_1.WCT_MAN5 as temp_s7,
       VIEW_1.GOL_MAN5 as temp_s6,
       VIEW_1.CHI_MAN5 as temp_s5,
       VIEW_1.INP_MAN5 as temp_s104,
       VIEW_1.ONE_MAN5 as ONE_MAN5,
       VIEW_1.INV_NTS5 as temp_s91,
       VIEW_1.MED_NTS5 as temp_s92,
       VIEW_1.EDU_NTS5 as temp_s93,
       VIEW_1.CARD_NTS5 as temp_s94,
       VIEW_1.DIR_CARD_NTS5 as temp_s94_1,
       VIEW_1.CASH_NTS5 as temp_s95,

       VIEW_1.MARKET_NTS5 as temp_s95_1,
       VIEW_1.PUBLIC_NTS5 as PUBLIC_NTS5,
       VIEW_1.LC3_AMT_NTS5 as temp_s109,
       VIEW_1.INV_AMT5 as temp_s96,
       VIEW_1.MED_AMT5 as temp_s97,
       VIEW_1.EDU_AMT5 as temp_s98,
       VIEW_1.CARD_AMT5 as temp_s99,
       VIEW_1.DIR_CARD_AMT5 as temp_s99_1,

       VIEW_1.SCH_AMT5 as temp_s99_2,
       VIEW_1.MARKET_AMT5 as temp_s99_3,
       VIEW_1.PUBLIC_AMT5 as PUBLIC_AMT5,
       VIEW_1.LC3_AMT5 as temp_s20,
       VIEW_1.PEN_GUBUN_CD_1 as PEN_GUBUN_CD_1,
       VIEW_1.ABA_CD_1 as ABA_CD_1,
       VIEW_1.ABA_NM_1 as ABA_NM_1,
       VIEW_1.ACC_NO_1 as ACC_NO_1,
	   VIEW_1.YEAR_SEQ_1 as YEAR_SEQ_1,
	   VIEW_1.AMOUNT_1 as AMOUNT_1,
	   VIEW_1.DED_AMT_1 as DED_AMT_1,
	   VIEW_1.PEN_GUBUN_CD_2 as PEN_GUBUN_CD_2,
       VIEW_1.ABA_CD_2 as ABA_CD_2,
       VIEW_1.ABA_NM_2 as ABA_NM_2,
       VIEW_1.ACC_NO_2 as ACC_NO_2,
	   VIEW_1.YEAR_SEQ_2 as YEAR_SEQ_2,
	   VIEW_1.AMOUNT_2 as AMOUNT_2,
	   VIEW_1.DED_AMT_2 as DED_AMT_2,
	   VIEW_1.PEN_GUBUN_CD_3 as PEN_GUBUN_CD_3,
       VIEW_1.ABA_CD_3 as ABA_CD_3,
       VIEW_1.ABA_NM_3 as ABA_NM_3,
       VIEW_1.ACC_NO_3 as ACC_NO_3,
	   VIEW_1.YEAR_SEQ_3 as YEAR_SEQ_3,
	   VIEW_1.AMOUNT_3 as AMOUNT_3,
	   VIEW_1.DED_AMT_3 as DED_AMT_3,
	   VIEW_1.PEN_GUBUN_CD_4 as PEN_GUBUN_CD_4,
       VIEW_1.ABA_CD_4 as ABA_CD_4,
       VIEW_1.ABA_NM_4 as ABA_NM_4,
       VIEW_1.ACC_NO_4 as ACC_NO_4,
	   VIEW_1.YEAR_SEQ_4 as YEAR_SEQ_4,
	   VIEW_1.AMOUNT_4 as AMOUNT_4,
	   VIEW_1.DED_AMT_4 as DED_AMT_4,
	   VIEW_1.PEN_GUBUN_CD_5 as PEN_GUBUN_CD_5,
       VIEW_1.ABA_CD_5 as ABA_CD_5,
       VIEW_1.ABA_NM_5 as ABA_NM_5,
       VIEW_1.ACC_NO_5 as ACC_NO_5,
	   VIEW_1.YEAR_SEQ_5 as YEAR_SEQ_5,
	   VIEW_1.AMOUNT_5 as AMOUNT_5,
	   VIEW_1.DED_AMT_5 as DED_AMT_5,
	   VIEW_1.PEN_GUBUN_CD_6 as PEN_GUBUN_CD_6,
       VIEW_1.ABA_CD_6 as ABA_CD_6,
       VIEW_1.ABA_NM_6 as ABA_NM_6,
       VIEW_1.ACC_NO_6 as ACC_NO_6,
	   VIEW_1.YEAR_SEQ_6 as YEAR_SEQ_6,
	   VIEW_1.AMOUNT_6 as AMOUNT_6,
	   VIEW_1.DED_AMT_6 as DED_AMT_6,
	   VIEW_1.PEN_GUBUN_CD_7 as PEN_GUBUN_CD_7,
       VIEW_1.ABA_CD_7 as ABA_CD_7,
       VIEW_1.ABA_NM_7 as ABA_NM_7,
       VIEW_1.ACC_NO_7 as ACC_NO_7,
	   VIEW_1.YEAR_SEQ_7 as YEAR_SEQ_7,
	   VIEW_1.AMOUNT_7 as AMOUNT_7,
	   VIEW_1.DED_AMT_7 as DED_AMT_7,
	   VIEW_1.PEN_GUBUN_CD_8 as PEN_GUBUN_CD_8,
       VIEW_1.ABA_CD_8 as ABA_CD_8,
       VIEW_1.ABA_NM_8 as ABA_NM_8,
       VIEW_1.ACC_NO_8 as ACC_NO_8,
	   VIEW_1.YEAR_SEQ_8 as YEAR_SEQ_8,
	   VIEW_1.AMOUNT_8 as AMOUNT_8,
	   VIEW_1.DED_AMT_8 as DED_AMT_8,
	   VIEW_1.PEN_GUBUN_CD_9 as PEN_GUBUN_CD_9,
       VIEW_1.ABA_CD_9 as ABA_CD_9,
       VIEW_1.ABA_NM_9 as ABA_NM_9,
       VIEW_1.ACC_NO_9 as ACC_NO_9,
	   VIEW_1.YEAR_SEQ_9 as YEAR_SEQ_9,
	   VIEW_1.AMOUNT_9 as AMOUNT_9,
	   VIEW_1.DED_AMT_9 as DED_AMT_9,
	   VIEW_1.PEN_GUBUN_CD_10 as PEN_GUBUN_CD_10,
       VIEW_1.ABA_CD_10 as ABA_CD_10,
       VIEW_1.ABA_NM_10 as ABA_NM_10,
       VIEW_1.ACC_NO_10 as ACC_NO_10,
	   VIEW_1.YEAR_SEQ_10 as YEAR_SEQ_10,
	   VIEW_1.AMOUNT_10 as AMOUNT_10,
	   VIEW_1.DED_AMT_10 as DED_AMT_10,
	   VIEW_1.PEN_GUBUN_CD_11 as PEN_GUBUN_CD_11,
       VIEW_1.ABA_CD_11 as ABA_CD_11,
       VIEW_1.ABA_NM_11 as ABA_NM_11,
       VIEW_1.ACC_NO_11 as ACC_NO_11,
	   VIEW_1.YEAR_SEQ_11 as YEAR_SEQ_11,
	   VIEW_1.AMOUNT_11 as AMOUNT_11,
	   VIEW_1.DED_AMT_11 as DED_AMT_11,
	   VIEW_1.PEN_GUBUN_CD_12 as PEN_GUBUN_CD_12,
       VIEW_1.ABA_CD_12 as ABA_CD_12,
       VIEW_1.ABA_NM_12 as ABA_NM_12,
       VIEW_1.ACC_NO_12 as ACC_NO_12,
	   VIEW_1.YEAR_SEQ_12 as YEAR_SEQ_12,
	   VIEW_1.AMOUNT_12 as AMOUNT_12,
	   VIEW_1.DED_AMT_12 as DED_AMT_12,
	   VIEW_1.PEN_GUBUN_CD_13 as PEN_GUBUN_CD_13,
       VIEW_1.ABA_CD_13 as ABA_CD_13,
       VIEW_1.ABA_NM_13 as ABA_NM_13,
       VIEW_1.ACC_NO_13 as ACC_NO_13,
	   VIEW_1.YEAR_SEQ_13 as YEAR_SEQ_13,
	   VIEW_1.AMOUNT_13 as AMOUNT_13,
	   VIEW_1.DED_AMT_13 as DED_AMT_13,
	   VIEW_1.PEN_GUBUN_CD_14 as PEN_GUBUN_CD_14,
       VIEW_1.ABA_CD_14 as ABA_CD_14,
       VIEW_1.ABA_NM_14 as ABA_NM_14,
       VIEW_1.ACC_NO_14 as ACC_NO_14,
	   VIEW_1.YEAR_SEQ_14 as YEAR_SEQ_14,
	   VIEW_1.AMOUNT_14 as AMOUNT_14,
	   VIEW_1.DED_AMT_14 as DED_AMT_14,
	   VIEW_1.PEN_GUBUN_CD_15 as PEN_GUBUN_CD_15,
       VIEW_1.ABA_CD_15 as ABA_CD_15,
       VIEW_1.ABA_NM_15 as ABA_NM_15,
       VIEW_1.ACC_NO_15 as ACC_NO_15,
	   VIEW_1.YEAR_SEQ_15 as YEAR_SEQ_15,
	   VIEW_1.AMOUNT_15 as AMOUNT_15,
	   VIEW_1.DED_AMT_15 as DED_AMT_15
 FROM
 (SELECT YAC.ENO_NO||'C'||YAC.PIS_YY||YAC.PIS_MM SEL_KEY,
         'C' REC_TAG,'20227' TAX_CD,'2218113834' COMP_CD,EMS.NAM_KOR,
         EMS.CET_NO,EMS.ZIP_NO,EMS.JUSO,NVL(YAB.CNT,0) CNT,'' JAS_NM,
         '' JAO_NO,
         YAC.TAX_INCOME SALT_AMTS,
         YAC.PAYD_AMTB,
         YAC.TAX_INCOME SALT_AMTT,
         YAC.FREE_INCOME + NVL(YAB.JAG_AMT,0) FREE_INCOME,
         YAC.FIN_SALT FIN_SALT,
         YAC.TAX_INCOME + YAC.YAB_INCOME TAX_INCOME,
         YAC.OUTT_AMTS,
         YAC.MGR_AMT,
         YAC.MNI_AMT,YAC.BADD_AMT,
         YAC.SOU_CNT,YAC.SPSB_AMT,YAC.DFM_CNT,YAC.GDED_AMT,YAC.GOL_CNT,YAC.GOL_AMT,
         YAC.GOL_CNT65, YAC.GOL_CNT70,
         YAC.TRB_CNT,YAC.TBL_DED,YAC.WDD_AMT,YAC.RCH_CNT,YAC.RCH_AMT,
         YAC.INP_CNT,YAC.INP_AMT,DECODE(YAC.CHI_CNT,'1','0',YAC.CHI_CNT) CHI_CNT,
         YAC.ONE_AMT,
         YAC.SMD_AMT,YAC.MIN_DED,
         DECODE(NVL(YAC.NSE_TOT,0), 0, 0, YAC.HINU_AMT+YAC.OLD_AMT+NVL(YAB.JAH_AMT,0)) HINU_AMT,
         DECODE(NVL(YAC.NSE_TOT,0), 0, 0, YAC.HINS_AMT+NVL(YAB.JAP_AMT,0)) HINS_AMT,
         DECODE(NVL(YAC.NSE_TOT,0), 0, 0, YAC.LIN_DED) LIN_DED,
         DECODE(NVL(YAC.NSE_TOT,0), 0, 0, YAC.LIH_DED) LIH_DED,
         YAC.HAN_AMT,YAC.MMA_DED,
         YAC.HED_AMT,YAC.EDU_DED,
         YAC.HOS_DED,YAC.LOAN_DED, YAC.PLOAN_DED,YAC.MRENT_DED,

         NVL(LONG1.LONG_DED,0) AS LONG1_DED,
         NVL(LONG2.LONG_DED,0) AS LONG2_DED,
         NVL(LONG3.LONG_DED,0) AS LONG3_DED,
         NVL(LONG4.LONG_DED,0) AS LONG4_DED,
         NVL(LONG5.LONG_DED,0) AS LONG5_DED,
         NVL(YAC.LC1_AMT,0) AS LC1_AMT,
         NVL(YAC.LST_AMT,0) AS LST_AMT,
         NVL(YAC.LJJ_AMT,0) AS LJJ_AMT,
         YAC.CPC_DED,
         YAC.NSE_TOT,YAC.MNI_AMT-YAC.INDED_TOT+YAC.SPC_TOT INDED_TOT,
         YAC.PER_SAV,
         NVL(YAC.CARD_DED,0) CARD_DED,
         YAC.SAVE_DED, YAC.SAVE1_DED, YAC.SAVE2_DED, YAC.SAVE3_DED, YAC.SAVE4_DED,
         YAC.STOCK_DED, NVL(YAC.VEN_DED,0) VEN_DED,
         YAC.TTAX_STD ,YAC.TAX_AMT,YAC.HGR_DED,YAC.STX_DED,YAC.HTX_DED,YAC.HSX_DED,
         YAC.TDED_TOT,YAC.DGG_TAX,YAC.DBW_TAX,YAC.DJM_TAX,
         NVL(YAB.JAL_AMT,0) JAL_AMT,NVL(YAB.JAN_AMT,0) JAN_AMT,
         YAC.INCM_TAX,YAC.CITI_TAX,
         EMS.HIR_YMD HIR_YMD, EMS.RET_YMD RET_YMD,
         NVL(YAC.STA_TOT,0) STA_TOT, NVL(YAC.NPEN_DED,0) NPEN_DED,
         NVL(YAC.ANN_DED,0) ANN_DED, NVL(YAC.LSX_DED,0) LSX_DED,
         YAC.SEA_FREE SEA_FREE, YAC.FORE_AMT FORE_AMT, YAC.GOV_DED GOV_DED, YAC.OTX_DED,
         YAC.WFM_DED WFM_DED,
         YAC.SPC_TOT SPC_TOT, YAC.CASH_AMT CASH_AMT, 0 JAI_AMT, 0 JAG_AMT,
         YAC.DRE_INTX, YAC.DRE_CTTX, YAC.DRE_DFTX, DECODE(YAC.HOL_YN,'Y','1', '2') HOL_YN,
         '' REL_CD1,  '' NAM_KOR1, '' CET_NO1,
         '' BAS_MAN1, '' TRB_MAN1, '' RCH_MAN1, '' WCT_MAN1,  '' GOL_MAN1, '' CHI_MAN1, '' INP_MAN1, '' ONE_MAN1,
         '' INV_NTS1, '' MED_NTS1, '' EDU_NTS1, '' CARD_NTS1, '' DIR_CARD_NTS1,'' CASH_NTS1, '' MARKET_NTS1, '' PUBLIC_NTS1,'' LC3_AMT_NTS1,
         '' INV_AMT1, '' MED_AMT1, '' EDU_AMT1, '' CARD_AMT1, '' DIR_CARD_AMT1,'' SCH_AMT1, '' MARKET_AMT1, '' PUBLIC_AMT1,'' LC3_AMT1,
         '' REL_CD2,  '' NAM_KOR2, '' CET_NO2,
         '' BAS_MAN2, '' TRB_MAN2, '' RCH_MAN2, '' WCT_MAN2,  '' GOL_MAN2, '' CHI_MAN2, '' INP_MAN2, '' ONE_MAN2,
         '' INV_NTS2, '' MED_NTS2, '' EDU_NTS2, '' CARD_NTS2, '' DIR_CARD_NTS2,'' CASH_NTS2, '' MARKET_NTS2, '' PUBLIC_NTS2,'' LC3_AMT_NTS2,
         '' INV_AMT2, '' MED_AMT2, '' EDU_AMT2, '' CARD_AMT2, '' DIR_CARD_AMT2,'' SCH_AMT2, '' MARKET_AMT2, '' PUBLIC_AMT2,'' LC3_AMT2,
         '' REL_CD3,  '' NAM_KOR3, '' CET_NO3,
         '' BAS_MAN3, '' TRB_MAN3, '' RCH_MAN3, '' WCT_MAN3,  '' GOL_MAN3, '' CHI_MAN3, '' INP_MAN3, '' ONE_MAN3,
         '' INV_NTS3, '' MED_NTS3, '' EDU_NTS3, '' CARD_NTS3, '' DIR_CARD_NTS3,'' CASH_NTS3, '' MARKET_NTS3, '' PUBLIC_NTS3,'' LC3_AMT_NTS3,
         '' INV_AMT3, '' MED_AMT3, '' EDU_AMT3, '' CARD_AMT3, '' DIR_CARD_AMT3,'' SCH_AMT3, '' MARKET_AMT3, '' PUBLIC_AMT3,'' LC3_AMT3,
         '' REL_CD4,  '' NAM_KOR4, '' CET_NO4,
         '' BAS_MAN4, '' TRB_MAN4, '' RCH_MAN4, '' WCT_MAN4,  '' GOL_MAN4, '' CHI_MAN4, '' INP_MAN4, '' ONE_MAN4,
         '' INV_NTS4, '' MED_NTS4, '' EDU_NTS4, '' CARD_NTS4, '' DIR_CARD_NTS4,'' CASH_NTS4, '' MARKET_NTS4, '' PUBLIC_NTS4,'' LC3_AMT_NTS4,
         '' INV_AMT4, '' MED_AMT4, '' EDU_AMT4, '' CARD_AMT4, '' DIR_CARD_AMT4,'' SCH_AMT4, '' MARKET_AMT4, '' PUBLIC_AMT4,'' LC3_AMT4,
         '' REL_CD5,  '' NAM_KOR5, '' CET_NO5,
         '' BAS_MAN5, '' TRB_MAN5, '' RCH_MAN5, '' WCT_MAN5,  '' GOL_MAN5, '' CHI_MAN5, '' INP_MAN5, '' ONE_MAN5,
         '' INV_NTS5, '' MED_NTS5, '' EDU_NTS5, '' CARD_NTS5, '' DIR_CARD_NTS5,'' CASH_NTS5, '' MARKET_NTS5, '' PUBLIC_NTS5,'' LC3_AMT_NTS5,
         '' INV_AMT5, '' MED_AMT5, '' EDU_AMT5, '' CARD_AMT5, '' DIR_CARD_AMT5,'' SCH_AMT5, '' MARKET_AMT5, '' PUBLIC_AMT5,'' LC3_AMT5,
         '' PEN_GUBUN_CD_1,'' ABA_CD_1,'' ABA_NM_1,'' ACC_NO_1,'' YEAR_SEQ_1,0 AMOUNT_1,0 DED_AMT_1,
         '' PEN_GUBUN_CD_2,'' ABA_CD_2,'' ABA_NM_2,'' ACC_NO_2,'' YEAR_SEQ_2,0 AMOUNT_2,0 DED_AMT_2,
         '' PEN_GUBUN_CD_3,'' ABA_CD_3,'' ABA_NM_3,'' ACC_NO_3,'' YEAR_SEQ_3,0 AMOUNT_3,0 DED_AMT_3,
         '' PEN_GUBUN_CD_4,'' ABA_CD_4,'' ABA_NM_4,'' ACC_NO_4,'' YEAR_SEQ_4,0 AMOUNT_4,0 DED_AMT_4,
         '' PEN_GUBUN_CD_5,'' ABA_CD_5,'' ABA_NM_5,'' ACC_NO_5,'' YEAR_SEQ_5,0 AMOUNT_5,0 DED_AMT_5,
         '' PEN_GUBUN_CD_6,'' ABA_CD_6,'' ABA_NM_6,'' ACC_NO_6,'' YEAR_SEQ_6,0 AMOUNT_6,0 DED_AMT_6,
         '' PEN_GUBUN_CD_7,'' ABA_CD_7,'' ABA_NM_7,'' ACC_NO_7,'' YEAR_SEQ_7,0 AMOUNT_7,0 DED_AMT_7,
         '' PEN_GUBUN_CD_8,'' ABA_CD_8,'' ABA_NM_8,'' ACC_NO_8,'' YEAR_SEQ_8,0 AMOUNT_8,0 DED_AMT_8,
         '' PEN_GUBUN_CD_9,'' ABA_CD_9,'' ABA_NM_9,'' ACC_NO_9,'' YEAR_SEQ_9,0 AMOUNT_9,0 DED_AMT_9,
         '' PEN_GUBUN_CD_10,'' ABA_CD_10,'' ABA_NM_10,'' ACC_NO_10,'' YEAR_SEQ_10,0 AMOUNT_10,0 DED_AMT_10,
         '' PEN_GUBUN_CD_11,'' ABA_CD_11,'' ABA_NM_11,'' ACC_NO_11,'' YEAR_SEQ_11,0 AMOUNT_11,0 DED_AMT_11,
         '' PEN_GUBUN_CD_12,'' ABA_CD_12,'' ABA_NM_12,'' ACC_NO_12,'' YEAR_SEQ_12,0 AMOUNT_12,0 DED_AMT_12,
         '' PEN_GUBUN_CD_13,'' ABA_CD_13,'' ABA_NM_13,'' ACC_NO_13,'' YEAR_SEQ_13,0 AMOUNT_13,0 DED_AMT_13,
         '' PEN_GUBUN_CD_14,'' ABA_CD_14,'' ABA_NM_14,'' ACC_NO_14,'' YEAR_SEQ_14,0 AMOUNT_14,0 DED_AMT_14,
         '' PEN_GUBUN_CD_15,'' ABA_CD_15,'' ABA_NM_15,'' ACC_NO_15,'' YEAR_SEQ_15,0 AMOUNT_15,0 DED_AMT_15
    FROM T_AC_RETACC YAC,
         (SELECT ENO_NO,ENO_NM AS NAM_KOR,
                 SUBSTR(CET_NO,1,6)||SUBSTR(CET_NO,8,7) CET_NO,
                 ZIP_NO,ADR_CT||' '||ADDRESS JUSO,
                 GREATEST(NVL(TO_CHAR(HIR_YMD,'YYYYMMDD'),' '),?||'0101') HIR_YMD,
                 LEAST(NVL(TO_CHAR(RET_YMD,'YYYYMMDD'),?||'1231'),?||'1231') RET_YMD
          FROM T_CM_PERSON ) EMS,
         (SELECT ENO_NO,COUNT(*) CNT,
            SUM(NVL(JAL_AMT,0)) JAL_AMT, SUM(NVL(JAN_AMT,0)) JAN_AMT,
            SUM(NVL(JAG_AMT,0)) JAG_AMT,
            SUM(NVL(JAH_AMT,0)) JAH_AMT,
            SUM(NVL(JAP_AMT,0)) JAP_AMT
            FROM T_AC_DUTYPLACE
           WHERE (PIS_YY = ?)
             AND (PIS_MM = ?)
          GROUP BY ENO_NO) YAB,
		(SELECT ENO_NO,LONG_DED FROM T_AC_RETACC WHERE PIS_YY = ? AND GBN_TAG = '8' AND LH2_AMT04 != '0') LONG1,
		(SELECT ENO_NO,LONG_DED FROM T_AC_RETACC WHERE PIS_YY = ? AND GBN_TAG = '8' AND LH2_AMT != '0')  LONG2,
		(SELECT ENO_NO,LONG_DED FROM T_AC_RETACC WHERE PIS_YY = ? AND GBN_TAG = '8' AND LH4_AMT != '0')  LONG3,
		(SELECT ENO_NO,LONG_DED FROM T_AC_RETACC WHERE PIS_YY = ? AND GBN_TAG = '8' AND LH7_AMT != '0')  LONG4,
		(SELECT ENO_NO,LONG_DED FROM T_AC_RETACC WHERE PIS_YY = ? AND GBN_TAG = '8' AND LH8_AMT != '0')  LONG5
 WHERE YAC.PIS_YY  = ?
   AND YAC.PIS_MM  = ?
   AND YAC.GBN_TAG = '8'
   AND YAC.ENO_NO  = EMS.ENO_NO
   AND YAC.ENO_NO  = YAB.ENO_NO (+)
   AND YAC.ENO_NO  = LONG1.ENO_NO(+)
   AND YAC.ENO_NO  = LONG2.ENO_NO(+)
   AND YAC.ENO_NO  = LONG3.ENO_NO(+)
   AND YAC.ENO_NO  = LONG4.ENO_NO(+)
   AND YAC.ENO_NO  = LONG5.ENO_NO(+)
   AND EMS.ENO_NO NOT IN ('1990072','2000000','2010020','2010021','2040008','2040014','2040018','2040028','2050001','2060011','2060023','2070002','2070022','2070032','2070035','2080029','2080038','2080039','2090010','2090012','2100000','2100006','2100010','2110009','2110012','2120001','2120009','2120011','2120012','2120014','2120031','2130014','2130023','2130031','2130036','3070033','3080133','3110010','3110020','3110022','3120004','3120005','3120012','3120025','3130007')


 UNION

 SELECT x.ENO_NO||'D'||PIS_YY||PIS_MM SEL_KEY,
        'D' REC_TAG,'20227' TAX_CD,'2218113834' COMP_CD,'' NAM_KOR,
        EMS.CET_NO CET_NO,'' ZIP_NO,'' JUSO,0 CNT,JAS_NM,JAO_NO,
        JAA_AMT + JAB_AMT,
        JAC_AMT + JAD_AMT, JAA_AMT + JAB_AMT + JAC_AMT + JAD_AMT + JAI_AMT,
        0 FREE_INCOME,
        0 FIN_SALT,
        0 TAX_INCOME,0 OUTT_AMTS,0 MGR_AMT,0 MNI_AMT,0 BADD_AMT,'' SOU_CNT,0 SPSB_AMT,'' DFM_CNT,
        0 GDED_AMT, '' GOL_CNT, 0 GOL_AMT, '' GOL_CNT65, '' GOL_CNT70,
        '' TRB_CNT,0 TBL_DED,0 WDD_AMT,
        '' RCH_CNT,0 RCH_AMT,'' INP_CNT,0 INP_AMT,
        '' CHI_CNT,0 ONE_AMT,
        0 SMD_AMT,0 MIN_DED,0 HINU_AMT,0 HINS_AMT,0 LIN_DED,0 LIH_DED,0 HAN_AMT,0 MMA_DED,
        0 HED_AMT,0 EDU_DED,0 HOS_DED, 0 LOAN_DED, 0 PLOAN_DED,0 MRENT_DED,
        0 LONG1_DED, 0 LONG2_DED, 0 LONG3_DED, 0 LONG4_DED, 0 LONG5_DED,
        0 LC1_AMT,0 LST_AMT,0 LJJ_AMT,
        0 CPC_DED,0 NSE_TOT,0 INDED_TOT,0 PER_SAV,
        0 CARD_DED, 0 SAVE_DED, 0 SAVE1_DED, 0 SAVE2_DED, 0 SAVE3_DED, 0 SAVE4_DED, 0 STOCK_DED, 0 VEN_DED,
        0 TTAX_STD, 0 TAX_AMT,  0 HGR_DED,   0 STX_DED,
        0 HTX_DED,  0 HSX_DED,  0 TDED_TOT,  0 DGG_TAX,0 DBW_TAX,
        0 DJM_TAX,0 JAL_AMT,0 JAN_AMT,JAL_AMT INCM_TAX,JAN_AMT CITI_TAX,
        GREATEST(HIR_YMD,?||'0101') HIR_YMD,
        LEAST(RET_YMD,   ?||'1231') RET_YMD,
        0 STA_TOT, 0 NPEN_DED, 0 ANN_DED, 0 LSX_DED,
        0 SEA_FREE, 0 FORE_AMT, 0 GOV_DED, 0 OTX_DED, 0 WFM_DED, 0 SPC_TOT,
        0 CASH_AMT, JAI_AMT, JAG_AMT, 0 DRE_INTX, 0 DRE_CTTX, 0 DRE_DFTX, '' HOL_YN,
         '' REL_CD1,  '' NAM_KOR1, '' CET_NO1,
         '' BAS_MAN1, '' TRB_MAN1, '' RCH_MAN1, '' WCT_MAN1,  '' GOL_MAN1,  '' CHI_MAN1, '' INP_MAN1, '' ONE_MAN1,
         '' INV_NTS1, '' MED_NTS1, '' EDU_NTS1, '' CARD_NTS1, '' DIR_CARD_NTS1, '' CASH_NTS1, '' MARKET_NTS1, '' PUBLIC_NTS1,'' LC3_AMT_NTS1,
         '' INV_AMT1, '' MED_AMT1, '' EDU_AMT1, '' CARD_AMT1, '' DIR_CARD_AMT1, '' SCH_AMT1, '' MARKET_AMT1, '' PUBLIC_AMT1,'' LC3_AMT1,
         '' REL_CD2,  '' NAM_KOR2, '' CET_NO2,
         '' BAS_MAN2, '' TRB_MAN2, '' RCH_MAN2, '' WCT_MAN2,  '' GOL_MAN2,  '' CHI_MAN2, '' INP_MAN2, '' ONE_MAN2,
         '' INV_NTS2, '' MED_NTS2, '' EDU_NTS2, '' CARD_NTS2, '' DIR_CARD_NTS2, '' CASH_NTS2, '' MARKET_NTS2, '' PUBLIC_NTS2, '' LC3_AMT_NTS2,
         '' INV_AMT2, '' MED_AMT2, '' EDU_AMT2, '' CARD_AMT2, '' DIR_CARD_AMT2, '' SCH_AMT2, '' MARKET_AMT2, '' PUBLIC_AMT2, '' LC3_AMT2,
         '' REL_CD3,  '' NAM_KOR3, '' CET_NO3,
         '' BAS_MAN3, '' TRB_MAN3, '' RCH_MAN3, '' WCT_MAN3,  '' GOL_MAN3,  '' CHI_MAN3, '' INP_MAN3, '' ONE_MAN3,
         '' INV_NTS3, '' MED_NTS3, '' EDU_NTS3, '' CARD_NTS3, '' DIR_CARD_NTS3, '' CASH_NTS3, '' MARKET_NTS3, '' PUBLIC_NTS3, '' LC3_AMT_NTS3,
         '' INV_AMT3, '' MED_AMT3, '' EDU_AMT3, '' CARD_AMT3, '' DIR_CARD_AMT3, '' SCH_AMT3, '' MARKET_AMT3, '' PUBLIC_AMT3, '' LC3_AMT3,
         '' REL_CD4,  '' NAM_KOR4, '' CET_NO4,
         '' BAS_MAN4, '' TRB_MAN4, '' RCH_MAN4, '' WCT_MAN4,  '' GOL_MAN4,  '' CHI_MAN4, '' INP_MAN4, '' ONE_MAN4,
         '' INV_NTS4, '' MED_NTS4, '' EDU_NTS4, '' CARD_NTS4, '' DIR_CARD_NTS4, '' CASH_NTS4, '' MARKET_NTS4, '' PUBLIC_NTS4, '' LC3_AMT_NTS4,
         '' INV_AMT4, '' MED_AMT4, '' EDU_AMT4, '' CARD_AMT4, '' DIR_CARD_AMT4, '' SCH_AMT4, '' MARKET_AMT4, '' PUBLIC_AMT4, '' LC3_AMT4,
         '' REL_CD5,  '' NAM_KOR5, '' CET_NO5,
         '' BAS_MAN5, '' TRB_MAN5, '' RCH_MAN5, '' WCT_MAN5,  '' GOL_MAN5,  '' CHI_MAN5, '' INP_MAN5, '' ONE_MAN5,
         '' INV_NTS5, '' MED_NTS5, '' EDU_NTS5, '' CARD_NTS5, '' DIR_CARD_NTS5, '' CASH_NTS5, '' MARKET_NTS5, '' PUBLIC_NTS5, '' LC3_AMT_NTS5,
         '' INV_AMT5, '' MED_AMT5, '' EDU_AMT5, '' CARD_AMT5, '' DIR_CARD_AMT5, '' SCH_AMT5, '' MARKET_AMT5, '' PUBLIC_AMT5, '' LC3_AMT5,
         '' PEN_GUBUN_CD_1,'' ABA_CD_1,'' ABA_NM_1,'' ACC_NO_1,'' YEAR_SEQ_1,0 AMOUNT_1,0 DED_AMT_1,
         '' PEN_GUBUN_CD_2,'' ABA_CD_2,'' ABA_NM_2,'' ACC_NO_2,'' YEAR_SEQ_2,0 AMOUNT_2,0 DED_AMT_2,
         '' PEN_GUBUN_CD_3,'' ABA_CD_3,'' ABA_NM_3,'' ACC_NO_3,'' YEAR_SEQ_3,0 AMOUNT_3,0 DED_AMT_3,
         '' PEN_GUBUN_CD_4,'' ABA_CD_4,'' ABA_NM_4,'' ACC_NO_4,'' YEAR_SEQ_4,0 AMOUNT_4,0 DED_AMT_4,
         '' PEN_GUBUN_CD_5,'' ABA_CD_5,'' ABA_NM_5,'' ACC_NO_5,'' YEAR_SEQ_5,0 AMOUNT_5,0 DED_AMT_5,
         '' PEN_GUBUN_CD_6,'' ABA_CD_6,'' ABA_NM_6,'' ACC_NO_6,'' YEAR_SEQ_6,0 AMOUNT_6,0 DED_AMT_6,
         '' PEN_GUBUN_CD_7,'' ABA_CD_7,'' ABA_NM_7,'' ACC_NO_7,'' YEAR_SEQ_7,0 AMOUNT_7,0 DED_AMT_7,
         '' PEN_GUBUN_CD_8,'' ABA_CD_8,'' ABA_NM_8,'' ACC_NO_8,'' YEAR_SEQ_8,0 AMOUNT_8,0 DED_AMT_8,
         '' PEN_GUBUN_CD_9,'' ABA_CD_9,'' ABA_NM_9,'' ACC_NO_9,'' YEAR_SEQ_9,0 AMOUNT_9,0 DED_AMT_9,
         '' PEN_GUBUN_CD_10,'' ABA_CD_10,'' ABA_NM_10,'' ACC_NO_10,'' YEAR_SEQ_10,0 AMOUNT_10,0 DED_AMT_10,
         '' PEN_GUBUN_CD_11,'' ABA_CD_11,'' ABA_NM_11,'' ACC_NO_11,'' YEAR_SEQ_11,0 AMOUNT_11,0 DED_AMT_11,
         '' PEN_GUBUN_CD_12,'' ABA_CD_12,'' ABA_NM_12,'' ACC_NO_12,'' YEAR_SEQ_12,0 AMOUNT_12,0 DED_AMT_12,
         '' PEN_GUBUN_CD_13,'' ABA_CD_13,'' ABA_NM_13,'' ACC_NO_13,'' YEAR_SEQ_13,0 AMOUNT_13,0 DED_AMT_13,
         '' PEN_GUBUN_CD_14,'' ABA_CD_14,'' ABA_NM_14,'' ACC_NO_14,'' YEAR_SEQ_14,0 AMOUNT_14,0 DED_AMT_14,
         '' PEN_GUBUN_CD_15,'' ABA_CD_15,'' ABA_NM_15,'' ACC_NO_15,'' YEAR_SEQ_15,0 AMOUNT_15,0 DED_AMT_15
   FROM T_AC_DUTYPLACE x,
 (SELECT ENO_NO,ENO_NM AS NAM_KOR,
         SUBSTR(CET_NO,1,6)||SUBSTR(CET_NO,8,7) CET_NO,
         ZIP_NO,ADR_CT||ADDRESS JUSO
    FROM T_CM_PERSON ) EMS
   WHERE PIS_YY = ?
     AND PIS_MM = ?
     AND x.ENO_NO = EMS.ENO_NO
	 AND EMS.ENO_NO NOT IN ('1990072','2000000','2010020','2010021','2040008','2040014','2040018','2040028','2050001','2060011','2060023','2070002','2070022','2070032','2070035','2080029','2080038','2080039','2090010','2090012','2100000','2100006','2100010','2110009','2110012','2120001','2120009','2120011','2120012','2120014','2120031','2130014','2130023','2130031','2130036','3070033','3080133','3110010','3110020','3110022','3120004','3120005','3120012','3120025','3130007')

 UNION

 SELECT a.ENO_NO||'E1'||B.PIS_YY||'12', 'E', '20227', '2218113834', '',
        B.CET_NO,
        '','',
        0,'','',0,0,0,0,0,0,0,0,0,0,'0',0,'0',0,'0',0,'0','0','0',0,0,'0',0,'0',0,   --35
        '0',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,
        0,0,0,0,
        0,0,0,0,
        0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,'','',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'',
        B.REL_CD,  B.NAM_KOR, B.CET_NO,  B.BAS_MAN,  B.TRB_MAN, B.RCH_MAN, B.WCT_MAN, B.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', B.CHI_MAN), B.INP_MAN, B.ONE_MAN,
        NVL(B.INV_NTS,'0'), NVL(B.MED_NTS,'0'), NVL(B.EDU_NTS,'0'),
        NVL(B.CARD_NTS,'0'),NVL(B.DIR_CARD_NTS,'0'), NVL(B.CASH_NTS,'0'),  NVL(B.MARKET_NTS,'0'), NVL(B.PUBLIC_NTS,'0'), NVL(B.LC3_AMT_NTS,'0'),
        NVL(B.INV_AMT,'0'), NVL(B.MED_AMT,'0'), NVL(B.EDU_AMT,'0'),
        NVL(B.CARD_AMT,'0'),NVL(B.DIR_CARD_AMT,'0'), NVL(B.SCH_AMT,'0'), NVL(B.MARKET_AMT,'0'), NVL(B.PUBLIC_AMT,'0'), NVL(B.LC3_AMT,'0'),
        C.REL_CD,  C.NAM_KOR, C.CET_NO,  C.BAS_MAN,  C.TRB_MAN, C.RCH_MAN, C.WCT_MAN, C.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', C.CHI_MAN), C.INP_MAN, C.ONE_MAN,
        NVL(C.INV_NTS,'0'), NVL(C.MED_NTS,'0'), NVL(C.EDU_NTS,'0'),
        NVL(C.CARD_NTS,'0'),NVL(C.DIR_CARD_NTS,'0'), NVL(C.CASH_NTS,'0'), NVL(C.MARKET_NTS,'0'), NVL(C.PUBLIC_NTS,'0'), NVL(C.LC3_AMT_NTS,'0'),
        NVL(C.INV_AMT,'0'), NVL(C.MED_AMT,'0'), NVL(C.EDU_AMT,'0'),
        NVL(C.CARD_AMT,'0'),NVL(C.DIR_CARD_AMT,'0'), NVL(C.SCH_AMT,'0'), NVL(C.MARKET_AMT,'0'), NVL(C.PUBLIC_AMT,'0'), NVL(C.LC3_AMT,'0'),
        D.REL_CD,  D.NAM_KOR, D.CET_NO,  D.BAS_MAN,  D.TRB_MAN, D.RCH_MAN, D.WCT_MAN, D.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', D.CHI_MAN), D.INP_MAN, D.ONE_MAN,
        NVL(D.INV_NTS,'0'), NVL(D.MED_NTS,'0'), NVL(D.EDU_NTS,'0'),
        NVL(D.CARD_NTS,'0'),NVL(D.DIR_CARD_NTS,'0'), NVL(D.CASH_NTS,'0'), NVL(D.MARKET_NTS,'0'), NVL(D.PUBLIC_NTS,'0'), NVL(D.LC3_AMT_NTS,'0'),
        NVL(D.INV_AMT,'0'), NVL(D.MED_AMT,'0'), NVL(D.EDU_AMT,'0'),
        NVL(D.CARD_AMT,'0'),NVL(D.DIR_CARD_AMT,'0'), NVL(D.SCH_AMT,'0'), NVL(D.MARKET_AMT,'0'), NVL(D.PUBLIC_AMT,'0'), NVL(D.LC3_AMT,'0'),
        E.REL_CD,  E.NAM_KOR, E.CET_NO,  E.BAS_MAN,  E.TRB_MAN, E.RCH_MAN, E.WCT_MAN, E.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', E.CHI_MAN), E.INP_MAN, E.ONE_MAN,
        NVL(E.INV_NTS,'0'), NVL(E.MED_NTS,'0'), NVL(E.EDU_NTS,'0'),
        NVL(E.CARD_NTS,'0'),NVL(E.DIR_CARD_NTS,'0'), NVL(E.CASH_NTS,'0'), NVL(E.MARKET_NTS,'0'), NVL(E.PUBLIC_NTS,'0'), NVL(E.LC3_AMT_NTS,'0'),
        NVL(E.INV_AMT,'0'), NVL(E.MED_AMT,'0'), NVL(E.EDU_AMT,'0'),
        NVL(E.CARD_AMT,'0'),NVL(E.DIR_CARD_AMT,'0'), NVL(E.SCH_AMT,'0'), NVL(E.MARKET_AMT,'0'), NVL(E.PUBLIC_AMT,'0'), NVL(E.LC3_AMT,'0'),
        F.REL_CD,  F.NAM_KOR, F.CET_NO,  F.BAS_MAN,  F.TRB_MAN, F.RCH_MAN, F.WCT_MAN, F.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', F.CHI_MAN), F.INP_MAN, F.ONE_MAN,
        NVL(F.INV_NTS,'0'), NVL(F.MED_NTS,'0'), NVL(F.EDU_NTS,'0'),
        NVL(F.CARD_NTS,'0'),NVL(F.DIR_CARD_NTS,'0'), NVL(F.CASH_NTS,'0'), NVL(F.MARKET_NTS,'0'), NVL(F.PUBLIC_NTS,'0'), NVL(F.LC3_AMT_NTS,'0'),
        NVL(F.INV_AMT,'0'), NVL(F.MED_AMT,'0'), NVL(F.EDU_AMT,'0'),
        NVL(F.CARD_AMT,'0'),NVL(F.DIR_CARD_AMT,'0'), NVL(F.SCH_AMT,'0'), NVL(F.MARKET_AMT,'0'), NVL(F.PUBLIC_AMT,'0'), NVL(F.LC3_AMT,'0'),
        '' PEN_GUBUN_CD_1,'' ABA_CD_1,'' ABA_NM_1,'' ACC_NO_1,'' YEAR_SEQ_1,0 AMOUNT_1,0 DED_AMT_1,
        '' PEN_GUBUN_CD_2,'' ABA_CD_2,'' ABA_NM_2,'' ACC_NO_2,'' YEAR_SEQ_2,0 AMOUNT_2,0 DED_AMT_2,
        '' PEN_GUBUN_CD_3,'' ABA_CD_3,'' ABA_NM_3,'' ACC_NO_3,'' YEAR_SEQ_3,0 AMOUNT_3,0 DED_AMT_3,
        '' PEN_GUBUN_CD_4,'' ABA_CD_4,'' ABA_NM_4,'' ACC_NO_4,'' YEAR_SEQ_4,0 AMOUNT_4,0 DED_AMT_4,
        '' PEN_GUBUN_CD_5,'' ABA_CD_5,'' ABA_NM_5,'' ACC_NO_5,'' YEAR_SEQ_5,0 AMOUNT_5,0 DED_AMT_5,
        '' PEN_GUBUN_CD_6,'' ABA_CD_6,'' ABA_NM_6,'' ACC_NO_6,'' YEAR_SEQ_6,0 AMOUNT_6,0 DED_AMT_6,
        '' PEN_GUBUN_CD_7,'' ABA_CD_7,'' ABA_NM_7,'' ACC_NO_7,'' YEAR_SEQ_7,0 AMOUNT_7,0 DED_AMT_7,
        '' PEN_GUBUN_CD_8,'' ABA_CD_8,'' ABA_NM_8,'' ACC_NO_8,'' YEAR_SEQ_8,0 AMOUNT_8,0 DED_AMT_8,
        '' PEN_GUBUN_CD_9,'' ABA_CD_9,'' ABA_NM_9,'' ACC_NO_9,'' YEAR_SEQ_9,0 AMOUNT_9,0 DED_AMT_9,
        '' PEN_GUBUN_CD_10,'' ABA_CD_10,'' ABA_NM_10,'' ACC_NO_10,'' YEAR_SEQ_10,0 AMOUNT_10,0 DED_AMT_10,
        '' PEN_GUBUN_CD_11,'' ABA_CD_11,'' ABA_NM_11,'' ACC_NO_11,'' YEAR_SEQ_11,0 AMOUNT_11,0 DED_AMT_11,
        '' PEN_GUBUN_CD_12,'' ABA_CD_12,'' ABA_NM_12,'' ACC_NO_12,'' YEAR_SEQ_12,0 AMOUNT_12,0 DED_AMT_12,
        '' PEN_GUBUN_CD_13,'' ABA_CD_13,'' ABA_NM_13,'' ACC_NO_13,'' YEAR_SEQ_13,0 AMOUNT_13,0 DED_AMT_13,
        '' PEN_GUBUN_CD_14,'' ABA_CD_14,'' ABA_NM_14,'' ACC_NO_14,'' YEAR_SEQ_14,0 AMOUNT_14,0 DED_AMT_14,
        '' PEN_GUBUN_CD_15,'' ABA_CD_15,'' ABA_NM_15,'' ACC_NO_15,'' YEAR_SEQ_15,0 AMOUNT_15,0 DED_AMT_15

FROM (SELECT ENO_NO
        FROM T_AC_FAMILY
       WHERE PIS_YY = ?
    GROUP BY ENO_NO) A,
     (SELECT A.ENO_NO ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, A.PIS_YY PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(A.LIN_AMT_NTS,0) + NVL(A.LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(A.MED_AMT_NTS,0) + NVL(A.LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(A.EDU_AMT_NTS,0) + NVL(A.HED_AMT_NTS,0)) EDU_NTS,
             TO_CHAR(NVL(A.CARD_AMT_NTS,0)) CARD_NTS,
             TO_CHAR(NVL(A.DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,
             TO_CHAR(NVL(A.CASH_AMT_NTS,0)) CASH_NTS,
             TO_CHAR(NVL(A.MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(A.PUBLIC_AMT_NTS,0)) PUBLIC_NTS,
             TO_CHAR(NVL(A.LIN_AMT,0) + NVL(A.LIH_AMT,0) + NVL(B.HINU_AMT,0) + NVL(B.HINS_AMT,0) + NVL(B.OLD_AMT,0) + NVL(C.JAH_AMT,0) + NVL(C.JAP_AMT,0)) INV_AMT,
             TO_CHAR(NVL(A.MED_AMT,0) + NVL(A.LEN_AMT,0) + NVL(A.OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(A.EDU_AMT,0) + NVL(A.HED_AMT,0)) EDU_AMT,
             TO_CHAR(NVL(A.CARD_AMT,0)) CARD_AMT,
             TO_CHAR(NVL(A.DIR_CARD_AMT,0)) DIR_CARD_AMT,
             TO_CHAR(NVL(A.SCH_AMT,0)) SCH_AMT,
             TO_CHAR(NVL(A.MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(A.PUBLIC_AMT,0)) PUBLIC_AMT,
             TO_CHAR(A.LC1_AMT+A.LC2_AMT+A.LC3_AMT+A.LC4_AMT+GREATEST(B.GOV_AMT-100000,0)) LC3_AMT,
             TO_CHAR(NVL(A.LC2_AMT_NTS,0)+NVL(A.LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY A, T_AC_RETACC B,
            (SELECT ENO_NO, SUM(JAH_AMT) JAH_AMT, SUM(JAP_AMT) JAP_AMT FROM T_AC_DUTYPLACE WHERE PIS_YY = ? GROUP BY ENO_NO) C
      WHERE A.PIS_YY = ? AND A.REL_CD = '0'
        AND A.PIS_YY = B.PIS_YY
        AND B.GBN_TAG = '8'
        AND A.ENO_NO = B.ENO_NO
        AND A.ENO_NO = C.ENO_NO(+)) B,
     (SELECT ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(LIN_AMT_NTS,0) + NVL(LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(MED_AMT_NTS,0) + NVL(LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(EDU_AMT_NTS,0) + NVL(HED_AMT_NTS,0)) EDU_NTS,
             TO_CHAR(NVL(CARD_AMT_NTS,0)) CARD_NTS,
             TO_CHAR(NVL(DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,
             TO_CHAR(NVL(CASH_AMT_NTS,0)) CASH_NTS,
             TO_CHAR(NVL(MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(PUBLIC_AMT_NTS,0)) PUBLIC_NTS,
             TO_CHAR(NVL(LIN_AMT,0) + NVL(LIH_AMT,0)) INV_AMT,
             TO_CHAR(NVL(MED_AMT,0) + NVL(LEN_AMT,0) + NVL(OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(EDU_AMT,0) + NVL(HED_AMT,0)) EDU_AMT,
             TO_CHAR(NVL(CARD_AMT,0)) CARD_AMT,
             TO_CHAR(NVL(DIR_CARD_AMT,0)) DIR_CARD_AMT,

             TO_CHAR(NVL(SCH_AMT,0)) SCH_AMT,
             TO_CHAR(NVL(MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(PUBLIC_AMT,0)) PUBLIC_AMT,
             TO_CHAR(LC1_AMT+LC2_AMT+LC3_AMT+LC4_AMT) LC3_AMT,
             TO_CHAR(NVL(LC2_AMT_NTS,0)+NVL(LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY
      WHERE PIS_YY = ? AND SEQ_NO = '1') C,
     (SELECT ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(LIN_AMT_NTS,0) + NVL(LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(MED_AMT_NTS,0) + NVL(LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(EDU_AMT_NTS,0) + NVL(HED_AMT_NTS,0)) EDU_NTS,
             TO_CHAR(NVL(CARD_AMT_NTS,0)) CARD_NTS,
             TO_CHAR(NVL(DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,
             TO_CHAR(NVL(CASH_AMT_NTS,0)) CASH_NTS,

             TO_CHAR(NVL(MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(PUBLIC_AMT_NTS,0)) PUBLIC_NTS,
             TO_CHAR(NVL(LIN_AMT,0) + NVL(LIH_AMT,0)) INV_AMT,
             TO_CHAR(NVL(MED_AMT,0) + NVL(LEN_AMT,0) + NVL(OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(EDU_AMT,0) + NVL(HED_AMT,0)) EDU_AMT,
             TO_CHAR(NVL(CARD_AMT,0)) CARD_AMT,
             TO_CHAR(NVL(DIR_CARD_AMT,0)) DIR_CARD_AMT,

             TO_CHAR(NVL(SCH_AMT,0)) SCH_AMT,
             TO_CHAR(NVL(MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(PUBLIC_AMT,0)) PUBLIC_AMT,
             TO_CHAR(LC1_AMT+LC2_AMT+LC3_AMT+LC4_AMT) LC3_AMT,
             TO_CHAR(NVL(LC2_AMT_NTS,0)+NVL(LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY
      WHERE PIS_YY = ? AND SEQ_NO = '2') D,
     (SELECT ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(LIN_AMT_NTS,0) + NVL(LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(MED_AMT_NTS,0) + NVL(LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(EDU_AMT_NTS,0) + NVL(HED_AMT_NTS,0)) EDU_NTS,
             TO_CHAR(NVL(CARD_AMT_NTS,0)) CARD_NTS,
             TO_CHAR(NVL(DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,
             TO_CHAR(NVL(CASH_AMT_NTS,0)) CASH_NTS,

             TO_CHAR(NVL(MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(PUBLIC_AMT_NTS,0)) PUBLIC_NTS,
             TO_CHAR(NVL(LIN_AMT,0) + NVL(LIH_AMT,0)) INV_AMT,
             TO_CHAR(NVL(MED_AMT,0) + NVL(LEN_AMT,0) + NVL(OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(EDU_AMT,0) + NVL(HED_AMT,0)) EDU_AMT,
             TO_CHAR(NVL(CARD_AMT,0)) CARD_AMT,
             TO_CHAR(NVL(DIR_CARD_AMT,0)) DIR_CARD_AMT,

             TO_CHAR(NVL(SCH_AMT,0)) SCH_AMT,
             TO_CHAR(NVL(MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(PUBLIC_AMT,0)) PUBLIC_AMT,
             TO_CHAR(LC1_AMT+LC2_AMT+LC3_AMT+LC4_AMT) LC3_AMT,
             TO_CHAR(NVL(LC2_AMT_NTS,0)+NVL(LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY
      WHERE PIS_YY = ? AND SEQ_NO = '3') E,
     (SELECT ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(LIN_AMT_NTS,0) + NVL(LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(MED_AMT_NTS,0) + NVL(LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(EDU_AMT_NTS,0) + NVL(HED_AMT_NTS,0)) EDU_NTS,
             TO_CHAR(NVL(CARD_AMT_NTS,0)) CARD_NTS,
             TO_CHAR(NVL(DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,
             TO_CHAR(NVL(CASH_AMT_NTS,0)) CASH_NTS,

             TO_CHAR(NVL(MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(PUBLIC_AMT_NTS,0)) PUBLIC_NTS,
             TO_CHAR(NVL(LIN_AMT,0) + NVL(LIH_AMT,0)) INV_AMT,
             TO_CHAR(NVL(MED_AMT,0) + NVL(LEN_AMT,0) + NVL(OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(EDU_AMT,0) + NVL(HED_AMT,0)) EDU_AMT,
             TO_CHAR(NVL(CARD_AMT,0)) CARD_AMT,
             TO_CHAR(NVL(DIR_CARD_AMT,0)) DIR_CARD_AMT,

             TO_CHAR(NVL(SCH_AMT,0)) SCH_AMT,
             TO_CHAR(NVL(MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(PUBLIC_AMT,0)) PUBLIC_AMT,
             TO_CHAR(LC1_AMT+LC2_AMT+LC3_AMT+LC4_AMT) LC3_AMT,
             TO_CHAR(NVL(LC2_AMT_NTS,0)+NVL(LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY
      WHERE PIS_YY = ? AND SEQ_NO = '4') F,
      (SELECT ENO_NO, CHI_CNT
         FROM T_AC_RETACC
        WHERE PIS_YY = ?
          AND GBN_TAG = '8') G
WHERE A.ENO_NO = B.ENO_NO(+)
  AND A.ENO_NO = C.ENO_NO(+)
  AND A.ENO_NO = D.ENO_NO(+)
  AND A.ENO_NO = E.ENO_NO(+)
  AND A.ENO_NO = F.ENO_NO(+)
  AND A.ENO_NO = G.ENO_NO(+)
  AND A.ENO_NO NOT IN ('1990072','2000000','2010020','2010021','2040008','2040014','2040018','2040028','2050001','2060011','2060023','2070002','2070022','2070032','2070035','2080029','2080038','2080039','2090010','2090012','2100000','2100006','2100010','2110009','2110012','2120001','2120009','2120011','2120012','2120014','2120031','2130014','2130023','2130031','2130036','3070033','3080133','3110010','3110020','3110022','3120004','3120005','3120012','3120025','3130007')


 UNION

 SELECT a.ENO_NO||'E2'||B.PIS_YY||'12', 'E', '20227', '2218113834', '',
        SUBSTR(G.CET_NO,1,6)||SUBSTR(G.CET_NO,8,7),
        '','',
        0,'','',0,0,0,0,0,0,0,0,0,0,'0',0,'0',0,'0',0,'0','0','0',0,0,'0',0,'0',0,
        '0',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
        0,0,0,0,
        0,0,0,0,
        0,0,0,0,
        0,0,0,0,
        0,0,0,0,0,0,0,0,0,0,'','',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'',
        B.REL_CD,  B.NAM_KOR, B.CET_NO,  B.BAS_MAN,  B.TRB_MAN, B.RCH_MAN, B.WCT_MAN, B.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', B.CHI_MAN), B.INP_MAN, B.ONE_MAN,
        NVL(B.INV_NTS,'0'), NVL(B.MED_NTS,'0'), NVL(B.EDU_NTS,'0'),
        NVL(B.CARD_NTS,'0'), NVL(B.DIR_CARD_NTS,'0'), NVL(B.CASH_NTS,'0'), NVL(B.MARKET_NTS,'0'), NVL(B.PUBLIC_NTS,'0'), NVL(B.LC3_AMT_NTS,'0'),
        NVL(B.INV_AMT,'0'), NVL(B.MED_AMT,'0'), NVL(B.EDU_AMT,'0'),
        NVL(B.CARD_AMT,'0'), NVL(B.DIR_CARD_AMT,'0'), NVL(B.SCH_AMT,'0'), NVL(B.MARKET_AMT,'0'), NVL(B.PUBLIC_AMT,'0'), NVL(B.LC3_AMT,'0'),
        C.REL_CD,  C.NAM_KOR, C.CET_NO,  C.BAS_MAN,  C.TRB_MAN, C.RCH_MAN, C.WCT_MAN, C.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', C.CHI_MAN), C.INP_MAN, C.ONE_MAN,
        NVL(C.INV_NTS,'0'), NVL(C.MED_NTS,'0'), NVL(C.EDU_NTS,'0'),
        NVL(C.CARD_NTS,'0'), NVL(C.DIR_CARD_NTS,'0'), NVL(C.CASH_NTS,'0'), NVL(C.MARKET_NTS,'0'), NVL(C.PUBLIC_NTS,'0'), NVL(C.LC3_AMT_NTS,'0'),
        NVL(C.INV_AMT,'0'), NVL(C.MED_AMT,'0'), NVL(C.EDU_AMT,'0'),
        NVL(C.CARD_AMT,'0'), NVL(C.DIR_CARD_AMT,'0'), NVL(C.SCH_AMT,'0'), NVL(C.MARKET_AMT,'0'), NVL(C.PUBLIC_AMT,'0'), NVL(C.LC3_AMT,'0'),
        D.REL_CD,  D.NAM_KOR, D.CET_NO,  D.BAS_MAN,  D.TRB_MAN, D.RCH_MAN, D.WCT_MAN, D.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', D.CHI_MAN), D.INP_MAN, D.ONE_MAN,
        NVL(D.INV_NTS,'0'), NVL(D.MED_NTS,'0'), NVL(D.EDU_NTS,'0'),
        NVL(D.CARD_NTS,'0'), NVL(D.DIR_CARD_NTS,'0'), NVL(D.CASH_NTS,'0'), NVL(D.MARKET_NTS,'0'), NVL(D.PUBLIC_NTS,'0'), NVL(D.LC3_AMT_NTS,'0'),
        NVL(D.INV_AMT,'0'), NVL(D.MED_AMT,'0'), NVL(D.EDU_AMT,'0'),
        NVL(D.CARD_AMT,'0'),  NVL(D.DIR_CARD_AMT,'0'), NVL(D.SCH_AMT,'0'), NVL(D.MARKET_AMT,'0'), NVL(D.PUBLIC_AMT,'0'), NVL(D.LC3_AMT,'0'),
        E.REL_CD,  E.NAM_KOR, E.CET_NO,  E.BAS_MAN,  E.TRB_MAN, E.RCH_MAN, E.WCT_MAN, E.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', E.CHI_MAN), E.INP_MAN, E.ONE_MAN,
        NVL(E.INV_NTS,'0'), NVL(E.MED_NTS,'0'), NVL(E.EDU_NTS,'0'),
        NVL(E.CARD_NTS,'0'), NVL(E.DIR_CARD_NTS,'0'), NVL(E.CASH_NTS,'0'), NVL(E.MARKET_NTS,'0'), NVL(E.PUBLIC_NTS,'0'), NVL(E.LC3_AMT_NTS,'0'),
        NVL(E.INV_AMT,'0'), NVL(E.MED_AMT,'0'), NVL(E.EDU_AMT,'0'),
        NVL(E.CARD_AMT,'0'), NVL(E.DIR_CARD_AMT,'0'), NVL(E.SCH_AMT,'0'), NVL(E.MARKET_AMT,'0'), NVL(E.PUBLIC_AMT,'0'), NVL(E.LC3_AMT,'0'),
        F.REL_CD,  F.NAM_KOR, F.CET_NO,  F.BAS_MAN,  F.TRB_MAN, F.RCH_MAN, F.WCT_MAN, F.GOL_MAN,
        DECODE(G.CHI_CNT,'1','', F.CHI_MAN), F.INP_MAN, F.ONE_MAN,
        NVL(F.INV_NTS,'0'), NVL(F.MED_NTS,'0'), NVL(F.EDU_NTS,'0'),
        NVL(F.CARD_NTS,'0'), NVL(F.DIR_CARD_NTS,'0'), NVL(F.CASH_NTS,'0'),  NVL(F.MARKET_NTS,'0'), NVL(F.PUBLIC_NTS,'0'), NVL(F.LC3_AMT_NTS,'0'),
        NVL(F.INV_AMT,'0'), NVL(F.MED_AMT,'0'), NVL(F.EDU_AMT,'0'),
        NVL(F.CARD_AMT,'0'), NVL(F.DIR_CARD_AMT,'0'), NVL(F.SCH_AMT,'0'),  NVL(F.MARKET_AMT,'0'), NVL(F.PUBLIC_AMT,'0'), NVL(F.LC3_AMT,'0'),
        '' PEN_GUBUN_CD_1,'' ABA_CD_1,'' ABA_NM_1,'' ACC_NO_1,'' YEAR_SEQ_1,0 AMOUNT_1,0 DED_AMT_1,
        '' PEN_GUBUN_CD_2,'' ABA_CD_2,'' ABA_NM_2,'' ACC_NO_2,'' YEAR_SEQ_2,0 AMOUNT_2,0 DED_AMT_2,
        '' PEN_GUBUN_CD_3,'' ABA_CD_3,'' ABA_NM_3,'' ACC_NO_3,'' YEAR_SEQ_3,0 AMOUNT_3,0 DED_AMT_3,
        '' PEN_GUBUN_CD_4,'' ABA_CD_4,'' ABA_NM_4,'' ACC_NO_4,'' YEAR_SEQ_4,0 AMOUNT_4,0 DED_AMT_4,
        '' PEN_GUBUN_CD_5,'' ABA_CD_5,'' ABA_NM_5,'' ACC_NO_5,'' YEAR_SEQ_5,0 AMOUNT_5,0 DED_AMT_5,
        '' PEN_GUBUN_CD_6,'' ABA_CD_6,'' ABA_NM_6,'' ACC_NO_6,'' YEAR_SEQ_6,0 AMOUNT_6,0 DED_AMT_6,
        '' PEN_GUBUN_CD_7,'' ABA_CD_7,'' ABA_NM_7,'' ACC_NO_7,'' YEAR_SEQ_7,0 AMOUNT_7,0 DED_AMT_7,
        '' PEN_GUBUN_CD_8,'' ABA_CD_8,'' ABA_NM_8,'' ACC_NO_8,'' YEAR_SEQ_8,0 AMOUNT_8,0 DED_AMT_8,
        '' PEN_GUBUN_CD_9,'' ABA_CD_9,'' ABA_NM_9,'' ACC_NO_9,'' YEAR_SEQ_9,0 AMOUNT_9,0 DED_AMT_9,
        '' PEN_GUBUN_CD_10,'' ABA_CD_10,'' ABA_NM_10,'' ACC_NO_10,'' YEAR_SEQ_10,0 AMOUNT_10,0 DED_AMT_10,
        '' PEN_GUBUN_CD_11,'' ABA_CD_11,'' ABA_NM_11,'' ACC_NO_11,'' YEAR_SEQ_11,0 AMOUNT_11,0 DED_AMT_11,
        '' PEN_GUBUN_CD_12,'' ABA_CD_12,'' ABA_NM_12,'' ACC_NO_12,'' YEAR_SEQ_12,0 AMOUNT_12,0 DED_AMT_12,
        '' PEN_GUBUN_CD_13,'' ABA_CD_13,'' ABA_NM_13,'' ACC_NO_13,'' YEAR_SEQ_13,0 AMOUNT_13,0 DED_AMT_13,
        '' PEN_GUBUN_CD_14,'' ABA_CD_14,'' ABA_NM_14,'' ACC_NO_14,'' YEAR_SEQ_14,0 AMOUNT_14,0 DED_AMT_14,
        '' PEN_GUBUN_CD_15,'' ABA_CD_15,'' ABA_NM_15,'' ACC_NO_15,'' YEAR_SEQ_15,0 AMOUNT_15,0 DED_AMT_15
FROM (SELECT ENO_NO
        FROM T_AC_FAMILY
       WHERE PIS_YY = ?
         AND SEQ_NO >= '5'
    GROUP BY ENO_NO) A,
     (SELECT ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(LIN_AMT_NTS,0) + NVL(LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(MED_AMT_NTS,0) + NVL(LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(EDU_AMT_NTS,0) + NVL(HED_AMT_NTS,0)) EDU_NTS,

             TO_CHAR(NVL(CARD_AMT_NTS,0)) CARD_NTS,

             TO_CHAR(NVL(DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,

             TO_CHAR(NVL(CASH_AMT_NTS,0)) CASH_NTS,

             TO_CHAR(NVL(MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(PUBLIC_AMT_NTS,0)) PUBLIC_NTS,
             TO_CHAR(NVL(LIN_AMT,0) + NVL(LIH_AMT,0)) INV_AMT,
             TO_CHAR(NVL(MED_AMT,0) + NVL(LEN_AMT,0) + NVL(OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(EDU_AMT,0) + NVL(HED_AMT,0)) EDU_AMT,
             TO_CHAR(NVL(CARD_AMT,0)) CARD_AMT,
             TO_CHAR(NVL(DIR_CARD_AMT,0)) DIR_CARD_AMT,

             TO_CHAR(NVL(SCH_AMT,0)) SCH_AMT,
             TO_CHAR(NVL(MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(PUBLIC_AMT,0)) PUBLIC_AMT,

             TO_CHAR(LC1_AMT+LC2_AMT+LC3_AMT+LC4_AMT) LC3_AMT,
             TO_CHAR(NVL(LC2_AMT_NTS,0)+NVL(LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY
      WHERE PIS_YY = ? AND SEQ_NO = '5') B,
     (SELECT ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(LIN_AMT_NTS,0) + NVL(LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(MED_AMT_NTS,0) + NVL(LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(EDU_AMT_NTS,0) + NVL(HED_AMT_NTS,0)) EDU_NTS,
             TO_CHAR(NVL(CARD_AMT_NTS,0)) CARD_NTS,
             TO_CHAR(NVL(DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,
             TO_CHAR(NVL(CASH_AMT_NTS,0)) CASH_NTS,

             TO_CHAR(NVL(MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(PUBLIC_AMT_NTS,0)) PUBLIC_NTS,
             TO_CHAR(NVL(LIN_AMT,0) + NVL(LIH_AMT,0)) INV_AMT,
             TO_CHAR(NVL(MED_AMT,0) + NVL(LEN_AMT,0) + NVL(OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(EDU_AMT,0) + NVL(HED_AMT,0)) EDU_AMT,
             TO_CHAR(NVL(CARD_AMT,0)) CARD_AMT,
             TO_CHAR(NVL(DIR_CARD_AMT,0)) DIR_CARD_AMT,

             TO_CHAR(NVL(SCH_AMT,0)) SCH_AMT,
             TO_CHAR(NVL(MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(PUBLIC_AMT,0)) PUBLIC_AMT,
             TO_CHAR(LC1_AMT+LC2_AMT+LC3_AMT+LC4_AMT) LC3_AMT,
             TO_CHAR(NVL(LC2_AMT_NTS,0)+NVL(LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY
      WHERE PIS_YY = ? AND SEQ_NO = '6') C,
     (SELECT ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(LIN_AMT_NTS,0) + NVL(LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(MED_AMT_NTS,0) + NVL(LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(EDU_AMT_NTS,0) + NVL(HED_AMT_NTS,0)) EDU_NTS,

             TO_CHAR(NVL(CARD_AMT_NTS,0)) CARD_NTS,

             TO_CHAR(NVL(DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,

             TO_CHAR(NVL(CASH_AMT_NTS,0)) CASH_NTS,

             TO_CHAR(NVL(MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(PUBLIC_AMT_NTS,0)) PUBLIC_NTS,
             TO_CHAR(NVL(LIN_AMT,0) + NVL(LIH_AMT,0)) INV_AMT,
             TO_CHAR(NVL(MED_AMT,0) + NVL(LEN_AMT,0) + NVL(OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(EDU_AMT,0) + NVL(HED_AMT,0)) EDU_AMT,

             TO_CHAR(NVL(CARD_AMT,0)) CARD_AMT,

             TO_CHAR(NVL(DIR_CARD_AMT,0)) DIR_CARD_AMT,

             TO_CHAR(NVL(SCH_AMT,0)) SCH_AMT,
             TO_CHAR(NVL(MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(PUBLIC_AMT,0)) PUBLIC_AMT,
             TO_CHAR(LC1_AMT+LC2_AMT+LC3_AMT+LC4_AMT) LC3_AMT,

             TO_CHAR(NVL(LC2_AMT_NTS,0)+NVL(LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY
      WHERE PIS_YY = ? AND SEQ_NO = '7') D,
     (SELECT ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(LIN_AMT_NTS,0) + NVL(LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(MED_AMT_NTS,0) + NVL(LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(EDU_AMT_NTS,0) + NVL(HED_AMT_NTS,0)) EDU_NTS,

             TO_CHAR(NVL(CARD_AMT_NTS,0)) CARD_NTS,

             TO_CHAR(NVL(DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,

             TO_CHAR(NVL(CASH_AMT_NTS,0)) CASH_NTS,

             TO_CHAR(NVL(MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(PUBLIC_AMT_NTS,0)) PUBLIC_NTS,
             TO_CHAR(NVL(LIN_AMT,0) + NVL(LIH_AMT,0)) INV_AMT,
             TO_CHAR(NVL(MED_AMT,0) + NVL(LEN_AMT,0) + NVL(OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(EDU_AMT,0) + NVL(HED_AMT,0)) EDU_AMT,

             TO_CHAR(NVL(CARD_AMT,0)) CARD_AMT,

             TO_CHAR(NVL(DIR_CARD_AMT,0)) DIR_CARD_AMT,

             TO_CHAR(NVL(SCH_AMT,0)) SCH_AMT,
             TO_CHAR(NVL(MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(PUBLIC_AMT,0)) PUBLIC_AMT,
             TO_CHAR(LC1_AMT+LC2_AMT+LC3_AMT+LC4_AMT) LC3_AMT,
             TO_CHAR(NVL(LC2_AMT_NTS,0)+NVL(LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY
      WHERE PIS_YY = ? AND SEQ_NO = '8') E,
     (SELECT ENO_NO, REL_CD, REPLACE(NAM_KOR,' ','') NAM_KOR, CET_NO, PIS_YY,
             DECODE(BAS_MAN,'O','1','') BAS_MAN,
             --INV_MAN AS TRB_MAN,
             DECODE(INV_MAN,'1','1','2','2','3','3',' ') TRB_MAN,
             --DECODE(TRB_MAN,'O','1','') TRB_MAN,
             DECODE(RCH_MAN,'O','1','') RCH_MAN,
             DECODE(WCT_MAN,'O','1','') WCT_MAN,
             CASE WHEN GOL_65 = 'O' OR GOL_70 = 'O' THEN '1'
             ELSE ''
             END GOL_MAN,
             DECODE(CHI_MAN,'O','1','') CHI_MAN,
             DECODE(INP_MAN,'O','1','') INP_MAN,
             DECODE(ONE_PARENT,'O','1','') ONE_MAN,
             TO_CHAR(NVL(LIN_AMT_NTS,0) + NVL(LIH_AMT_NTS,0)) INV_NTS,
             TO_CHAR(NVL(MED_AMT_NTS,0) + NVL(LEN_AMT_NTS,0)) MED_NTS,
             TO_CHAR(NVL(EDU_AMT_NTS,0) + NVL(HED_AMT_NTS,0)) EDU_NTS,

             TO_CHAR(NVL(CARD_AMT_NTS,0)) CARD_NTS,

             TO_CHAR(NVL(DIR_CARD_AMT_NTS,0)) DIR_CARD_NTS,

             TO_CHAR(NVL(CASH_AMT_NTS,0)) CASH_NTS,

             TO_CHAR(NVL(MARKET_AMT_NTS,0)) MARKET_NTS,
             TO_CHAR(NVL(PUBLIC_AMT_NTS,0)) PUBLIC_NTS,

             TO_CHAR(NVL(LIN_AMT,0) + NVL(LIH_AMT,0)) INV_AMT,
             TO_CHAR(NVL(MED_AMT,0) + NVL(LEN_AMT,0) + NVL(OLD_AMT,0)) MED_AMT,
             TO_CHAR(NVL(EDU_AMT,0) + NVL(HED_AMT,0)) EDU_AMT,

             TO_CHAR(NVL(CARD_AMT,0)) CARD_AMT,

             TO_CHAR(NVL(DIR_CARD_AMT,0)) DIR_CARD_AMT,

             TO_CHAR(NVL(SCH_AMT,0)) SCH_AMT,

             TO_CHAR(NVL(MARKET_AMT,0)) MARKET_AMT,
             TO_CHAR(NVL(PUBLIC_AMT,0)) PUBLIC_AMT,
             TO_CHAR(LC1_AMT+LC2_AMT+LC3_AMT+LC4_AMT) LC3_AMT,
             TO_CHAR(NVL(LC2_AMT_NTS,0)+NVL(LC3_AMT_NTS,0)) LC3_AMT_NTS
       FROM T_AC_FAMILY
      WHERE PIS_YY = ? AND SEQ_NO = '9') F, T_CM_PERSON G,
    (SELECT ENO_NO, CHI_CNT
       FROM T_AC_RETACC
      WHERE PIS_YY = ?
        AND GBN_TAG = '8') H
WHERE A.ENO_NO = B.ENO_NO(+)
  AND A.ENO_NO = C.ENO_NO(+)
  AND A.ENO_NO = D.ENO_NO(+)
  AND A.ENO_NO = E.ENO_NO(+)
  AND A.ENO_NO = F.ENO_NO(+)
  AND A.ENO_NO = G.ENO_NO
  AND A.ENO_NO = H.ENO_NO(+)
  AND G.ENO_NO NOT IN ('1990072','2000000','2010020','2010021','2040008','2040014','2040018','2040028','2050001','2060011','2060023','2070002','2070022','2070032','2070035','2080029','2080038','2080039','2090010','2090012','2100000','2100006','2100010','2110009','2110012','2120001','2120009','2120011','2120012','2120014','2120031','2130014','2130023','2130031','2130036','3070033','3080133','3110010','3110020','3110022','3120004','3120005','3120012','3120025','3130007')



  UNION

  SELECT EMS.ENO_NO||'F'||?||'12', 'F', '20227', '2218113834', '',
         EMS.CET_NO,
         '','',
         0,'','',0,0,0,0,0,0,0,0,0,0,'0',0,'0',0,'0',0,'0','0','0',0,0,'0',0,'0',0,   --35
         '0',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
         0,0,0,0,
         0,0,0,0,
         0,0,0,0,
         0,0,0,0,
         0,0,0,0,0,0,0,0,0,0,'','',0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,'',
         '' REL_CD1,  '' NAM_KOR1, '' CET_NO1,
         '' BAS_MAN1, '' TRB_MAN1, '' RCH_MAN1, '' WCT_MAN1,  '' GOL_MAN1, '' CHI_MAN1, '' INP_MAN1, '' ONE_MAN1,
         '' INV_NTS1, '' MED_NTS1, '' EDU_NTS1, '' CARD_NTS1, '' DIR_CARD_NTS1,'' CASH_NTS1, '' MARKET_NTS1,  '' MARKET_NTS1,'' LC3_AMT_NTS1,
         '' INV_AMT1, '' MED_AMT1, '' EDU_AMT1, '' CARD_AMT1, '' DIR_CARD_AMT1,'' SCH_AMT1, '' MARKET_AMT1,  '' MARKET_AMT1,'' LC3_AMT1,
         '' REL_CD2,  '' NAM_KOR2, '' CET_NO2,
         '' BAS_MAN2, '' TRB_MAN2, '' RCH_MAN2, '' WCT_MAN2,  '' GOL_MAN2, '' CHI_MAN2, '' INP_MAN2, '' ONE_MAN2,
         '' INV_NTS2, '' MED_NTS2, '' EDU_NTS2, '' CARD_NTS2, '' DIR_CARD_NTS2,'' CASH_NTS2, '' MARKET_NTS2, '' MARKET_NTS2, '' LC3_AMT_NTS2,
         '' INV_AMT2, '' MED_AMT2, '' EDU_AMT2, '' CARD_AMT2, '' DIR_CARD_AMT2,'' SCH_AMT2, '' MARKET_AMT2, '' MARKET_AMT2, '' LC3_AMT2,
         '' REL_CD3,  '' NAM_KOR3, '' CET_NO3,
         '' BAS_MAN3, '' TRB_MAN3, '' RCH_MAN3, '' WCT_MAN3,  '' GOL_MAN3, '' CHI_MAN3, '' INP_MAN3, '' ONE_MAN3,
         '' INV_NTS3, '' MED_NTS3, '' EDU_NTS3, '' CARD_NTS3, '' DIR_CARD_NTS3,'' CASH_NTS3, '' MARKET_NTS3, '' MARKET_NTS3, '' LC3_AMT_NTS3,
         '' INV_AMT3, '' MED_AMT3, '' EDU_AMT3, '' CARD_AMT3, '' DIR_CARD_AMT3,'' SCH_AMT3, '' MARKET_AMT3, '' MARKET_AMT3, '' LC3_AMT3,
         '' REL_CD4,  '' NAM_KOR4, '' CET_NO4,
         '' BAS_MAN4, '' TRB_MAN4, '' RCH_MAN4, '' WCT_MAN4,  '' GOL_MAN4, '' CHI_MAN4, '' INP_MAN4, '' ONE_MAN4,
         '' INV_NTS4, '' MED_NTS4, '' EDU_NTS4, '' CARD_NTS4, '' DIR_CARD_NTS4,'' CASH_NTS4, '' MARKET_NTS4, '' MARKET_NTS4, '' LC3_AMT_NTS4,
         '' INV_AMT4, '' MED_AMT4, '' EDU_AMT4, '' CARD_AMT4, '' DIR_CARD_AMT4,'' SCH_AMT4, '' MARKET_AMT4, '' MARKET_AMT4, '' LC3_AMT4,
         '' REL_CD5,  '' NAM_KOR5, '' CET_NO5,
         '' BAS_MAN5, '' TRB_MAN5, '' RCH_MAN5, '' WCT_MAN5,  '' GOL_MAN5, '' CHI_MAN5, '' INP_MAN5, '' ONE_MAN5,
         '' INV_NTS5, '' MED_NTS5, '' EDU_NTS5, '' CARD_NTS5, '' DIR_CARD_NTS5,'' CASH_NTS5, '' MARKET_NTS5, '' MARKET_NTS5, '' LC3_AMT_NTS5,
         '' INV_AMT5, '' MED_AMT5, '' EDU_AMT5, '' CARD_AMT5, '' DIR_CARD_AMT5,'' SCH_AMT5, '' MARKET_AMT5, '' MARKET_AMT5, '' LC3_AMT5,
         PEN1.PEN_GUBUN_CD PEN_GUBUN_CD_1, PEN1.ABA_CD ABA_CD_1, SUBSTR(PEN1.ABA_NM,0,15) ABA_NM_1,
         PEN1.ACC_NO ACC_NO_1, NVL(PEN1.YEAR_SEQ, '00') YEAR_SEQ_1, PEN1.AMOUNT AMOUNT_1, NVL(PEN1.DED_AMT,0) DED_AMT_1,
         PEN2.PEN_GUBUN_CD PEN_GUBUN_CD_2, PEN2.ABA_CD ABA_CD_2, SUBSTR(PEN2.ABA_NM,0,15) ABA_NM_2,
         PEN2.ACC_NO ACC_NO_2, NVL(PEN2.YEAR_SEQ, '00') YEAR_SEQ_2, PEN2.AMOUNT AMOUNT_2, NVL(PEN2.DED_AMT,0) DED_AMT_2,
         PEN3.PEN_GUBUN_CD PEN_GUBUN_CD_3, PEN3.ABA_CD ABA_CD_3, SUBSTR(PEN3.ABA_NM,0,15) ABA_NM_3,
         PEN3.ACC_NO ACC_NO_3, NVL(PEN3.YEAR_SEQ, '00') YEAR_SEQ_3, PEN3.AMOUNT AMOUNT_3, NVL(PEN3.DED_AMT,0) DED_AMT_3,
         PEN4.PEN_GUBUN_CD PEN_GUBUN_CD_4, PEN4.ABA_CD ABA_CD_4, SUBSTR(PEN4.ABA_NM,0,15) ABA_NM_4,
         PEN4.ACC_NO ACC_NO_4, NVL(PEN4.YEAR_SEQ, '00') YEAR_SEQ_4, PEN4.AMOUNT AMOUNT_4, NVL(PEN4.DED_AMT,0) DED_AMT_4,
         PEN5.PEN_GUBUN_CD PEN_GUBUN_CD_5, PEN5.ABA_CD ABA_CD_5, SUBSTR(PEN5.ABA_NM,0,15) ABA_NM_5,
         PEN5.ACC_NO ACC_NO_5, NVL(PEN5.YEAR_SEQ, '00') YEAR_SEQ_5, PEN5.AMOUNT AMOUNT_5, NVL(PEN5.DED_AMT,0) DED_AMT_5,
         PEN6.PEN_GUBUN_CD PEN_GUBUN_CD_6, PEN6.ABA_CD ABA_CD_6, SUBSTR(PEN6.ABA_NM,0,15) ABA_NM_6,
         PEN6.ACC_NO ACC_NO_6, NVL(PEN6.YEAR_SEQ, '00') YEAR_SEQ_6, PEN6.AMOUNT AMOUNT_6, NVL(PEN6.DED_AMT,0) DED_AMT_6,
         PEN7.PEN_GUBUN_CD PEN_GUBUN_CD_7, PEN7.ABA_CD ABA_CD_7, SUBSTR(PEN7.ABA_NM,0,15) ABA_NM_7,
         PEN7.ACC_NO ACC_NO_7, NVL(PEN7.YEAR_SEQ, '00') YEAR_SEQ_7, PEN7.AMOUNT AMOUNT_7, NVL(PEN7.DED_AMT,0) DED_AMT_7,
         PEN8.PEN_GUBUN_CD PEN_GUBUN_CD_8, PEN8.ABA_CD ABA_CD_8, SUBSTR(PEN8.ABA_NM,0,15) ABA_NM_8,
         PEN8.ACC_NO ACC_NO_8, NVL(PEN8.YEAR_SEQ, '00') YEAR_SEQ_8, PEN8.AMOUNT AMOUNT_8, NVL(PEN8.DED_AMT,0) DED_AMT_8,
         PEN9.PEN_GUBUN_CD PEN_GUBUN_CD_9, PEN9.ABA_CD ABA_CD_9, SUBSTR(PEN9.ABA_NM,0,15) ABA_NM_9,
         PEN9.ACC_NO ACC_NO_9, NVL(PEN9.YEAR_SEQ, '00') YEAR_SEQ_9, PEN9.AMOUNT AMOUNT_9, NVL(PEN9.DED_AMT,0) DED_AMT_9,
         PEN10.PEN_GUBUN_CD PEN_GUBUN_CD_10, PEN10.ABA_CD ABA_CD_10, SUBSTR(PEN10.ABA_NM,0,15) ABA_NM_10,
         PEN10.ACC_NO ACC_NO_10, NVL(PEN10.YEAR_SEQ, '00') YEAR_SEQ_10, PEN10.AMOUNT AMOUNT_10, NVL(PEN10.DED_AMT,0) DED_AMT_10,
         PEN11.PEN_GUBUN_CD PEN_GUBUN_CD_11, PEN11.ABA_CD ABA_CD_11, SUBSTR(PEN11.ABA_NM,0,15) ABA_NM_11,
         PEN11.ACC_NO ACC_NO_11, NVL(PEN11.YEAR_SEQ, '00') YEAR_SEQ_11, PEN11.AMOUNT AMOUNT_11, NVL(PEN11.DED_AMT,0) DED_AMT_11,
         PEN12.PEN_GUBUN_CD PEN_GUBUN_CD_12, PEN12.ABA_CD ABA_CD_12, SUBSTR(PEN12.ABA_NM,0,15) ABA_NM_12,
         PEN12.ACC_NO ACC_NO_12, NVL(PEN12.YEAR_SEQ, '00') YEAR_SEQ_12, PEN12.AMOUNT AMOUNT_12, NVL(PEN12.DED_AMT,0) DED_AMT_12,
         PEN13.PEN_GUBUN_CD PEN_GUBUN_CD_13, PEN13.ABA_CD ABA_CD_13, SUBSTR(PEN13.ABA_NM,0,15) ABA_NM_13,
         PEN13.ACC_NO ACC_NO_13, NVL(PEN13.YEAR_SEQ, '00') YEAR_SEQ_13, PEN13.AMOUNT AMOUNT_13, NVL(PEN13.DED_AMT,0) DED_AMT_13,
         PEN14.PEN_GUBUN_CD PEN_GUBUN_CD_14, PEN14.ABA_CD ABA_CD_14, SUBSTR(PEN14.ABA_NM,0,15) ABA_NM_14,
         PEN14.ACC_NO ACC_NO_14, NVL(PEN14.YEAR_SEQ, '00') YEAR_SEQ_14, PEN14.AMOUNT AMOUNT_14, NVL(PEN14.DED_AMT,0) DED_AMT_14,
         PEN15.PEN_GUBUN_CD PEN_GUBUN_CD_15, PEN15.ABA_CD ABA_CD_15, SUBSTR(PEN15.ABA_NM,0,15) ABA_NM_15,
         PEN15.ACC_NO ACC_NO_15, NVL(PEN15.YEAR_SEQ, '00') YEAR_SEQ_15, PEN15.AMOUNT AMOUNT_15, NVL(PEN15.DED_AMT,0) DED_AMT_15
    FROM
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '0') PEN1,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '1') PEN2,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '2') PEN3,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '3') PEN4,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '4') PEN5,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '5') PEN6,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '6') PEN7,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '7') PEN8,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '8') PEN9,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '9') PEN10,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '10') PEN11,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '11') PEN12,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '12') PEN13,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '13') PEN14,
         (SELECT PIS_YY, ENO_NO, DECODE(DED_AMT, 0, '', PEN_GUBUN_CD) PEN_GUBUN_CD, DECODE(DED_AMT, 0, '', ABA_CD) ABA_CD, DECODE(DED_AMT, 0, '', ABA_NM) ABA_NM, DECODE(DED_AMT, 0, '', ACC_NO) ACC_NO, DECODE(DED_AMT, 0, '', YEAR_SEQ) YEAR_SEQ, DECODE(DED_AMT, 0, 0, AMOUNT) AMOUNT, DED_AMT FROM T_AC_PENSION WHERE PIS_YY = ? AND ROW_NUM = '14') PEN15,
         (SELECT ENO_NO,ENO_NM AS NAM_KOR,
                 SUBSTR(CET_NO,1,6)||SUBSTR(CET_NO,8,7) CET_NO,
                 ZIP_NO,ADR_CT||' '||ADDRESS JUSO,
                 GREATEST(NVL(TO_CHAR(HIR_YMD,'YYYYMMDD'),' '),?||'0101') HIR_YMD,
                 LEAST(NVL(TO_CHAR(RET_YMD,'YYYYMMDD'),?||'1231'),?||'1231') RET_YMD
          FROM T_CM_PERSON ) EMS,
          T_AC_RETACC YAC
	 WHERE PEN1.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN2.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN3.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN4.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN5.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN6.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN7.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN8.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN9.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN10.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN11.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN12.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN13.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN14.ENO_NO(+)  = EMS.ENO_NO
	   AND PEN15.ENO_NO(+)  = EMS.ENO_NO
	--   AND (PEN1.AMOUNT > 0 OR PEN2.AMOUNT > 0 OR PEN3.AMOUNT > 0 OR PEN4.AMOUNT > 0 OR PEN5.AMOUNT > 0 OR
	--        PEN6.AMOUNT > 0 OR PEN7.AMOUNT > 0 OR PEN8.AMOUNT > 0 OR PEN9.AMOUNT > 0 OR PEN10.AMOUNT > 0 OR
	--        PEN11.AMOUNT > 0 OR PEN12.AMOUNT > 0 OR PEN13.AMOUNT > 0 OR PEN14.AMOUNT > 0 OR PEN15.AMOUNT > 0 )
	   AND YAC.PIS_YY = ?
	   AND YAC.GBN_TAG = '8'
	   AND YAC.ENO_NO = EMS.ENO_NO
	   AND EMS.ENO_NO NOT IN ('1990072','2000000','2010020','2010021','2040008','2040014','2040018','2040028','2050001','2060011','2060023','2070002','2070022','2070032','2070035','2080029','2080038','2080039','2090010','2090012','2100000','2100006','2100010','2110009','2110012','2120001','2120009','2120011','2120012','2120014','2120031','2130014','2130023','2130031','2130036','3070033','3080133','3110010','3110020','3110022','3120004','3120005','3120012','3120025','3130007')

 ) VIEW_1
 ORDER BY VIEW_1.SEL_KEY
            ]]>
        </query>
    </sql>


    <!-- 연말정산 파일출력 -->
    <sql name="SAGA120_FILE_04_01">
        <description>연말정산 파일출력(A,B)</description>
        <query>
            <![CDATA[
            SELECT ROW_NUMBER() OVER(ORDER BY NPN_NO) AS NUM,
                   NPN_NO
            FROM (
            SELECT 'A'||
                   '20'||
                   '227'||
                   RPAD(?,8)||
                   '2'||
                   RPAD(' ',6)||
                   RPAD('asan99',20)||
                   '9000'||
                   RPAD('2218113834',10)||
                   RPAD('현대아산주식회사',40)||
                   RPAD('인재지원',30)||
                   RPAD('하나진',30)||
                   RPAD('02-3669-3867',15)||
                   TO_CHAR('1','FM00000')||
                   '101'||
                   RPAD(' ',1222) AS NPN_NO
            FROM   T_AC_RETACC

            UNION

            SELECT 'B'||
                   '20'||
                   '227'||
                   TO_CHAR(1,'FM000000')||
                   RPAD('2218113834',10)||
                   RPAD('현대아산주식회사',40)||
                   RPAD('김종학',30)||
                   RPAD('1401110011714',13)||
                   TO_CHAR(NVL(YAC.YAC_CNT,0),'FM0000000')||
                   TO_CHAR(NVL(YAB.YAB_CNT,0),'FM0000000')||
                   TO_CHAR(NVL(YAC.TAX_INCOME,0) + NVL(YAC.YAB_INCOME,0),'FM00000000000000')||
                   TO_CHAR(NVL(YAC.DGG_TAX,0),'FM0000000000000')||
                   TO_CHAR(NVL(YAC.DJM_TAX,0),'FM0000000000000')||
                   TO_CHAR(NVL(YAC.DBW_TAX,0),'FM0000000000000')||
                   TO_CHAR(NVL(YAC.TAX_TOT,0),'FM0000000000000')||
                   '1'||
                   RPAD(' ',1214) AS NPN_NO
            FROM  (SELECT COUNT(*) YAB_CNT
                   FROM   T_AC_DUTYPLACE
                   WHERE  PIS_YY = ?
                   AND    PIS_MM = ?
                   AND   ENO_NO NOT IN ('1990072','2000000','2010020','2010021','2040008','2040014','2040018','2040028','2050001','2060011','2060023','2070002','2070022','2070032','2070035','2080029','2080038','2080039','2090010','2090012','2100000','2100006','2100010','2110009','2110012','2120001','2120009','2120011','2120012','2120014','2120031','2130014','2130023','2130031','2130036','3070033','3080133','3110010','3110020','3110022','3120004','3120005','3120012','3120025','3130007')
                   ) YAB,
                  (SELECT COUNT(*) YAC_CNT,
                          SUM(TAX_INCOME) TAX_INCOME,
                          SUM(YAB_INCOME) YAB_INCOME,
                          SUM(GREATEST(DGG_TAX,0)) DGG_TAX,
                          SUM(GREATEST(DBW_TAX,0)) DBW_TAX,
                          SUM(GREATEST(DJM_TAX,0)) DJM_TAX,
                          SUM(GREATEST(NVL(DGG_TAX,0),0) + GREATEST(NVL(DBW_TAX,0),0) + GREATEST(NVL(DJM_TAX,0),0) ) TAX_TOT
                   FROM   T_AC_RETACC
                   WHERE PIS_YY = ?
                   AND   PIS_MM = ?
                   AND   GBN_TAG= '8'
                   AND   ENO_NO NOT IN ('1990072','2000000','2010020','2010021','2040008','2040014','2040018','2040028','2050001','2060011','2060023','2070002','2070022','2070032','2070035','2080029','2080038','2080039','2090010','2090012','2100000','2100006','2100010','2110009','2110012','2120001','2120009','2120011','2120012','2120014','2120031','2130014','2130023','2130031','2130036','3070033','3080133','3110010','3110020','3110022','3120004','3120005','3120012','3120025','3130007')
                   ) YAC
            )
            ]]>
        </query>
    </sql>
   <!-- 퇴직정산 -->
    <sql name="SAGA120_SHR_05">
        <description>퇴직정산</description>
        <query>
            <![CDATA[
            SELECT RPAD('C',1) AS COL1,
                    RPAD('22',2) AS COL2,
                    RPAD('101',3) AS COL3,
                    TO_CHAR(ROW_NUMBER() OVER(ORDER BY RET_YMD, ENO_NO),'FM000000') AS COL4,

                    RPAD('2218113834',10) AS COL5,

                    TO_CHAR(0,'FM00') AS COL6,
                    RPAD('1',1) AS COL7,
                    RPAD('KR',2) AS COL8,
                    DECODE(NVL(GSF_YMD,''),'','',SUBSTR(GSF_YMD,1,4)||'-'||SUBSTR(GSF_YMD,5,2)||'-'||SUBSTR(GSF_YMD,7,2)) AS COL9,
                    DECODE(NVL(GST_YMD,''),'','',SUBSTR(GST_YMD,1,4)||'-'||SUBSTR(GST_YMD,5,2)||'-'||SUBSTR(GST_YMD,7,2)) AS COL10,
                    NAM_KOR AS COL11,
                    RPAD('1',1) AS COL12,
                    CET_NO AS COL13,

                    TO_CHAR(AGY_AMT,'FM0000000000') AS COL14,
                    TO_CHAR(ASD_AMT,'FM0000000000') AS COL15,
                    TO_CHAR(ADC_AMT,'FM0000000000') AS COL16,
                    TO_CHAR(TOT_AMT,'FM0000000000') AS COL17,
                    TO_CHAR(0,          'FM0000000000') AS COL18,

                    TO_CHAR(0,          'FM0000000000') AS COL19,
                    TO_CHAR(0,          'FM0000000000') AS COL20,
                    TO_CHAR(0,          'FM0000000000') AS COL21,
                    TO_CHAR(0,          'FM0000000000') AS COL22,
                    TO_CHAR(0,          'FM0000000000') AS COL23,

                    TO_CHAR(0,          'FM0000000000') AS COL24,
                    TO_CHAR(0,          'FM0000000000') AS COL25,
                    TO_CHAR(0,          'FM0000000000') AS COL26,
                    TO_CHAR(0,          'FM0000000000') AS COL27,
                    TO_CHAR(0,          'FM0000000000') AS COL28,
                    TO_CHAR(0,          'FM0000000000') AS COL29,
                    TO_CHAR(0,          'FM0000000000') AS COL30,

                    DECODE(NVL(HIR_YMD,''),'','',SUBSTR(HIR_YMD,1,4)||'-'||SUBSTR(HIR_YMD,5,2)||'-'||SUBSTR(HIR_YMD,7,2)) AS COL31,
                    DECODE(NVL(RET_YMD,''),'','',SUBSTR(RET_YMD,1,4)||'-'||SUBSTR(RET_YMD,5,2)||'-'||SUBSTR(RET_YMD,7,2)) AS COL32,
                    TO_CHAR(LSE_MM,'FM0000') AS COL33,
                    TO_CHAR(0,         'FM0000') AS COL34,
                    DECODE(NVL(FHIR_YMD,''),'','',SUBSTR(FHIR_YMD,1,4)||'-'||SUBSTR(FHIR_YMD,5,2)||'-'||SUBSTR(FHIR_YMD,7,2)) AS COL35,
                    DECODE(NVL(FRET_YMD,''),'','',SUBSTR(FRET_YMD,1,4)||'-'||SUBSTR(FRET_YMD,5,2)||'-'||SUBSTR(FRET_YMD,7,2)) AS COL36,
                    TO_CHAR(FLSE_MM,'FM0000') AS COL37,
                    TO_CHAR(0,          'FM0000') AS COL38,
                    TO_CHAR(CLSE_MM,'FM0000') AS COL39,
                    TO_CHAR(LSE_YY, 'FM00') AS COL40,

                    TO_CHAR(RET_AMT,  'FM0000000000') AS COL41,
                    TO_CHAR(RMGR_AMT, 'FM0000000000') AS COL42,
                    TO_CHAR(GREATEST(RTTAX_AMT,0),'FM0000000000') AS COL43,
                    TO_CHAR(GREATEST(YTTAX_AMT,0),'FM0000000000') AS COL44,
                    TO_CHAR(GREATEST(YTAX_AMT,0), 'FM0000000000') AS COL45,
                    TO_CHAR(GREATEST(TAX_AMT,0),  'FM0000000000') AS COL46,

                    TO_CHAR(ICM_TAX,  'FM0000000000') AS COL47,
                    TO_CHAR(DJM_TAX,  'FM0000000000') AS COL48,
                    TO_CHAR(DBW_TAX,  'FM0000000000') AS COL49,
                    TO_CHAR(NVL(ICM_TAX,0)
                           +NVL(DBW_TAX,0)
                           +NVL(DJM_TAX,0),'FM0000000000') AS COL50,

                    TO_CHAR(FICM_TAX, 'FM0000000000') AS COL51,
                    TO_CHAR(FDGG_TAX, 'FM0000000000') AS COL52,
                    TO_CHAR(FDBW_TAX, 'FM0000000000') AS COL53,
                    TO_CHAR(NVL(FICM_TAX,0)
                           +NVL(FDBW_TAX,0)
                           +NVL(FDGG_TAX,0),'FM0000000000') AS COL54,
                    RPAD(' ',9) AS COL55
            FROM T_AC_RETTABLE
            WHERE PRO_YM BETWEEN ?||'02' AND ?+1||'01'
            AND RET_AMT > 0
            ORDER BY RET_YMD, ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 퇴직정산 파일출력 -->
    <sql name="SAGA120_FILE_05">
        <description>퇴직정산 파일출력</description>
        <query>
            <![CDATA[
            SELECT ROW_NUMBER() OVER(ORDER BY SORT) AS NUM,
                   NPN_NO
            FROM
           (select   '0'||'A' SORT,
                     RPAD('A',1)||
                     RPAD('25',2)||
                     RPAD('101',3)||
                     RPAD(TO_CHAR(SYSDATE,'YYYYMMDD'),8)||
                     RPAD('2',1)||
                     RPAD(' ',6)||
                     RPAD('hyundaiuni',20)||
                     RPAD('9000',4)||
                     RPAD('2218113834',10)||
                     RPAD('현대아산주식회사',40)||
                     RPAD('재무팀',30)||
                     RPAD('김정열',30)||
                     RPAD('02-2172-6025',15)||
                     RPAD('00001',5)||
                     RPAD('101',3)||
                     RPAD(' ',802) AS NPN_NO
            FROM     T_AC_RETTABLE
            WHERE    PRO_YM BETWEEN ?||'02' AND ?+1||'01'
            AND      RET_AMT > 0

            UNION

             SELECT  '0'||'B' SORT,
                     RPAD('B',1)||
                     RPAD('25',2)||
                     RPAD('101',3)||
                     RPAD('000001',6)||
                     RPAD('2218113834',10)||
                     RPAD('현대아산주식회사',40)||
                     RPAD('김정열',30)||
                     RPAD('1101110578231',13)||
                     TO_CHAR(A.CNT,'FM0000000')||
                     TO_CHAR(B.CNT,'FM0000000')||
                     TO_CHAR(A.RET_AMT,'FM00000000000000')||
                     TO_CHAR(A.ICM_TAX,'FM0000000000000')||
                     TO_CHAR(0,        'FM0000000000000')||
                     TO_CHAR(A.DJM_TAX,'FM0000000000000')||
                     TO_CHAR(A.DBW_TAX,'FM0000000000000')||
                     TO_CHAR(A.SUM_TAX,'FM0000000000000')||
                     '1'||
                     RPAD(' ',781) AS NPN_NO
            FROM    (SELECT COUNT(*) CNT,
                            SUM(GREATEST(RET_AMT,0)) RET_AMT,
                            SUM(GREATEST(NVL(ICM_TAX,0),0)) ICM_TAX,
                            SUM(GREATEST(NVL(DJM_TAX,0),0)) DJM_TAX,
                            SUM(GREATEST(NVL(DBW_TAX,0),0)) DBW_TAX,
                            SUM(GREATEST(NVL(ICM_TAX,0),0)+GREATEST(nvl(DBW_TAX,0),0)+GREATEST(nvl(DJM_TAX,0),0)) SUM_TAX
                        FROM T_AC_RETTABLE A
                       WHERE DECODE(SEQ,0,9,SEQ) = (SELECT MAX(DECODE(SEQ,0,9,SEQ))
                                                     FROM T_AC_RETTABLE B WHERE A.ENO_NO = B.ENO_NO
                                                      AND A.PRO_YM BETWEEN ?||'02' AND ?+1||'01')
                         AND A.PRO_YM BETWEEN ?||'02' AND ?+1||'01'
                         AND RET_AMT > 0) A,
                     (SELECT COUNT(*) CNT
                       FROM T_AC_RETTABLE A
                      WHERE DECODE(SEQ,0,9,SEQ) <> (SELECT MAX(DECODE(SEQ,0,9,SEQ))
                                                      FROM T_AC_RETTABLE B
                                                     WHERE A.ENO_NO = B.ENO_NO
                                                     AND A.PRO_YM BETWEEN ?||'02' AND ?+1||'01')
                      AND A.PRO_YM BETWEEN ?||'02' AND ?+1||'01'
                         AND RET_AMT > 0) B

            UNION

            SELECT   ENO_NO||'C'||ENO_NO SORT,
                     RPAD('C',1)||
                     RPAD('25',2)||
                     RPAD('101',3)||
                     TO_CHAR(ROW_NUMBER() OVER(ORDER BY eno_no),'FM000000')||
                     RPAD('2218113834',10)||
                     RPAD('2218113834',10)||
                     RPAD('현대아산주식회사',40)||
                     (SELECT TO_CHAR(COUNT(*)-1,'FM00')
                        FROM T_AC_RETTABLE C
                       WHERE C.ENO_NO = A.ENO_NO
                         AND C.PRO_YM BETWEEN ?||'02' AND ?+1||'01'
                    GROUP BY ENO_NO)||
                     RPAD('1',1)||
                     RPAD('KR',2)||
                     RPAD(gsf_ymd,8,'0')||
                     RPAD(gst_ymd,8,'0')||
                     RPAD(nam_kor,30)||
                     RPAD('1',1)||
                     RPAD(substr(cet_no,1,6)||substr(cet_no,8,7),13)||
                     DECODE(seq,'0','3','5')||
                   --  DECODE(rhgr_ded,0,'2','1')||

                     TO_CHAR(0,'FM0000000000')||
                     TO_CHAR(asd_amt,'FM0000000000')||
                     TO_CHAR(agy_amt,'FM0000000000')||
                     TO_CHAR(0,      'FM0000000000')||       -- 퇴직연금일시금(법정이외)
                     TO_CHAR(tot_amt,'FM0000000000')||
                     TO_CHAR(0,      'FM0000000000')||

					 RPAD(' ',20) ||                         -- 퇴직연금계좌번호(?)
                     TO_CHAR(agy_amt,'FM0000000000')||
                     TO_CHAR(agy_amt,'FM0000000000')||
                     TO_CHAR(0,      'FM0000000000')||
                     TO_CHAR(0,      'FM0000000000')||
                     TO_CHAR(agy_amt,'FM0000000000')||

					 RPAD(' ',20) ||   					     -- 종전근무지 퇴직연금명세
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||

                     TO_CHAR(agy_amt,    'FM0000000000')||  -- 퇴직연금일시금지급예상액-주(현)
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||   -- 과세이연금액(주(현))
                     TO_CHAR(0,          'FM0000000000')||	 -- 과세이연금액(종(전))
                     TO_CHAR(0,          'FM0000000000')||	 -- 기수령한퇴직급여액(주(현))
                     TO_CHAR(0,          'FM0000000000')||   -- 기수령한퇴직급여액(종(전))
                     TO_CHAR(agy_amt,          'FM0000000000')||  -- 총퇴직연금일시금
                     TO_CHAR(agy_amt,          'FM0000000000')||  -- 수령가능퇴직급여액
                     TO_CHAR(rmgr_amt,         'FM0000000000')||  -- 환산퇴직소득공제
                     TO_CHAR(rttax_amt,        'FM0000000000')||  -- 환산퇴직소득 과세표준
                     TO_CHAR(ytax_amt,         'FM0000000000')||  -- 환산연평균과세표준
                     TO_CHAR(tax_amt,         'FM0000000000')||  -- 환산연평균산출세액

                     TO_CHAR(0,          'FM0000000000')||  -- 법정이외
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(asd_amt,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(asd_amt,          'FM0000000000')||
                     TO_CHAR(asd_amt,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(asd_amt,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||

                     RPAD(hir_ymd,8,'0')||
                     RPAD(ret_ymd,8,'0')||
                     TO_CHAR(lse_mm,'FM0000')||
                     TO_CHAR(0,     'FM0000')||
                     RPAD(' ',8) ||								-- 종전근무지 입사연월일
                     RPAD(' ',8) ||								-- 종전근무지 퇴사연월일
                     RPAD(' ',4) ||								-- 종전근무지 근속월수
                     RPAD(' ',4) ||								-- 종전근무지 제외월수
                     TO_CHAR(clse_mm,'FM0000')||
                     TO_CHAR(ceil((lse_mm+flse_mm)/12),'FM00')||

                     RPAD(' ',8) ||								-- 법정이외
                     RPAD(' ',8) ||
                     RPAD(' ',4) ||
                     RPAD(' ',4) ||
                     RPAD(' ',8) ||
                     RPAD(' ',8) ||
                     RPAD(' ',4) ||
                     RPAD(' ',4) ||
                     RPAD(' ',4) ||
                     RPAD(' ',2) ||

                     TO_CHAR(agy_amt,          'FM0000000000')||  -- 법정, 퇴직급여액
                     TO_CHAR(rmgr_amt,         'FM0000000000')||  -- 퇴직소득공제
                     TO_CHAR(rttax_amt,        'FM0000000000')||  -- 퇴직소득과세표준
                     TO_CHAR(yttax_amt,        'FM0000000000')||  -- 연평균과세표준
                     TO_CHAR(ytax_amt,         'FM0000000000')||  -- 연평균산출세액
                 --    TO_CHAR(rhgr_ded,         'FM0000000000')||
                     TO_CHAR(tax_amt,          'FM0000000000')||        -- 산출세액

                     TO_CHAR(asd_amt,          'FM0000000000')||  -- 법정이외, 퇴직급여액
                     TO_CHAR(0,          'FM0000000000')||		  -- 퇴직소득공제
                     TO_CHAR(asd_amt,          'FM0000000000')||  -- 퇴직소득과세표준
                     TO_CHAR(0,          'FM0000000000')|| 		  -- 연평균과세표준
                     TO_CHAR(0,          'FM0000000000')|| 		  -- 연평균산출세액
                 --    TO_CHAR(0,          'FM0000000000')||
                     TO_CHAR(0,          'FM0000000000')||		  -- 산출세액

                     TO_CHAR(ret_amt,  'FM0000000000')||                 -- 퇴직급여액
                     TO_CHAR(rmgr_amt, 'FM0000000000')||				 -- 퇴직소득공제
                     TO_CHAR(GREATEST(rttax_amt,0),'FM0000000000')||     -- 퇴직소득과세표준
                     TO_CHAR(GREATEST(yttax_amt,0),'FM0000000000')||	 -- 연평균과세표준
                     TO_CHAR(GREATEST(ytax_amt,0), 'FM0000000000')||	 -- 연평균산출세액
                     TO_CHAR(GREATEST(tax_amt,0),  'FM0000000000')||	 -- 산출세액
                 --    TO_CHAR(GREATEST(rhgr_ded,0), 'FM0000000000')||
                     TO_CHAR(0,                    'FM0000000000')||	 -- 외국납부세액공제

                     TO_CHAR(icm_tax,  'FM0000000000')||
                     TO_CHAR(djm_tax,  'FM0000000000')||
                     TO_CHAR(dbw_tax,  'FM0000000000')||
                     TO_CHAR(nvl(icm_tax,0)
                            +nvl(dbw_tax,0)
                            +nvl(djm_tax,0),'FM0000000000')||
                     TO_CHAR(ficm_tax, 'FM0000000000')||
                     TO_CHAR(fdgg_tax, 'FM0000000000')||
                     TO_CHAR(fdbw_tax, 'FM0000000000')||
                     TO_CHAR(nvl(ficm_tax,0)
                            +nvl(fdbw_tax,0)
                            +nvl(fdgg_tax,0),'FM0000000000')||
                     RPAD(' ',4) AS NPN_NO
            FROM     T_AC_RETTABLE_TEMP A
            WHERE    A.PRO_YM BETWEEN ?||'02' AND ?+1||'01'
              AND    DECODE(A.SEQ,0,9,SEQ) = (SELECT MAX(DECODE(SEQ,0,9,SEQ))
                                                FROM T_AC_RETTABLE_TEMP B
                                               WHERE A.ENO_NO = B.ENO_NO
                                                 AND A.PRO_YM BETWEEN ?||'02' AND ?+1||'01')
            AND      A.RET_AMT > 0

            UNION

            SELECT   ENO_NO||'D'||ENO_NO SORT,
                     RPAD('D',1)||
                     RPAD('22',2)||
                     RPAD('101',3)||
                     (SELECT NUM
                       FROM (SELECT eno_no, TO_CHAR(ROW_NUMBER() OVER(ORDER BY eno_no),'FM000000') NUM
                               FROM T_AC_RETTABLE_TEMP a
                              WHERE A.PRO_YM BETWEEN ?||'02' AND ?+1||'01'
                                AND DECODE(A.SEQ,0,9,SEQ) = (SELECT MAX(DECODE(SEQ,0,9,SEQ))
                                                               FROM T_AC_RETTABLE_TEMP B
                                                              WHERE A.ENO_NO = B.ENO_NO
                                                                AND A.PRO_YM BETWEEN ?||'02' AND ?+1||'01')
                                AND A.RET_AMT > 0)
                      WHERE ENO_NO = A.ENO_NO) ||
                     RPAD('2218113834',10)||
                     RPAD(' ',50)||
                     RPAD(substr(cet_no,1,6)||substr(cet_no,8,7),13)||
                     DECODE(seq,'0','3','5')||
                     DECODE(rhgr_ded,0,'2','1')||
                     RPAD('현대아산주식회사',40)||
                     RPAD('2218113834',10)||

                     TO_CHAR(agy_amt,'FM0000000000')||
                     TO_CHAR(asd_amt,'FM0000000000')||
                     TO_CHAR(are_amt,'FM0000000000')||
                     TO_CHAR(tot_amt,'FM0000000000')||
                     TO_CHAR(0,      'FM0000000000')||

                     TO_CHAR(are_amt,'FM0000000000')||
                     TO_CHAR(are_amt,'FM0000000000')||
                     TO_CHAR(0,      'FM0000000000')||
                     TO_CHAR(0,      'FM0000000000')||
                     TO_CHAR(are_amt,'FM0000000000')||

                     RPAD(hir_ymd,8,'0')||
                     RPAD(ret_ymd,8,'0')||
                     TO_CHAR(lse_mm,'FM0000')||
                     TO_CHAR(0,     'FM0000')||
                     '01'||
                     RPAD(' ',257) AS NPN_NO
            FROM     T_AC_RETTABLE_TEMP A
            WHERE    A.PRO_YM BETWEEN ?||'02' AND ?+1||'01'
              AND    DECODE(A.SEQ,0,9,SEQ) <> (SELECT MAX(DECODE(SEQ,0,9,SEQ))
                                                FROM T_AC_RETTABLE_TEMP B
                                               WHERE A.ENO_NO = B.ENO_NO
                                                 AND A.PRO_YM BETWEEN ?||'02' AND ?+1||'01')
            AND      A.RET_AMT > 0
             )
            ]]>
        </query>
    </sql>

    <!-- 제일은행 사원정보 조회 -->
    <sql name="SAGA120_SHR_06">
        <description>제일은행 사원정보 조회</description>
        <query>
            <![CDATA[
            SELECT CET_NO
            FROM   VI_T_CM_PERSON2
            WHERE  ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 제일은행 저장 -->
    <sql name="SAGA120_INS_06">
        <description>제일은행 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_AC_LOAN
                       (PIS_YY, PIS_MM, ENO_NO, GMK_TAG, GMKL_NO,
                        GMK_AMT, GMK_INT, GMK_BAK, CET_NO, SAL_GBN, OCC_CD, DED_TAG, SEQ,
                        IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD)
            VALUES     (?, ?, ?, ?, ?,
                        ?, ?, ?, ?, ?, ?, ?, ?,
                        ?, SYSDATE,?, SYSDATE)
            ]]>
        </query>
    </sql>

    <!-- 의료비신고 -->
    <sql name="SAGA120_SHR_07">
        <description>의료비신고</description>
        <query>
            <![CDATA[
            SELECT A.DPT_CD AS DPT_CD,
                        A.DPT_NM AS DPT_NM,
                        A.JOB_CD AS JOB_CD,
                        A.JOB_NM AS JOB_NM,
                        A.ENO_NO AS ENO_NO,
                        A.ENO_NM AS ENO_NM,
                        REPLACE(A.CET_NO,'-','') AS CET_NO,
                        B.COM_NO AS COM_NO,
                        B.COM_NM AS COM_NM,
                        B.CARD_CNT AS TOT_CNT,
                        B.CARD_AMT AS SUM_AMT,
                        B.MED_CD,'1' AS NAT_CD,'1' AS NAT_CD2,
                        B.REL_CD AS REL_CD,
                        SF_GET_COMMNAME('01', 'FA', B.REL_CD) AS REL_NM,
                        B.CET_NO AS TCET_NO,
                        DECODE(B.REL_CD,'0','1',DECODE(B.GBN_TAG,NULL,'2','1')) AS COMM_CD
            FROM  VI_T_CM_PERSON2 A, T_AC_MEDICAL B, T_AC_RETACC C
            WHERE A.ENO_NO = B.ENO_NO
            AND      B.ENO_NO = C.ENO_NO
            AND      C.PIS_YY = ?
            AND      B.PIS_YY = ?
            AND      C.MMA_DED >= 2000000
            AND      C.GBN_TAG = '8'
            ORDER BY B.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 의료비신고 파일출력 -->
    <sql name="SAGA120_FILE_07">
        <description>의료비신고 파일출력</description>
        <query>
            <![CDATA[
            SELECT ROW_NUMBER() OVER(ORDER BY A.ENO_NO) AS NUM,
                   ('A'||
                    '26'||
                    '227'||
                    TO_CHAR(ROW_NUMBER() OVER(ORDER BY A.ENO_NO),'FM000000')||
                    ?||
                    '2218113834'||
                    RPAD('asan99', 20, ' ')||
                    '9000'||
                    '2218113834'||
                    RPAD('현대아산주식회사', 40, ' ')||
                    RPAD(SUBSTR(A.CET_NO,1,6)||SUBSTR(A.CET_NO,8,7), 13, ' ')||
                    '1'||
                    RPAD(REPLACE(A.ENO_NM,' ',''), 30, ' ')||
                    RPAD(NVL(B.COM_NO,' '), 10, ' ')||
                    RPAD(NVL(B.COM_NM,' '), 40, ' ')||
                    RPAD(B.MED_CD, 1,  ' ')||
                    TO_CHAR(NVL(B.CARD_CNT,0),'FM00000')||
                    TO_CHAR(NVL(B.CARD_AMT,0),'FM00000000000')||
                    RPAD(B.CET_NO, 13, ' ')||
                    '1'||
                    RPAD(DECODE(B.REL_CD,'0','1',DECODE(B.GBN_TAG,NULL,'2','1')), 1, ' ')||
                    '1'||
                    RPAD(' ', 19, ' ')
                   ) AS NPN_NO
            FROM  VI_T_CM_PERSON2 A,
                  (SELECT ENO_NO,
                  		 CET_NO,
                  		 COM_NO,
                         SUM(CARD_AMT) CARD_AMT,
                         DECODE(SUM(CARD_CNT),0,1,SUM(CARD_CNT)) CARD_CNT,
                         SUM(CASH_AMT) CASH_AMT,
                         SUM(CASH_CNT) CASH_CNT,
                         MIN(COM_NM) COM_NM, MIN(REL_CD) REL_CD,
                         MIN(GBN_TAG) GBN_TAG, MIN(MED_CD) MED_CD
                    FROM T_AC_MEDICAL
                   WHERE PIS_YY = ?
                GROUP BY ENO_NO, CET_NO, COM_NO ) B, T_AC_RETACC C
            WHERE A.ENO_NO = B.ENO_NO
            AND      B.ENO_NO = C.ENO_NO
            AND      C.PIS_YY = ?
            AND      C.MMA_DED >= 2000000
            AND      C.GBN_TAG = '8'
            ORDER BY A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 기부금신고 -->
    <sql name="SAGA120_SHR_08">
        <description>기부금신고</description>
        <query>
            <![CDATA[
            SELECT B.DPT_CD AS DPT_CD,
                        B.DPT_NM AS DPT_NM,
                        B.JOB_CD AS JOB_CD,
                        B.JOB_NM AS JOB_NM,
                        B.ENO_NO AS ENO_NO,
                        B.ENO_NM AS ENO_NM,
                        B.CET_NO AS CET_NO,
                        A.COM_NO AS COM_NO,
                        A.COM_NM AS COM_NM,
                        A.REL_CD AS REL_CD,
                        SF_GET_COMMNAME('01', 'FB', A.REL_CD) AS REL_NM,
                        A.TOT_CNT AS TOT_CNT,
                        A.SUM_AMT AS SUM_AMT
            FROM  T_AC_DONATION A, VI_T_CM_PERSON2 B, T_AC_RETACC C
            WHERE A.ENO_NO = B.ENO_NO
            AND    A.PIS_YY = ?
            AND    C.PIS_YY = ?
            AND    C.GBN_TAG = '8'
            AND    A.ENO_NO(+) = C.ENO_NO
            ORDER BY A.ENO_NO
            ]]>
        </query>
    </sql>

    <!-- 기부금신고 파일출력 -->
    <sql name="SAGA120_FILE_08">
        <description>기부금신고 파일출력</description>
        <query>
            <![CDATA[
            SELECT ROW_NUMBER() OVER(ORDER BY NPN_NO) AS NUM,
                   NPN_NO
            FROM (

                SELECT '1' ENO_NO,
                       '' REL_CD,
                       '' PIS_YY,
                       'A'||
                       '27'||
                       '227'||
                       RPAD(?,8)||
                       '2'||
                       RPAD(' ',6)||
                       RPAD('asan99',20)||
                       '9000'||
                       RPAD('2218113834',10)||
                       RPAD('현대아산주식회사',40)||
                       RPAD('인재지원',30)||
                       RPAD('하나진',30)||
                       RPAD('02-3669-3867',15)||
                       TO_CHAR('1','FM00000')||
                       '101'||
                       RPAD(' ',2) AS NPN_NO
                FROM   T_AC_DONATION

                UNION

                SELECT '1' ENO_NO,
                       '' REL_CD,
                       '' PIS_YY,
                       'B'||
                       '27'||
                       '227'||
                       TO_CHAR(1,'FM000000')||
                       RPAD('2218113834',10)||
                       RPAD('현대아산주식회사',40)||
                       TO_CHAR(NVL(ADJ.ADJ_CNT,0),'FM0000000')||
                       TO_CHAR(NVL(DON.DON_CNT,0),'FM0000000')||
                       TO_CHAR(NVL(ADJ.ACC_DON_AMT,0),'FM0000000000000')||
                       TO_CHAR(NVL(ADJ.ACC_DON_DIF,0),'FM0000000000000')||
                       '1'||
                       RPAD(' ',77) AS NPN_NO
                FROM  (SELECT COUNT(*) ADJ_CNT,
                        SUM(ACC_DON_AMT) ACC_DON_AMT,
                        SUM(ACC_DON_DIF) ACC_DON_DIF
                       FROM   T_AC_DONATION_ADJ
                       WHERE  DECODE(REL_CD, '10', ? - 1, '30', ? - 2, '31', ? - 3, '40', ? - 5, '41', ? - 5 ) <= PIS_YY
                       AND ACC_DON_AMT > 0
                       AND REL_CD <> '20'
                       AND ENO_NO NOT IN ('1990027','1990059','1990072','2020008','2030025','2040014','2040018','2040046','2040081','2050001','2060004','2060011','2070007','2070022','2070030','2070032','2070043','2080006','2080038','2080039','2090001','2090009','2090012','2100006','2100011','2110002','2110012','2110014','2120009','2120011','2120012','2120024','2120032','2120033','3080133','3090003','3110012','3120008')
                       AND NOT (PIS_YY < '2013' AND VAL_AMT = 0)
                       ) ADJ,
                      (SELECT COUNT(*) DON_CNT
                       FROM   T_AC_DONATION
                       WHERE  PIS_YY = ?
                         AND  REL_CD <> '20'

                       ) DON

                UNION

             SELECT ENO_NO, REL_CD, PIS_YY, NPN_NO
             FROM(
                  SELECT A.ENO_NO,
                         A.REL_CD,
                         A.PIS_YY,
                       'C'||
                       '27'||
                       '227'||
                        TO_CHAR(DENSE_RANK() OVER(ORDER BY A.ENO_NO ASC),'FM000000')||
                        RPAD('2218113834',10)||
                          RPAD(SUBSTR(B.CET_NO,1,6)||SUBSTR(B.CET_NO,8,7), 13, ' ')||
                          '1'||
                          RPAD(REPLACE(B.ENO_NM,' ',''), 30, ' ')||
                          RPAD(A.REL_CD, 2, ' ')||
                          RPAD(A.DON_YY, 4, ' ')||
                          TO_CHAR(NVL(A.ACC_DON_AMT,0),'FM0000000000000')||
                          TO_CHAR(NVL(A.ACC_DON_DED,0),'FM0000000000000')||
                          TO_CHAR(NVL(A.ACC_DON_DIF,0),'FM0000000000000')||
                          TO_CHAR(NVL(A.DON_DED,0),'FM0000000000000')||
                          TO_CHAR(NVL(A.EXH_AMT,0),'FM0000000000000')||
                          TO_CHAR(NVL(A.VAL_AMT,0),'FM0000000000000')||
                          TO_CHAR(ROW_NUMBER() OVER(PARTITION BY A.ENO_NO ORDER BY A.ENO_NO),'FM00000')||
                          RPAD(' ',25) AS NPN_NO
                   FROM
                   T_AC_DONATION_ADJ A,
                   VI_T_CM_PERSON2 B
                   WHERE DECODE(A.REL_CD, '10', ? - 1, '20', ?, '30', ? - 2, '31', ? - 3, '40', ? - 5, '41', ? - 5 ) <= A.PIS_YY
                      AND A.ENO_NO = B.ENO_NO
                      AND A.ACC_DON_AMT > 0
                      AND NOT (A.PIS_YY < '2013' AND A.VAL_AMT = 0)
                      --AND A.VAL_AMT > 0
                      AND A.ENO_NO NOT IN ('1990027','1990059','1990072','2020008','2020018','2030025','2040014','2040018','2040046','2040081','2050001','2060004','2060011','2070007','2070022','2070030','2070032','2070043','2080006','2080038','2080039','2090001','2090009','2090012','2100006','2100011','2110002','2110012','2110014','2120009','2120011','2120012','2120024','2120032','2120033','3080133','3090003','3110012','3120008')
                      AND A.REL_CD <> '20'

                   union all

                   SELECT
                        A.ENO_NO,
                        A.REL_CD,
                         A.PIS_YY,
                        'D'||
                        '27'||
                        '227'||
                        TO_CHAR(DENSE_RANK() OVER(ORDER BY A.ENO_NO ASC),'FM000000')||
                        RPAD('2218113834',10)||
                        RPAD(SUBSTR(B.CET_NO,1,6)||SUBSTR(B.CET_NO,8,7), 13, ' ')||
                        RPAD(A.REL_CD, 2, ' ')||
                        RPAD(A.COM_NO, 13, ' ')||
                         RPAD(A.COM_NM, 30, ' ')||
                        RPAD(A.FAM_CD, 1, ' ')||
                        '1'||
                           RPAD(REPLACE(A.FAM_NM,' ',''), 20, ' ')||
                           RPAD(REPLACE(A.FAM_NO,'-',''), 13, ' ')||
                           TO_CHAR(NVL(A.TOT_CNT,0),'FM00000')||
                           TO_CHAR(NVL(A.SUM_AMT,0),'FM0000000000000')||
                           TO_CHAR(ROW_NUMBER() OVER(PARTITION BY A.ENO_NO ORDER BY A.ENO_NO),'FM00000')||
                           RPAD(' ',42) AS NPN_NO
                       FROM T_AC_DONATION A, VI_T_CM_PERSON2 B
                       WHERE A.PIS_YY = ?
                         AND A.ENO_NO = B.ENO_NO
                         AND A.REL_CD <> '20'
                )
                ORDER BY ENO_NO, PIS_YY ASC, NPN_NO, REL_CD
      )
      ORDER BY ENO_NO, NPN_NO

            ]]>
        </query>
    </sql>


    <!-- 일용직 -->
    <sql name="SAGA120_SHR_10">
        <description>일용직신고</description>
        <query>
            <![CDATA[
				SELECT
					A.WRK_YM AS WRK_YM,
					A.WRK_YM AS WRK_YM2,
					A.SITE_CD AS SITE_CD,
					SF_GET_COMMNAME('01','AY',A.SITE_CD) AS  DPT_NM,
					A.ENO_NM AS ENO_NM,
					A.CET_NO AS CET_NO,
					B.PH_NO AS PH_NO,
					CASE WHEN SUBSTR(A.CET_NO,7,1) IN ('1','2','3','4') THEN '0'
							WHEN SUBSTR(A.CET_NO,7,1) IN ('6','7','8','9') THEN '1'
						ELSE '1'  END   NATION,
					A.WRK_AMT  AS WRK_AMT,
					A.WRK_DAY  AS WRK_DAY,
          			C.CNT AS CNT,
					A.WRK_PAY  AS WRK_PAY,
					0 AS NOTAX,
					A.SUB_SUM  AS SUB_SUM,
					A.ACT_AMT  AS ACT_AMT,

					A.FINAL_AMT  AS FINAL_AMT,
					A.INCM_TAX AS INCM_TAX,
					A.CITI_TAX AS CITI_TAX
				FROM T_CA_PAYMASTER A,
				T_CA_PERSON B,
		        (SELECT CET_NO,COUNT(*) CNT
		            FROM T_CA_DILIGENCE
		           WHERE WRK_YM = ?
		           AND WRK_GB != 'X'
		          GROUP BY CET_NO) C
				WHERE 1=1
					AND A.CET_NO = B.CET_NO
					AND A.CET_NO = C.CET_NO
					AND A.WRK_YM = ?
				ORDER BY A.SITE_CD DESC
            ]]>
        </query>
    </sql>


    <!-- 일용직신고 파일출력 -->
    <sql name="SAGA120_FILE_10">
        <description>일용직신고 파일출력</description>
        <query>
            <![CDATA[
            SELECT ROW_NUMBER() OVER(ORDER BY NPN_NO) AS NUM,
                   NPN_NO
            FROM (

                SELECT '1' ENO_NO,
                       'A'||
                       '28'||
                       '227'||
                       RPAD(?,8)||
                       '2'||
                       RPAD(' ',6)||
                       RPAD('asan99',20)||
                       '9000'||
                       RPAD('2218113834',10)||
                       RPAD('현대아산주식회사',40)||
                       RPAD('재경지원부',30)||
                       RPAD('이정식',30)||
                       RPAD('02-3669-3805',15)||
                       TO_CHAR('1','FM00000')||
                       '1'||
                       RPAD(' ',64) AS NPN_NO
                FROM   DUAL

                UNION

                SELECT '2' ENO_NO,
                       'B'||
                       '28'||
                       '227'||
                       TO_CHAR(1,'FM000000')||
                       RPAD('2218113834',10)||
                       RPAD('현대아산주식회사',40)||
                       RPAD('조건식',30)||
                       RPAD('1401110011714',13)||
                       RPAD('02-3669-3753',15)||
                       RPAD('andrew20@hdasan.com',40)||
                       '2014'||
                       '3'||
                       '000143'||
                       TO_CHAR(COUNT(*),'FM000000')||
                       TO_CHAR(SUM(WRK_PAY),'FM000000000000000')||
                       '000000000000000'||
		               TO_CHAR(SUM(INCM_TAX),'FM000000000000000')||
		               TO_CHAR(SUM(CITI_TAX),'FM000000000000000')||
                       RPAD(' ',3) AS NPN_NO
                FROM  (SELECT CET_NO, SUM(WRK_PAY) WRK_PAY,
                       SUM(INCM_TAX) INCM_TAX, SUM(CITI_TAX) CITI_TAX
                       FROM T_CA_PAYMASTER
                       WHERE WRK_YM IN ('201407','201408','201409')
                       GROUP BY CET_NO, WRK_YM)

                UNION

                SELECT '3' ENO_NO,
                       'C'||
                       '28'||
                       '227'||
                       TO_CHAR(DENSE_RANK() OVER(ORDER BY A.CET_NO, A.WRK_YM ASC),'FM000000')||
                       RPAD('2218113834',10)||
                       A.CET_NO||
                       RPAD(REPLACE(B.ENO_NM,' ',''), 30, ' ')||
                       DECODE(SUBSTR(A.CET_NO,7,1),'1','1','2','1','3','1','4','1','5','9','6','9','9')||
                       RPAD(B.PH_NO, 15, ' ')||
                       TO_CHAR(NVL(A.WRK_YM,0),'FM00')||
                       TO_CHAR(NVL(A.WRK_YM,0),'FM00')||
                       TO_CHAR(NVL(A.WRK_DAY,0),'FM00')||
                       TO_CHAR(NVL(A.WRK_PAY,0),'FM0000000000000')||
                       '0000000000000'||
                       TO_CHAR(NVL(A.INCM_TAX,0),'FM0000000000000')||
                       TO_CHAR(NVL(A.CITI_TAX,0),'FM0000000000000')||
                       RPAD(' ',101) AS NPN_NO
                   FROM (SELECT A.CET_NO,
                          MAX(SUBSTR(A.WRK_YM,5,2)) WRK_YM,
                          SUM(C.CNT) WRK_DAY,
                          SUM(A.WRK_PAY) WRK_PAY,
                          SUM(A.INCM_TAX) INCM_TAX,
                          SUM(A.CITI_TAX) CITI_TAX
                          FROM T_CA_PAYMASTER A,  (SELECT CET_NO, WRK_YM, COUNT(*) CNT FROM T_CA_DILIGENCE WHERE WRK_GB != 'X' GROUP BY CET_NO, WRK_YM) C
                          WHERE A.WRK_YM IN ('201407','201408','201409') AND A.CET_NO = C.CET_NO AND A.WRK_YM = C.WRK_YM
                          GROUP BY A.CET_NO, A.WRK_YM)A, T_CA_PERSON B
                   WHERE A.CET_NO = B.CET_NO
		      )
		      ORDER BY ENO_NO, NPN_NO

            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : SAGA130
* @description : 개인별 연봉관리
***********************************************************************
* 2007/03/14     한학현        최초작성.
***********************************************************************
-->
    <!-- 급여테이블 조회 -->
    <sql name="SAGA130_SHR">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
            SELECT
            	DECODE(NVL(A.APY_YMD,''),'','',SUBSTR(A.APY_YMD,1,4)||'-'||SUBSTR(A.APY_YMD,5,2)||'-'||SUBSTR(A.APY_YMD,7,2)) AS APY_YMD,
				A.OCC_CD,
				A.JOB_CD,
   				A.HOB_CD,
			    A.BAS_AMT,
                A.LAW_AMT,
                A.BNS_AMT,
                A.ETC_AMT,
                A.STR_YMD,
                A.END_YMD,
                A.DUTY_AMT,
                A.OT_AMT,
                B.ENO_NM,
   				SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM ,
   				SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
            FROM   T_CP_PAYTABLE  A,
						T_CM_PERSON B
            WHERE  SUBSTR(A.HOB_CD, 5, 6) = B.ENO_NO(+)
				 AND A.OCC_CD = B.OCC_CD(+)
				 AND A.JOB_CD = B.JOB_CD(+)
                 AND NVL(A.APY_YMD,' ') LIKE '%'||?||'%'
                 AND A.OCC_CD in ('0','1','2','3','8','9')
                 AND NVL(A.JOB_CD,' ') LIKE '%'||?||'%'
            ORDER BY A.HOB_CD
            ]]>
        </query>
    </sql>

    <!-- 연봉년도 조회 -->
    <sql name="SAGA130_SHR_01">
        <description>급여테이블 연봉년도</description>
        <query>
            <![CDATA[
            SELECT MAX(APY_YMD) AS APY_YMD FROM T_CP_PAYTABLE
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 신규 저장. -->
    <sql name="SAGA130_INS">
        <description>급여테이블 신규 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_PAYTABLE
                 ( OCC_CD, JOB_CD, HOB_CD, APY_YMD,
                   BAS_AMT, DUTY_AMT, OT_AMT, WEL_AMT, OSE_AMT, RUN_AMT, MH_AMT,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            VALUES
                 (  ?, ?, ?, ?,
                    ?, ?, ?, ?, ?, ?, ?,
                    ?, SYSDATE,?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 수정. -->
    <sql name="SAGA130_UPT">
        <description>급여테이블 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_PAYTABLE
            SET    BAS_AMT = ?, --기본급
                   DUTY_AMT = ?, --직책수당(사무), 복지수당(택배)
                   OT_AMT = ?, --시간외수당
                   WEL_AMT = ?, --복지수당(사무), 기술수당(택배)
                   OSE_AMT = ?, --자기개발비(사무), 택배수당(택배)
                   RUN_AMT = ?, --야근수당(사무), 운행/작업수당(택배)
                   MH_AMT = ?, --전산수당(사무), 자기개발비(택배)
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  OCC_CD = ? --직종
            AND    JOB_CD = ? --직위
            AND    HOB_CD = ? --호봉
            AND    APY_YMD = ? --적용일자
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 삭제 -->
    <sql name="SAGA130_DEL">
        <description>급여테이블 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_PAYTABLE
            WHERE  OCC_CD = ?
            AND    JOB_CD = ?
            AND    HOB_CD = ?
            AND    APY_YMD = ?
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 삭제 -->
    <sql name="SAGA130_DEL_01">
        <description>급여테이블 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_PAYTABLE
            WHERE  OCC_CD = ?
            AND    APY_YMD = ?
            ]]>
        </query>
    </sql>


<!-- 수당관리 -->
<!--
***********************************************************************
* @UseCase     : SAGB010
* @description : 개인별 변동지불/공제
***********************************************************************
* 2007/03/22     오대성        최초작성.
***********************************************************************
-->
    <!-- 개인별 변동지불/공제 조회 -->
    <sql name="SAGB010_SHR">
        <description>개인별 변동지불/공제 조회</description>
        <query>
            <![CDATA[
            SELECT A.OCC_CD, A.PIS_YY, A.PIS_MM, A.SAL_GBN, A.ENO_NO, A.BON_NUM,
                   A.SAL_CD, SF_GET_COMMNAME('01', 'U4', A.SAL_CD) AS SAL_NM,
                   A.SEQ, A.AD_TAG, A.TRS_TAG, A.AMOUNT, A.REMARK, A.DPT_CD,
                   A.JOB_CD, DECODE(A.TRS_TAG,'F','고정','') AS TRS_NM,
                   B.PRO_STS
            FROM   T_CP_CHANGE A, T_CP_WORKLOG B
            WHERE  A.PIS_YY  = B.PIS_YY(+)
            AND    A.PIS_MM  = B.PIS_MM(+)
            AND    A.OCC_CD  = B.OCC_CD(+)
            AND    A.SAL_GBN = B.SAL_GBN(+)
            AND    A.BON_NUM = B.SEQ(+)
            AND    A.OCC_CD = ?
            AND    A.PIS_YY = ?
            AND    A.PIS_MM = ?
            AND    A.SAL_GBN = ?
            AND    A.ENO_NO = ?
            AND    A.BON_NUM = ?
            ORDER BY A.SEQ
            ]]>
        </query>
    </sql>

    <!-- 급상여처리상태 조회 -->
    <sql name="SAGB010_SHR_01">
        <description>급상여처리상태 조회</description>
        <query>
            <![CDATA[
            SELECT PRO_STS
            FROM   T_CP_WORKLOG A
            WHERE  A.OCC_CD = ?
            AND    A.PIS_YY = ?
            AND    A.PIS_MM = ?
            AND    A.SAL_GBN = ?
            AND    A.SEQ = ?
            ]]>
        </query>
    </sql>

	<!-- 개인별 변동지불/공제 저장 -->
    <sql name="SAGB010_INS">
        <description>개인별 변동지불/공제 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_CHANGE
            ( OCC_CD, PIS_YY, PIS_MM, SAL_GBN, ENO_NO, SAL_CD, SEQ,
              AD_TAG, TRS_TAG, AMOUNT, REMARK, BON_NUM, DPT_CD, JOB_CD,
              IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
            ( ?     , ?     , ?     , ?      , ?     , ?     , ?  ,
              ?     , ?      , ?     , ?     , ?      , ?     , ?     ,
              ?      , SYSDATE, ?      , SYSDATE )
            ]]>
        </query>
    </sql>

	<!-- 개인별 변동지불/공제 수정 -->
    <sql name="SAGB010_UPT">
        <description>개인별 변동지불/공제 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_CHANGE
            SET    SAL_CD = ?,
                   AD_TAG = ?,
                   AMOUNT = ?,
                   REMARK = ?,
                   UPT_MAN = ?,
                   UPT_YMD = SYSDATE
            WHERE  OCC_CD = ?
            AND    PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    ENO_NO = ?
            AND    BON_NUM = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

	<!-- 개인별 변동지불/공제 삭제 -->
    <sql name="SAGB010_DEL">
        <description>개인별 변동지불/공제 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_CHANGE
            WHERE  OCC_CD = ?
            AND    PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    ENO_NO = ?
            AND    BON_NUM = ?
            AND    SEQ = ?
            AND    AD_TAG = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGB020
* @description : 항목별 변동지불/공제
***********************************************************************
* 2007/03/22     오대성        최초작성.
***********************************************************************
-->
    <!-- 항목별 변동지불/공제 조회 -->
    <sql name="SAGB020_SHR">
        <description>항목별 변동지불/공제 조회</description>
        <query>
            <![CDATA[
            SELECT A.PIS_YY||'-'||A.PIS_MM AS PIS_YM, A.ENO_NO, A.SAL_GBN, A.BON_NUM,
                   A.SAL_CD, SF_GET_COMMNAME('01', 'U4', A.SAL_CD) AS SAL_NM,
                   A.SEQ, A.AD_TAG, A.TRS_TAG, A.AMOUNT, A.REMARK, A.DPT_CD,
                   A.JOB_CD, A.OCC_CD, B.ENO_NM, B.DPT_NM, B.JOB_NM,
                   DECODE(a.TRS_TAG,'F','고정수당','') AS TRS_NM,
                   TO_CHAR(B.HIRG_YMD,'YYYY-MM-DD') AS HIRG_YMD,
                   TO_CHAR(B.RET_YMD,'YYYY-MM-DD') AS RET_YMD
            FROM   T_CP_CHANGE A,
                   VI_T_CM_PERSON2 B
            WHERE  A.PIS_YY = ?
            AND    A.PIS_MM = ?
            AND    A.SAL_GBN = ?
            AND    A.BON_NUM = ?
            AND    NVL(A.AD_TAG,' ') LIKE '%'||?||'%'
            [1]
            AND    A.ENO_NO = B.ENO_NO
            ORDER BY B.DPT_SEQ, B.JOB_SEQ, B.HOB_SEQ DESC, B.HIRG_YMD, A.ENO_NO, A.SEQ
            ]]>
        </query>
    </sql>

	<!-- 항목별 변동지불/공제 저장 -->
    <sql name="SAGB020_INS">
        <description>항목별 변동지불/공제 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_CHANGE
            ( OCC_CD, PIS_YY, PIS_MM, SAL_GBN, ENO_NO, SAL_CD,
              SEQ,
              AD_TAG, TRS_TAG, AMOUNT, REMARK, BON_NUM, DPT_CD, JOB_CD,
              IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
            ( ?     , ?     , ?     , ?      , ?     , ?     ,
              ( SELECT NVL2(MAX(SEQ),MAX(SEQ)+1,0)
                FROM   T_CP_CHANGE
                WHERE  OCC_CD = ? AND PIS_YY = ? AND PIS_MM = ? AND SAL_GBN = ?
                AND    ENO_NO = ? AND BON_NUM = ? ),
              ?     , ?      , ?     , ?     , ?      , ?     , ?     ,
              ?      , SYSDATE, ?      , SYSDATE )
            ]]>
        </query>
    </sql>

	<!-- 항목별 변동지불/공제 수정 -->
    <sql name="SAGB020_UPT">
        <description>항목별 변동지불/공제 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_CHANGE
            SET    SAL_CD = ?,
                   AD_TAG = ?,
                   AMOUNT = ?,
                   REMARK = ?,
                   UPT_MAN = ?,
                   UPT_YMD = SYSDATE
            WHERE  OCC_CD = ?
            AND    PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    ENO_NO = ?
            AND    BON_NUM = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

	<!-- 항목별 변동지불/공제 삭제 -->
    <sql name="SAGB020_DEL">
        <description>항목별 변동지불/공제 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_CHANGE
            WHERE  OCC_CD = ?
            AND    PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    ENO_NO = ?
            AND    BON_NUM = ?
            AND    SEQ = ?
            AND    AD_TAG = ?
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : SAGB030
* @description : 변동지불/공제내역
***********************************************************************
* 2007/03/23     오대성        최초작성.
***********************************************************************
-->
    <!-- 변동지불/공제내역 조회 -->
    <sql name="SAGB030_SHR">
        <description>변동지불/공제내역 조회</description>
        <query>
            <![CDATA[
            [1]
            ]]>
        </query>
    </sql>

    <!-- 작업번호 조회 -->
    <sql name="SAGB030_SHR_01">
        <description>작업번호 조회</description>
        <query>
            <![CDATA[
            SELECT WRK_SEQ
            FROM (SELECT WRK_SEQ
                  FROM T_CP_CHANGE
                  WHERE PIS_YY  = ?
                  AND   PIS_MM  = ?
                  AND   SAL_GBN = ?
                  AND   BON_NUM = ?
                  AND   SAL_CD  LIKE '%'||?||'%'
                  AND   AD_TAG  LIKE '%'||?||'%'
                  AND   WRK_SEQ IS NOT NULL
                  GROUP BY WRK_SEQ)
            ORDER BY WRK_SEQ
            ]]>
        </query>
    </sql>

    <!-- 그룹 삭제 -->
    <sql name="SAGB030_DEL">
        <description>작업번호별 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_CHANGE
            WHERE  PIS_YY  = ?
            AND    PIS_MM  = ?
            AND    SAL_GBN = ?
            AND    BON_NUM = ?
            AND    SAL_CD  = ?
            AND    AD_TAG  = ?
            AND    WRK_SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 건별 삭제 -->
    <sql name="SAGB030_DEL_01">
        <description>작업번호별 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_CHANGE
            WHERE  OCC_CD  = ?
            AND    PIS_YY  = ?
            AND    PIS_MM  = ?
            AND    SAL_GBN = ?
            AND    BON_NUM = ?
            AND    SEQ     = ?
            AND    ENO_NO  = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGB040
* @description : 개인별 고정지불/공제
***********************************************************************
* 2007/03/23     오대성        최초작성.
***********************************************************************
-->
    <!-- 개인별 고정지불/공제 조회 -->
    <sql name="SAGB040_SHR">
        <description>개인별 고정지불/공제 조회</description>
        <query>
            <![CDATA[
            SELECT A.OCC_CD, A.ENO_NO, A.SAL_CD, A.AD_TAG, A.AMOUNT, A.SAL_GBN,
                   TO_CHAR(TO_DATE(A.STR_YMD),'YYYY-MM-DD') AS STR_YMD,
                   TO_CHAR(TO_DATE(A.END_YMD),'YYYY-MM-DD') AS END_YMD,
                   B.ENO_NM, B.DPT_CD, B.DPT_NM, B.JOB_CD, B.JOB_NM,
                   SF_GET_COMMNAME('01', 'U4', A.SAL_CD) AS SAL_NM,
                   Decode(A.AD_TAG,'A','지불','D','공제') AS AD_TAG_NM,
                   SF_GET_COMMNAME('01', 'U4', A.SAL_CD) AS SAL_CONTENT,
                            SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM
            FROM   T_CP_FIXED A,
                   VI_T_CM_PERSON2 B
            WHERE  A.ENO_NO = B.ENO_NO
            [1]
            [2]
            ORDER BY B.HEAD_SEQ, B.DPT_SEQ, B.JOB_SEQ, B.HOB_SEQ DESC, B.HIRG_YMD, A.ENO_NO
            ]]>
        </query>
    </sql>

	<!-- 개인별 고정지불/공제 저장 -->
    <sql name="SAGB040_INS">
        <description>개인별 고정지불/공제 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_FIXED
            ( OCC_CD, ENO_NO, SAL_CD, STR_YMD, END_YMD, AD_TAG, AMOUNT,
              SAL_GBN, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
            ( ?     , ?     , ?     , ?      , ?      , ?     , ?     ,
              ?      , ?      , SYSDATE, ?      , SYSDATE )
            ]]>
        </query>
    </sql>

	<!-- 개인별 고정지불/공제 수정 -->
    <sql name="SAGB040_UPT">
        <description>개인별 고정지불/공제 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_FIXED
            SET    END_YMD = ?,
                   AD_TAG = ?,
                   AMOUNT = ?,
                   UPT_MAN = ?,
                   UPT_YMD = SYSDATE
            WHERE  OCC_CD = ?
            AND    ENO_NO = ?
            AND    SAL_CD = ?
            AND    STR_YMD = ?
            AND    SAL_GBN = ?
            ]]>
        </query>
    </sql>

	<!-- 개인별 고정지불/공제 삭제 -->
    <sql name="SAGB040_DEL">
        <description>개인별 고정지불/공제 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_FIXED
            WHERE  OCC_CD = ?
            AND    ENO_NO = ?
            AND    SAL_CD = ?
            AND    STR_YMD = ?
            AND    SAL_GBN = ?
            AND    AD_TAG = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGB050
* @description : 그룹별 고정지불/공제
***********************************************************************
* 2007/04/05     방석호         최초작성.
***********************************************************************
-->
    <!-- 그룹별 고정지불/공제 조회 -->
    <sql name="SAGB050_PRT">
        <description>그룹별 고정지불/공제 조회</description>
        <query>
            <![CDATA[
			SELECT OCC_CD, AMOUNT,
                   DECODE(TRIM(APY_YMD),'','',TO_CHAR(TO_DATE(APY_YMD),'YYYY-MM-DD')) AS APY_YMD,
				   SF_GET_COMMNAME('01','U4',SAL_CD) AS SAL_NM,
				   SF_GET_DPTNAME('01','A4',DPT_CD) AS DPT_NM,
				   SF_GET_COMMNAME('01','A2',POS_CD) AS POS_NM,
                   SF_GET_DPTSEQ('01','A4',DPT_CD) AS DPT_SEQ,
                   SF_GET_COMMSEQ('01','A2',POS_CD) AS POS_SEQ,
				   CUR_CD, DECODE(MTH_TAG,'P','자동','고정') AS MTH_TAG_NM,
				   Decode(OCC_CD,'A','사무직','M','택배직') AS OCC_NM,

				   Decode(AD_TAG,'A','지불','D','공제') AS AD_TAG_NM,
				   Decode(APY_TAG,'Y','적용','미적용') AS APY_TAG_NM

            FROM   T_CP_GROUPFIXED
            WHERE  OCC_CD LIKE '%'||?||'%'
            AND    SAL_CD LIKE '%'||?||'%'
            AND    APY_TAG LIKE '%'||?||'%'
            ORDER BY OCC_CD, DPT_SEQ, POS_SEQ
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : SAGB050
* @description : 그룹별 고정지불/공제
***********************************************************************
* 2007/03/24     오대성        최초작성.
***********************************************************************
-->
    <!-- 그룹별 고정지불/공제 조회 -->
    <sql name="SAGB050_SHR">
        <description>그룹별 고정지불/공제 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD, SAL_CD, DPT_CD, POS_CD, AD_TAG, AMOUNT, APY_TAG,
                   SF_GET_COMMNAME('01', 'U4', SAL_CD) AS SAL_NM,
                   DECODE(TRIM(APY_YMD),'','',TO_CHAR(TO_DATE(APY_YMD),'YYYY-MM-DD')) AS APY_YMD,
                   SF_GET_DPTSEQ('01','A4',DPT_CD) AS DPT_SEQ,
                   SF_GET_COMMSEQ('01','A2',POS_CD) AS POS_SEQ
            FROM   T_CP_GROUPFIXED
            WHERE  OCC_CD LIKE '%'||?||'%'
            AND    SAL_CD LIKE '%'||?||'%'
            AND    APY_TAG LIKE '%'||?||'%'
            ORDER BY OCC_CD, DPT_SEQ, POS_SEQ
            ]]>
        </query>
    </sql>



	<!-- 그룹별 고정지불/공제 저장 -->
    <sql name="SAGB050_INS">
        <description>그룹별 고정지불/공제 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_GROUPFIXED
            ( OCC_CD, SAL_CD, DPT_CD, POS_CD, APY_YMD, APY_TAG,
              AD_TAG, AMOUNT, IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD, MTH_TAG )
            VALUES
            ( '1'     , ?     , ?     , ?     , ?      , ?      ,
              ?     , ?     , ?      , SYSDATE, ?      , SYSDATE , 'P')
            ]]>
        </query>
    </sql>

	<!-- 그룹별 고정지불/공제 수정 -->
    <sql name="SAGB050_UPT">
        <description>그룹별 고정지불/공제 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_GROUPFIXED
            SET    APY_TAG = ?,
                   AD_TAG = ?,
                   AMOUNT = ?,
                   UPT_MAN = ?,
                   UPT_YMD = SYSDATE
            WHERE  1=1
            AND    SAL_CD = ?
            AND    DPT_CD = ?
            AND    POS_CD = ?
            AND    APY_YMD = ?
            ]]>
        </query>
    </sql>

	<!-- 그룹별 고정지불/공제 삭제 -->
    <sql name="SAGB050_DEL">
        <description>그룹별 고정지불/공제 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_GROUPFIXED
            WHERE  OCC_CD = ?
            AND    SAL_CD = ?
            AND    DPT_CD = ?
            AND    POS_CD = ?
            AND    APY_YMD = ?
            ]]>
        </query>
    </sql>





<!--
***********************************************************************
* @UseCase     : SAGB060
* @description : 변동지불공제File전송
***********************************************************************
* 2007/03/26     오대성        최초작성.
***********************************************************************
-->
    <!-- 사번 조회 -->
    <sql name="SAGB060_SHR">
        <description>사번 조회</description>
        <query>
            <![CDATA[
            SELECT OCC_CD
                 , DPT_CD
                 , JOB_CD
              FROM ASNHR.T_CM_PERSON
             WHERE ENO_NO = ?
            ]]>
        </query>
    </sql>

    <!-- 급상여처리상태 조회 -->
    <sql name="SAGB060_CHK_WORKLOG">
        <description>급상여처리상태 조회</description>
        <query>
            <![CDATA[
            SELECT NVL(MAX(DECODE(OCC_CD, 'A', PRO_STS)), 0) AS A_PRO_STS
                  ,NVL(MAX(DECODE(OCC_CD, 'M', PRO_STS)), 0) AS M_PRO_STS
              FROM ASNHR.T_CP_WORKLOG A
             WHERE A.PIS_YY     = ?
               AND A.PIS_MM     = ?
               AND A.SAL_GBN    = ?
               AND A.SEQ        = ?
            ]]>
        </query>
    </sql>

	<!-- 변동지불공제File전송 -->
    <sql name="SAGB060_INS">
        <description>변동지불공제 엑셀File 붙여넣기 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CP_NCHANGE_TEMP
            ( OCC_CD, PIS_YY, PIS_MM, ENO_NO, SAL_CD,
              SEQ,
              AD_TAG, AMOUNT, REMARK, DPT_CD, JOB_CD,
              IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
            ( ?     , ?     , ?     , ?     , ?     ,
              ( SELECT NVL2(MAX(SEQ),MAX(SEQ)+1,0)
                FROM   ASNHR.T_CP_NCHANGE_TEMP
                WHERE  OCC_CD = ? AND PIS_YY = ? AND PIS_MM = ? AND    ENO_NO = ? ),
              ?     , ?     , ?     , ?     , ?     ,
              ?      , SYSDATE, ?      , SYSDATE )
            ]]>
        </query>
    </sql>

    <!-- 변동지불공제File전송 -->
    <sql name="SAGB060_DEL">
        <description>변동전 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CP_CHANGE
            WHERE PIS_YY = ?
                 AND PIS_MM = ?
            ]]>
        </query>
    </sql>

    <!-- 작업번호 조회 -->
    <sql name="SAGB060_SHR_01">
        <description>작업번호 조회</description>
        <query>
            <![CDATA[
            SELECT (NVL(MAX(WRK_SEQ),0) + 1) AS WRK_SEQ
            FROM   ASNHR.T_CP_CHANGE
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGB070
* @description : 철야당직비신청
***********************************************************************
* 2007/03/26     오대성        최초작성.
***********************************************************************
-->

	<!-- 철야당직비신청 조회 -->
    <sql name="SAGB070_SHR">
        <description>철야당직비신청 조회</description>
        <query>
            <![CDATA[
            SELECT A.REQ_NO
                 , A.PIS_YY||'-'||A.PIS_MM AS PIS_YM
                 , B.ENO_NO
                 , B.ENO_NM
                 , B.DPT_CD
                 , B.DPT_NM
                 , B.JOB_CD
                 , B.JOB_NM
                 , A.DUTY_CNT
                 , A.DUTY_AMT
                 , A.REMARK
                 , A.END_TAG
                 , A.MD_DSP
                 , A.AT1_CD , A.AT2_CD , A.AT3_CD , A.AT4_CD , A.AT5_CD , A.AT6_CD
                 , A.AT7_CD , A.AT8_CD , A.AT9_CD , A.AT10_CD, A.AT11_CD, A.AT12_CD
                 , A.AT13_CD, A.AT14_CD, A.AT15_CD, A.AT16_CD, A.AT17_CD, A.AT18_CD
                 , A.AT19_CD, A.AT20_CD, A.AT21_CD, A.AT22_CD, A.AT23_CD, A.AT24_CD
                 , A.AT25_CD, A.AT26_CD, A.AT27_CD, A.AT28_CD, A.AT29_CD, A.AT30_CD
                 , A.AT31_CD
              FROM T_CP_NIGHTDUTY A
                 , VI_T_CM_EMPLIST B
             WHERE A.PIS_YY     = ?
               AND A.PIS_MM     = ?
               AND A.DPT_CD     = ?
               AND A.ENO_NO     = B.ENO_NO
          ORDER BY B.DPT_SEQ
                 , B.JOB_SEQ
                 , B.HOB_SEQ DESC
                 , B.ENO_NO
            ]]>
        </query>
    </sql>

	<!-- 철야당직비신청을 위한 품의번호 조회 -->
    <sql name="SAGB070_SHR_01">
        <description>품의번호 조회</description>
        <query>
            <![CDATA[
            SELECT A.REQ_NO
                 , A.SEQ_NO
                 , A.DPT_CD
                 , A.JOB_CD
                 , SF_GET_COMMNAME('01','A2',A.JOB_CD) AS JOB_NM
                 , A.ENO_NO
                 , A.ENO_NM
                 , NVL(A.APP_YN,'R') AS APP_YN
                 , DECODE(A.ENO_NO,'','',DECODE(A.APP_YN,'Y','결재','N','부결','','미결','')) AS APP_YN_NM
                 , TO_CHAR(TO_DATE(SUBSTR(A.APP_TIME,1,8),'YYYYMMDD'),'YYYY-MM-DD') AS APP_TIME
                 , A.PENO_NO
                 , B.JOB_CD AS JOB_CD2
                 , SF_GET_COMMNAME('01','A2',B.JOB_CD) AS JOB_NM2
                 , B.ENO_NO AS ENO_NO2
                 , B.ENO_NM AS ENO_NM2
                 , NVL(B.APP_YN,'R') AS APP_YN2
                 , DECODE(B.ENO_NO,'','',DECODE(B.APP_YN,'Y','결재','N','부결','','미결','')) AS APP_YN_NM2
                 , TO_CHAR(TO_DATE(SUBSTR(B.APP_TIME,1,8),'YYYYMMDD'),'YYYY-MM-DD') AS APP_TIME2
              FROM (SELECT A.REQ_NO, A.APP_GBN, A.SEQ_NO, A.DPT_CD, A.JOB_CD, A.ENO_NO, B.ENO_NM, A.APP_YN, A.APP_TIME, A.PENO_NO
                    FROM   T_CP_APPROVAL A, T_CM_PERSON B
                    WHERE  A.ENO_NO=B.ENO_NO AND A.SEQ_NO='1') A,
                   (SELECT A.REQ_NO, A.APP_GBN, A.SEQ_NO, A.DPT_CD, A.JOB_CD, A.ENO_NO, B.ENO_NM, A.APP_YN, A.APP_TIME, A.PENO_NO
                    FROM   T_CP_APPROVAL A, T_CM_PERSON B
                    WHERE  A.ENO_NO=B.ENO_NO AND A.SEQ_NO='2') B
             WHERE A.REQ_NO = ?
               AND A.APP_GBN = 'D'
               AND A.REQ_NO = B.REQ_NO(+)
               AND A.APP_GBN = B.APP_GBN(+)
               AND A.PENO_NO = B.PENO_NO(+)
            ]]>
        </query>
    </sql>

	<!-- 철야당직비신청을 위한 품의번호 조회 -->
    <sql name="SAGB070_SHR_03">
        <description>품의번호 조회</description>
        <query>
            <![CDATA[
            SELECT ?||DECODE(MAX(REQ_NO), NULL, '0001',
                              LPAD(TO_NUMBER(SUBSTR(MAX(REQ_NO),7,4))+1, 4, '0') ) AS REQ_NO
            FROM   T_CP_NIGHTDUTY
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    DPT_CD = ?
            ]]>
        </query>
    </sql>

	<!-- 철야당직비신청 저장 -->
    <sql name="SAGB070_INS">
        <description>철야당직비신청 저장</description>
        <query>
            <![CDATA[
            INSERT
              INTO T_CP_NIGHTDUTY
                 ( REQ_NO
                 , PIS_YY
                 , PIS_MM
                 , ENO_NO
                 , DPT_CD
                 , JOB_CD
                 , DUTY_CNT
                 , DUTY_AMT
                 , REMARK
                 , END_TAG
                 , MD_DSP
                 , AT1_CD
                 , AT2_CD
                 , AT3_CD
                 , AT4_CD
                 , AT5_CD
                 , AT6_CD
                 , AT7_CD
                 , AT8_CD
                 , AT9_CD
                 , AT10_CD
                 , AT11_CD
                 , AT12_CD
                 , AT13_CD
                 , AT14_CD
                 , AT15_CD
                 , AT16_CD
                 , AT17_CD
                 , AT18_CD
                 , AT19_CD
                 , AT20_CD
                 , AT21_CD
                 , AT22_CD
                 , AT23_CD
                 , AT24_CD
                 , AT25_CD
                 , AT26_CD
                 , AT27_CD
                 , AT28_CD
                 , AT29_CD
                 , AT30_CD
                 , AT31_CD
                 , IPT_MAN
                 , IPT_YMD
                 , UPT_MAN
                 , UPT_YMD)
          VALUES ( ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , (SELECT TO_CHAR(LAST_DAY(TO_DATE(?, 'YYYY-MM')), 'DD')
                      FROM DUAL
                    ) --월중일수표시
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , ?
                 , SYSDATE
                 , ?
                 , SYSDATE)
            ]]>
        </query>
    </sql>

	<!-- 철야당직비신청 결재내역 저장 -->
    <sql name="SAGB070_INS_01">
        <description>철야당직비신청 결재내역 저장</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_APPROVAL
            ( REQ_NO, APP_GBN, SEQ_NO, PENO_NO, PDPT_CD,
              PJOB_CD, ENO_NO, DPT_CD, JOB_CD,
              IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD )
            VALUES
            ( ?     , ?      , ?     , ?      , ?      ,
              ?      , ?     , ?     , ?     ,
              ?      , SYSDATE, ?      , SYSDATE )
            ]]>
        </query>
    </sql>

	<!-- 철야당직비신청 수정 -->
    <sql name="SAGB070_UPT">
        <description>철야당직비신청 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_NIGHTDUTY
            SET    DUTY_CNT = ?,
                   DUTY_AMT = ?,
                   REMARK = ?,
                   AT1_CD = ?,
                   AT2_CD =?,
                   AT3_CD =?,
                   AT4_CD =?,
                   AT5_CD =?,
                   AT6_CD =?,
                   AT7_CD =?,
                   AT8_CD =?,
                   AT9_CD =?,
                   AT10_CD =?,
                   AT11_CD =?,
                   AT12_CD =?,
                   AT13_CD =?,
                   AT14_CD =?,
                   AT15_CD =?,
                   AT16_CD =?,
                   AT17_CD =?,
                   AT18_CD =?,
                   AT19_CD =?,
                   AT20_CD =?,
                   AT21_CD =?,
                   AT22_CD =?,
                   AT23_CD =?,
                   AT24_CD =?,
                   AT25_CD =?,
                   AT26_CD =?,
                   AT27_CD =?,
                   AT28_CD =?,
                   AT29_CD =?,
                   AT30_CD =?,
                   AT31_CD =?,
                   UPT_MAN =?,
                   UPT_YMD = SYSDATE
            WHERE  REQ_NO = ?
              AND  ENO_NO = ?
            ]]>
        </query>
    </sql>

	<!-- 철야당직비신청 삭제 -->
    <sql name="SAGB070_DEL">
        <description>철야당직비신청 삭제</description>
        <query>
            <![CDATA[
            DELETE T_CP_NIGHTDUTY
            WHERE  REQ_NO = ?
              AND  ENO_NO = ?
            ]]>
        </query>
    </sql>




<!-- 철야당직비 현황 -->
<!--
***********************************************************************
* @UseCase     : SAGB080
* @description : 철야당직비 현황
***********************************************************************
* 2007/03/31     오대성        최초작성.
***********************************************************************
-->
    <!-- 철야당직비 현황 조회 -->
    <sql name="SAGB080_SHR">
        <description>철야당직비 현황 조회</description>
        <query>
            <![CDATA[
            SELECT *
              FROM (SELECT C.*
                         , D.APP_YN
                         , DECODE( D.APP_YN
                                 , 'Y', '3'
                                 , 'N', '4'
                                 , NVL2(D.ENO_NO, '2', '1')
                                   ) AS APP_YN_CD
                         , DECODE( D.APP_YN
                                 , 'Y', '결재'
                                 , 'N', '부결'
                                 , NVL2(D.ENO_NO, '미결', '미상신')
                                   ) AS APP_YN_NM
                         , DECODE( D.APP_YN
                                 , 'Y', TO_CHAR(D.UPT_YMD, 'YY/MM/DD')||' '||D.APP_TIME
                                 , 'N', TO_CHAR(D.UPT_YMD, 'YY/MM/DD')||' '||D.APP_TIME
                                 , ' '
                                   ) AS APP_TIME
                         , 0 AS CHECKED
                      FROM (SELECT A.PIS_YY||A.PIS_MM AS PIS_YM
                                 , A.ENO_NO
                                 , A.REQ_NO
                                 , A.DUTY_CNT
                                 , A.DUTY_AMT
                                 , A.REMARK
                                 , A.END_TAG
                                 , B.ENO_NM
                                 , B.DPT_NM
                                 , B.JOB_NM
                                 , B.DPT_CD
                                 , B.JOB_CD

                                 , B.DPT_SEQ
                                 , B.JOB_SEQ
                                 , B.HOB_SEQ

                              FROM T_CP_NIGHTDUTY A
                                 , VI_T_CM_EMPLIST B
                             WHERE A.ENO_NO     = B.ENO_NO(+)
                               AND B.DPT_CD     LIKE '%'||?||'%'
                               [1]
                            ) C
                         , (SELECT *
                              FROM T_DI_APPROVAL
                             WHERE GUN_GBN  = 'D'
                               AND SEQ_NO   = '4' --본부장 결재
                            ) D
                     WHERE C.DPT_CD         = D.GUN_DPT(+)
                       AND C.PIS_YM||'01'   = D.GUN_YMD(+)
                    )
             WHERE APP_YN_CD = NVL(?, APP_YN_CD)
          ORDER BY DPT_SEQ
                 , JOB_SEQ
                 , HOB_SEQ DESC
                 , ENO_NO
            ]]>
        </query>
    </sql>

	<!-- 철야당직비반영처리 -->
    <sql name="SAGB080_UPT">
        <description>철야당직비신청 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_NIGHTDUTY
               SET END_TAG = ?
                 , UPT_MAN = ?
                 , UPT_YMD = SYSDATE
             WHERE REQ_NO = ?
               AND ENO_NO = ?
            ]]>
        </query>
    </sql>

<!-- 철야당직비결재처리 -->
<!--
***********************************************************************
* @UseCase     : SAGB090
* @description : 철야당직비결재처리
***********************************************************************
* 2007/03/30     오대성        최초작성.
***********************************************************************
-->
    <!-- 철야당직비결재처리 조회 -->
    <sql name="SAGB090_SHR">
        <description>철야당직비결재처리 조회</description>
        <query>
            <![CDATA[
            SELECT *
              FROM (SELECT SUBSTR(B.GUN_YMD, 1, 4)||'-'||SUBSTR(B.GUN_YMD, 5, 2) AS GUN_YMD
                         , B.GUN_DPT                                        AS GUN_DPT
                         , B.ENO_NO                                         AS PENO_NO
                         , B.DPT_NM                                         AS PDPT_NM
                         , B.JOB_NM||' '||B.ENO_NM                          AS PENO_NM
                         , B.SEQ_NO                                         AS PSEQ_NO   --결재자가 아니면 0
                         , B.APP_YN                                         AS PAPP_YN
                         , B.ENO_CNT
                         , B.GRP_NO

                         , MAX(DECODE(A.SEQ_NO, 1, C.ENO_NO))               AS ENO_NO1
                         , MAX(DECODE(A.SEQ_NO, 1, C.JOB_NM||' '||C.ENO_NM))AS ENO_NM1
                         , MAX(DECODE(A.SEQ_NO, 1, C.JOB_CD))               AS JOB_CD1
                         , MAX(DECODE(A.SEQ_NO, 1, A.APP_YN))               AS APP_YN1
                         , MAX(DECODE(A.SEQ_NO, 1, A.APP_YN_NM))            AS APP_YN_NM1
                         , MAX(DECODE(A.SEQ_NO, 1, A.APP_TIME))             AS APP_TIME1

                         , MAX(DECODE(A.SEQ_NO, 2, C.ENO_NO))               AS ENO_NO2
                         , MAX(DECODE(A.SEQ_NO, 2, C.JOB_NM||' '||C.ENO_NM))AS ENO_NM2
                         , MAX(DECODE(A.SEQ_NO, 2, C.JOB_CD))               AS JOB_CD2
                         , MAX(DECODE(A.SEQ_NO, 2, A.APP_YN))               AS APP_YN2
                         , MAX(DECODE(A.SEQ_NO, 2, A.APP_YN_NM))            AS APP_YN_NM2
                         , MAX(DECODE(A.SEQ_NO, 2, A.APP_TIME))             AS APP_TIME2

                         , MAX(DECODE(A.SEQ_NO, 3, C.ENO_NO))               AS ENO_NO3
                         , MAX(DECODE(A.SEQ_NO, 3, C.JOB_NM||' '||C.ENO_NM))AS ENO_NM3
                         , MAX(DECODE(A.SEQ_NO, 3, C.JOB_CD))               AS JOB_CD3
                         , MAX(DECODE(A.SEQ_NO, 3, A.APP_YN))               AS APP_YN3
                         , MAX(DECODE(A.SEQ_NO, 3, A.APP_YN_NM))            AS APP_YN_NM3
                         , MAX(DECODE(A.SEQ_NO, 3, A.APP_TIME))             AS APP_TIME3

                         , MAX(DECODE(A.SEQ_NO, 4, C.ENO_NO))               AS ENO_NO4
                         , MAX(DECODE(A.SEQ_NO, 4, C.JOB_NM||' '||C.ENO_NM))AS ENO_NM4
                         , MAX(DECODE(A.SEQ_NO, 4, C.JOB_CD))               AS JOB_CD4
                         , MAX(DECODE(A.SEQ_NO, 4, A.APP_YN))               AS APP_YN4
                         , MAX(DECODE(A.SEQ_NO, 4, A.APP_YN_NM))            AS APP_YN_NM4
                         , MAX(DECODE(A.SEQ_NO, 4, A.APP_TIME))             AS APP_TIME4

                         , CASE
                           WHEN B.SEQ_NO  = '2'
                            AND MAX(DECODE(A.SEQ_NO, 2, A.APP_YN)) = 'R'
                           THEN 'F'
                           ELSE ''
                            END AS CHECKED
                         , ''   AS APP_TAG
                      FROM (SELECT E.ENO_NO
                                 , E.GUN_YMD
                                 , E.GUN_DPT
                                 , E.GUN_GBN
                                 , E.SEQ_NO
                                 , E.APP_YN
                                 , DECODE( E.APP_YN
                                         , 'Y', '결재'
                                         , 'N', '부결'
                                         , '미결'
                                           ) AS APP_YN_NM
                                 , DECODE( E.APP_YN
                                         , 'Y', TO_CHAR(E.UPT_YMD, 'YY/MM/DD')||' '||E.APP_TIME
                                         , 'N', TO_CHAR(E.UPT_YMD, 'YY/MM/DD')||' '||E.APP_TIME
                                         , ' '
                                           ) AS APP_TIME
                              FROM T_DI_APPROVAL E
                            ) A
                         , (SELECT G.ENO_NO
                                 , G.ENO_NM
                                 , G.DPT_NM
                                 , G.JOB_NM
                                 , F.GUN_YMD
                                 , F.GUN_GBN
                                 , F.GUN_DPT
                                 , F.SEQ_NO
                                 , F.APP_YN
                                 , H.ENO_CNT
                                 , H.GRP_NO
                              FROM (SELECT GUN_YMD
                                         , GUN_GBN
                                         , GUN_DPT
                                         , SEQ_NO
                                         , PENO_NO
                                         , APP_YN
                                      FROM T_DI_APPROVAL
                                     WHERE ENO_NO  = ?
                                       AND GUN_YMD = ?
                                       AND GUN_GBN = 'D'
                                     UNION
                                    SELECT GUN_YMD
                                         , GUN_GBN
                                         , GUN_DPT
                                         , '0'
                                         , PENO_NO
                                         , ''
                                      FROM T_DI_APPROVAL
                                     WHERE PENO_NO = ?
                                       AND GUN_YMD = ?
                                       AND GUN_GBN = 'D'
                                  GROUP BY GUN_YMD
                                         , GUN_GBN
                                         , GUN_DPT
                                         , PENO_NO
                                    ) F
                                 , VI_T_CM_EMPLIST G
                                 , (SELECT COUNT(K.ENO_NO)          AS ENO_CNT
                                         , NVL(P.GUN_DPT, P.DPT_CD) AS DPT_CD
                                         , K.PIS_YY||K.PIS_MM       AS PIS_YM
                                         , K.GRP_NO
                                      FROM T_CP_NIGHTDUTY K
                                         , VI_T_CM_EMPLIST P
                                     WHERE K.ENO_NO = P.ENO_NO
                                  GROUP BY NVL(P.GUN_DPT, P.DPT_CD)
                                         , K.PIS_YY||K.PIS_MM
                                         , K.GRP_NO
                                    ) H
                             WHERE F.PENO_NO    = G.ENO_NO
                               AND F.GUN_DPT    = H.DPT_CD
                               [1]
                               AND SUBSTR(F.GUN_YMD,1,6)    = H.PIS_YM
                            ) B
                         , VI_T_CM_EMPLIST C
                     WHERE A.ENO_NO  = C.ENO_NO
                       AND A.GUN_YMD = B.GUN_YMD
                       AND A.GUN_DPT = B.GUN_DPT
                       AND A.GUN_GBN = B.GUN_GBN
                  GROUP BY B.GUN_YMD
                         , B.GUN_DPT
                         , B.ENO_NO
                         , B.ENO_NM
                         , B.DPT_NM
                         , B.JOB_NM
                         , B.SEQ_NO
                         , B.APP_YN
                         , B.ENO_CNT
                         , B.GRP_NO
                    )
          ORDER BY GRP_NO
                 , SF_GET_DPTSEQ( '01', 'A4', GUN_DPT)
            ]]>
        </query>
    </sql>

	<!-- 대체근무결재처리 -->
    <sql name="SAGB090_UPT_01">
        <description>결재정보 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_NIGHTDUTY
               SET GRP_NO       = ?
                 , UPT_MAN      = ?
                 , UPT_YMD      = SYSDATE
             WHERE PIS_YY       = ?
               AND PIS_MM       = ?
               AND ENO_NO IN (SELECT A.ENO_NO
                                FROM T_CP_NIGHTDUTY A
                                   , VI_T_CM_EMPLIST B
                               WHERE A.ENO_NO = B.ENO_NO
                                 AND NVL(B.GUN_DPT, B.DPT_CD) = ?
                              )
            ]]>
        </query>
    </sql>

    <!-- 그룹번호 조회 -->
    <sql name="SAGB090_SHR_01">
        <description>그룹번호 조회</description>
        <query>
            <![CDATA[
			SELECT NVL(MAX(GRP_NO), 0)+1 AS GRP_NO
			  FROM T_CP_NIGHTDUTY
            ]]>
        </query>
    </sql>

<!-- 결재세부사항 -->
<!--
***********************************************************************
* @UseCase     : SAGB091
* @description : 결재세부사항
***********************************************************************
* 2007/08/02     한학현        최초작성.
***********************************************************************
-->

	<!-- 철야당직비신청 조회 -->
    <sql name="SAGB091_SHR">
        <description>철야당직비신청 조회</description>
        <query>
            <![CDATA[
            SELECT A.REQ_NO
                 , A.PIS_YY||'-'||A.PIS_MM AS PIS_YM
                 , B.ENO_NO
                 , B.ENO_NM
                 , B.DPT_CD
                 , B.DPT_NM
                 , B.JOB_CD
                 , B.JOB_NM
                 , A.DUTY_CNT
                 , A.DUTY_AMT
                 , A.REMARK
                 , A.END_TAG
                 , A.MD_DSP
                 , A.AT1_CD , A.AT2_CD , A.AT3_CD , A.AT4_CD , A.AT5_CD , A.AT6_CD
                 , A.AT7_CD , A.AT8_CD , A.AT9_CD , A.AT10_CD, A.AT11_CD, A.AT12_CD
                 , A.AT13_CD, A.AT14_CD, A.AT15_CD, A.AT16_CD, A.AT17_CD, A.AT18_CD
                 , A.AT19_CD, A.AT20_CD, A.AT21_CD, A.AT22_CD, A.AT23_CD, A.AT24_CD
                 , A.AT25_CD, A.AT26_CD, A.AT27_CD, A.AT28_CD, A.AT29_CD, A.AT30_CD
                 , A.AT31_CD
              FROM T_CP_NIGHTDUTY A
                 , VI_T_CM_EMPLIST B
             WHERE A.PIS_YY     = ?
               AND A.PIS_MM     = ?
               AND A.ENO_NO     = B.ENO_NO
               [1]
          ORDER BY B.DPT_SEQ
                 , B.JOB_SEQ
                 , B.HOB_SEQ DESC
                 , B.ENO_NO
            ]]>
        </query>
    </sql>

<!-- 철야당직비본부장결재처리 -->
<!--
***********************************************************************
* @UseCase     : SAGB100
* @description : 철야당직비본부장결재처리
***********************************************************************
* 2007/03/30     오대성        최초작성.
***********************************************************************
-->
    <!-- 철야당직비본부장결재처리 조회 -->
    <sql name="SAGB100_SHR">
        <description>철야당직비본부장결재처리 조회</description>
        <query>
            <![CDATA[
             SELECT B.PIS_YM
                  , D.ENO_NO AS ENO_NO
                  , D.JOB_CD AS JOB_CD
                  , SF_GET_COMMNAME('01','A2',D.JOB_CD)||' '||D.ENO_NM AS ENO_NM
                  , E.JOB_CD AS JOB_CD2
                  , E.ENO_NO AS ENO_NO2
                  , E.DPT_CD AS DPT_CD2
                  , SF_GET_COMMNAME('01','A2',E.JOB_CD)||' '||E.ENO_NM AS ENO_NM2
                  , A.APP_YN2
                  , A.APP_TIME2
                  , SUM(B.ENO_CNT) AS ENO_CNT
                  , 0 AS CHECKED
               FROM (SELECT AA.REQ_NO
                          , AA.APP_GBN
                          , AA.ENO_NO
                          , BB.ENO_NO AS ENO_NO2
                          , BB.APP_YN AS APP_YN2
                          , TO_CHAR(TO_DATE(BB.APP_TIME, 'YYYYMMDDHH24MI'), 'YYYY-MM-DD HH24:MI') AS APP_TIME2
                       FROM (SELECT * FROM T_CP_APPROVAL WHERE SEQ_NO='1') AA,
                            (SELECT * FROM T_CP_APPROVAL WHERE SEQ_NO='2') BB
                      WHERE AA.REQ_NO = BB.REQ_NO
                        AND AA.APP_GBN = BB.APP_GBN
                        AND AA.PENO_NO = BB.PENO_NO
                        AND BB.ENO_NO = ?
                        AND AA.APP_GBN = 'D'
                        AND AA.APP_YN = 'Y') A
                  , (SELECT REQ_NO
                          , DPT_CD
                          , PIS_YY||'-'||PIS_MM AS PIS_YM
                          , COUNT(ENO_NO) AS ENO_CNT
                       FROM T_CP_NIGHTDUTY
                      WHERE PIS_YY = ?
                        AND PIS_MM = ?
                   GROUP BY REQ_NO
                          , DPT_CD
                          , PIS_YY
                          , PIS_MM
                     ) B
                  ,T_CM_PERSON D
                  ,T_CM_PERSON E
              WHERE A.ENO_NO =  D.ENO_NO(+)
                AND A.ENO_NO2 = E.ENO_NO(+)
                AND A.REQ_NO = B.REQ_NO
           GROUP BY B.PIS_YM
                  , D.ENO_NO
                  , D.JOB_CD
                  , SF_GET_COMMNAME('01','A2',D.JOB_CD)||' '||D.ENO_NM
                  , E.JOB_CD
                  , E.ENO_NO
                  , E.DPT_CD
                  , SF_GET_COMMNAME('01','A2',E.JOB_CD)||' '||E.ENO_NM
                  , A.APP_YN2
                  , A.APP_TIME2
            ]]>
        </query>
    </sql>

	<!-- 철야당직비본부장결재처리 -->
    <sql name="SAGB100_UPT">
        <description>결재정보 수정</description>
        <query>
            <![CDATA[
            UPDATE T_CP_APPROVAL
               SET APP_YN = ?
                 , APP_TIME = TO_CHAR(SYSDATE,'YYYYMMDDHH24MI')
                 , UPT_MAN = ?
                 , UPT_YMD = SYSDATE
             WHERE SUBSTR(REQ_NO,1,6) = ?
               AND APP_GBN = 'D'
               AND SEQ_NO = '2'
               AND ENO_NO = ?
            ]]>
        </query>
    </sql>

<!-- 결재세부사항 -->
<!--
***********************************************************************
* @UseCase     : SAGB101
* @description : 결재세부사항
***********************************************************************
* 2007/08/02     한학현        최초작성.
***********************************************************************
-->
    <!-- 결재세부사항 조회 -->
    <sql name="SAGB101_SHR">
        <description>결재세부사항 조회</description>
        <query>
            <![CDATA[
            SELECT BB.REQ_NO, BB.ENO_NO, BB.PIS_YM, BB.DPT_CD,
                   BB.JOB_CD, BB.DUTY_CNT, BB.DUTY_AMT, BB.REMARK, BB.END_TAG, BB.MD_DSP,
                   BB.AT1_CD, BB.AT2_CD, BB.AT3_CD, BB.AT4_CD, BB.AT5_CD, BB.AT6_CD,
                   BB.AT7_CD, BB.AT8_CD, BB.AT9_CD, BB.AT10_CD, BB.AT11_CD, BB.AT12_CD,
                   BB.AT13_CD, BB.AT14_CD, BB.AT15_CD, BB.AT16_CD, BB.AT17_CD, BB.AT18_CD,
                   BB.AT19_CD, BB.AT20_CD, BB.AT21_CD, BB.AT22_CD, BB.AT23_CD, BB.AT24_CD,
                   BB.AT25_CD, BB.AT26_CD, BB.AT27_CD, BB.AT28_CD, BB.AT29_CD, BB.AT30_CD,
                   BB.AT31_CD, BB.ENO_NM, BB.DPT_NM, BB.JOB_NM
            FROM  (SELECT REQ_NO
                   FROM   T_CP_APPROVAL
                   WHERE  ENO_NO = ?
                   AND    substr(REQ_NO,1,6) = ?
                   AND    APP_GBN = 'D'
                   AND    SEQ_NO = '2') AA,
                  (SELECT A.REQ_NO, A.ENO_NO, A.PIS_YY||'-'||A.PIS_MM AS PIS_YM, A.DPT_CD,
                          A.JOB_CD, A.DUTY_CNT, A.DUTY_AMT, A.REMARK, A.END_TAG, A.MD_DSP,
                          A.AT1_CD, A.AT2_CD, A.AT3_CD, A.AT4_CD, A.AT5_CD, A.AT6_CD,
                          A.AT7_CD, A.AT8_CD, A.AT9_CD, A.AT10_CD, A.AT11_CD, A.AT12_CD,
                          A.AT13_CD, A.AT14_CD, A.AT15_CD, A.AT16_CD, A.AT17_CD, A.AT18_CD,
                          A.AT19_CD, A.AT20_CD, A.AT21_CD, A.AT22_CD, A.AT23_CD, A.AT24_CD,
                          A.AT25_CD, A.AT26_CD, A.AT27_CD, A.AT28_CD, A.AT29_CD, A.AT30_CD,
                          A.AT31_CD, B.ENO_NM, B.DPT_NM, B.JOB_NM,
                          B.HEAD_SEQ,
                          B.DPT_SEQ,
                          B.JOB_SEQ,
                          B.HOB_SEQ,
                          B.HIR_YMD
                   FROM   T_CP_NIGHTDUTY A,
                          VI_T_CM_PERSON2 B
                   WHERE  A.PIS_YY = ?
                   AND    A.PIS_MM = ?
                   AND    A.ENO_NO = B.ENO_NO) BB
            WHERE  AA.REQ_NO = BB.REQ_NO(+)
            ORDER BY BB.HEAD_SEQ, BB.DPT_SEQ, BB.JOB_SEQ, BB.HOB_SEQ DESC, BB.HIR_YMD, BB.ENO_NO
            ]]>
        </query>
    </sql>


<!-- 기타정보 -->
<!--
***********************************************************************
* @UseCase     : CODB010
* @description : 공통코드등록
***********************************************************************
* 2006/09/20     한학현        최초작성.
***********************************************************************
-->
    <!-- 코드,코드명에 따른 데이터 조회 -->
    <sql name="SACO020_SHR">
        <description>공통코드등록 검색</description>
        <query>
            <![CDATA[
    SELECT CD_GBN,
           COMM_CD		,
           COMM_NM	AS ACC_NM,
           COMM_NM2,
           TO_CHAR(STR_YMD, 'YYYY-MM-DD') AS STR_YMD,
           TO_CHAR(END_YMD, 'YYYY-MM-DD') AS END_YMD,
           SORT_NO,
           GBN2_TAG,
           EXT_01			AS ACC_CD
    FROM   T_CM_COMMON
    WHERE  GUBUN = '01'
    AND    CD_GBN = 'AT'
    AND    COMM_CD IN ('01','02')
    ORDER BY SORT_NO
            ]]>
        </query>
    </sql>

    <!-- 코드에 따른 공통코드 상세 데이터 조회 -->
    <sql name="SACO020_SHR_01">
        <description>공통코드등록 상세 검색</description>
        <query>
            <![CDATA[
            SELECT
    A.ACC_CD,
    (SELECT COMM_NM AS ACC_NM FROM T_CM_COMMON WHERE GUBUN = '01' AND    CD_GBN = 'AT' AND COMM_CD IN ('01','02') AND EXT_01 = A.ACC_CD) AS ACC_NM,
    A.DPT_CD,
    (SELECT COMM_NM FROM T_CM_COMMON WHERE GUBUN = '01' AND    CD_GBN = 'AD' AND COMM_CD = A.DPT_CD) AS DPT_NM
    FROM T_CP_ACCOUNT_DEPT A
WHERE A.ACC_CD = ( SELECT EXT_01
 FROM   T_CM_COMMON
 WHERE  GUBUN = '01'
 AND    CD_GBN = 'AT'
 AND    COMM_CD = ?)
            ]]>
        </query>
    </sql>

    <!-- 코드에 따른 공통코드 상세 데이터 조회 -->
    <sql name="SACO020_SHR_02">
        <description>공통코드등록 상세 검색</description>
        <query>
            <![CDATA[
SELECT COMM_CD AS NO_DPT_CD, COMM_NM AS NO_DPT_NM
FROM
	(
	select COMM_CD, COMM_NM, B.DPT_CD
	from T_CM_COMMON A, T_CP_ACCOUNT_DEPT B
	WHERE GUBUN = '01' AND    CD_GBN = 'AD'
	and end_ymd is null
	AND COMM_CD = B.DPT_CD(+)
)
WHERE DPT_CD IS NULL
AND   LENGTH(COMM_CD) = 4

 			]]>
        </query>
    </sql>


    <!-- 공통코드 신규 저장 -->
    <sql name="SACO020_INS">
        <description>공통코드등록 상세 등록</description>
        <query>
            <![CDATA[
            INSERT INTO T_CP_ACCOUNT_DEPT
			(DPT_CD, ACC_CD)
			VALUES(?, ?)
            ]]>
        </query>
    </sql>

    <!-- 공통코드 수정 -->
    <sql name="CODB010_UPT">
        <description>공통코드등록 상세 수정</description>
        <query>
            <![CDATA[

            ]]>
        </query>
    </sql>

    <!-- 공통코드 삭제 -->
    <sql name="SACO020_DEL">
        <description>공통코드등록 상세 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM T_CP_ACCOUNT_DEPT WHERE DPT_CD = ?
            ]]>
        </query>
    </sql>

    <!-- SAP 전송을 위한 Query -->
    <sql name="SAGA230_PRC_SHR_01">
        <description>회계처리용 급여전표내역 조회</description>
        <query>
            <![CDATA[
		SELECT LPAD(SORT_NO, 3, '0') AS ORD_NO
           		,A.PIS_YY
				,A.PIS_MM
      			,A.ACC_CD
				,A.ACC_CD AS ACC_NM
      			--,(SELECT EXT_01  FROM T_CM_COMMON WHERE COMM_CD = A.ACC_CD AND CD_GBN = 'AT') AS ACC_ACCOUNT_CD
      			--,SF_GET_COMMNAME('01', 'AT', ACC_CD) AS ACC_NM
      			,A.CUS_CD
      			,A.CUS_CD AS CUS_NM
      			,A.PRJ_CD
      			,A.PRJ_CD AS PRJ_NM
      			,A.DPT_CD
      			,A.DPT_CD AS DPT_NM
      			--,(SELECT COMM_NM  FROM T_CM_COMMON WHERE COMM_CD = A.DPT_CD AND CD_GBN = 'AD') AS DPT_NM
      			,A.DTL_ACC_CD
      			,NVL(A.DR_AMT, 0) AS DR_AMT
      			,NVL(A.CR_AMT, 0) AS CR_AMT
      			,A.DESP
      			,A.DESP2
      			,A.PROSTS
      			,A.SORT_NO
      			,A.DC_GBN
                , TO_CHAR(SYSTIMESTAMP, 'YYYYMMDDHH24MISSFF4') AS FILE_NAME
				,WRITEKEY
  			FROM T_CP_ACCOUNT A
			WHERE A.PIS_YY = SUBSTR(?, 0, 4)
                 AND A.PIS_MM = SUBSTR(?, 5, 2)
                 AND NVL(A.DR_AMT, 0) + NVL(A.CR_AMT, 0)  > 0
                 AND TAX_GBN IS NULL
         ORDER BY TO_NUMBER(A.SORT_NO)
            ]]>
        </query>
    </sql>

    <sql name="SAGA230_UPT4">
        <description>회계처리용 처리문서번호 수정</description>
        <query>
            <![CDATA[
		UPDATE T_CP_ACCOUNT A
		SET MNG_NO = ?
		WHERE A.PIS_YY = SUBSTR(?, 0, 4)
          AND A.PIS_MM = SUBSTR(?, 5, 2)
          AND TAX_GBN IS NULL
            ]]>
        </query>
    </sql>

    <sql name="SAGA230_DEL">
        <description>전표데이터 삭제</description>
        <query>
            <![CDATA[
		DELETE FROM T_CP_ACCOUNT A
		WHERE A.PIS_YY = SUBSTR(?, 0, 4)
          AND A.PIS_MM = SUBSTR(?, 5, 2)
          AND TAX_GBN IS NULL
            ]]>
        </query>
    </sql>

    <sql name="SAGA230_INS">
        <description>회계처리용 처리문서번호 수정</description>
        <query>
            <![CDATA[
		INSERT INTO T_CP_ACCOUNT (
		   PIS_YY, PIS_MM, ACC_CD,
		   CUS_CD, PRJ_CD, DPT_CD,
		   DTL_ACC_CD, DR_AMT, CR_AMT,
		   DESP, DESP2, PROSTS,
		   SORT_NO, DC_GBN, WRITEKEY)
		VALUES (
			SUBSTR(?, 0, 4), SUBSTR(?, 5, 2), ?,
		    ?, ?, ?,
		    ?, ?, ?,
		    ?, ?, '0',
		    ?, ?, ? )
            ]]>
        </query>
    </sql>

    <sql name="SAGA240_PRC_SHR_01">
        <description>회계처리용 급여전표내역 조회</description>
        <query>
            <![CDATA[
		SELECT LPAD(SORT_NO, 3, '0') AS ORD_NO
           		,A.PIS_YY
				,A.PIS_MM
      			,A.ACC_CD
				,A.ACC_CD AS ACC_NM
      			--,(SELECT EXT_01  FROM T_CM_COMMON WHERE COMM_CD = A.ACC_CD AND CD_GBN = 'AT') AS ACC_ACCOUNT_CD
      			--,SF_GET_COMMNAME('01', 'AT', ACC_CD) AS ACC_NM
      			,A.CUS_CD
      			,A.CUS_CD AS CUS_NM
      			,A.PRJ_CD
      			,A.PRJ_CD AS PRJ_NM
      			,A.DPT_CD
      			,A.DPT_CD AS DPT_NM
      			--,(SELECT COMM_NM  FROM T_CM_COMMON WHERE COMM_CD = A.DPT_CD AND CD_GBN = 'AD') AS DPT_NM
      			,A.DTL_ACC_CD
      			,NVL(A.DR_AMT, 0) AS DR_AMT
      			,NVL(A.CR_AMT, 0) AS CR_AMT
      			,A.DESP
      			,A.DESP2
      			,A.PROSTS
      			,A.SORT_NO
      			,A.DC_GBN
                , TO_CHAR(SYSTIMESTAMP, 'YYYYMMDDHH24MISSFF4') AS FILE_NAME
				,WRITEKEY
  			FROM T_CP_ACCOUNT A
			WHERE A.PIS_YY = SUBSTR(?, 0, 4)
                 AND A.PIS_MM = SUBSTR(?, 5, 2)
                 AND NVL(A.DR_AMT, 0) + NVL(A.CR_AMT, 0)  > 0
                 AND TAX_GBN = '1'
         ORDER BY TO_NUMBER(A.SORT_NO)
            ]]>
        </query>
    </sql>
    <sql name="SAGA240_DEL">
        <description>전표데이터 삭제</description>
        <query>
            <![CDATA[
		DELETE FROM T_CP_ACCOUNT A
		WHERE A.PIS_YY = SUBSTR(?, 0, 4)
          AND A.PIS_MM = SUBSTR(?, 5, 2)
          AND TAX_GBN = '1'
            ]]>
        </query>
    </sql>

    <sql name="SAGA240_INS">
        <description>회계처리용 처리문서번호 수정</description>
        <query>
            <![CDATA[
		INSERT INTO T_CP_ACCOUNT (
		   PIS_YY, PIS_MM, ACC_CD,
		   CUS_CD, PRJ_CD, DPT_CD,
		   DTL_ACC_CD, DR_AMT, CR_AMT,
		   DESP, DESP2, PROSTS,
		   SORT_NO, TAX_GBN, DC_GBN, WRITEKEY)
		VALUES (
			SUBSTR(?, 0, 4), SUBSTR(?, 5, 2), ?,
		    ?, ?, ?,
		    ?, ?, ?,
		    ?, ?, '0',
		    ?, '1', ?, ? );
            ]]>
        </query>
    </sql>
    <sql name="SAGA240_UPT4">
        <description>회계처리용 처리문서번호 수정</description>
        <query>
            <![CDATA[
		UPDATE T_CP_ACCOUNT A
		SET MNG_NO = ?
		WHERE A.PIS_YY = SUBSTR(?, 0, 4)
          AND A.PIS_MM = SUBSTR(?, 5, 2)
          AND TAX_GBN = '1'
            ]]>
        </query>
    </sql>
***********************************************************************
* @UseCase     : SAGA237
* @description : 급여테이블
***********************************************************************
* 2009/11/17     임세환        최초작성.
***********************************************************************
-->
    <!-- 급여테이블 조회 -->
    <sql name="SAGA237_SHR">
        <description>전표테이블 조회</description>
        <query>
            <![CDATA[
           SELECT LPAD(ROWNUM, 3, '0') AS ORD_NO
           		,A.PIS_YY
				,A.PIS_MM
				,A.ACC_CD
				,A.ACC_CD AS ACC_NM
      			--,(SELECT EXT_01  FROM T_CM_COMMON WHERE COMM_CD = A.ACC_CD AND CD_GBN = 'AT') AS ACC_ACCOUNT_CD
      			--,SF_GET_COMMNAME('01', 'AT', ACC_CD) AS ACC_NM
      			,A.CUS_CD
      			,A.CUS_CD AS CUS_NM
      			,A.PRJ_CD
      			,A.PRJ_CD AS PRJ_NM
      			,A.DPT_CD
      			,A.DPT_CD AS DPT_NM
      			--,(SELECT COMM_NM  FROM T_CM_COMMON WHERE COMM_CD = A.DPT_CD AND CD_GBN = 'AD') AS DPT_NM
      			,A.DTL_ACC_CD
      			,NVL(A.DR_AMT, 0) AS DR_AMT
      			,NVL(A.CR_AMT, 0) AS CR_AMT
      			,A.DESP
      			,A.DESP2
      			,A.PROSTS
      			,A.SORT_NO
      			,A.DC_GBN
      			,A.WRITEKEY
      			,A.MNG_NO
  			FROM T_CP_ACCOUNT_L A
			WHERE A.PIS_YY = SUBSTR(?, 0, 4)
                 AND A.PIS_MM = SUBSTR(?, 5, 2)
                 AND NVL(A.DR_AMT, 0) + NVL(A.CR_AMT, 0)  > 0
                 AND TAX_GBN IS NULL
         ORDER BY TO_NUMBER(A.SORT_NO)
            ]]>
        </query>
    </sql>

    <!-- 적용일자 조회 -->
    <sql name="SAGA237_SHR_01">
        <description>급여테이블 적용일자 조회</description>
        <query>
            <![CDATA[
         SELECT MAX(PAY_YMD) AS APY_YMD
                        FROM T_CP_WORKLOG
            ]]>
        </query>
    </sql>
    <!-- SAP 전송을 위한 Query -->
    <sql name="SAGA237_PRC_SHR_01">
        <description>회계처리용 급여전표내역 조회</description>
        <query>
            <![CDATA[
		SELECT LPAD(SORT_NO, 3, '0') AS ORD_NO
           		,A.PIS_YY
				,A.PIS_MM
      			,A.ACC_CD
				,A.ACC_CD AS ACC_NM
      			--,(SELECT EXT_01  FROM T_CM_COMMON WHERE COMM_CD = A.ACC_CD AND CD_GBN = 'AT') AS ACC_ACCOUNT_CD
      			--,SF_GET_COMMNAME('01', 'AT', ACC_CD) AS ACC_NM
      			,A.CUS_CD
      			,A.CUS_CD AS CUS_NM
      			,A.PRJ_CD
      			,A.PRJ_CD AS PRJ_NM
      			,A.DPT_CD
      			,A.DPT_CD AS DPT_NM
      			--,(SELECT COMM_NM  FROM T_CM_COMMON WHERE COMM_CD = A.DPT_CD AND CD_GBN = 'AD') AS DPT_NM
      			,A.DTL_ACC_CD
      			,NVL(A.DR_AMT, 0) AS DR_AMT
      			,NVL(A.CR_AMT, 0) AS CR_AMT
      			,A.DESP
      			,A.DESP2
      			,A.PROSTS
      			,A.SORT_NO
      			,A.DC_GBN
                , TO_CHAR(SYSTIMESTAMP, 'YYYYMMDDHH24MISSFF4') AS FILE_NAME
				,WRITEKEY
  			FROM T_CP_ACCOUNT_L A
			WHERE A.PIS_YY = SUBSTR(?, 0, 4)
                 AND A.PIS_MM = SUBSTR(?, 5, 2)
                 AND NVL(A.DR_AMT, 0) + NVL(A.CR_AMT, 0)  > 0
                 AND TAX_GBN IS NULL
         ORDER BY TO_NUMBER(A.SORT_NO)
            ]]>
        </query>
    </sql>

    <sql name="SAGA237_UPT4">
        <description>회계처리용 처리문서번호 수정</description>
        <query>
            <![CDATA[
		UPDATE T_CP_ACCOUNT_L A
		SET MNG_NO = ?
		WHERE A.PIS_YY = SUBSTR(?, 0, 4)
          AND A.PIS_MM = SUBSTR(?, 5, 2)
          AND TAX_GBN IS NULL
            ]]>
        </query>
    </sql>

    <sql name="SAGA237_DEL">
        <description>전표데이터 삭제</description>
        <query>
            <![CDATA[
		DELETE FROM T_CP_ACCOUNT_L A
		WHERE A.PIS_YY = SUBSTR(?, 0, 4)
          AND A.PIS_MM = SUBSTR(?, 5, 2)
          AND TAX_GBN IS NULL
            ]]>
        </query>
    </sql>

    <sql name="SAGA237_INS">
        <description>회계처리용 처리문서번호 수정</description>
        <query>
            <![CDATA[
		INSERT INTO T_CP_ACCOUNT_L (
		   PIS_YY, PIS_MM, ACC_CD,
		   CUS_CD, PRJ_CD, DPT_CD,
		   DTL_ACC_CD, DR_AMT, CR_AMT,
		   DESP, DESP2, PROSTS,
		   SORT_NO, DC_GBN, WRITEKEY)
		VALUES (
			SUBSTR(?, 0, 4), SUBSTR(?, 5, 2), ?,
		    ?, ?, ?,
		    ?, ?, ?,
		    ?, ?, '0',
		    ?, ?, ? )
            ]]>
        </query>
    </sql>





    <sql name="SAGA260_SHR">
        <description>사내대출 조회(마스터)</description>
        <query>
            <![CDATA[
			SELECT
			'F' AS CHK,
			C.DPT_NM,A.ENO_NO,B.ENO_NM,

			DECODE(NVL(A.APPDT,''),'','',SUBSTR(A.APPDT,1,4)||'-'||SUBSTR(A.APPDT,5,2)||'-'||SUBSTR(A.APPDT,7,2)) AS APPDT,
			DECODE(NVL(A.APLDT,''),'','',SUBSTR(A.APLDT,1,4)||'-'||SUBSTR(A.APLDT,5,2)||'-'||SUBSTR(A.APLDT,7,2)) AS APLDT,

			B.JOB_CD,                                        -- 직위코드
			ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD)  AS JOB_NM,      -- 직위
			A.APPAMT - A.APJAMT AS APLAMT_SUM,
			A.APPCNT, H.APPCNT_ORI, A.APPAMT, A.APLAMT, G.APLAMT_ORI, A.APJAMT,
			A.APLRAT,
			(A.APLAMT+A.APLRAT) AMT_SUM,
			NVL(RTRIM(A.REASON),'') REASON
			FROM ASNHR.T_AC_EMLOAN A
			JOIN ASNHR.T_CM_PERSON B ON A.ENO_NO = B.ENO_NO
			LEFT JOIN ASNHR.T_CM_DEPT C ON B.DPT_CD = C.DPT_CD,
		    (SELECT DISTINCT ENO_NO, TRUNC((APPAMT/60),0) AS APLAMT_ORI FROM ASNHR.T_AC_EMLOAN
		    WHERE APPCNT = '1') G,
		    (SELECT ENO_NO, COUNT(APLAMT) AS APPCNT_ORI FROM ASNHR.T_AC_EMLOAN
		    WHERE --APLAMT != '0' AND
		    SUBSTR(APLDT,1,6) <= ?
		    GROUP BY ENO_NO) H
			WHERE 1=1
			AND G.ENO_NO = B.ENO_NO
			AND H.ENO_NO = B.ENO_NO
			AND SUBSTR(A.APLDT,1,6) = ?
			ORDER BY B.ENO_NO

            ]]>
        </query>
    </sql>

    <sql name="SAGA260_SHR_01">
        <description>사내대출 조회(디테일)</description>
        <query>
            <![CDATA[
			SELECT

			C.DPT_NM,A.ENO_NO,B.ENO_NM,
			DECODE(NVL(A.APPDT,''),'','',SUBSTR(A.APPDT,1,4)||'-'||SUBSTR(A.APPDT,5,2)||'-'||SUBSTR(A.APPDT,7,2)) AS APPDT,
			DECODE(NVL(A.APLDT,''),'','',SUBSTR(A.APLDT,1,4)||'-'||SUBSTR(A.APLDT,5,2)||'-'||SUBSTR(A.APLDT,7,2)) AS APLDT,
			B.JOB_CD,                                        		-- 직위코드
			ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD)  AS JOB_NM,      	-- 직위
			A.APPAMT - A.APJAMT AS APLAMT_SUM,
			A.APPCNT,
			A.APPAMT,
			A.APLAMT,
			A.APJAMT,
			A.APLRAT,
			(A.APLAMT + A.APLRAT) AMT_1,
			NVL(RTRIM(A.REASON),'') REASON
			FROM ASNHR.T_AC_EMLOAN A
			JOIN ASNHR.T_CM_PERSON B ON A.ENO_NO = B.ENO_NO
			LEFT JOIN ASNHR.T_CM_DEPT C ON B.DPT_CD = C.DPT_CD

			WHERE 1=1
			AND A.ENO_NO = ?
			ORDER BY A.APLDT
            ]]>
        </query>
    </sql>

    <sql name="SAGA260_SHR_02">
        <description>사내대출 조회(디테일)</description>
        <query>
            <![CDATA[
			SELECT

			C.DPT_NM,A.ENO_NO,B.ENO_NM,
			A.APPDT,
			A.APLDT,
			B.JOB_CD,                                        		-- 직위코드
			ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD)  AS JOB_NM,      	-- 직위
			A.APPAMT - A.APJAMT AS APLAMT_SUM,
			A.APPCNT,
			A.APPAMT,
			A.APLAMT,
			A.APJAMT,
			A.APLRAT,
			(A.APLAMT + A.APLRAT) AMT_1,
			NVL(RTRIM(A.REASON),'') REASON
			FROM ASNHR.T_AC_EMLOAN A
			JOIN ASNHR.T_CM_PERSON B ON A.ENO_NO = B.ENO_NO
			LEFT JOIN ASNHR.T_CM_DEPT C ON B.DPT_CD = C.DPT_CD

			WHERE 1=1
			AND A.ENO_NO = ?
			ORDER BY A.APLDT
            ]]>
        </query>
    </sql>


    <sql name="SAGA260_SHR_PRINT">
        <description>사내대출 조회(출력물)</description>
        <query>
            <![CDATA[
			SELECT
			'F' AS CHK,
			C.DPT_NM,A.ENO_NO,B.ENO_NM,

			DECODE(NVL(A.APPDT,''),'','',SUBSTR(A.APPDT,1,8)) AS APPDT,
			DECODE(NVL(A.APLDT,''),'','',SUBSTR(A.APLDT,1,8)) AS APLDT,
			H.MAX_APLDT AS ENDDT,
			B.JOB_CD,                                        -- 직위코드
			ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD)  AS JOB_NM,      -- 직위
			E.APLAMT_SUM AS APLAMT_SUM,
			A.APPCNT, A.APPAMT, A.APLAMT,
			(A.APPAMT - E.APLAMT_SUM) AS APJAMT,
			A.APLRAT,
			E.RATAMT_SUM,
			(A.APLAMT+A.APLRAT) AMT_SUM,
			NVL(RTRIM(A.REASON),'') REASON
			FROM ASNHR.T_AC_EMLOAN A
			JOIN ASNHR.T_CM_PERSON B ON A.ENO_NO = B.ENO_NO
			LEFT JOIN ASNHR.T_CM_DEPT C ON B.DPT_CD = C.DPT_CD
			LEFT JOIN ( SELECT ENO_NO, APPDT, NVL(SUM(APLRAT),0) RATAMT_SUM,NVL(SUM(APLAMT),0) APLAMT_SUM
			FROM ASNHR.T_AC_EMLOAN
			WHERE APLDT <= ?
			GROUP BY ENO_NO, APPDT
			)E ON A.ENO_NO = E.ENO_NO
			LEFT JOIN ( SELECT ENO_NO, APPDT, MAX(APLDT)AS MAX_APLDT
			FROM ASNHR.T_AC_EMLOAN
			GROUP BY ENO_NO, APPDT
			)H ON A.ENO_NO = H.ENO_NO
			WHERE 1=1
			AND SUBSTR(A.APLDT,1,6) = ?
			ORDER BY B.ENO_NO

            ]]>
        </query>
    </sql>

    <sql name="SAGA260_SAV">
        <description>사내대출 저장(마스터)</description>
        <query>
            <![CDATA[

			INSERT INTO ASNHR.T_AC_EMLOAN (
			   ENO_NO,
			   APPDT,
			   APLDT,
			   APPCNT,
			   APPAMT,
			   APJAMT,
			   REASON,
			   IPT_MAN,
			   IPT_YMD
			   )
			VALUES (
			    ?,
			    ?,
			    ?,
			    '1',
			    ?,
			    ?,
			    ?,
			    ?,
			    SYSDATE )

            ]]>
        </query>
    </sql>

    <sql name="SAGA260_SAV_01">
        <description>사내대출 저장(디테일)</description>
        <query>
            <![CDATA[

			INSERT INTO ASNHR.T_AC_EMLOAN (
			   ENO_NO, APPDT,
			   APLDT,  APPCNT,
			   APPAMT, APLAMT,
			   APJAMT, APLRAT,
			   REASON,
			   IPT_MAN, IPT_YMD,
			   UPT_MAN, UPT_YMD
			   )
			VALUES (
			    ?,?,
			    ?,?,
			    ?,?,
			    ?,?,
			    ?,
              	?, SYSDATE, ?, SYSDATE )

            ]]>
        </query>
    </sql>

    <sql name="SAGA260_SAV_01_UPT">
        <description>사내대출 저장(디테일)</description>
        <query>
            <![CDATA[

			UPDATE ASNHR.T_AC_EMLOAN SET
			   APPDT = ?,
			   APLDT = ?,
			   APPCNT = ?,
			   APPAMT = ?,
			   APLAMT = ?,
			   APJAMT = ?,
			   APLRAT = ?,
			   REASON = ?,
			   UPT_MAN = ?,
			   UPT_YMD = SYSDATE
			WHERE ENO_NO = ?
				AND APPDT = ?
				AND APLDT = ?

            ]]>
        </query>
    </sql>

    <sql name="SAGA260_SAV_DELAY_DEL">
        <description>사내대출 삭제(디테일)</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_AC_EMLOAN
			WHERE ENO_NO = ?
            ]]>
        </query>
    </sql>

    <sql name="SAGA260_SAV_DELAY">
        <description>사내대출 유보저장(디테일)</description>
        <query>
            <![CDATA[

			INSERT INTO ASNHR.T_AC_EMLOAN (
			   ENO_NO, APPDT,
			   APLDT,  APPCNT,
			   APPAMT, APLAMT,
			   APJAMT, APLRAT,
			   REASON,
			   IPT_MAN, IPT_YMD,
			   UPT_MAN, UPT_YMD
			   )
			VALUES (
			    ?,?,
			    ?,?,
			    ?,?,
			    ?,?,
			    ?,
              	?, SYSDATE, ?, SYSDATE )

            ]]>
        </query>
    </sql>

    <sql name="SAGA270_SAV_REP">
        <description>공조대출 저장(중도상환)</description>
        <query>
            <![CDATA[
			UPDATE ASNHR.T_AC_COLOAN SET
				APBAMT= ?,
				APLAMT= ?,
				APJAMT= '0',
				CALAMT= ?,
				REPDT= ?,
				REPYN= 'Y',
				UPT_MAN = ?,
				UPT_YMD = SYSDATE
			WHERE ENO_NO = ?
			AND SUBSTR(APLDT,1,6) = ?
            ]]>
        </query>
    </sql>

    <sql name="SAGA270_SAV_REP_DEL">
        <description>공조대출 저장(중도상환)</description>
        <query>
            <![CDATA[
			DELETE FROM ASNHR.T_AC_COLOAN
			WHERE ENO_NO = ?
			AND SUBSTR(APLDT,1,6) > ?

            ]]>
        </query>
    </sql>

    <sql name="SAGA270_SHR">
        <description>공조회비 조회(마스터)</description>
        <query>
            <![CDATA[
			SELECT
			C.DPT_NM,A.ENO_NO,B.ENO_NM,
			DECODE(NVL(A.APPDT,''),'','',SUBSTR(A.APPDT,1,4)||'-'||SUBSTR(A.APPDT,5,2)||'-'||SUBSTR(A.APPDT,7,2)) AS APPDT,
			DECODE(NVL(A.APLDT,''),'','',SUBSTR(A.APLDT,1,4)||'-'||SUBSTR(A.APLDT,5,2)||'-'||SUBSTR(A.APLDT,7,2)) AS APLDT,
			B.JOB_CD,                                                               -- 직위코드
			ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD)                   AS JOB_NM,      -- 직위
			A.APPAMT - A.APJAMT AS APLAMT_SUM,
			A.APLAMT+A.CALAMT AS APLAMT_RATAMT,
			A.APLCNT, A.APPAMT, A.APBAMT, A.APLAMT, A.APJAMT,A.RATAMT, A.CALAMT,
			(A.APLAMT + A.CALAMT) AS AMT_1,

			DECODE(NVL(A.REPDT,''),'','',SUBSTR(A.REPDT,1,4)||'-'||SUBSTR(A.REPDT,5,2)||'-'||SUBSTR(A.REPDT,7,2)) AS REPDT,
			A.REPYN,
			NVL(RTRIM(A.REASON),'') REASON,
			CASE WHEN REASON = '1' THEN '결혼'
			WHEN REASON = '2' THEN '학자금'
			WHEN REASON = '3' THEN '주택'
			ELSE '기타'  END    REASONK, A.EXE
			FROM ASNHR.T_AC_COLOAN A
			JOIN ASNHR.T_CM_PERSON B ON A.ENO_NO = B.ENO_NO
			LEFT JOIN ASNHR.T_CM_DEPT C ON B.DPT_CD = C.DPT_CD
			LEFT JOIN ( SELECT ENO_NO, APPDT, NVL(SUM(CALAMT),0) RATAMT_SUM, EXE
			FROM ASNHR.T_AC_COLOAN
			WHERE APLDT <= ?
			GROUP BY ENO_NO, APPDT, EXE
			)E ON A.ENO_NO = E.ENO_NO AND A.EXE = E.EXE AND A.APPDT = E.APPDT

			LEFT JOIN ( SELECT ENO_NO, APPDT, MAX(APLDT)AS MAX_APLDT, EXE
			FROM ASNHR.T_AC_COLOAN
			GROUP BY ENO_NO, APPDT, EXE
			)H ON A.ENO_NO = H.ENO_NO AND A.EXE = H.EXE AND A.APPDT = H.APPDT
			WHERE 1=1
			AND SUBSTR(A.APLDT,1,6) = ?
			ORDER BY A.EXE, B.JOB_CD, B.ENO_NO
            ]]>
        </query>
    </sql>

    <sql name="SAGA270_SHR_01">
        <description>공조회비 조회(디테일)</description>
        <query>
            <![CDATA[
			SELECT
			C.DPT_NM,A.ENO_NO,B.ENO_NM,
			DECODE(NVL(A.APPDT,''),'','',SUBSTR(A.APPDT,1,4)||'-'||SUBSTR(A.APPDT,5,2)||'-'||SUBSTR(A.APPDT,7,2)) AS APPDT,
			DECODE(NVL(A.APLDT,''),'','',SUBSTR(A.APLDT,1,4)||'-'||SUBSTR(A.APLDT,5,2)) AS APLDT,
			B.JOB_CD,                                                               -- 직위코드
			ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD)                   AS JOB_NM,      -- 직위
			A.APPAMT - A.APJAMT AS APLAMT_SUM,
			A.APLAMT+A.CALAMT AS APLAMT_RATAMT,
			A.APLCNT, A.APPAMT, A.APBAMT, A.APLAMT, A.APJAMT,A.RATAMT, A.CALAMT,
			(A.APLAMT + A.CALAMT) AS AMT_1,
			A.REPDT, A.REPYN,
			NVL(RTRIM(A.REASON),'') REASON,
			CASE WHEN REASON = '1' THEN '결혼'
			WHEN REASON = '2' THEN '학자금'
			WHEN REASON = '3' THEN '주택'
			ELSE '기타'  END    REASONK, A.EXE
			FROM ASNHR.T_AC_COLOAN A
			JOIN ASNHR.T_CM_PERSON B ON A.ENO_NO = B.ENO_NO
			LEFT JOIN ASNHR.T_CM_DEPT C ON B.DPT_CD = C.DPT_CD
			LEFT JOIN ( SELECT ENO_NO, APPDT, NVL(SUM(CALAMT),0) RATAMT_SUM, EXE
			FROM ASNHR.T_AC_COLOAN
			WHERE 1=1
			GROUP BY ENO_NO, APPDT, EXE
			)E ON A.ENO_NO = E.ENO_NO AND A.EXE = E.EXE AND A.APPDT = E.APPDT
			LEFT JOIN ( SELECT ENO_NO, APPDT, MAX(APLDT)AS MAX_APLDT, EXE
			FROM ASNHR.T_AC_COLOAN
			GROUP BY ENO_NO, APPDT, EXE
			)H ON A.ENO_NO = H.ENO_NO AND A.EXE = H.EXE AND A.APPDT = H.APPDT
			WHERE 1=1
			AND B.ENO_NO = ?
			AND A.EXE = ?
			AND A.APPDT = ?
      		ORDER BY A.APLDT
            ]]>
        </query>
    </sql>



    <sql name="SAGA270_SHR_PRINT">
        <description>공조회비 조회(마스터)</description>
        <query>
            <![CDATA[
			SELECT
			C.DPT_NM,A.ENO_NO,B.ENO_NM,
			DECODE(NVL(A.APPDT,''),'','',SUBSTR(A.APPDT,1,8)) AS APPDT,
			DECODE(NVL(A.APLDT,''),'','',SUBSTR(A.APLDT,1,8)) AS APLDT,
			B.JOB_CD,                                                               -- 직위코드
			ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD)                   AS JOB_NM,      -- 직위
			H.MAX_APLDT AS ENDDT,
			A.APPAMT - A.APJAMT AS APLAMT_SUM,
			A.APLAMT+A.CALAMT AS APLAMT_RATAMT,
			A.APLCNT, A.APPAMT, A.APBAMT, A.APLAMT, A.APJAMT,A.RATAMT, A.CALAMT,
			(A.APLAMT + A.CALAMT) AS AMT_1,
			E.RATAMT_SUM,
			DECODE(NVL(A.REPDT,''),'','',SUBSTR(A.REPDT,1,4)||'-'||SUBSTR(A.REPDT,5,2)||'-'||SUBSTR(A.REPDT,7,2)) AS REPDT,
			A.REPYN,
			NVL(RTRIM(A.REASON),'') REASON,
			CASE WHEN REASON = '1' THEN '결혼 '
			WHEN REASON = '2' THEN '학자금 '
			WHEN REASON = '3' THEN '주택 '
			ELSE '기타 '  END    REASONK, A.EXE,
			CASE WHEN A.EXE = '0' THEN '직원  '
			ELSE '임원  '  END	EXENMK
			FROM ASNHR.T_AC_COLOAN A
			JOIN ASNHR.T_CM_PERSON B ON A.ENO_NO = B.ENO_NO
			LEFT JOIN ASNHR.T_CM_DEPT C ON B.DPT_CD = C.DPT_CD
			LEFT JOIN ( SELECT ENO_NO, APPDT, NVL(SUM(CALAMT),0) RATAMT_SUM, EXE
			FROM ASNHR.T_AC_COLOAN
			WHERE APLDT <= ?
			GROUP BY ENO_NO, APPDT, EXE
			)E ON A.ENO_NO = E.ENO_NO AND A.EXE = E.EXE AND A.APPDT = E.APPDT

			LEFT JOIN ( SELECT ENO_NO, APPDT, MAX(APLDT)AS MAX_APLDT, EXE
			FROM ASNHR.T_AC_COLOAN
			GROUP BY ENO_NO, APPDT, EXE
			)H ON A.ENO_NO = H.ENO_NO AND A.EXE = H.EXE AND A.APPDT = H.APPDT
			WHERE 1=1
			AND SUBSTR(A.APLDT,1,6) = ?
			ORDER BY A.EXE, B.JOB_CD, B.ENO_NO
            ]]>
        </query>
    </sql>


    <sql name="SAGA270_SAV">
        <description>사내대출 저장(마스터)</description>
        <query>
            <![CDATA[

			INSERT INTO ASNHR.T_AC_COLOAN (
			   ENO_NO,
			   APPDT,
			   APLDT,
			   APPAMT,
			   REASON,
			   EXE,
			   IPT_MAN,
			   IPT_YMD
			   )
			VALUES (
			    ?,
			    ?,
			    ?,
			    ?,
			    ?,
			    ?,
			    ?,
			    SYSDATE )

            ]]>
        </query>
    </sql>

    <sql name="SAGA270_SAV_01">
        <description>공조대출 저장(디테일)</description>
        <query>
            <![CDATA[

			INSERT INTO ASNHR.T_AC_COLOAN (
			   ENO_NO, APPDT,
			   APLDT,  APLCNT,
			   APPAMT, APBAMT,
			   APLAMT, APJAMT,
			   RATAMT, CALAMT,
			   REASON, EXE,
			   IPT_MAN, IPT_YMD,
			   UPT_MAN, UPT_YMD
			   )
			VALUES (
			    ?,?,
			    ?,?,
			    ?,?,
			    ?,?,
			    ?,?,
			    ?,?,
              	?, SYSDATE, ?, SYSDATE )

            ]]>
        </query>
    </sql>

    <sql name="SAGA270_SAV_01_UPT">
        <description>공조대출 저장(디테일)</description>
        <query>
            <![CDATA[

			UPDATE ASNHR.T_AC_COLOAN SET
			   APPDT = ?,
			   APLDT = ?,
			   APLCNT = ?,
			   APPAMT = ?,
			   APBAMT = ?,

			   APLAMT = ?,
			   APJAMT = ?,
			   RATAMT = ?,
			   CALAMT = ?,

			   REASON = ?,
			   EXE = ?,
			   UPT_MAN = ?,
			   UPT_YMD = SYSDATE
			WHERE ENO_NO = ?
				AND APPDT = ?
				AND APLDT = ?

            ]]>
        </query>
    </sql>



<!-- 신_급여관리 -->
<!--
***********************************************************************
* @UseCase     : SAGD010
* @description : 급여테이블
***********************************************************************
* 2016/01/08     이동훈        최초작성.
***********************************************************************
-->
    <!-- 급여테이블 조회 -->
    <sql name="SAGD010_SHR">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
           		A.PIS_YY,
                A.JOB_CD,
                A.ENO_NO,
                A.P01_AMT,
                A.P02_AMT,
                A.P03_AMT,
                A.P04_AMT,
                A.P05_AMT,
                B.ENO_NM,
                ASNHR.SF_GET_COMMNAME('01', 'A2', B.JOB_CD) AS JOB_NM,
                A.SUM_AMT  AS TOTAL_AMT
            FROM  ASNHR.T_CP_SALARY  A, ASNHR.T_CM_PERSON B
            WHERE A.ENO_NO = B.ENO_NO
              AND A.PIS_YY = ?
              AND A.ENO_NO LIKE '%'||?||'%'
              AND NVL(A.JOB_CD,' ') LIKE '%'||?||'%'
         ORDER BY A.JOB_CD, A.ENO_NO

            ]]>
        </query>
    </sql>

    <!-- 적용일자 조회 -->
    <sql name="SAGD010_SHR_01">
        <description>급여테이블 적용일자 조회</description>
        <query>
            <![CDATA[
            SELECT TO_CHAR(SYSDATE, 'YYYYMMDD') AS PIS_YY FROM ASNHR.T_CP_SALARY
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 신규 저장. -->
    <sql name="SAGD010_INS">
        <description>급여테이블 신규 저장</description>
        <query>
            <![CDATA[
				INSERT INTO ASNHR.T_CP_PAYTABLE (
            		OCC_CD,
					JOB_CD,
					ENO_NO,
					HOB_CD,
					APY_YMD,
					BAS_AMT,
					DUTY_AMT,
					LAW_AMT,
					BNS_AMT,
					STR_YMD,

					IPT_MAN,
					IPT_YMD,
					UPT_MAN,
					UPT_YMD
			) VALUES (
					(SELECT OCC_CD FROM ASNHR.T_CM_PERSON WHERE ENO_NO = ?),
					?,
					?,
					(SELECT DECODE(?, SUBSTR(max(HOB_CD), 0, 4), max(HOB_CD)+1, ?||?||'01') FROM ASNHR.T_CP_PAYTABLE
             			WHERE ENO_NO = ?),
                    ?,
					?, ?, ?, ?, ?,
					?, SYSDATE,
					?, SYSDATE
			)
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 수정. -->
    <sql name="SAGD010_UPT">
        <description>급여테이블 수정</description>
        <query>
            <![CDATA[
				UPDATE ASNHR.T_CP_SALARY
					SET P01_AMT = ?,
						P02_AMT = ?,
						P03_AMT = ?,
						P04_AMT = ?,
						P05_AMT = ?,
						SUM_AMT = ?,
           				UPT_MAN = ?, 		--최종 수정자
           				UPT_YMD = SYSDATE 	--최종 수정일시
    			WHERE  ENO_NO = ?
    			AND PIS_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 연봉계약 테이블  수정. -->
    <sql name="SAGD010_UPT2">
        <description>연봉계약 테이블 수정</description>
        <query>
            <![CDATA[
				UPDATE ASNHR.T_CM_CONTRACT
					SET P01_AMT = ?,
						P02_AMT = ?,
						P03_AMT = ?,
						P04_AMT = ?,
						P05_AMT = ?,
						SUM_AMT = NVL(P01_AMT,0)+NVL(P02_AMT,0)+NVL(P03_AMT,0)+NVL(P04_AMT,0)+NVL(P05_AMT,0),
           				UPT_MAN = ?, 		--최종 수정자
           				UPT_YMD = SYSDATE 	--최종 수정일시
    			WHERE  ENO_NO = ?
    			AND PIS_YY = ?
            ]]>
        </query>
    </sql>

    <!-- 저장시 종료일자 초기화. -->
    <sql name="SAGD010_UPT3">
        <description>저장시 종료일자 초기화</description>
        <query>
            <![CDATA[
				UPDATE ASNHR.T_CP_PAYTABLE
					SET    END_YMD  = '', --종료일자
           				UPT_MAN = ?, --최종 수정자
           				UPT_YMD = SYSDATE --최종 수정일시
    			WHERE  HOB_CD = (SELECT MAX(HOB_CD)
							        FROM ASNHR.T_CP_PAYTABLE
							        WHERE ENO_NO = ? ) --호봉
            ]]>
        </query>
    </sql>



    <!-- 급여테이블 삭제 -->
    <sql name="SAGD010_DEL">
        <description>급여테이블 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_CP_PAYTABLE
            WHERE  OCC_CD in ('0','1','2','3','8','9')
            AND    JOB_CD = ?
            AND    HOB_CD = ?
            AND    APY_YMD = ?
            ]]>
        </query>
    </sql>

    <!-- 급여테이블 삭제 -->
    <sql name="SAGD010_DEL_01">
        <description>급여테이블 삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_CP_PAYTABLE
            WHERE  OCC_CD = ?
            AND    APY_YMD = ?
            ]]>
        </query>
    </sql>


<!--
***********************************************************************
* @UseCase     : SAGD030
* @description : 신_급여계산처리
***********************************************************************
* 2016/01/08     이동훈        최초작성.
***********************************************************************
-->
    <!-- 급여(상여)계산처리 조회 -->
    <sql name="SAGD030_SHR">
        <description>급여(상여)계산처리 조회</description>
        <query>
            <![CDATA[
            SELECT PIS_YY,
                   PIS_MM,
                   SEQ,
                   PRO_STS,
                   DECODE(NVL(PAY_YMD,''),'','',SUBSTR(PAY_YMD,1,4)||'-'||SUBSTR(PAY_YMD,5,2)||'-'||SUBSTR(PAY_YMD,7,2)) AS PAY_YMD,
                   WOM_AMT,
                   DECODE(NVL(APY_YMD,''),'','',SUBSTR(APY_YMD,1,4)||'-'||SUBSTR(APY_YMD,5,2)||'-'|| '01') AS APY_YMD,
                   BPAY_PCT,
                   BYY_PCT,
                   BBYY_PCT,
                   PRO_CNT,
                   ERR_CNT,
                   REMARK,
                   RET_TAG
            FROM   ASNHR.T_CP_WORKLOG
            WHERE  NVL(PIS_YY,' ') LIKE '%'||?||'%'
            AND    NVL(PIS_MM,' ') LIKE '%'||?||'%'
            AND    NVL(SEQ,' ') LIKE '%'||?||'%'
            ]]>
        </query>
    </sql>

    <!-- 작업로그 신규저장 (작업 OPEN) -->
    <sql name="SAGD030_INS">
        <description>작업로그 신규저장 (작업 OPEN)</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CP_WORKLOG
                 ( PIS_YY, PIS_MM, OCC_CD, SAL_GBN, SEQ,
                   PRO_STS, PAY_YMD, WOM_AMT, APY_YMD, BPAY_PCT, BYY_PCT, BBYY_PCT, REMARK, RET_TAG,
                   IPT_MAN, IPT_YMD, UPT_MAN, UPT_YMD
                 )
            VALUES
                 (  ?, ?, ?, ?, ?,
                    ?, ?, ?, ?, ?, ?, ?, ?, ?,
                    ?, SYSDATE,?, SYSDATE
                 )
            ]]>
        </query>
    </sql>

    <!-- 대상자 선정(수정된 작업로그 대상자 선정전 다시 저장) -->
    <sql name="SAGD030_UPT">
        <description>대상자 선정(수정된 작업로그 대상자 선정전 다시 저장)</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CP_WORKLOG
            SET    PRO_STS = ?,
                   PAY_YMD = ?,
                   WOM_AMT = ?,
                   APY_YMD = ?,
                   BPAY_PCT = ?,
                   BYY_PCT = ?,
                   BBYY_PCT = ?,
                   REMARK = ?,
                   RET_TAG = ?,
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SAL_GBN = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>


    <!-- 대상자 선정(작업 LOG 수정) -->
    <sql name="SAGD030_UPT_02">
        <description>대상자 선정(작업 LOG 수정)</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CP_WORKLOG
            SET    PRO_CNT = nvl((select count(eno_no)
                                  from  (select eno_no
                                         FROM   ASNHR.T_CP_NPAYMASTER_OFFICE
                                         WHERE  PIS_YY = ?
                                         AND    PIS_MM = ?
                                         AND    SEQ = ?
                                         group by eno_no)
                             ),0),
                   ERR_CNT = (nvl((select count(eno_no)
                                   FROM   ASNHR.T_CP_NPAYMASTER
                                   WHERE  PIS_YY = ?
                                   AND    PIS_MM = ?
                                   AND    SEQ = ?
                              ),0) -
                              nvl((select count(eno_no)
                                   from  (select eno_no
                                          FROM   ASNHR.T_CP_NPAYMASTER_OFFICE
                                          WHERE  PIS_YY = ?
                                          AND    PIS_MM = ?
                                          AND    SEQ = ?
                                          group by eno_no)
                              ),0)
                             ),
                   WOM_AMT = ?, --여직원회비
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 대상자 초기화 - 작업로그 대상자 선정 전 상태로 변경 -->
    <sql name="SAGD030_UPT_03">
        <description>대상자 초기화 - 작업로그 대상자 선정 전 상태로 변경</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CP_WORKLOG
            SET    PRO_STS = ?,
                   PRO_CNT = ?,
                   ERR_CNT = ?,
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 대상자 초기화 - T_CP_PAYMASTER 삭제 -->
    <sql name="SAGD030_DEL">
        <description>대상자 초기화 - T_CP_PAYMASTER 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CP_NPAYMASTER
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 대상자 초기화 - T_CP_PAYMASTER_OFFICE 삭제 -->
    <sql name="SAGD030_DEL_01">
        <description>대상자 초기화 - T_CP_NPAYMASTER_OFFICE 삭제</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CP_NPAYMASTER_OFFICE
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화(금액,세액 계산으로 변경) - 작업로그 금액,세액 계산 전 상태로 변경 -->
    <sql name="SAGD030_UPT_04">
        <description>계산 초기화(금액,세액 계산으로 변경) - 작업로그 금액,세액 계산 전 상태로 변경</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CP_WORKLOG
            SET    PRO_STS = ?,
                   UPT_MAN = ?, --최종 수정자
                   UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_CP_NPAYMASTER 계산금액 0으로 초기화 -->
    <sql name="SAGD030_UPT_05">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_CP_NPAYMASTER 계산금액 0으로 초기화</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CP_NPAYMASTER SET
					PDD_CNT='0',
					P01_AMT='0',
					P02_AMT='0',
					P03_AMT='0',
					P04_AMT='0',
					P05_AMT='0',
					P06_AMT='0',
					SUM_AMT='0',
					CET_AMT='0',
					DUTY_AMT='0',
					PPEN_AMT='0',
					DRI_AMT='0',
					BOSS_AMT='0',
					CAR_AMT='0',
					STAY_AMT='0',
					MEAL_AMT='0',
					CASH_AMT='0',
					SCH_AMT='0',
					OTH_AMT='0',
					SALT_AMT='0',
					INCM_TAX='0',
					CITI_TAX='0',
					NPEN_DED='0',
					HINU_DED='0',
					OLD_DED='0',
					HINS_DED='0',
					COM_HINS_DED='0',
					COM_SAN_DED='0',
					PPEN_DED='0',
					LAB_DED='0',
					DHLP_DED='0',
					WOM_DED='0',
					COM_DED='0',
					COM_INT='0',
					GONG_DED='0',
					GONG_INT='0',
					O7_DED='0',
					BUS_DED='0',
					GIM_DED='0',
					HINU_CAL='0',
					HINS_CAL='0',
					DRE_INTX='0',
					DRE_CTTX='0',
					DRE_DFTX='0',
					OTH_DED='0',
					SUM_DED='0',
					PAY_AMT='0',
					TAX_DPT='',
					SORT='0',
					ACC_NO='',
					ABA_CD='',
					REC_NAM='',
					SOU_CNT='',
					DFM_CNT='',
					TRB_CNT='',
					GOL_CNT='',
					WCT_CNT='',
					CHI_CNT='',
                    UPT_MAN = ?, --최종 수정자
                    UPT_YMD = SYSDATE --최종 수정일시
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            AND    SEQ = ?
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_CP_CHANGE 계산 전으로 초기화 -->
    <sql name="SAGD030_DEL_02">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_CP_NCHANGE 계산 전으로 초기화</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_CP_NCHANGE
            WHERE  PIS_YY = ?
            AND    PIS_MM = ?
            --AND    SAL_CD != 'AX'
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_AC_LOAN(대출금/출자금) 계산 전으로 초기화 -->
    <sql name="SAGD030_DEL_03">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_AC_LOAN(대출금/출자금) 계산 전으로 초기화</description>
        <query>
            <![CDATA[
            DELETE FROM ASNHR.T_AC_LOAN
            WHERE PIS_YY=?
            AND   PIS_MM=?
            AND   SEQ=?
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_SV_SAVELIST(저축금관리목록) 계산 전으로 초기화 -->
    <sql name="SAGD030_UPT_06">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_SV_SAVELIST(저축금관리목록) 계산 전으로 초기화</description>
        <query>
            <![CDATA[
			DECLARE
			    iENO_NO    ASNHR.T_SV_SAVELIST.ENO_NO%TYPE;
			    iBNK_CD    ASNHR.T_SV_SAVELIST.BNK_CD%TYPE;
			    iACC_NO    ASNHR.T_SV_SAVELIST.ACC_NO%TYPE;
			    iSUMP_CNT  ASNHR.T_SV_SAVELIST.SUMP_CNT%TYPE;
			    iSUM_SAV   ASNHR.T_SV_SAVELIST.SUM_SAV%TYPE;
			    iUPT_MAN   ASNHR.T_SV_SAVELIST.UPT_MAN%TYPE;
			    iUPT_YMD   ASNHR.T_SV_SAVELIST.UPT_YMD%TYPE;

			    CURSOR SAVELIST_CUR is
			           SELECT A.ENO_NO AS ENO_NO, A.BNK_CD AS BNK_CD, A.ACC_NO AS ACC_NO,
			                 (SUMP_CNT-1) AS SUMP_CNT, (A.SUM_SAV-B.PYM_AMT) AS SUM_SAV, ? AS UPT_MAN, sysdate AS UPT_YMD
			           FROM   ASNHR.T_SV_SAVELIST A, ASNHR.T_SV_SAVEBOOK B
			           WHERE  A.ENO_NO = B.ENO_NO
			           AND    A.BNK_CD = B.BNK_CD
			           AND    A.ACC_NO = B.ACC_NO
			           AND    B.DED_YM=?
			           AND    B.SAV_CD='10';

			BEGIN
			OPEN SAVELIST_CUR;
			LOOP
			    FETCH SAVELIST_CUR INTO iENO_NO, iBNK_CD, iACC_NO,
			                            iSUMP_CNT, iSUM_SAV, iUPT_MAN, iUPT_YMD;

			    if (SAVELIST_CUR%notfound) then exit;
			    end if;

			    UPDATE ASNHR.T_SV_SAVELIST
			    SET    SUMP_CNT = iSUMP_CNT,
			           SUM_SAV  = iSUM_SAV,
			           UPT_MAN  = iUPT_MAN,
			           UPT_YMD  = iUPT_YMD
			    WHERE  ENO_NO   = iENO_NO
			    AND    BNK_CD   = iBNK_CD
			    AND    ACC_NO   = iACC_NO;

			END LOOP;
			CLOSE SAVELIST_CUR;

			END;
            ]]>
        </query>
    </sql>

    <!-- 계산 초기화( 금액, 세액 계산으로 변경) - T_SV_SAVEBOOK(저축금납입관리) 계산 전으로 초기화 -->
    <sql name="SAGD030_DEL_04">
        <description>계산 초기화( 금액, 세액 계산으로 변경) - T_SV_SAVEBOOK(저축금납입관리) 계산 전으로 초기화</description>
        <query>
            <![CDATA[
            DELETE  FROM ASNHR.T_SV_SAVEBOOK
            WHERE DED_YM=?
            AND   SAV_CD='10'
            ]]>
        </query>
    </sql>

<!--
***********************************************************************
* @UseCase     : SAGD040
* @description : 개인별 수당
***********************************************************************
* 2016/01/14     이동훈        최초작성.
***********************************************************************
-->
    <!-- 개인별 수당 조회 -->
    <sql name="SAGD040_SHR">
        <description>개인별 수당 조회</description>
        <query>
            <![CDATA[
            SELECT A.OCC_CD, A.ENO_NO,
		           A.SAL_CD, A.AD_TAG,
		           A.AMOUNT,
                   TO_CHAR(TO_DATE(A.STR_YMD),'YYYY-MM-DD') AS STR_YMD,
                   TO_CHAR(TO_DATE(A.END_YMD),'YYYY-MM-DD') AS END_YMD,
                   B.ENO_NM,
                   B.DPT_CD, B.DPT_NM,
                   B.JOB_CD, B.JOB_NM,
                   ASNHR.SF_GET_COMMNAME('01', 'U8', A.SAL_CD) AS SAL_NM,
                   Decode(A.AD_TAG,'A','지불','D','공제') AS AD_TAG_NM,
                   ASNHR.SF_GET_COMMNAME('01', 'U8', A.SAL_CD) AS SAL_CONTENT,
                   ASNHR.SF_GET_COMMNAME('01', 'A1', A.OCC_CD) AS OCC_NM
            FROM   ASNHR.T_CP_NSUDANG A,
                   ASNHR.VI_T_CM_PERSON2 B
            WHERE  A.ENO_NO = B.ENO_NO
            AND ( SUBSTR(A.END_YMD,0,7) > ? OR A.END_YMD IS NULL)
            AND (SUBSTR(A.STR_YMD,0,6) <= ?)
            [1]
            ORDER BY A.ENO_NO, A.SAL_CD
            ]]>
        </query>
    </sql>

	<!-- 개인별 수당 저장 -->
    <sql name="SAGD040_INS">
        <description>개인별 수당 저장</description>
        <query>
            <![CDATA[
            INSERT INTO ASNHR.T_CP_NSUDANG
              ( OCC_CD,
	            ENO_NO,
	            SAL_CD,
	            STR_YMD,
	            END_YMD,
	            AD_TAG,
	            AMOUNT,
	            IPT_MAN,
	            IPT_YMD,
	            UPT_MAN,
	            UPT_YMD )
            VALUES
            ( ?,
              ?,
              ?,
              ?,
              ?,
              ?,
              ?,
              ?,
              SYSDATE,
              ?,
              SYSDATE )
            ]]>
        </query>
    </sql>

	<!-- 개인별 수당 수정 -->
    <sql name="SAGD040_UPT">
        <description>개인별 수당 수정</description>
        <query>
            <![CDATA[
            UPDATE ASNHR.T_CP_NSUDANG
            SET    END_YMD = ?,
                   AD_TAG = ?,
                   AMOUNT = ?,
                   UPT_MAN = ?,
                   UPT_YMD = SYSDATE
            WHERE  OCC_CD = ?
            AND    ENO_NO = ?
            AND    SAL_CD = ?
            AND    STR_YMD = ?
            ]]>
        </query>
    </sql>

	<!-- 개인별 수당  삭제 -->
    <sql name="SAGD040_DEL">
        <description>개인별 수당  삭제</description>
        <query>
            <![CDATA[
            DELETE ASNHR.T_CP_NSUDANG
            WHERE  OCC_CD = ?
            AND    ENO_NO = ?
            AND    SAL_CD = ?
            AND    STR_YMD = ?
            AND    AD_TAG = ?
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : SAGD200
* @description : 신_개인별 급여총괄상세내역서(대사용)
***********************************************************************
* 2016/01/08     이동훈        최초작성.
***********************************************************************
-->

<!-- 급여테이블 조회 -->
    <sql name="SAGD200_SHR">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD
              ,A.JOB_CD
              ,A.ENO_NO
              ,ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
              ,ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM
              ,A.PART_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'B7', A.PART_CD) AS GBN_NM
              ,ASNHR.SF_GET_ENONAME('01',  A.ENO_NO) AS ENO_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
              ,A.PDD_CNT
              ,A.P01_AMT
              ,A.P02_AMT
              ,A.P03_AMT
              ,A.P04_AMT
              ,A.P05_AMT
              ,A.P06_AMT
              ,A.CET_AMT
              ,A.DUTY_AMT
              ,A.PPEN_AMT
              ,A.DRI_AMT
              ,A.BOSS_AMT
              ,A.CAR_AMT
              ,A.STAY_AMT
              ,A.MEAL_AMT
              ,A.CASH_AMT
              ,A.SCH_AMT
              ,A.GOOD_AMT              
              ,A.OTH_AMT
              ,A.SALT_AMT
              ,A.INCM_TAX
              ,A.CITI_TAX
              ,A.NPEN_DED
              ,A.HINU_DED
              ,A.OLD_DED
              ,A.HINS_DED
              ,A.COM_HINS_DED
              ,A.COM_SAN_DED
              ,A.PPEN_DED
              ,A.LAB_DED
              ,A.DHLP_DED
              ,A.WOM_DED
              ,A.COM_DED
              ,A.COM_INT
              ,A.GONG_DED
              ,A.GONG_INT
              ,A.O7_DED
              ,A.BUS_DED
              ,A.GIM_DED
              ,A.HINU_CAL
              ,A.HINS_CAL
              ,A.DRE_INTX
              ,A.DRE_CTTX
              ,A.DRE_DFTX
              ,A.OTH_DED
              ,A.SUM_DED
              ,A.PAY_AMT
              ,A.ABA_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM
              ,A.REC_NAM
              ,A.TAX_DPT
              ,ASNHR.SF_GET_COMMNAME('01', 'AD', A.TAX_DPT) as TAX_DPT2
              ,A.SOU_CNT
              ,A.DFM_CNT
              ,A.TRB_CNT
              ,A.GOL_CNT
              ,A.WCT_CNT
              ,A.CHI_CNT
              ,PIS_YY || '-' || PIS_MM AS PIS_YYMM
              ,B.CET_NO

            FROM  ASNHR.T_CP_NPAYMASTER  A, ASNHR.T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.PIS_YY= ?
              AND A.PIS_MM LIKE '%'||SUBSTR(?, 5, 2)||'%'
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.OCC_CD in ('0','1','2','3','5','8','9')
              AND A.SAL_GBN = '0'
              AND NVL(A.JOB_CD,' ') LIKE '%'||?||'%'
         ORDER BY A.JOB_CD, A.ENO_NO,PIS_YYMM
            ]]>
        </query>
    </sql>



<!-- 급여테이블 인쇄 조회 -->
    <sql name="SAGD200_SHR_PRINT">
        <description>급여테이블 인쇄 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD
              ,A.JOB_CD
              ,A.ENO_NO
              ,ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD) AS DPT_NM
              ,ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM
              ,B.GBN_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'B7', B.GBN_CD) AS GBN_NM
              ,ASNHR.SF_GET_ENONAME('01',  A.ENO_NO) AS ENO_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM

              ,A.P01_AMT
              ,A.P02_AMT
              ,A.P03_AMT
              ,A.P04_AMT
              ,A.P05_AMT
              ,A.P06_AMT

              ,A.CET_AMT
              ,A.DUTY_AMT
              ,A.PPEN_AMT
              ,A.DRI_AMT
              ,A.BOSS_AMT
              ,A.CAR_AMT
              ,A.STAY_AMT
              ,A.MEAL_AMT
              ,A.CASH_AMT
              ,A.SCH_AMT
              ,A.OTH_AMT
              ,A.SALT_AMT

              ,A.INCM_TAX
              ,A.CITI_TAX
              ,A.NPEN_DED
              ,A.HINU_DED
              ,A.OLD_DED
              ,A.HINS_DED
              ,A.COM_HINS_DED
              ,A.COM_SAN_DED
              ,A.PPEN_DED
              ,A.LAB_DED
              ,A.DHLP_DED
              ,A.WOM_DED
              ,A.COM_DED
              ,A.COM_INT
              ,A.GONG_DED
              ,A.GONG_INT
              ,A.O7_DED
              ,A.BUS_DED
              ,A.GIM_DED
              ,A.HINU_CAL
              ,A.HINS_CAL
              ,A.DRE_INTX
              ,A.DRE_CTTX
              ,A.DRE_DFTX
              ,A.OTH_DED
              ,A.SUM_DED
              ,A.PAY_AMT

              ,A.ABA_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM
              ,A.REC_NAM
              ,A.TAX_DPT
              ,ASNHR.SF_GET_COMMNAME('01', 'AD', A.TAX_DPT) as TAX_DPT2
              ,A.SOU_CNT
              ,A.DFM_CNT
              ,A.TRB_CNT
              ,A.GOL_CNT
              ,A.WCT_CNT
              ,A.CHI_CNT
              ,PIS_YY || '-' || PIS_MM AS PIS_YYMM
              ,B.CET_NO

            FROM  ASNHR.T_CP_NPAYMASTER  A, ASNHR.T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.PIS_YY= ?
              AND A.PIS_MM LIKE '%'||SUBSTR(?, 5, 2)||'%'
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.OCC_CD in ('0','1','2','3','5','8','9')
              AND A.SAL_GBN = '0'
              AND NVL(A.JOB_CD,' ') LIKE '%'||?||'%'
         ORDER BY A.SORT, A.TAX_DPT, A.JOB_CD, TO_NUMBER(NVL(B.HOB_CD,'0')) DESC, A.ENO_NO

            ]]>
        </query>
    </sql>


    <!-- 적용일자 조회 -->
    <sql name="SAGD200_SHR_01">
        <description>급여테이블 적용일자 조회</description>
        <query>
            <![CDATA[
            SELECT MAX(PAY_YMD) APY_YMD FROM ASNHR.T_CP_WORKLOG
            ]]>
        </query>
    </sql>




<!--
***********************************************************************
* @UseCase     : SAGD205
* @description : 신_개인별 급여총괄상세내역서(임시용)
***********************************************************************
* 2020/10/22     이동훈        최초작성.
***********************************************************************
-->

<!-- 급여테이블 조회 -->
    <sql name="SAGD205_SHR">
        <description>급여테이블 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD
              ,A.JOB_CD
              ,A.ENO_NO
              ,ASNHR.SF_GET_DPTNAME('01', 'A4', A.DPT_CD) AS DPT_NM
              ,ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM
              ,A.PART_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'B7', A.PART_CD) AS GBN_NM
              ,ASNHR.SF_GET_ENONAME('01',  A.ENO_NO) AS ENO_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM
              ,A.PDD_CNT
              ,A.P01_AMT
              ,A.P02_AMT
              ,A.P03_AMT
              ,A.P04_AMT
              ,A.P05_AMT
              ,A.P06_AMT

              ,A.CET_AMT
              ,A.DUTY_AMT
              ,A.PPEN_AMT
              ,A.DRI_AMT
              ,A.BOSS_AMT
              ,A.CAR_AMT
              ,A.STAY_AMT
              ,A.MEAL_AMT
              ,A.CASH_AMT
              ,A.SCH_AMT
              ,A.OTH_AMT
              ,A.SALT_AMT

              ,A.INCM_TAX
              ,A.CITI_TAX
              ,A.NPEN_DED
              ,A.HINU_DED
              ,A.OLD_DED
              ,A.HINS_DED
              ,A.COM_HINS_DED
              ,A.COM_SAN_DED
              ,A.PPEN_DED
              ,A.LAB_DED
              ,A.DHLP_DED
              ,A.WOM_DED
              ,A.COM_DED
              ,A.COM_INT
              ,A.GONG_DED
              ,A.GONG_INT
              ,A.O7_DED
              ,A.BUS_DED
              ,A.GIM_DED
              ,A.HINU_CAL
              ,A.HINS_CAL
              ,A.DRE_INTX
              ,A.DRE_CTTX
              ,A.DRE_DFTX
              ,A.OTH_DED
              ,A.SUM_DED
              ,A.PAY_AMT

              ,A.ABA_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM
              ,A.REC_NAM
              ,A.TAX_DPT
              ,ASNHR.SF_GET_COMMNAME('01', 'AD', A.TAX_DPT) as TAX_DPT2
              ,A.SOU_CNT
              ,A.DFM_CNT
              ,A.TRB_CNT
              ,A.GOL_CNT
              ,A.WCT_CNT
              ,A.CHI_CNT
              ,PIS_YY || '-' || PIS_MM AS PIS_YYMM
              ,B.CET_NO

            FROM  ASNHR.T_CP_NPAYMASTER  A, ASNHR.T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.PIS_YY= ?
              AND A.PIS_MM LIKE '%'||SUBSTR(?, 5, 2)||'%'
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.OCC_CD in ('0','1','2','3','5','8','9')
              AND A.SAL_GBN = '0'
              AND A.JOB_CD NOT IN ('000','020','030','060','100','120','840','999')
              AND NVL(A.JOB_CD,' ') LIKE '%'||?||'%'
         ORDER BY A.JOB_CD, A.ENO_NO,PIS_YYMM
            ]]>
        </query>
    </sql>



<!-- 급여테이블 인쇄 조회 -->
    <sql name="SAGD205_SHR_PRINT">
        <description>급여테이블 인쇄 조회</description>
        <query>
            <![CDATA[
           SELECT
               A.OCC_CD
              ,A.JOB_CD
              ,A.ENO_NO
              ,ASNHR.SF_GET_DPTNAME('01', 'A4', B.DPT_CD) AS DPT_NM
              ,ASNHR.SF_GET_DPTNAME('01', 'A6', B.TEAM_CD) AS TEAM_NM
              ,B.GBN_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'B7', B.GBN_CD) AS GBN_NM
              ,ASNHR.SF_GET_ENONAME('01',  A.ENO_NO) AS ENO_NM
              ,ASNHR.SF_GET_COMMNAME('01', 'A2', A.JOB_CD) AS JOB_NM

              ,A.P01_AMT
              ,A.P02_AMT
              ,A.P03_AMT
              ,A.P04_AMT
              ,A.P05_AMT
              ,A.P06_AMT

              ,A.CET_AMT
              ,A.DUTY_AMT
              ,A.PPEN_AMT
              ,A.DRI_AMT
              ,A.BOSS_AMT
              ,A.CAR_AMT
              ,A.STAY_AMT
              ,A.MEAL_AMT
              ,A.CASH_AMT
              ,A.SCH_AMT
              ,A.OTH_AMT
              ,A.SALT_AMT

              ,NVL(A.INCM_TAX,0) INCM_TAX
              ,NVL(A.CITI_TAX,0) CITI_TAX
              ,NVL(A.NPEN_DED,0) NPEN_DED
              ,NVL(A.HINU_DED,0) HINU_DED
              ,NVL(A.OLD_DED,0) OLD_DED
              ,NVL(A.HINS_DED,0) HINS_DED
              ,NVL(A.COM_HINS_DED,0) COM_HINS_DED
              ,NVL(A.COM_SAN_DED,0) COM_SAN_DED
              ,NVL(A.PPEN_DED,0) PPEN_DED
              ,NVL(A.LAB_DED,0) LAB_DED
              ,NVL(A.DHLP_DED,0) DHLP_DED
              ,NVL(A.WOM_DED,0) WOM_DED
              ,NVL(A.COM_DED,0) COM_DED
              ,NVL(A.COM_INT,0) COM_INT
              ,NVL(A.GONG_DED,0) GONG_DED
              ,NVL(A.GONG_INT,0) GONG_INT
              ,NVL(A.O7_DED,0) O7_DED
              ,NVL(A.BUS_DED,0) BUS_DED
              ,NVL(A.GIM_DED,0) GIM_DED 
              ,NVL(A.HINU_CAL,0) HINU_CAL
              ,NVL(A.HINS_CAL,0) HINS_CAL
              ,NVL(A.DRE_INTX,0) DRE_INTX
              ,NVL(A.DRE_CTTX,0) DRE_CTTX
              ,NVL(A.DRE_DFTX,0) DRE_DFTX
              ,NVL(A.OTH_DED,0) OTH_DED
              ,NVL(A.SUM_DED,0) SUM_DED
              ,NVL(A.PAY_AMT,0) PAY_AMT

              ,A.ABA_CD
              ,ASNHR.SF_GET_COMMNAME('01', 'BK', A.ABA_CD) AS ABA_NM
              ,A.REC_NAM
              ,A.TAX_DPT
              ,ASNHR.SF_GET_COMMNAME('01', 'AD', A.TAX_DPT) as TAX_DPT2
              ,A.SOU_CNT
              ,A.DFM_CNT
              ,A.TRB_CNT
              ,A.GOL_CNT
              ,A.WCT_CNT
              ,A.CHI_CNT
              ,PIS_YY || '-' || PIS_MM AS PIS_YYMM
              ,B.CET_NO

            FROM  ASNHR.T_CP_NPAYMASTER  A, ASNHR.T_CM_PERSON    B
            WHERE A.ENO_NO = B.ENO_NO(+)
              AND A.PIS_YY= ?
              AND A.PIS_MM LIKE '%'||SUBSTR(?, 5, 2)||'%'
              AND A.ENO_NO LIKE '%'||?||'%'
              AND A.OCC_CD in ('0','1','2','3','5','8','9')
              AND A.SAL_GBN = '0'
              AND A.JOB_CD NOT IN ('000','020','030','060','100','120','840','999')              
              AND NVL(A.JOB_CD,' ') LIKE '%'||?||'%'
         ORDER BY A.SORT, A.TAX_DPT, A.JOB_CD, TO_NUMBER(NVL(B.HOB_CD,'0')) DESC, A.ENO_NO

            ]]>
        </query>
    </sql>


    <!-- 적용일자 조회 -->
    <sql name="SAGD205_SHR_01">
        <description>급여테이블 적용일자 조회</description>
        <query>
            <![CDATA[
            SELECT MAX(PAY_YMD) APY_YMD FROM ASNHR.T_CP_WORKLOG
            ]]>
        </query>
    </sql>



<!--
***********************************************************************
* @UseCase     : SAGE010
* @description : 식대 관리용 근태 정보
***********************************************************************
* 2016/03/14     이동훈        최초작성.
***********************************************************************
-->

    <sql name="SAGE010_SHR">
        <description>개인별 근태 정보 조회</description>
        <query>
            <![CDATA[
            SELECT A.PIS_YY||'-'||A.PIS_MM AS PIS_YYMM,

            A.ENO_NO, C.ENO_NM,
				DECODE(ASNHR.SF_GET_COMMNAME('01','B3', C.MPVA_CD),'',ASNHR.SF_GET_COMMNAME('01','B3', C.DPT_CD),ASNHR.SF_GET_COMMNAME('01','B3', C.MPVA_CD)) AS  SITE_NM,

                   A.AT1_CD, A.AT2_CD, A.AT3_CD, A.AT4_CD, A.AT5_CD,
                   A.AT6_CD,A.AT7_CD, A.AT8_CD, A.AT9_CD, A.AT10_CD,
                   A.AT11_CD, A.AT12_CD,A.AT13_CD, A.AT14_CD, A.AT15_CD,
                   A.AT16_CD, A.AT17_CD, A.AT18_CD,A.AT19_CD, A.AT20_CD,
                   A.AT21_CD, A.AT22_CD, A.AT23_CD, A.AT24_CD,A.AT25_CD,
                   A.AT26_CD, A.AT27_CD, A.AT28_CD, A.AT29_CD, A.AT30_CD,A.AT31_CD,

                   C.DPT_CD, C.JOB_CD,
				   A.ATT_W AS WRK_DAY,
				   --A.ATT_W*17000 AS WRK_PAY,
           		  (CASE WHEN A.ATT_W*17000 > 391000 THEN 391000
                     		ELSE A.ATT_W*17000 
                     		END)  AS WRK_PAY,				   
                   TO_CHAR(C.HIR_YMD,'YYYY-MM-DD') AS HIR_YMD,
                   TO_CHAR(C.RET_YMD,'YYYY-MM-DD') AS RET_YMD,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'01') AS HOL_YN1,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'02') AS HOL_YN2,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'03') AS HOL_YN3,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'04') AS HOL_YN4,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'05') AS HOL_YN5,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'06') AS HOL_YN6,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'07') AS HOL_YN7,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'08') AS HOL_YN8,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'09') AS HOL_YN9,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'10') AS HOL_YN10,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'11') AS HOL_YN11,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'12') AS HOL_YN12,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'13') AS HOL_YN13,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'14') AS HOL_YN14,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'15') AS HOL_YN15,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'16') AS HOL_YN16,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'17') AS HOL_YN17,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'18') AS HOL_YN18,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'19') AS HOL_YN19,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'20') AS HOL_YN20,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'21') AS HOL_YN21,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'22') AS HOL_YN22,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'23') AS HOL_YN23,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'24') AS HOL_YN24,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'25') AS HOL_YN25,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'26') AS HOL_YN26,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'27') AS HOL_YN27,
                   ( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'28') AS HOL_YN28,
                   NVL(( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'29'),'X') AS HOL_YN29,
                   NVL(( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'30'),'X') AS HOL_YN30,
                   NVL(( SELECT HOL_YN
                     FROM ASNHR.T_DI_HOLIDAY
                     WHERE  REG_YMD = A.PIS_YY||A.PIS_MM||'31'),'X') AS HOL_YN31

            FROM   ASNHR.T_SI_DILIGENCE A,
                   ASNHR.T_CM_PERSON C
            WHERE  A.PIS_YY = ?
            AND    A.PIS_MM = ?
			AND    (C.MPVA_CD LIKE '%'||?||'%' OR A.DPT_CD LIKE '%'||?||'%')
            AND    A.ENO_NO LIKE '%'||?||'%'
            AND    C.ENO_NO = A.ENO_NO
            AND    (C.RET_YMD IS NULL OR (SUBSTR((TO_CHAR(C.RET_YMD,'YYYYMMDD')),0,6) BETWEEN ? AND '202012'))
            --AND    C.GBN_CD IN ('3','6','8')
         ORDER BY  C.MPVA_CD
            ]]>
        </query>
    </sql>

    <!-- 근태 저장 한다. -->
    <sql name="SAGE010_UPT">
        <description>데이터 저장</description>
        <query>
            <![CDATA[
             UPDATE  ASNHR.T_SI_DILIGENCE
	            SET    AT1_CD = ?,
	                   AT2_CD = ?,
	                   AT3_CD = ?,
	                   AT4_CD = ?,
	                   AT5_CD = ?,
	                   AT6_CD = ?,
	                   AT7_CD = ?,
	                   AT8_CD = ?,
	                   AT9_CD = ?,
	                   AT10_CD = ?,
	                   AT11_CD = ?,
	                   AT12_CD = ?,
	                   AT13_CD = ?,
	                   AT14_CD = ?,
	                   AT15_CD = ?,
	                   AT16_CD = ?,
	                   AT17_CD = ?,
	                   AT18_CD = ?,
	                   AT19_CD = ?,
	                   AT20_CD = ?,
	                   AT21_CD = ?,
	                   AT22_CD = ?,
	                   AT23_CD = ?,
	                   AT24_CD = ?,
	                   AT25_CD = ?,
	                   AT26_CD = ?,
	                   AT27_CD = ?,
	                   AT28_CD = ?,
	                   AT29_CD = ?,
	                   AT30_CD = ?,
	                   AT31_CD = ?,
                   	   ATT_H = ?,
                   	   ATT_W = ?,
                       UPT_MAN = ?,
                       UPT_YMD = sysdate
             WHERE   PIS_YY  = ?
             AND     PIS_MM  = ?
             AND     ENO_NO  = ?
            ]]>
        </query>
    </sql>

    <!-- 소속 조회 -->
    <sql name="SAGE010_SHR_01">
        <description>소속 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.SITE_CD,
				ASNHR.SF_GET_COMMNAME('01','AY',A.SITE_CD) AS  SITE_NM
				FROM ASNHR.T_SI_MAPPING A
			WHERE A.ENO_NO =  ?
            ]]>
        </query>
    </sql>

    <!-- 정보를 조회 한다. -->
    <sql name="SAGE020_SHR">
        <description>근태 정보 조회</description>
        <query>
            <![CDATA[
			SELECT
				A.TEAM_CD AS SITE_CD,
				DECODE(ASNHR.SF_GET_COMMNAME('01','B3', A.MPVA_CD),'',ASNHR.SF_GET_COMMNAME('01','B3', A.DPT_CD),ASNHR.SF_GET_COMMNAME('01','B3', A.MPVA_CD)) AS  SITE_NM,
			    A.JOB_CD, 
				ASNHR.SF_GET_COMMNAME('01','A2',A.JOB_CD) AS JOB_NM,
			    A.ENO_NO AS ENO_NO,
				A.ENO_NM AS ENO_NM,
				B.ATT_W AS WRK_DAY,
           	   (CASE WHEN B.ATT_W*17000 > 391000 THEN 391000
                     		ELSE B.ATT_W*17000 
                     		END)  AS WRK_PAY     				
				--B.ATT_W*17000 AS WRK_PAY
			FROM ASNHR.T_CM_PERSON A, ASNHR.T_SI_DILIGENCE B
			WHERE 1=1
				AND A.ENO_NO = B.ENO_NO
				AND (A.RET_YMD IS NULL OR (SUBSTR((TO_CHAR(A.RET_YMD,'YYYYMMDD')),0,6) BETWEEN '201811' AND '201812'))
				AND A.MPVA_CD LIKE '%'||?||'%'
              	AND A.ENO_NO LIKE '%'||?||'%'
              	AND B.PIS_YY = ?
              	AND B.PIS_MM = ?
              	--AND A.GBN_CD IN ('3','6','8')
			ORDER BY A.MPVA_CD
            ]]>
        </query>
    </sql>

    <!-- 생성 한다. -->
    <sql name="SAGE020_INS">
        <description>데이터 생성</description>
        <query>
            <![CDATA[
				INSERT INTO ASNHR.T_SI_PAYMASTER (
					WRK_YM, SITE_CD,
					ENO_NM, ENO_NO,
					WRK_AMT,
					WRK_DAY,
					WRK_PAY,
					FINAL_AMT,
					I_EMPNO, I_DATE,
					U_EMPNO, U_DATE
				)
				SELECT
					V.PIS_YY,
					V.PIS_MM,
					V.SITE_CD,
					V.ENO_NM,V.ENO_NO,
					V.WRK_AMT,
					V.WRK_DAY,
					V.WRK_PAY,
					'0'  AS FINAL_AMT,
					?,SYSDATE,
					?,SYSDATE
					FROM
					(SELECT M.PIS_YY, M.PIS_MM, M.ENO_NO, M.ATT_W * 17000
					FROM
					( SELECT A.PIS_YY, A.PIS_MM, A.ENO_NO, A.PIS_YY, A.PIS_MM, A.ATT_W
					   FROM ASNHR.T_SI_DILIGENCE A
					  WHERE A.PIS_YY = ?
						AND A.PIS_MM = ?
						AND A.ENO_NO = ?) M
					) V
            ]]>
        </query>
    </sql>


</sqls>



